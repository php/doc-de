<?xml version="1.0" encoding="utf8"?>
<!-- $Revision$ -->
<!-- splitted from ./index.xml, last change in rev 1.66 -->
<!-- EN-Revision: 288721 Maintainer: wiesemann Status: ready -->
 <chapter xml:id="security.intro" xmlns="http://docbook.org/ns/docbook">
  <title>Einführung</title>
  <simpara>
   PHP ist eine mächtige Sprache, und der Interpreter, der in einen
   Webserver als Modul oder als separate <acronym>CGI</acronym>-Version
   eingebunden werden kann, kann auf Dateien zugreifen, Befehle
   ausführen und Netzwerkverbindungen zu einem Server herstellen.
   Diese Eigenschaften können einen Webserver unsicher machen, wenn man
   es bei den Voreinstellungen belässt.
   PHP wurde besonders dafür entwickelt, um eine sicherere Sprache als
   Perl oder C für die Erstellung von CGI-Programmen bereitzustellen.
   Mit der richtigen Wahl der Einstellungen beim Kompilieren und
   zur Laufzeit bietet PHP genau die Kombination aus Freiheit und
   Sicherheit, die gerade benötigt wird.
  </simpara>
  <simpara>
   Da es sehr viele verschiedene Möglichkeiten gibt, PHP zu nutzen,
   gibt es viele Konfigurationseinstellungen, die das Verhalten von
   PHP beeinflussen. Eine große Auswahl an Einstellungen garantiert,
   dass man PHP für viele Zwecke einsetzen kann. Allerdings
   bedeutet das auch, dass es Kombinationen gibt, die eine Installation
   mit nur ungenügender Sicherheit zur Folge haben.
  </simpara>
  <simpara>
   Die Flexibilität der Konfiguration konkurriert mit der Flexibilität
   in der Programmierung. Mit PHP können komplette Server-Applikationen
   mit allen Möglichkeiten eines Shell Benutzers erstellt werden, oder
   auch nur einfache Server-Side-Includes mit einem minimalen Risiko in
   einer streng kontrollierten Umgebung. Wie die Umgebung erstellt wird,
   und wie sicher diese ist, ist zu einem großen Teil die Sache des
   PHP-Entwicklers.
  </simpara>
  <simpara>
   Dieses Kapitel beginnt mit einigen generellen Ratschlägen zur Sicherheit,
   erklärt die verschiedenen Kombinationen der Konfigurationseinstellungen
   und unter welchen Gegebenheiten sie sicher genutzt werden können, und
   beschreibt verschiedene Überlegungen zur Programmierung für verschiedene
   Sicherheitsstufen.
  </simpara>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
