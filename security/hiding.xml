<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.2 Maintainer: tom Status: ready -->
  <chapter id="security.hiding">
  <title>Verstecken von PHP</title>
   <para>
    Generell ist Sicherheit durch Unklarheit eine der schwächsten Formen von
    Sicherheit. Aber in manchen Fällen ist ein klein Wenig mehr an extra
    Sicherheit wünschenswert.
   </para>
   <para>
    Ein paar einfache Techniken helfen PHP zu Verstecken, um einen nach
    Schwächen in Ihrem System suchenden Angreifer möglicherweise langsamer
    zu machen. Wenn Sie in Ihrer &php.ini; expose_php = off setzen,
    reduzieren Sie damit die ihm zur Verfügung stehenden Informationen.
   </para>
   <para>
    Eine andere Taktik ist, den Webserver wie z.B. Apache entweder mittels
    einer &htaccess; Direktive oder in der Apache Konfigurationsdatei selbst
    so konfigurieren, dass dieser verschiedene Dateitypen durch PHP parst.
    So können Sie irreführende Dateierweiterungen verwenden:
    <example>
     <title>PHP als andere Sprache ausgeben</title>
     <programlisting role="apache-conf">
<![CDATA[
# Lasse PHP Code wie andere Arten von Code aussehen
AddType application/x-httpd-php .asp .py .pl
]]>
     </programlisting>
    </example>
    Oder komplett unklar machen:
    <example>
     <title>Verwenden von unbekannten Typen für PHP Dateierweiterungen</title>
     <programlisting role="apache-conf">
<![CDATA[
# Lasse PHP Code wie unbekannte Typen aussehen
AddType application/x-httpd-php .bop .foo .133t
]]>
     </programlisting>
    </example>
    Oder verstecken Sie ihn als html Code, was einen leichten
    Performanceverlust bedeutet, da alle html Dateien durch die PHP
    Engine geparst werden:
    <example>
     <title>Verwenden von html Typen für PHP Dateierweiterungen</title>
     <programlisting role="apache-conf">
<![CDATA[
# Lasse PHP code wie html aussehen
AddType application/x-httpd-php .htm .html
]]>
     </programlisting>
    </example>
    Um dies effektiv arbeiten zu lassen, müssen Sie Ihre PHP Dateien
    nach den obigen Dateierweiterungen umbenennen. Während dies eine
    Form der Sicherheit durch Verhüllung ist, ist es ein kleines
    präventives Maß mit ein paar Nachteilen.
   </para>
  </chapter>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
