<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.16 Maintainer: betz Status: ready -->
 <reference id="ref.readline">
  <title>GNU Readline</title>
  <titleabbrev>Readline</titleabbrev>

  <partintro>
   <simpara>
    Die <function>readline</function> Funktionen realisieren eine
    Schnittstelle zur GNU Readline Bibliothek. Diese Funktionen bieten
    die Möglichkeit Kommandozeilen zu editieren. Ein Beispiel für die
    Anwendung ist die Art und Weise, wie die Bash es erlaubt, die
    Pfeiltasten zu benutzen um Schriftzeichen einzufügen oder durch
    die Kommando-History zu scrollen. Auf Grund des interaktiven
    Charakters dieser Bibliothek ist diese von geringem Nutzen beim
    Programmieren von Webanwendungen, kann aber nützlich sein, wenn
    Sie Skripte schreiben, die dafür gedacht sind in einer Shell
    abzulaufen.
   </simpara>
   <simpara>
    Die Homepage des GNU Readline Projekts finden Sie unter
    <ulink url="&url.readline;">&url.readline;</ulink>. Das Projekt
    wird von Chet Ramey betreut, der außerdem der Autor der Bash ist.
   </simpara>
  </partintro>

  <refentry id="function.readline">
   <refnamediv>
    <refname>readline</refname>
    <refpurpose>Liest eine Zeile</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>string</type><methodname>readline</methodname>
      <methodparam choice="opt"><type>string</type><parameter>prompt</parameter></methodparam>
     </methodsynopsis>
    <para>
     Diese Funktion gibt eine einzelne Zeichenkette vom Benutzer
     zurück. Sie können eine Zeichenkette angeben, mit dem Sie den
     Benutzer zur Eingabe auffordern. Der Zeile die Sie erhalten
     fehlt das abschließende Zeichen für einen Zeilenvorschub. Die
     Zeile müssen Sie selbst mit Hilfe der Funktion
     <function>readline_add_history</function> der History hinzufügen.
    </para>
    <example>
     <title><function>readline</function></title>
     <programlisting role="php">
<![CDATA[
//abfragen von 3 Kommandos vom Benutzer
for ($i=0; $i <; 3; $i++) {
        $zeile = readline ("Kommando: ");
        readline_add_history ($line);
}

//anzeigen der History
print_r (readline_list_history());

//anzeigen der Variablen
print_r (readline_info());
]]>
     </programlisting>
    </example>
   </refsect1>
  </refentry>

  <refentry id="function.readline-add-history">
   <refnamediv>
    <refname>readline_add_history</refname>
    <refpurpose>Fügt eine Zeile zur History hinzu</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>void</type><methodname>readline_add_history</methodname>
      <methodparam><type>string</type><parameter>zeile</parameter></methodparam>
     </methodsynopsis>
    <para>
     Diese Funktion fügt eine Zeile zur Kommandozeilen-History hinzu.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.readline-clear-history">
   <refnamediv>
    <refname>readline_clear_history</refname>
    <refpurpose>Löscht die History</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>bool</type><methodname>readline_clear_history</methodname>
      <void/>
     </methodsynopsis>
    <para>
     Diese Funktion löscht die gesamte Kommandozeilen-History.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.readline-completion-function">
   <refnamediv>
    <refname>readline_completion_function</refname>
    <refpurpose>Registriert eine Vervollständigungsfunktion
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>bool</type><methodname>readline_completion_function</methodname>
      <methodparam><type>string</type><parameter>zeile</parameter></methodparam>
     </methodsynopsis>
    <para>
     Diese Funktion registriert eine Vervollständigungsfunktion. Sie
     müssen den Namen einer existierenden Funktion angeben, die einen
     Teil einer Kommandozeile akzeptiert und ein Array möglicher
     Übereinstimmungen zurückgibt.
     Das ist die gleiche Art von Funktionalität die Sie haben, wenn
     Sie die Tab-Taste benutzen, während Sie mit der Bash arbeiten.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.readline-info">
   <refnamediv>
    <refname>readline_info</refname>
    <refpurpose>Liest/Setzt verschiedene interne readline
    Variablen</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>mixed</type><methodname>readline_info</methodname>
      <methodparam choice="opt"><type>string</type><parameter>varname</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>neuerwert</parameter></methodparam>
     </methodsynopsis>
    <para>
     Wenn diese Funktion ohne Parameter aufgerufen wird, gibt sie
     einen Array von Werten für alle Einstellungen zurück, die
     readline benutzt. Die Elemente werden durch die folgenden Werte
     indiziert:
     done, end, erase_empty_line, library_version, line_buffer, mark,
     pending_input, point, prompt, readline_name und terminal_name.
    </para>
    <para>
     Wird die Funktion mit einem Parameter aufgerufen, wird der Wert
     dieser Einstellung zurückgegeben.
     Beim Aufruf mit zwei Parametern wird die Einstellung auf den
     angegebenen Wert geändert.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.readline-list-history">
   <refnamediv>
    <refname>readline_list_history</refname>
    <refpurpose>Auflistung der History</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>array</type><methodname>readline_list_history</methodname>
      <void/>
     </methodsynopsis>
    <para>
     Diese Funktion gibt ein Array der gesamten Kommandozeilen-History
     zurück. Die Elemente sind numerisch(integer) indiziert, beginnend bei
     Null.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.readline-read-history">
   <refnamediv>
    <refname>readline_read_history</refname>
    <refpurpose>Liest die History</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>bool</type><methodname>readline_read_history</methodname>
      <methodparam><type>string</type><parameter>dateiname</parameter></methodparam>
     </methodsynopsis>
    <para>
     Diese Funktion liest eine Kommando-History aus einer Datei.
    </para>
   </refsect1>
  </refentry>


  <refentry id="function.readline-write-history">
   <refnamediv>
    <refname>readline_write_history</refname>
    <refpurpose>Schreibt die History</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>bool</type><methodname>readline_write_history</methodname>
      <methodparam><type>string</type><parameter>dateiname</parameter></methodparam>
     </methodsynopsis>
    <para>
     Diese Funktion schreibt die Kommando-History in eine Datei.
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->












