<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.31 Maintainer: nohn Status: ready -->
<reference id="ref.mnogo">
 <title>mnoGoSearch Funktionen</title>
 <titleabbrev>mnoGoSearch</titleabbrev>
 <partintro>
  <simpara>
   Diese Funktionen erlauben den Zugriff auf die mnoGoSearch
   früher als UdmSearch bekannt) Suchmaschine. Um auf diese
   Funktionen zugreifen zu können, muß php mittels der
   <link linkend="install.configure.with-mnogosearch"><option role="configure">
   --with-mnogosearch</option></link>-Option mit mnoGoSearch-Unterstützung
   compiliert worden sein. Wird diese Option ohne Pfadangabe zu mnoGoSearch
   verwendet, wird mnoGoSearch in /usr/local/mnoGoSearch gesucht. Wurde
   mnoGoSearch unter einem anderen Pfad installiert, kann der Pfad mittels
   <link linkend="install.configure.with-mnogosearch"><option role="configure">
   --with-mnogosearch=DIR</option></link> spezifiziert werden.
  </simpara>
  <para>
   mnoGoSearch ist eine vollwertige Suchmaschine für den Intra- und
   Interneteinsatz, vertrieben unter der GPL. mnoGoSearch hat einige
   einzigartige Funktionen, die es für weite Einsatzbereiche tauglich machen.
   Es bietet Volltextindizierung von HTML, PDF und Textdokumenten. mnoGoSearch
   besteht aus zwei Teilen: Der erste ist der sogenannte indexer, der den
   Indizierungsmechanismus bereitstellt. Er spidered HTTP, FTP und Newsserver
   oder lokale Dateisysteme, indiziert die gefundenen Dokumente und speichert
   Meta-Daten über die Dokumente in einer SQL-Datenbank.
  </para>
  <note>
   <para>
    php beinhaltet zwar einen eingebauten MySQL-Support, dieser ist jedoch
    nicht mit mnoGoSearch kompatibel, deshalb mu&szlig; php gegen die selben
    generischen MySQL-Bibliotheken wie mnoGoSearch gelinkt werden, also z.B.:
    <link linkend="install.configure.with-mnogosearch">
    <option role="configure">
    --with-mnogosearch --with-mysql=/usr</option></link>.
   </para>
  </note>
  <simpara>
   Es wird mindestens Version 3.1.10 von mnoGoSearch vorausgesetzt, um die
   folgenden Funktionen nutzen zu können.
  </simpara>
  <simpara>
   Weitere Informationen über mnoGoSearch können unter
   <ulink url="&url.mnogo;">&url.mnogo;</ulink> abgerufen werden.
  </simpara>
 </partintro>
 
 <refentry id="function.udm-add-search-limit">
  <refnamediv>
   <refname>udm_add_search_limit</refname>
   <refpurpose>Verschiedene Beschränkungen bei der Suche anwenden</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>udm_add_search_limit</function></funcdef>
     <paramdef>int <parameter>agent</parameter></paramdef>
     <paramdef>int <parameter>var</parameter></paramdef>
     <paramdef>string <parameter>val</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>udm_add_search_limit</function> gibt &true; bei Erfolg,
    &false; bei einem Fehler zurück. Fügt Suchrestritktionen
    hinzu.
   </para>
   <para>
    <parameter>agent</parameter> - ein Link zu einem Agent, erhalten nach
    <function>udm_alloc_agent</function>.
   </para>
   <para>
    <parameter>var</parameter> - Definiert den Parameter der die Einschränkung
    angibt.
   </para>
   <para>
    <parameter>val</parameter> - Definiert den Wert des aktuellen Parameters.
   </para>
   <para>
    Mögliche Werte für <parameter>var</parameter>:
   </para>
   <itemizedlist>
    <listitem>
     <simpara>
      UDM_LIMIT_URL -
      definiert URL Limitationen, um die Suche auf Unterbereiche einzuschränken
      SQL % und _ LIKE Wildcards werden unterstützt, % entspricht dabei einer
      beliebigen Anzahl von Zeichen, wobei auch keine Zeichen eingeschlossen
      werden, _ entspricht genau einem Zeichen. So entspricht also
      http://my.domain__/catalog sowohl http://my.domain.ru/catalog als auch
      http://my.domain.ua/catalog.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_LIMIT_TAG -
      definiert TAG Limitationen. In der indexer-conf können bestimmeten
      Sites und Teilen von Sites sogenannte Tags zugewiesen werden. Auch bei
      Tags werden % und _ unterstützt. Metasymbole erlauben die Suche
      über Gruppen von Tags. So werden also die Tags ABCD und ABCE bei
      einer Einschränkung auf ABC_ eingeschlossen.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_LIMIT_LANG - Definiert Sprachlimitationen.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_LIMIT_CAT - Definiert Dokumentenkategorielimitationen. Kategorien
      sind den Tags ähnlich, jedoch im Gegensatz zu diesen verschachtelt. Eine
      Kategorie kann also Unterkategorie einer anderen sein. Für jede Ebene
      werden müssen zwei Zeichen verwendendet werden, entweder hexadezimale
      Zahlen von 0-F oder Zahlen zur Basis 36 von 0-Z. Eine Kategorie der
      obersten Ebene, z.B. 'Auto' hätte die Zahl 01, die Unterkategorie 'Ford'
      hätte ebenfalls die 01 als Zahl. Zusammen ergäbe das dann die 0101. Eine
      weitere Kategorie 'VW' unterhalb der Kategorie 'Auto' hätte dann die Zahl
      0102 usw. Wenn 'VW' eine Unterkategorie 'Golf' hätte, wäre desren ID
      010201.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_LIMIT_DATE - Definiert Einschränkungen in Bezug auf das Datum, wann
      das Dokument zuletzt verändert wurde.
     </simpara>
     <simpara>
      Der Wert dieses Parameters ist das kleiner bzw. größer-Zeichen
      (&lt; oder &gt;) gefolgt von einem Unix-Timestamp, also z.B.
     </simpara>
     <simpara>
      Udm_Add_Search_Limit($udm,UDM_LIMIT_DATE,"&lt;908012006");
     </simpara>
     <simpara>
      Wenn das &gt;-Zeichen benutzt wird, wird die Suche auf diejenigen
      Dokumente eingeschränkt, deren Veränderungsdatum jünger als das
      eingegebene ist, beim &lt;-Zeichen erfolgt die Einschränkung
      dementsprechend auf Dokumente, die Älter sind.
     </simpara>
    </listitem>
   </itemizedlist>
  </refsect1>
 </refentry>
 <refentry id="function.udm-alloc-agent">
  <refnamediv>
   <refname>udm_alloc_agent</refname>
   <refpurpose>Allocate mnoGoSearch session</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>udm_alloc_agent</function></funcdef>
     <paramdef>string <parameter>dbaddr</parameter></paramdef>
     <paramdef>string<parameter><optional>dbmode</optional></parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <para><function>udm_alloc_agent</function>
     Gibt bei Erfolg einen eindeutigen Zeiger auf einen mnoGoSearch-Agenten
     zurück, bei einem Fehler wird &false; zurückgegeben. Diese Funktion
     kreiert eine Sitzung mit Datenbankparametern.
   </para>
   
   <para>
    <parameter>dbaddr</parameter> -
    Datenbankadresse im URL-Stil. Wird verwendet, um mit den Daten
    Datenbanktyp, Datenbankhost, Datenbankname, Datenbankport, Datenbankuser
    und Datenbankpasswort eine Verbindung zu einer SQL-Datenbank herzustellen.
    Das Format lautet:
    DBAddr DBType:[//[DBUser[:DBPass]@]DBHost[:DBPort]]/DBName/.
  </para>
   
   <para>
    <parameter>dbmode</parameter> -
    Mit dem Parameter dbmode wird der Modus spezifiziert, in dem die Daten in
    der Datenbank vorliegen. Wird der Modus 'single' gewählt, werden alle
    Wörter in der selben Tablelle gespeichert. Der Modus 'multi' speichert die
    Wörter in verschiedenene Tabellen, abhängig von deren Länge. Weitere Modi
    sind der CRC-Modus und der Multi-CRC-Modus, wobei der CRC-Modus schneller
    als der Single- und der Multimodus sind, und der Multi-CRC-Modus die
    Technik des CRC-Modus mit der Speicherstruktur des Multi-Modus verbindet.
    Format: DBMode single/multi/crc/crc-multi
   </para>
   
   <note>
    <para>
     <parameter>dbaddr</parameter> und <parameter>dbmode</parameter> müssen mit
     den Werten übereinstimmen, die beim Indizieren verwendet wurden.
    </para>
   </note>
   
   <note>
    <para>
     Eigentlich öffnet diese Funktion keine Verbindung zur Datenbank, folglich
     werden auch keine User- und Passwortüberprüfungen durchgeführt. Die
     Verbindung zur Datenbank wird von der Funktion
     <function>udm_find</function> übernommen, hier findet dann auch eine
     Überprüfung der Logindaten statt.
    </para>
   </note>
  </refsect1>
 </refentry>
 
 <refentry id="function.udm-api-version">
  <refnamediv>
   <refname>udm_api_version</refname>
   <refpurpose>Gibt die Version der mnoGoSearch API zurück.</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>udm_api_version</function></funcdef>
     <void/>
    </funcprototype>
   </funcsynopsis>
   
   <para>
    <function>udm_api_version</function> gibt die mnoGoSearch
    API-Versionsnummer zurück. Wird als z.B. die mnoGoSearch 3.1.10 API
    benutzt, gibt diese Funktion <literal>30110</literal> zurück.
   </para>

   <para>Diese Funktion erlaubt es dem Benutzer zu erfahren, welche Funktionen
    der mnoGoSearch-API verfügbar sind. <function>udm_get_doc_count</function>
    diese Funktion ist erst ab mnoGoSearch 3.1.11 oder später verfügbar.
   </para>
   
   <simpara>Beispiel:</simpara>
   <informalexample>
    <programlisting role="C">
   if (Udm_Api_Version() &gt;= 30111) {
   print  "Total number of urls in database: ".Udm_Get_Doc_Count($udm)."&lt;br&gt;\n";
   }
    </programlisting>
   </informalexample>
  </refsect1>
 </refentry>
 
 <refentry id="function.udm-cat-path">
  <refnamediv>
   <refname>udm_cat_path</refname>
   <refpurpose>Liefert den Pfad zur aktuellen Kategorie zurück.</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>array <function>udm_cat_path</function></funcdef>
     <paramdef>int <parameter>agent</parameter></paramdef>
     <paramdef>string <parameter>category</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>udm_cat_path</function> gibt einen Array zurück, der den Pfad
    im Kategorienbaum von der Wurzel an bis zur aktuellen Kategorie enthält.
   </para>
   
   <para>
    <parameter>agent</parameter> - Zeiger auf den Agenten.
   </para>
   
   <para>
    <parameter>category</parameter> - aktuelle Kategorie - diejenige, zu der
    der Pfad herausgefunden werden soll.
   </para>
   
   <para>
    Gibt einen Array mit dem folgenden Format zurück:
   </para>
   
   <para>
    Der Array besteht aus Paaren. Elemente mit geraden Indexnummern beinhalten
    die Kategoriepfade, die ungeraden Elemente behinhalten die entsprechenden
    Kategorienamen.
   </para>
   <para>
    So könnte der Aufruf <literal>$array=udm_cat_path($agent,
    '02031D');</literal> folgenden Array zurückliefern:
   </para>
   
   <literallayout>
 $array[0] beinhaltet ''
 $array[1] beinhaltet 'Root'
 $array[2] beinhaltet '02'
 $array[3] beinhaltet 'Sport'
 $array[4] beinhaltet '0203'
 $array[5] beinhaltet 'Auto'
 $array[4] beinhaltet '02031D'
 $array[5] beinhaltet 'Ferrari'
   </literallayout>
   <example>
    <title>
     Spezifiziert den Pfad zu der aktuellen Kategorie in folgendem Format:
     '&gt; Root &gt; Sport &gt; Auto &gt; Ferrari'
    </title>
    <programlisting role="php">
 &lt;?php
   $cat_path_arr=Udm_Cat_Path($udm_agent,$cat);
   $cat_path='';
   for ($i=0; $i&lt;count($cat_path_arr); $i+=2) {
     $path=$cat_path_arr[$i];
     $name=$cat_path_arr[$i+1];
     $cat_path .= " &gt; &lt;a href=\"$PHP_SELF?cat=$path\"&gt;$name&lt;/a&gt; ";
   }
 &gt;
    </programlisting>
   </example>
  </refsect1>
 </refentry>
 
 <refentry id="function.udm-cat-list">
  <refnamediv>
   <refname>udm_cat_list</refname>
   <refpurpose>Liefert alle Kategorien auf der selben Ebene wie der aktuellen
   zurück.</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>array <function>udm_cat_list</function></funcdef>
     <paramdef>int <parameter>agent</parameter></paramdef>
     <paramdef>string <parameter>category</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   
   <para>
    <function>udm_cat_list</function> Gibt einen Array zurück, der alle
    Kategorien auf dem selben Level im Kategorienbaum wie die aktuelle
    Kategorie liegen.
   </para>
   
   <para>
    Diese Funktion kann nützlich sein, um einen Kategorienbrowser zu
    entwickeln.
   </para>
   <para>
    Gibt einen Array mit dem folgenden Format zurück:
   </para>
   
   <para>
    Der Array besteht aus Paaren. Elemente mit geraden Indexnummern beinhalten
    die Kategoriepfade, die ungeraden Elemente behinhalten die entsprechenden
    Kategorienamen.
   </para>
   
   <literallayout>
  $array[0] beinhaltet '020300'
  $array[1] beinhaltet 'Audi'
  $array[2] beinhaltet '020301'
  $array[3] beinhaltet 'BMW'
  $array[4] beinhaltet '020302'
  $array[5] beinhaltet 'Opel'
  ...
 usw.
   </literallayout>
   <literallayout>
  Das folgende Beispiel gibt Links im folgenden Format aus:
  Audi
  BMW
  Opel
  ...
   </literallayout>
   <informalexample>
    <programlisting role="php">
  &lt;?php
   $cat_list_arr=Udm_Cat_List($udm_agent,$cat);
   $cat_list='';
   for ($i=0; $i&lt;count($cat_list_arr); $i+=2) {
   $path=$cat_list_arr[$i];
   $name=$cat_list_arr[$i+1];
   $cat_list .= "&lt;a href=\"$PHP_SELF?cat=$path\"&gt;$name&lt;/a&gt;&lt;br&gt;";
   }
  &gt;
    </programlisting>
   </informalexample>
   
  </refsect1>
 </refentry>
 
 
 <refentry id="function.udm-clear-search-limits">
  <refnamediv>
   <refname>udm_clear_search_limits</refname>
   <refpurpose>Löscht alle mnoGoSearch Suchrestriktionen</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>udm_clear_search_limits</function></funcdef>
     <paramdef>int <parameter>agent</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   
   <para>
    <function>udm_clear_search_limits</function> setzt definierte
    Sucheinschränkungen zurück und gibt &true; zurück.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.udm-errno">
  <refnamediv>
   <refname>udm_errno</refname>
   <refpurpose>Liefert den mnoGoSearch Fehlercode zurück.</refpurpose>
  </refnamediv>
  
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>udm_errno</function></funcdef>
     <paramdef>int <parameter>agent</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   
   <para>
    <function>udm_errno</function> liefert den mnoGoSearch Fehlercode. Null
    wenn kein Fehler vorliegt..
   </para>
   
   <para>
    <parameter>agent</parameter> - Zeiger auf einen Agenten, erhalten nach
    einem Aufruf von <function>udm_alloc_agent</function>.
   </para>
   
   <para>
    Enthält einen numerischen Fehlercode.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.udm-error">
  <refnamediv>
   <refname>udm_error</refname>
   <refpurpose>Liefert eine mnoGoSearch Fehlermeldung zurück.</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>udm_error</function></funcdef>
     <paramdef>int <parameter>agent</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   
   <para>
    <function>udm_error</function> gibt eine mnoGoSearch Fehlermeldung zurück,
    eine leere Zeichenkette, wenn kein Fehler vorlag.
   </para>
   
   <para>
    <parameter>agent</parameter> - Zeiger auf einen Agenten, erhalten nach
    einem Aufruf von <function>udm_alloc_agent</function>.
   </para>
   
   <para>
    Liefert die Fehlermeldung des Agenten zurück.
   </para>
   
  </refsect1>
 </refentry>
 
 <refentry id="function.udm-find">
  <refnamediv>
   <refname>udm_find</refname>
   <refpurpose>Führe eine Suche durch.</refpurpose>
  </refnamediv>
  
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>udm_find</function></funcdef>
     <paramdef>int <parameter>agent</parameter></paramdef>
     <paramdef>string <parameter>query</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   
   <para>
    <function>udm_find</function> gibt einen Ergebniszeiger bei Erfolg zurück,
    &false; bei einem Fehler.
   </para>
   
   <para>
    Die eigentliche Suche. Das erste Argument - die Session, das nächste
    - die Suche selbst. Um etwas zu finden, einfach die zu suchenden
    Begriffe in das Suchfeld eintippen und den Submit-Button drücken.
    Zum Beispiel "mysql odbc". Die doppelten Anführungszeichen " sollten
    nicht in einer Suche verwendet werden, sie werden hier nur aufgeführt,
    um die Suchbegriffe vom anderen Text zu unterscheiden. mnoGoSearch wird
    alle Dokumente finden, die das Wort "mysql" und/oder "odbc" enthalten.
    Dokumente, die der Suche besser entsprechen als andere werden zuerst
    angezeigt. Wird der Suchmodus ALL verwendet, werden nur Dokumente gefunden,
    die alle gesuchten Wörter mindestens einmal enthalten. Wird der Suchmodus
    ANY verwendet, werden alle Dokumente zurückgliefert, die eines der
    gesuchten Wörter enthalten. Wenn ausgefeiltere Suchen stattfinden sollen,
    muß die Suchsprache verwendet werden. In diesem Falle sollte der boolsche
    Übereinstimmungsmodus gewählt werden.
   </para>
   
   <simpara>
    mnoGoSearch kennt die folgenden boolschen Operatoren:
   </simpara>
   
   <simpara>
    &amp; - logisches UND. Zum Beispiel &quot;mysql &amp;
    odbc&quot;. mnoGoSearch wird alle Dokumente finden, die sowohl
    &quot;mysql&quot; als auch &quot;odbc&quot; enthalten.
   </simpara>
   <simpara>
    | - logisches ODER. Zum Beispiel &quot;mysql|odbc&quot;. mnoGoSearch
    wird alle Dokumente zurückliefern die das Wort &quot;mysql&quot; oder das
    Wort &quot;odbc&quot; enthalten.
   </simpara>
   <simpara>
    ~ - logisches NICHT. Zum Beispiel &quot;mysql &amp; ~odbc&quot;.
    mnoGoSearch wird alle Dokumente finden, die das Wort &quot;mysql&quot;
    enthalten, nicht aber das Wort &quot;odbc&quot; zur gleichen Zeit.
    Dieser Operator ist jedoch ein rein ausschließender Operator. Die Suche
    &quot;~odbc&quot; wird keine Ergebnisse zurückliefern!
   </simpara>
   <simpara>
    () - Gruppierung, um komplexe Suchen zu bilden.  Zum Beispiel
    &quot;(mysql | msql) &amp; ~postgres&quot;.  Die Suchesprache
    ist simpel und stark zugleich.
   </simpara>
   
  </refsect1>
 </refentry>
 
 <refentry id="function.udm-free-agent">
  <refnamediv>
   <refname>udm_free_agent</refname>
   <refpurpose>Löscht eine mnoGoSearch Session</refpurpose>
  </refnamediv>
  
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>udm_free_agent</function></funcdef>
     <paramdef>int <parameter>agent</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   
   <para>
    <function>udm_free_agent</function> gibt &true; bei Erfolg zurück, &false;
    bei einem Fehler.
   </para>
   <para>
    <parameter>agent</parameter> - Zeiger auf einen Agenten, erhalten nach
    einem Aufruf von <function>udm_alloc_agent</function>.
   </para>
   
   <para>
    Gibt den Speicher frei, den eine mnoGoSearch-Session belegt hat.
   </para>
   
  </refsect1>
 </refentry>
 
 <refentry id="function.udm-free-ispell-data">
  <refnamediv>
   <refname>udm_free_ispell_data</refname>
   <refpurpose>Gibt den Speicher frei, der für ISpell alloziiert
   wurde.</refpurpose>
  </refnamediv>
  
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>udm_free_ispell_data</function></funcdef>
     <paramdef>int <parameter>agent</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>

   <para>
    <function>udm_free_ispell_data</function> liefert stets &true; zurück.
   </para>
   
   <para>
    <parameter>agent</parameter> - Zeiger auf einen Agenten, erhalten nach
    einem Aufruf von <function>udm_alloc_agent</function>.
   </para>
   
   <note>
    <para>
     Diese Funktion wird seit Version 3.1.12 von mnoGoSearch unterstützt.
     In vorherigen Versionen ist sie ohne Funktion.
    </para>
   </note>
   
  </refsect1>
 </refentry>
 
 <refentry id="function.udm-free-res">
  <refnamediv>
   <refname>udm_free_res</refname>
   <refpurpose>Löscht ein mnoGoSearch-Ergebis.</refpurpose>
  </refnamediv>
  
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>udm_free_res</function></funcdef>
     <paramdef>int <parameter>res</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   
   <para>
    <function>udm_free_res</function> gibt &true; bei Erfolg, &false; bei einem
    Fehler zurück.
   </para>
   
   <para>
    <parameter>agent</parameter> - Zeiger auf einen Agenten, erhalten nach
    einem Aufruf von <function>udm_alloc_agent</function>.
   </para>
   
   <para>
    Gibt den Speicher frei, der für Ergebnisse alloziiert wurde.
   </para>
   
  </refsect1>
 </refentry>
 
 <refentry id="function.udm-get-doc-count">
  <refnamediv>
   <refname>udm_get_doc_count</refname>
   <refpurpose>Liefert die Anzahl aller Dokumente in der Datenbank
   zurück.</refpurpose>
  </refnamediv>
  
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>udm_get_doc_count</function></funcdef>
     <paramdef>int <parameter>agent</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   
   <para>
    <function>udm_get_doc_count</function> gibt die Anzahl der Dokumente in der
    Datenbank zurück.
   </para>
   
   <para>
    <parameter>agent</parameter> - Zeiger auf einen Agenten, erhalten nach
    einem Aufruf von <function>udm_alloc_agent</function>.
   </para>
   
   <note>
    <simpara>
     Diese Funktion wird seit mnoGoSearch 3.1.11 unterstützt.
    </simpara>
   </note>
   
  </refsect1>
 </refentry>
 
 <refentry id="function.udm-get-res-field">
  <refnamediv>
   <refname>udm_get_res_field</refname>
   <refpurpose>Erhalte ein mnoGoSearch Ergebenisfeld</refpurpose>
  </refnamediv>
  
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>udm_get_res_field</function></funcdef>
     <paramdef>int <parameter>res</parameter></paramdef>
     <paramdef>int <parameter>row</parameter></paramdef>
     <paramdef>int <parameter>field</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   
   <para>
    <function>udm_get_res_field</function> gibt den Wert eines Ergebnisfeldes
     bei Erfolg, &false; bei einem Fehler zurück.
   </para>
   
   <para>
    <parameter>agent</parameter> - Zeiger auf einen Agenten, erhalten nach
    einem Aufruf von <function>udm_alloc_agent</function>.
   </para>
   
   <para>
    <parameter>row</parameter> - Die Zahl des aktuellen Links.
    Werte können zwischen 0 und
    <parameter>UDM_PARAM_NUM_ROWS</parameter> variieren.
   </para>
   
   <para>
    <parameter>field</parameter> - Feldzeiger, kann folgende Werte annehmen:
   </para>
   
   <itemizedlist>
    <listitem>
     <simpara>
      UDM_FIELD_URL - URL des Dokumentes
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_FIELD_CONTENT - Content-Type des Dokumentes (zum Beispiel text/html).
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_FIELD_CATEGORY - Kategorie des Dokumentes.
      <function>udm_cat_path</function> sollte verwendet werden, um den vollen
      Pfad vom der Wurzel des Kategorienbaumes zur aktuellen Kategorie zu
      erhalten. (Dieser Parameter ist erst ab PHP Version 4.0.6 verfügbar).
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_FIELD_TITLE - Titel des Dokumentes.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_FIELD_KEYWORDS - Keywords des Dokumentes (aus dem Meta-Tag Keywords).
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_FIELD_DESC - Dokumentenbeschreibung (aus dem Meta-Tag Description).
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_FIELD_TEXT - Inhalt des Dokumentes (die ersten Zeilen des
      Dokumentes).
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_FIELD_SIZE - Größe des Dokumentes.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_FIELD_URLID - Eindeutige ID des Dokumentes.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_FIELD_RATING  - Dokumentenwertung (von mnoGoSearch berechnet).
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_FIELD_MODIFIED - Datum der letzten Änderung des Dokumentes als
      Unix-Timestamp.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_FIELD_ORDER - Die Nummer des aktuellen Dokumentes in der Menge der
      gefundenen Dokumente.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_FIELD_CRC - Die Prüfsumme des Dokumentes.
     </simpara>
    </listitem>
   </itemizedlist>
   
  </refsect1>
 </refentry>
 
 <refentry id="function.udm-get-res-param">
  <refnamediv>
   <refname>udm_get_res_param</refname>
   <refpurpose>Liefert die mnoGoSearch Ergbnisparameter zurück.</refpurpose>
  </refnamediv>
  
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>udm_get_res_param</function></funcdef>
     <paramdef>int <parameter>res</parameter></paramdef>
     <paramdef>int <parameter>param</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   
   <para>
    <function>udm_get_res_param</function> gibt den Wert des Parameters bei
    Erfolg. &false; bei einem Fehler zurüc.
   </para>
   
   <para>
    <parameter>res</parameter> - ein Ergebniszeiger, erhalten nach einem Aufruf
    von <function>udm_find</function>.
   </para>
   
   <para>
    <parameter>param</parameter> - Parameterbezeichner. Kann folgenden Werte
    annehmen:
   </para>
   
   <itemizedlist>
    <listitem>
     <simpara>
      UDM_PARAM_NUM_ROWS - Anzahl der auf der aktuellen Seite gefundenen Links.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_PARAM_FOUND - Anzahl der gefundenen Dokuemnte, die der Suche
      entsprechen.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_PARAM_WORDINFO - Informationen über die gefundenen Wörter. Zum
      Beispiel könnte eine Suche nach "a good book" die Werte "a: stopword,
      good:5637, book: 120" ausgeben.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_PARAM_SEARCHTIME - Suchzeit in Sekunden.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_PARAM_FIRST_DOC - Die Nummer des ersten auf der aktuellen Seite
      angezeigten Dokumentes.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_PARAM_LAST_DOC - Die Nummer des letzten auf der aktuellen Seiten
      angezeigten Dokumentes.
     </simpara>
    </listitem>
   </itemizedlist>
   
  </refsect1>
 </refentry>
 
 <refentry id="function.udm-load-ispell-data">
  <refnamediv>
   <refname>udm_load_ispell_data</refname>
   <refpurpose>Lade ISpell-Daten</refpurpose>
  </refnamediv>
  
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>udm_load_ispell_data</function></funcdef>
     <paramdef>int <parameter>agent</parameter></paramdef>
     <paramdef>int <parameter>var</parameter></paramdef>
     <paramdef>string <parameter>val1</parameter></paramdef>
     <paramdef>string <parameter>val2</parameter></paramdef>
     <paramdef>int <parameter>flag</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   
   <para>
    <function>udm_load_ispell_data</function> lädt ISpell-Daten. Gibt &true;
    bei Erfolg, &false; bei einem Fehler zurück.
   </para>
   
   <para>
    <parameter>agent</parameter> - Zeiger auf einen Agenten, erhalten nach
    einem Aufruf von <function>udm_alloc_agent</function>.
   </para>
   
   <para>
    <parameter>var</parameter> - Parameter, der die Quelle der ISpell-Daten
    angibt. Kann folgende Werte annehmen.
   </para>
   
   <para>
    Nachdem diese Funktion aufgerufen wurde, sollte nicht vergessen werden,
    mittels <function>udm_free_ispell_data</function> den durch ISpell belegten
    Speicher wieder freizugeben, auch wenn UDM_ISPELL_TYPE_SERVER verwendet
    wird.
   </para>
   
   <para>
    Der schnellste Modus ist UDM_ISPELL_TYPE_SERVER. UDM_ISPELL_TYPE_TEXT ist
    langsamer, und UDM_ISPELL_TYPE_DB ist der langsamste. Dies gilt zumindest
    für mnoGoSearch 3.1.10 - 3.1.11, es ist jedoch geplant, den DB-Modus in
    zukünftigen Versionen schneller als den TEXT-Modus zu machen.
   </para>
   
   <itemizedlist>
    <listitem>
     <simpara>
      UDM_ISPELL_TYPE_DB - Gibt an, das die ISpell-Daten aus einer
      SQL-Datenbank gelesen werden sollen. In diesem Fall werden
      <parameter>val1</parameter> und <parameter>val2</parameter> ignoriert
      und sollten leer gelassen werden. Der Parameter
      <parameter>flag</parameter> sollte <literal>1</literal> sein.
     </simpara>
     
     <note>
      <para>
       Der Parameter <parameter>flag</parameter> gibt an, dass die ISpell-Daten
       nach dem Laden sortiert werden sollen, dies ist für ein korrektes
       Arbeiten von ISpell nötig. Werden die ISpell-Daten aus Dateien gelesen,
       kann es vorkommen, daß mehrere Aufrufe von
       <function>udm_load_ispell_data</function>
       vorkommen, was es wenig Effektiv macht, die Daten nach jedem Aufruf zu
       sortieren. Der Datenbank-Modus lädt jedoch alle Daten auf einmal, in
       diesem Fall sollte der Wert also <literal>1</literal> betragen. Sollte
       ein Fehler auftreten, wird &false; zurückgegeben, Fehler und Fehlercode
       sind in diesem Fall über <function>udm_error</function> und
       <function>udm_errno</function> verfügbar.
      </para>
     </note>
     
     <simpara>Beispiel:</simpara>
     <informalexample>
      <programlisting role="C">
     if (! Udm_Load_Ispell_Data($udm,UDM_ISPELL_TYPE_DB,'','',1)) {
     printf("Error #%d: '%s'\n",Udm_Errno($udm),Udm_Error($udm));
     exit;
     }
      </programlisting>
     </informalexample>
    </listitem>
    <listitem>
     <para>
      UDM_ISPELL_TYPE_AFFIX - Gibt an, dass die ISpell-Daten aus einer Datei
      geladen werden sollen und initiiert das Laden der Anhangsdaten. In diesem
      Fall gibt der Parameter <parameter>val1</parameter> den zweibuchstabigen
      Sprachcode an, für den die Anhänge geladen werden sollen,
      <parameter>val2</parameter> gibt den Dateipfad an. Wird kein absoluter
      Pfad angeben, werden die Dateien nicht in UDM_CONF_DIR, sondern in im zum
      aktuellen Pfad relativen gesucht. Kann die Datei nicht geladen werden,
      gibt die Funktion &false; zurück, und eine Fehlermeldung wird ausgegeben.
      Die Fehlercodes können nicht über <function>udm_error</function> oder
      <function>udm_errno</function> ausgelesen werden. Zur Erlärung des
      Parameters <parameter>flag</parameter> schauen Sie bitte bei
      UDM_ISPELL_TYPE_DB nach.
     </para>
     
     <simpara>Beispiel:</simpara>
     <informalexample>
      <programlisting role="C">
     if ((! Udm_Load_Ispell_Data($udm,UDM_ISPELL_TYPE_AFFIX,'en','/opt/ispell/en.aff',0)) ||
        (! Udm_Load_Ispell_Data($udm,UDM_ISPELL_TYPE_AFFIX,'ru','/opt/ispell/ru.aff',0)) ||
        (! Udm_Load_Ispell_Data($udm,UDM_ISPELL_TYPE_SPELL,'en','/opt/ispell/en.dict',0)) ||
        (! Udm_Load_Ispell_Data($udm,UDM_ISPELL_TYPE_SPELL,'ru','/opt/ispell/ru.dict',1))) {
     exit;
     }
      </programlisting>
     </informalexample>
     <note>
      <para>
       <parameter>flag</parameter> hat nur beim letzten Aufruf den Wert
       <literal>1</literal>.
      </para>
     </note>
    </listitem>
    <listitem>
     <para>
      UDM_ISPELL_TYPE_SPELL - Gibt an, dass die ISpell-Daten aus einer Datei
      gelesen werden sollen, und initiiert das Laden des ISpell-Wörterbuches.
      In diesem Fall gibt der Parameter <parameter>val1</parameter> den
      zweibuchstabigen Sprachcode an, für den die Anhänge geladen werden
      sollen, <parameter>val2</parameter> gibt den Dateipfad an. Wird kein
      absoluter Pfad angeben, werden die Dateien nicht in UDM_CONF_DIR,
      sondern in im zum aktuellen Pfad relativen gesucht. Kann die Datei nicht
      geladen werden, gibt die Funktion &false; zurück, und eine Fehlermeldung
      wird ausgegeben.  Die Fehlercodes können nicht über
      <function>udm_error</function> oder <function>udm_errno</function>
      ausgelesen werden. Zur Erklärung des Parameters
      <parameter>flag</parameter> schauen Sie bitte bei
      UDM_ISPELL_TYPE_DB nach.
     </para>
     <informalexample>
      <programlisting role="C">
     if ((! Udm_Load_Ispell_Data($udm,UDM_ISPELL_TYPE_AFFIX,'en','/opt/ispell/en.aff',0)) ||
        (! Udm_Load_Ispell_Data($udm,UDM_ISPELL_TYPE_AFFIX,'ru','/opt/ispell/ru.aff',0)) ||
        (! Udm_Load_Ispell_Data($udm,UDM_ISPELL_TYPE_SPELL,'en','/opt/ispell/en.dict',0)) ||
        (! Udm_Load_Ispell_Data($udm,UDM_ISPELL_TYPE_SPELL,'ru','/opt/ispell/ru.dict',1))) {
      exit;
      }
      </programlisting>
     </informalexample>
     
     <note>
      <para>
       <parameter>flag</parameter> hat nur beim letzten Aufruf den Wert<literal>1</literal>.
      </para>
     </note>
    </listitem>
    <listitem>
     <para>
      UDM_ISPELL_TYPE_SERVER - schaltet den Spell-Server support ein.
      <parameter>val1</parameter> gibt den Host an, auf dem der Spell-Server
      läuft.. <parameter>val2</parameter> ist noch ohne Funktion, wird in
      Zukunft aber den Port des Spell-Servers angeben.
      <parameter>flag</parameter> wird nicht benötigt, da die Daten bereits
      sortiert im Spell-Server vorliegen.
     </para>
     <para>
      Der Spell-Server (Spelld) liest die Rechtschreibdaten aus einer
      seperaten Konfigurationsdatei (Standardmäßig
      /usr/local/mnogosearch/etc/spelld.conf), sortiert sie und speichert sie
      im Speicher.
     </para>
     <para>
      Die Funktion <function>udm_load_ispell_data</function> in
      UDM_ISPELL_TYPE_SERVER lädt eigentlich nicht die ISpell-Daten, sondern
      legt nur die Serveradresse fest. Eigentlich wird dieser Server
      automatisch von <function>udm_find</function> benutzt, wenn eine Suche
      durchgeführt wird. Sollte ein Fehler auftreten, wird keine Fehlermeldung
      ausgegeben, eine ISpell-Konvertierung kann dann jedoch natürlich auch
      nicht stattfinden.
     </para>
     
     <note>
      <para>
       Diese Funktion ist seit mnoGoSearch 3.1.12 verfügbar.
      </para>
     </note>
     
     <simpara>Beispiel:</simpara>
     <informalexample>
      <programlisting role="C">
     if (! Udm_Load_Ispell_Data($udm,UDM_ISPELL_TYPE_SERVER,'','',1)) {
         printf("Error loading ispell data from server&lt;br&gt;\n");
         exit;
        }
      </programlisting>
     </informalexample>
    </listitem>
   </itemizedlist>
  </refsect1>
 </refentry>
 
 <refentry id="function.udm-set-agent-param">
  <refnamediv>
   <refname>udm_set_agent_param</refname>
   <refpurpose>Setzt die Parameter der aktuellen mnoGoSearch Session</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>int <function>udm_set_agent_param</function></funcdef>
     <paramdef>int <parameter>agent</parameter></paramdef>
     <paramdef>int <parameter>var</parameter></paramdef>
     <paramdef>string <parameter>val</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   
   <para>
    <function>udm_set_agent_param</function> gibt &true; bei Erfolg,
    &false; bei eine, Fehler zurück. Deklariert mnoGoSearch Sessionparameter.
   </para>
   
   <simpara>
    Die folgenden Parameter und deren Werte sind erlaubt:
   </simpara>
   
   <itemizedlist>
    <listitem>
     <simpara>
      UDM_PARAM_PAGE_NUM - wird genutzt, um eine bestimmte Seite aus den
      Suchergebnissen auszuwählen. Ergebnissseiten werden von 0 an gezählt.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_PARAM_PAGE_SIZE - Anzahl der Suchergebnisse, die pro Seite angezeigt
      werden.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_PARAM_SEARCH_MODE - Suchmodus. Die folgenden Werte sind erlaubt:
      UDM_MODE_ALL - Logische UND-Verknüpfung; UDM_MODE_ANY - Logische
      ODER-Verknüpfung; UDM_MODE_BOOL - boolsche Suche. Siehe
      <function>udm_find</function> für weitere Details zur boolschen Suche.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_PARAM_CACHE_MODE - Schaltet den Ergebnis-Cache an oder aus. Falls
      eingeschaltet wird die Suchmaschine Suchergebnisse auf der Festplatte
      zwischenspeichern. Für den Fall, dass später eine ähnliche Suche
      durchgeführt wird, werden die Ergebnisse für ein schnelleres Ergebnis aus
      dem Cache gelesen. Werte: UDM_CACHE_ENABLED, UDM_CACHE_DISABLED.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_PARAM_TRACK_MODE - schaltet den Trackquery-Modus an oder aus. Seit
      Version 3.1.12 von mnoGoSearch wird eine Verfolgung von Suchanfragen
      unterstützt. Um die Track-Funktion nutzen zu können, müssen zusätzliche
      SQL-Tabellen angelegt werden. Für MySQL liegen die Tabellenbeschreibungen
      in create/mysql/track.txt. Wird eine Suche durchgeführt, werden die
      Suchwörter in diesen Tabellen zusammen mit der Anzahl der gefundenen
      Dokumente und dem aktuellen Unix-Timestamp gespeichert. Verfügbare Werte:
      UDM_TRACK_ENABLED, UDM_TRACK_DISABLED.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_PARAM_PHRASE_MODE - Gibt an, ob die Index-Datenbank eine
      Unterstützung für "Phrases" erlaubt. (Muß vor der Indizierung in der
      indexer.conf eingeschaltet werden. Mögliche Werte: UDM_PHRASE_ENABLED und
      UDM_PHRASE_DISABLED. Wird der Phrase-Modus verwendet, ist es natürlich
      nach wie vor möglich, alle anderen Suchmodi zu verwenden. Seit Version
      3.1.11 wird auch der Cache-Modus zusammen mit dem Phrase-Modus
      unterstützt.
     </simpara>
     <simpara>
      Beispiele:
     </simpara>
     <simpara>
      "Arizona desert" - Diese Abfrage gibt alle Dokumente zurück, die
      "Arizona desert" als eine Zeichenkette enthalten. Für eine Suche nach
      kompletten Zeichenkette müssen diese in doppelte Anführungszeichen
      gesetzt werden.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_PARAM_CHARSET - Legt einen lokalen Zeichensatz wie koi8-r, cp1252
      fest.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_PARAM_STOPFILE - Legt den Namen und den Pfad einer stopword-Datei
      fest. Auch hier wird nicht relativ zu UDM_CONF_DIR gesucht sondern
      relativ zu zu dem Pfad wo das aktuelle PHP-Script läuft.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_PARAM_STOPTABLE - Lädt die stopwords aus der angegebenen SQL-Tabelle.
      Es können mehrere Stopwordtable-Kommandos verwendet werden.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_PARAM_WEIGHT_FACTOR - Legt fest, wie bestimmte Teile eines Dokumentes
      zur Sortierung gewertet werden. Zur Zeit werden Body, Title, Keywords,
      Description und URL unterstützt. Um dieses Feature nutzen zu können, muß
      der Grad 2 in den *Weight-Anweisungen in der indexer.conf verwendet
      werden. Stellen wir uns vor, folgende Werte würden verwendet:
     </simpara>
     <literallayout>
  URLWeight     1
  BodyWeight    2
  TitleWeight   4
  KeywordWeight 8
  DescWeight    16
     </literallayout>
     
     <simpara>
      Solange der Indexer eine logische bit-ODER Operation verwendet, um das
      Gewicht einzelner Wörter festzulegen, wenn ein Wort mehrere Male im
      selben Dokument vorkommt, ist es möglich, zur Zeit der Suche
      festzustellen, welches Wort in welchem Teil des Dokumentes vorkommt.
      Wörter, die nur im Body auftauchen, haben das Gewicht 00000010 in
      binärer Notation. Wörter, die in allen Dokumententeilen vorkommen haben
      das Gewicht 00011111.
     </simpara>
     
     <simpara>
      Der Wert dieses Parameter ist ein String, bestehend aus den hexadezimalen
      Ziffern ABCDE. Jede Ziffer ist ein Faktor für das korrespondierende Bit.
      Für die oben angeführte Konfiguration zum Beispiel:
     </simpara>
     <literallayout>
   E ist ein Faktor für das Gewicht 1  (URL Weight bit)
   D ist ein Faktor für das Gewicht 2  (BodyWeight bit)
   C ist ein Faktor für das Gewicht 4  (TitleWeight bit)
   B ist ein Faktor für das Gewicht 8  (KeywordWeight bit)
   A ist ein Faktor für das Gewicht 16 (DescWeight bit)
     </literallayout>
     <simpara>
      Beispiele:
     </simpara>
     <simpara>
      UDM_PARAM_WEIGHT_FACTOR=00001 wird nur in URLs suchen.
     </simpara>
     <simpara>
      UDM_PARAM_WEIGHT_FACTOR=00100 wird nur in Titeln suchen.
     </simpara>
     <simpara>
      UDM_PARAM_WEIGHT_FACTOR=11100 wird in Titel, Keywords, Description
      aber nicht in URL und Body suchen.
     </simpara>
     <simpara>
      UDM_PARAM_WEIGHT_FACTOR=F9421 wird folgendermaßen Suchen und Werten:
     </simpara>
     <literallayout>
    Beschreibung mit dem Faktor 15  (F hex)
    Keywords mit dem Faktor 9
    Title mit dem Faktor  4
    Body mit dem Faktor 2
    URL mit dem Faktor 1
     </literallayout>
     <simpara>
      Wenn die Variable UDM_PARAM_WEIGHT_FACTOR übergeben wird, wird das
      Originalgewicht zur Sortierung verwendet.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_PARAM_WORD_MATCH - Wortteilübereinstimmung. Dieser Parameter kann
      verwendet werden, um festzulegen, welcher Wortteil mit dem gesuchten Wort
      übereinstimmen muß. Dieses Feature funktioniert nur im "single" oder
      "multi"-Modus. Im Cachemode und in den CRC-Modi ist eine Verwendung nicht
      möglich. Erlaubt Werte:
     </simpara>
     <simpara>UDM_MATCH_BEGIN - Der Wortanfang muss übereinstimmen;</simpara>
     <simpara>UDM_MATCH_END - Das Wortende muss übereinstimmen;</simpara>
     <simpara>UDM_MATCH_WORD - Das gesamte Wort muss übereinstimmen;</simpara>
     <simpara>UDM_MATCH_SUBSTR - Teile des Wortes müssen übereinstimmen.</simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_PARAM_MIN_WORD_LEN - Legt die mininmale Wortlänge fest. Jedes Wort,
      dass kürzer als die angegebene Länge ist, wird als stopword aufgefasst.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_PARAM_ISPELL_PREFIXES - Mögliche Werte: UDM_PREFIXES_ENABLED und
      UDM_PREFIXES_DISABLED, die explizit die Verwendung von ISpell-Prefixen
      an- oder abschalten. Wird also zum Beispiel das Wort "tested" in einer
      Suchabfrage verwendet, werden auch Wörter wie "test" oder "testing"
      gefunden. Nur Endungen werden normalerweise Unterstützt. Prefixe
      verändern für gewöhnlich die Bedeutung von Wörtern. So werden bei einer
      Suche nach "tested" z.B. auch Dokumente gefunden, die das Wort
      "untested" enthalten. Um diese Funktion nutzen zu können, müssen vorher
      mittels <function>udm_load_ispell_data</function> ISpell-Daten geladen
      werden.
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      UDM_PARAM_CROSS_WORDS - Aktiviert oder deaktiviert eine Unterstützung für
      Crosswords. Mögliche Werte: UDM_CROSS_WORDS_ENABLED und
      UDM_CROSS_WORDS_DISABLED.
     </simpara>
     <simpara>
      Das Crosswords-Feature erlaubt es, Wörter zwischen &lt;a href="xxx"&gt;
      und &lt;/a&gt; dem Dokument zuzuordnen, zu dem dieser Link führt.
     </simpara>
     <note>
      <simpara>
       Crosswords werden seit mnoGoSearch 3.1.11 unterstützt.
      </simpara>
     </note>
    </listitem>
    <listitem>
     <simpara>
      UDM_PARAM_VARDIR - Gibt einen Pfad zu einem Verzeichnis an, in dem der
      Indexer Daten speichert, wenn der integrierte Datenbank-Modus oder der
      Cachemodus verwendet wird. Voreingestellt ist das
      <literal>/var</literal>-Verzeichnis
      der <application>mnoGoSearch</application>-Installation verwendet. Es
      können ausschliesslich Strings verwendet werden. Dieser Parameter ist
      erst ab PHP 4.1.0 verfügbar.
     </simpara>
    </listitem>
   </itemizedlist>
  </refsect1>
 </refentry>
 
 <refentry id='function.udm-check-charset'>
  <refnamediv>
   <refname>udm_check_charset</refname>
    <refpurpose>
     Überprüft, ob mnoGoSearch der übergebene Zeichensatz bekannt ist
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <funcsynopsis>
      <funcprototype>
       <funcdef>int <function>udm_check_charset</function></funcdef>
       <paramdef>int <parameter>agent</parameter></paramdef>
       <paramdef>string <parameter>charset</parameter></paramdef>
      </funcprototype>
     </funcsynopsis>
     <para>
      &warn.undocumented.func;
     </para>
   </refsect1>
 </refentry>

 <refentry id='function.udm-check-stored'>
  <refnamediv>
   <refname>udm_check_stored</refname>
    <refpurpose>
     Open connection to stored
    </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>udm_check_stored</function></funcdef>
       <paramdef>int <parameter>agent</parameter></paramdef>
       <paramdef>int <parameter>link</parameter></paramdef>
       <paramdef>string <parameter>doc_id</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
      &warn.undocumented.func;
    </para>
  </refsect1>
 </refentry>

 <refentry id='function.udm-close-stored'>
  <refnamediv>
   <refname>udm_close_stored</refname>
    <refpurpose>
     Open connection to stored
    </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>udm_close_stored</function></funcdef>
      <paramdef>int <parameter>agent</parameter></paramdef>
      <paramdef>int <parameter>link</parameter></paramdef>
     </funcprototype>
   </funcsynopsis>
   <para>
    &warn.undocumented.func;
   </para>
  </refsect1>
 </refentry>

 <refentry id='function.udm-crc32'>
  <refnamediv>
   <refname>udm_crc32</refname>
    <refpurpose>
     Gibt eine CRC32-Prüfsumme eines übergebenen Strings zurück.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>udm_crc32</function></funcdef>
      <paramdef>int <parameter>agent</parameter></paramdef>
      <paramdef>string <parameter>str</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
 </refentry>

 <refentry id='function.udm-open-stored'>
  <refnamediv>
   <refname>udm_open_stored</refname>
    <refpurpose>
     Open connection to stored
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>udm_open_stored</function></funcdef>
      <paramdef>int <parameter>agent</parameter></paramdef>
      <paramdef>string <parameter>storedaddr</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
 </refentry>

</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
