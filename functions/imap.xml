 <reference id="ref.imap">
  <title>IMAP, POP3 und NNTP Funktionen</title>
  <titleabbrev>IMAP</titleabbrev>

  <partintro>
   <simpara>
    Dieses Packet baut auf auf der c-client Bibliothek auf, die Sie
    unter der URL <ulink url="&url.imap;">&url.imap;</ulink> erhalten.
    Kompilieren Sie diese und kopieren Sie 
    <filename>c-client/c-client.a</filename> nach 
    <filename>/usr/local/lib/libc-client.a</filename> sowie 
    <filename>c-client/rfc822.h</filename>, <filename>mail.h</filename> 
    und <filename>linkage.h</filename> nach 
    <filename>/usr/local/include</filename> oder in ein anderes 
    Verzeichnis in Ihrem Link- bzw. Include-Pfad. 
    Anschließend konfigurieren und kompilieren Sie PHP mit der Option
    <option role="configure">--with-imap</option>.
   </simpara>
   <simpara>
    Beachten Sie, daß diese Funktionen nicht auf das 
    <acronym>IMAP</acronym> -Protokol beschränkt sind, auch wenn der
    Name dies vermuten läßt.
    Die zugrundeliegende c-client Bibliothek unterstützt auch  
    <acronym>POP3</acronym>, <acronym>NNTP</acronym> und lokale
    Mailbox-Zugriffe. 
   </simpara>
   <para>
    Diese Dokumentation kann nicht alle Bereiche beschreiben, die von 
    den enthaltenen Funktionen berührt werden. Weitergehende Informationen
    erhalten Sie in der Dokumentation der c-client Bibliothek (Datei 
    <filename>docs/internal.txt</filename> im Quellpaket der Bibliothek)
    sowie in folgenden RFC-Dokumenten:
    <itemizedlist>
     <listitem>
      <simpara>
       <ulink url="&url.rfc;rfc821.html">RFC821</ulink> :
       Simple Mail Transfer Protocol (SMTP)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <ulink url="&url.rfc;rfc822.html">RFC822</ulink> :
       Standard for ARPA internet text messages
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <ulink url="&url.rfc;rfc2060.html">RFC2060</ulink> :
       Internet Message Access Protocol (IMAP) Version 4rev1 
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <ulink url="&url.rfc;rfc1939.html">RFC1939</ulink> : 
       Post Office Protocol Version 3 (POP3)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <ulink url="&url.rfc;rfc977.html">RFC977</ulink> :
       Network News Transfer Protocol (NNTP)
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <ulink url="&url.rfc;rfc2076.html">RFC2076</ulink> :
       Common Internet Message Headers
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       <ulink url="&url.rfc;rfc2045.html">RFC2045</ulink> ,
       <ulink url="&url.rfc;rfc2046.html">RFC2046</ulink> ,
       <ulink url="&url.rfc;rfc2047.html">RFC2047</ulink> ,
       <ulink url="&url.rfc;rfc2048.html">RFC2048</ulink> &amp;
       <ulink url="&url.rfc;rfc2049.html">RFC2049</ulink> :
       Multipurpose Internet Mail Extensions (MIME) 
      </simpara>
     </listitem>
    </itemizedlist>
    Eine ausführliche Übersicht bietet auch das Buch 
    <ulink url="&url.email.book;">Programming Internet Email</ulink> 
    von David Wood.
   </para> 
  </partintro>

  <refentry id="function.imap-append">
   <refnamediv>
    <refname>imap_append</refname> 
    <refpurpose>
     Fügt eine String-Nachricht an das angegebene Postfach an.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_append</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>mbox</parameter></paramdef>
      <paramdef>string <parameter>message</parameter></paramdef>
      <paramdef>string 
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Liefert true bei Erfolg und false bei Fehlern.
    </para>  
    <para>
     <function>imap_append</function> fügt den String aus
     <parameter>message</parameter> als neue Nachricht an die  
     durch  <parameter>mbox</parameter> spezifizierte Mailbox an. Wenn
     der optionale <parameter>flags</parameter> spezifiziert wird, so
     werden die Flags der Nachricht in der Mailbox entsprechend gesetzt.
    </para>
    <para>     
     <example>
      <title><function>imap_append</function> Beispiel</title>
      <programlisting role="php">
$stream = imap_open ("{your.imap.host}INBOX.Drafts", "username", "password");

$check = imap_check ($stream);
print "Msg Count before append: " . $check->Nmsgs . "&lt;br>\n";

imap_append( $stream, "{your.imap.host}INBOX.Drafts"
                    , "From: me@my.host\r\n"
                    . "To: you@your.host\r\n"
                    . "Subject: test\r\n"
                    . "\r\n"
                    . "this is a test message, please ignore\r\n"
                    );

$check = imap_check ($stream);
print "Msg Count after append : " . $check->Nmsgs . "&lt;br>\n";

imap_close ($stream);
      </programlisting>
     </example>
    </para>
    <warning>
     <para>
      Der Cyrus IMAP Server erwartet zwingend "\r\n" als
      Zeilenende-Kennung, ein einfaches "\n" wird nicht richtig
      verarbeitet.
     </para>
    </warning>
   </refsect1>
  </refentry>

  <refentry id="function.imap-base64">
   <refnamediv>
    <refname>imap_base64</refname>
    <refpurpose>Dekodiert BASE64-codierten Text</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_base64</function></funcdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Die <function>imap_base64</function> Funktion decodiert BASE64
     codierten Text (gemäß <ulink
     url="&url.rfc;rfc2045.html">RFC2045</ulink>, Abschnitt 6.8). Der
     decodierte Text wird als String zurückgegeben.
    </para>
    <para>
     Siehe auch <function>imap_binary</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-body">
   <refnamediv>
    <refname>imap_body</refname>
    <refpurpose>Liest den Körper einer Nachricht</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_body</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msg_number</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_body</function> liefert den Körper der Nachricht
     mit der Nummer <parameter> msg_number</parameter> im aktuellen
     Postfach. Die optionalen <parameter>flags</parameter> können eine
     Bitmaske enthalten, die sich aus folgenden Werten zusammensetzt:
     <itemizedlist>
      <listitem>
       <simpara>
	FT_UID - <parameter>msg_number</parameter> ist eine UID
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	FT_PEEK - Das \Seen-Flag wird nicht beeinflußt.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	FT_INTERNAL - Die Nachricht wird im internen Format
	zurückgegeben eine CRLF-Umwandlung findet nicht statt.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-check">
   <refnamediv>
    <refname>imap_check</refname>
    <refpurpose>Prüft den Status des aktuelle Postfachs</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>object <function>imap_check</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     Die <function>imap_check</function> Funktion prüft den Status
     des aktuellen Postfach und liefert die entsprechenden Felder in
     einem Objekt mit folgenden Attributen zurück:
    </para>
    <para>
     <itemizedlist>
      <listitem>
       <simpara>
        Date - Datum der letzten Änderung des Postfach-Inhalts
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Driver - Zugriffsprotokoll: POP, IMAP, NNTP
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Mailbox - Name des Postfachs 	
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Nmsgs - Anzahl der Nachrichten im Postfach
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	Recent - Anzahl der neuen Nachrichten im Postfach
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>     
     <example>
      <title><function>imap_check</function> Beispiel</title>
      <programlisting role="php">
$mbox = imap_open ("{your.imap.host}INBOX", "username", "password")
    || die ("can't connect: " . imap_last_error());
		
$check = imap_check ($mbox);
	  
if($check) {
    print "Date: "     . $check->Date    . "&lt;br>\n" ;
    print "Driver: "   . $check->Driver  . "&lt;br>\n" ;
    print "Mailbox: "  . $check->Mailbox . "&lt;br>\n" ;
    print "Messages: " . $check->Nmsgs   . "&lt;br>\n" ;
    print "Recent: "   . $check->Recent  . "&lt;br>\n" ;
} else { 
    print "imap_check() failed: " . imap_last_error() . "&lt;br>\n"; 
}
	  
imap_close ($mbox);	  	 
      </programlisting> 
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-close">
   <refnamediv>
    <refname>imap_close</refname>
    <refpurpose>Schließt eine IMAP-Verbindung</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_close</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     Schließt eine IMAP-Verbindung. Mit dem optionalen
     <parameter>flag</parameter> CL_EXPUNGE kann ein Bereinigen
     (physikalisches Löschen aller zum löschen markierten Nachrichten)
     ausgelöst werden.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-createmailbox">
   <refnamediv>
    <refname>imap_createmailbox</refname>
    <refpurpose>Erzeugt ein neues Postfach</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_createmailbox</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>mbox</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>  
     <function>imap_createmailbox</function> legt ein über den Parameter
     <parameter>mbox</parameter> spezifiziertes neues Postfach an.
    </para> 
    <para>
     Liefert true bei Erfolg und false bei Fehlern.
    </para>
    <para>
     Siehe auch <function>imap_renamemailbox</function> and
     <function>imap_deletemailbox</function> 
     sowie <function>imap_open</function> für das Format des
     Parameters <parameter>mbox</parameter>.
    </para>
    <para>     
     <example>
      <title><function>imap_createmailbox</function> Beispiel</title>
      <programlisting>
$mbox = imap_open ("{your.imap.host}", "username", "password", OP_HALFOPEN)
     || die ("can't connect: ".imap_last_error());

$name1 = "phpnewbox";
$name2 = imap_utf7_encode ("phpnewböx");

$newname = $name1;

echo "Newname will be '$name1'&lt;br>\n";

# we will now create a new mailbox "phptestbox" in your inbox folder,
# check its status after creation and finaly remove it to restore
# your inbox to its initial state 

if (@imap_createmailbox ($mbox,imap_utf7_encode ("{your.imap.host}INBOX.$newname"))) {
    $status = @imap_status($mbox,"{your.imap.host}INBOX.$newname",SA_ALL);
    if($status) {
        print("your new mailbox '$name1' has the following status:&lt;br>\n");
        print("Messages:   ". $status->messages   )."&lt;br>\n";
        print("Recent:     ". $status->recent     )."&lt;br>\n";
        print("Unseen:     ". $status->unseen     )."&lt;br>\n";
        print("UIDnext:    ". $status->uidnext    )."&lt;br>\n";
        print("UIDvalidity:". $status->uidvalidity)."&lt;br>\n";
    
        if (imap_renamemailbox ($mbox,"{your.imap.host}INBOX.$newname", "{your.imap.host}INBOX.$name2")) {
            echo "renamed new mailbox from '$name1' to '$name2'&lt;br>\n";
            $newname=$name2;
        } else {
            print "imap_renamemailbox on new mailbox failed: ".imap_last_error ()."&lt;br>\n";
        }
    } else {
            print "imap_status on new mailbox failed: ".imap_last_error()."&lt;br>\n";
    }
    if (@imap_deletemailbox($mbox,"{your.imap.host}INBOX.$newname")) {
        print "new mailbox removed to restore initial state&lt;br>\n";
    } else {
        print  "imap_deletemailbox on new mailbox failed: ".implode ("&lt;br>\n", imap_errors())."&lt;br>\n";
    }
  
} else {

    print "could not create new mailbox: ".implode ("&lt;br>\n",imap_errors())."&lt;br>\n";
}

imap_close($mbox);
      </programlisting>
     </example>
    </para>     
   </refsect1>
  </refentry>

  <refentry id="function.imap-delete">
   <refnamediv>
    <refname>imap_delete</refname>
    <refpurpose>
     Merkt eine Nachricht des aktuellen Postfachs zum Löschen vor.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_delete</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msg_number</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion liefert immer true, eventuelle Fehler können nicht
     erkannt werden!
    </para> 
    <para> 
     Die <function>imap_delete</function> Funktion merkt die mit
     <parameter>msg_number</parameter> angegebene Nachricht des
     aktuellen Postfachs zum Löschen vor.  Enthält der optionale
     Parameter <parameter>flags</parameter> den Wert
     <parameter>FT_UID</parameter>, so wird der Parameter
     <parameter>msg_number</parameter> als <parameter>UID</parameter>
     interpretiert.  Die Nachricht verbleibt zunächst noch im
     Postfach, endgültig gelöscht wird sie (zusammen mit allen anderen
     entsprechend markierten Nachrichten) durch Aufruf der Funktion
     <function>imap_expunge</function> oder durch
     <function>imap_close</function> mit dem optionalen Flag
     <parameter>CL_EXPUNGE</parameter>.
    </para>
    <para>     
     <example>
      <title><function>Imap_delete</function> Beispiel</title>
      <programlisting role="php">
$mbox = imap_open ("{your.imap.host}INBOX", "username", "password")
    || die ("can't connect: " . imap_last_error());

$check = imap_mailboxmsginfo ($mbox);
print "Messages before delete: " . $check->Nmsgs . "&lt;br>\n" ;
imap_delete ($mbox, 1);
$check = imap_mailboxmsginfo ($mbox);
print "Messages after  delete: " . $check->Nmsgs . "&lt;br>\n" ;
imap_expunge ($mbox);
$check = imap_mailboxmsginfo ($mbox);
print "Messages after expunge: " . $check->Nmsgs . "&lt;br>\n" ;
imap_close ($mbox);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-deletemailbox">
   <refnamediv>
    <refname>imap_deletemailbox</refname>
    <refpurpose>Löscht ein Postfach</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_deletemailbox</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>mbox</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     <function>Imap_deletemailbox</function> löscht das angegebene
     Postfach inclusive aller darin enthaltener Nachrichten und 
     Unter-Postfächer.
    </para>  
    <para>
     Liefert true bei Erfolg und false bei Fehlern.
    </para>
    <para>
     Siehe auch <function>imap_createmailbox</function> und
     <function>imap_renamemailbox</function>
     sowie <function>imap_open</function> für das Format des 
     <parameter>mbox</parameter> Parameters.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-expunge">
   <refnamediv>
    <refname>imap_expunge</refname>
    <refpurpose>
     Löscht alle zum Löschen vorgemerkten Nachrichten
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_expunge</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>  
     <function>Imap_expunge</function> löscht endgültig alle von den
     Funktionen <function>imap_delete</function>,
     <function>imap_mail_move</function> oder
     <function>imap_setflag_full</function> zum Löschen vorgemerkten
     Nachrichten.
    </para>
    <para>
     Diese Funktion liefert immer true, eventuelle Fehler können nicht
     erkannt werden!
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-fetchbody">
   <refnamediv>
    <refname>imap_fetchbody</refname>
    <refpurpose>
     Liefert einen bestimmten Abschnitt aus dem Körper einer Nachricht.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_fetchbody</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msg_number</parameter></paramdef>
      <paramdef>string <parameter>part_number</parameter></paramdef>
      <paramdef>flags 
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion liefert einen bestimmten Teil einer MIME-kodierten
     Nachricht als String. Die Nummer des gewünschten Teils besteht
     aus von Punkten getrennten Zahlen, die den Index des Teils
     gemäß der IMAP4-Spezifikationen bezeichnen. Der Inhalt wird dabei
     von dieser Funktion nicht dekodiert.
    </para>
    <para>
     Die Bitmaske <parameter>flags</parameter> kann aus folgenden
     Werten zusammengesetzt werden:  
     <itemizedlist>
      <listitem>
       <simpara>
	FT_UID - <parameter>msg_number</parameter> enthält eine UID
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	FT_PEEK - Das \Seen Flag der Nachricht wird nicht verändert
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	FT_INTERNAL - Das Ergebnis wird ohne jeden Versuch einer
	Konvertierung der Zeilenenden zurückgegeben
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-fetchstructure">
   <refnamediv>
    <refname>imap_fetchstructure</refname> 
    <refpurpose>
     Liefert die Struktur der angegebenen Nachricht
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>object
       <function>imap_fetchstructure</function>
      </funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msg_number</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion liefert die gesamten Strukturinformationen zu
     einer gegebenen Nachricht. Das zurückgegebene Objekt enthält den
     Umschlag, die internen Daten, Größe und Flags der Nachricht sowie
     ein (rekursives) Array von ähnlichen Objekten für jeden
     enthaltenen MIME-Teil der Nachricht. Enthält der optionale
     Parameter <parameter>flags</parameter> den Wert
     <parameter>FT_UID</parameter>, so wird
     <parameter>msg_number</parameter> als UID anstelle eines Index
     interpretiert.
    </para>
    <para>
     Das zurückgegebene Objekt verfügt über die folgenden Attribute:
     <table>
      <title>
       Zurückgegebene Objekte von <function>imap_fetchstructure</function>
      </title>
      <tgroup cols="2">
       <tbody>
	<row>
	 <entry>type</entry>
	 <entry>Primärer MIME-Typ des Nachrichten-Teils</entry>
	</row>
	<row>
	 <entry>encoding</entry>
	 <entry>Transfer-Kodierung</entry>
	</row>
	<row>
	 <entry>ifsubtype</entry>
	 <entry>Wahr, wenn das Feld subtype gesetzt ist</entry>
	</row>
	<row>
	 <entry>subtype</entry>
	 <entry><acronym>MIME</acronym> Subtyp</entry>
	</row>
	<row>
	 <entry>ifdescription</entry>
	 <entry>Wahr, wenn ein Beschreibungsstring existiert</entry>
	</row>
	<row>
	 <entry>description</entry>
	 <entry>Inhalt des Bechreibungsstrings</entry>
	</row>
	<row>
	 <entry>ifid</entry>
	 <entry>Wahr, wenn ein Identifikationsstring existiert</entry>
	</row>
	<row>
	 <entry>id</entry>
	 <entry>Identificationsstring</entry>
	</row>
	<row>
	 <entry>lines</entry>
	 <entry>Anzahl der Zeilen dieses Teils</entry>
	</row>
	<row>
	 <entry>bytes</entry>
	 <entry>Größe des Teils in Byte</entry>
	</row>
	<row>
	 <entry>ifdisposition</entry>
	 <entry>Wahr, wenn der Dispositionsstring gesetzt ist</entry>
	</row>
	<row>
	 <entry>disposition</entry>
	 <entry>Dispositionsstring</entry>
	</row>
	<row>
	 <entry>ifdparameters</entry>
	 <entry>Wahr, wenn Dispositions-Parameterwerte gesetzt sind</entry>
	</row>
	<row>
	 <entry>dparameters</entry>
	 <entry>Array der DispositionsParameter</entry>
	</row>
	<row>
	 <entry>ifparameters</entry>
	 <entry>Wahr, wenn Parameter gesetzt sind</entry>
	</row>
	<row>
	 <entry>parameters</entry>
	 <entry>Array der <acronym>MIME</acronym> Parameter</entry>
	</row>
	<row>
	 <entry>parts</entry>
	 <entry>
          Array von Objekten, die die einzelnen Unterteile der
          Nachricht beschreiben
         </entry>
	</row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <note>
     <orderedlist>
      <listitem>
       <para>
	dparameters ist ein Array von Objekten mit jeweils einem
	"attribute" und einem "value" Attribut.
       </para>
      </listitem>
      <listitem>
       <para>
	parameters ist ein Array von Objekten mit jeweils einem
	"attribute" und einem "value" Attribut.
       </para>
      </listitem>
      <listitem>
       <para>
	Die Elemente des parts Array entsprechen dem von der Funktion
	zurückgegebenen Objekt (usf.).
       </para>
      </listitem>
     </orderedlist>
    </note>
    <para>
     <table>
      <title>Primary body type</title>
      <tgroup cols="2">
       <tbody>
        <row><entry>0</entry><entry>text</entry></row>
        <row><entry>1</entry><entry>multipart</entry></row>
        <row><entry>2</entry><entry>message</entry></row>
        <row><entry>3</entry><entry>application</entry></row>
        <row><entry>4</entry><entry>audio</entry></row>
        <row><entry>5</entry><entry>image</entry></row>
        <row><entry>6</entry><entry>video</entry></row>
        <row><entry>7</entry><entry>other</entry></row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     <table>
      <title>Transfer encodings</title>
      <tgroup cols="2">
       <tbody>
        <row><entry>0</entry><entry>7BIT</entry></row>
        <row><entry>1</entry><entry>8BIT</entry></row>
        <row><entry>2</entry><entry>BINARY</entry></row>
        <row><entry>3</entry><entry>BASE64</entry></row>
        <row><entry>4</entry><entry>QUOTED-PRINTABLE</entry></row>
        <row><entry>5</entry><entry>OTHER</entry></row>
       </tbody>
      </tgroup>
     </table>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-header">
   <refnamediv>
    <refname>imap_header</refname>
    <refpurpose>Liefert den Kopf einer Nachricht</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>object <function>imap_header</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msg_number</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>fromlength</optional></parameter>
      </paramdef>
      <paramdef>int 
       <parameter><optional>subjectlength</optional></parameter>
      </paramdef>
      <paramdef>string 
       <parameter><optional>defaulthost</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion liefert ein Objekt, das aus verschiedenen
     Header-Elementen gebildet wird.
    </para>
    <para>  
     <informalexample>
      <literallayout>
       remail, date, Date, subject, Subject, in_reply_to, message_id,
       newsgroups, followup_to, references

message flags:
   Recent -  'R' wenn neu und bereits gelesen, 
             'N' wenn neu und noch nicht gelesen, 
             ' ' wenn nicht neu
   Unseen -  'U' wenn noch nicht gelesen UND nicht neu, 
             ' ' wenn gelesen OR neu und noch nicht gelesen
   Answered -'A' wenn beantwortet, 
             ' ' sonst
   Deleted - 'D' wenn zum Löschen vorgemerkt
             ' ' sonst
   Draft -   'X' wenn als Entwurf markiert, 
             ' ' sonst
   Flagged - 'F' wenn als 'wichtig' markiert, 
             ' ' sonst

Beachten Sie bitte die etwas seltsame Recent/Unseen-Zuordnung. 
Eine Nachricht wurde noch nicht gelesen, wenn folgende Bedingung
erfüllt ist:

Unseen == 'U' || Recent == 'N'

toaddress (Inhalt der to: Zeile, bis zu 1024 Zeichen)

to[] (ein Array aus Objekten aus der to: Zeile, jeweils mit:)
   personal
   adl
   mailbox
   host

fromaddress (Inhalt der from: Zeile, up to 1024 characters)

from[] (Inhalt der From Zeile, bestehend aus:)
   personal
   adl
   mailbox
   host

ccaddress (Inhalt der  cc: Zeile, max. 1024 Zeichen)
cc[] (Inhalt der Cc Zeile, bestehend aus:)
   personal
   adl
   mailbox
   host

bccaddress (Inhalt der  bcc Zeile, max. 1024 Zeichen)
bcc[] (Inhalt der Bcc Zeile, bestehend aus:)
   personal
   adl
   mailbox
   host

reply_toaddress (Inhalt der  reply_to: Zeile, max. 1024 Zeichen)
reply_to[] (Inhalt der Reply_to Zeile, bestehend aus:)
   personal
   adl
   mailbox
   host

senderaddress (Inhalt der  sender: Zeile, max. 1024 Zeichen)
sender[] (Inhalt der sender Zeile, bestehend aus:)
   personal
   adl
   mailbox
   host

return_path (Inhalt der  return-path: Zeile, max. 1024 Zeichen)
return_path[] (Inhalt der return_path Zeile, bestehend aus:)
   personal
   adl
   mailbox
   host

udate (Sende-Zeitpunkt der Nachricht in Sekunden seit 1.1.1970)

fetchfrom (From: Zeile, formartiert auf
max. <parameter>fromlength</parameter> Zeichen)

fetchsubject (Subject: Zeile, formatiert auf
max. <parameter>subjectlength</parameter> Zeichen)
      </literallayout>
     </informalexample>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-headers">
   <refnamediv>
    <refname>imap_headers</refname>
    <refpurpose>
     Liefert eine Zusammenfassung aller Nachrichtenköpfe eines Postfachs
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_headers</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion liefert ein String-Array, das je Nachricht
     einen String mit vorformatierten Informationen aus dem
     Nachrichtenheader enthält.
     <!-- format -->
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-listmailbox">
   <refnamediv>
    <refname>imap_listmailbox</refname>
    <refpurpose>Liefert eine Liste der Postfach-Namen</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_listmailbox</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>ref</parameter></paramdef>
      <paramdef>string <parameter>pat</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Liefert die Namen der gefundenen Postfächer als String-Array.
     <parameter>ref</parameter> und <parameter>pat</parameter> werden
     in <function>imap_getmailboxes</function> beschrieben.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-getmailboxes">
   <refnamediv>
    <refname>imap_getmailboxes</refname>
    <refpurpose>
     Liefert detailierte Informationen über eine Auswahl von Postfächern
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_getmailboxes</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>ref</parameter></paramdef>
      <paramdef>string <parameter>pat</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>imap_getmailboxes</function> liefert ein Array zurück,
     das für jedes gefundene Postfach ein Objekt mit de Attributen 
     <parameter>name</parameter>, <parameter>delimiter</parameter>
     und <parameter>attributes</parameter> enthält.
     <parameter>name</parameter> enthält dabei den vollständigen 
     Pfadnamen des Postfachs, <parameter>delimiter</parameter> das 
     verwendete Trennzeichen zwischen Postfach-Ebenen, 
     und <parameter>attributes</parameter> besteht aus einer Bitmaske,
     die einzelne Eigenschaften des Postfachs beschreibt:
     <itemizedlist>
      <listitem>
       <simpara>
	LATT_NOINFERIORS - es existieren keine weiteren Postfächer
	unterhalb dieses Postfachs
       </simpara>
      </listitem>
     <listitem>
       <simpara>
	LATT_NOSELECT - Dieses "Postfach" ist nur ein Behälter für
	weitere Postfächer.
       </simpara>
       <simpara>
	Es kann selbst keine Nachrichten enthalten und somit auch
	nicht geöffnet werden.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	LATT_MARKED - Dieses Postfach wurde markiert (nur bei UW-IMAPD).
       </simpara>
      </listitem> 
      <listitem>
       <simpara> 
	LATT_UNMARKED - Dieses Postfach wurde nicht markiert (nur bei UW-IMAPD).
       </simpara>
      </listitem> 
     </itemizedlist>
    </para>
    <para>
     Namen von Postfächern, die Zeichen außerhalb des druckbaren
     ASCII-Bereiches enthalten, können mit Hilfe der Funktion
     <function>imap_utf7_decode</function> dekodiert werden.
    </para>
    <para>
     <parameter>ref</parameter> sollte normalerweise nur die
     Spezifikation des Servers in der in
     <function>imap_open</function> beschriebenen Form enthalten.
     Über <parameter>pat</parameter> kann ein Startpunkt innerhalb der
     Postfach-Hierachie vorgegeben werden. Wünschen Sie die Ausgabe
     aller Postfächer, so übergeben Sie als <parameter>pat</parameter>
     '*'.
    </para>
    <para>
     Die Zeichen '*' und '%' haben innerhalb von
     <parameter>pattern</parameter> eine besondere Bedeutung:
     <itemizedlist>
      <listitem>
       <simpara>
        '*' - entspricht beliebig vielen Zeichen (incl. des
        Trennzeichens zw. Postfach-Namen)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        '%' - entspricht beliebig vielen Zeichen innerhalb eines
        Postfach-Namens
       </simpara>
      </listitem>
     </itemizedlist>
     So liefert "*" alle verfügbaren Postfächer auf dem Server,
     "INBOX/*" dementsprechend alle persönlichen Postfächer des
     aktuellen Benutzers.  "%" dagegen liefert nur die
     Toplevel-Postfächer des Servers, "INBOX/%" dementsprechend nur
     die Toplevel-Postfächer des aktuellen Benutzers.  Ein '%' am Ende
     von <parameter>pattern</parameter> entspricht zusätzlich auch
     allen Zeichenfolgen, die mit dem Trennzeichen beginnen.
    </para>
    <para>
     <example>
      <title><function>Imap_getmailboxes</function> Beispiel</title>
      <programlisting role="php">
$mbox = imap_open ("{your.imap.host}", "username", "password", OP_HALFOPEN)
    || die ("can't connect: " . imap_last_error());
 
$list = imap_getmailboxes ($mbox, "{your.imap.host}", "*");
if (is_array ($list)) {
    reset ($list);
    while (list( $key, $val) = each ($list)) {
        print "($key) ";
        print imap_utf7_decode ($val->name) . ",";
        print "'" . $val->delimiter . "',";
        print $val->attributes . "&lt;br>\n";
    }
} else {
    print "imap_getmailboxes failed: " . imap_last_error() . "\n";
} 
imap_close ($mbox);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-listsubscribed">
   <refnamediv>
    <refname>imap_listsubscribed</refname>
    <refpurpose>
     Liefert eine Liste aller abbonierten Postfächer
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_listsubscribed</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>ref</parameter></paramdef>
      <paramdef>string <parameter>pattern</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion entspricht weitgehend
     <function>imap_listmailbox</function>, allerdings werden nur
     Postfächer zurückgegeben, die der aktuelle Benutzer auch
     abboniert hat.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-getsubscribed">
   <refnamediv>
    <refname>imap_getsubscribed</refname>
    <refpurpose>
     Liefert eine Auswahl aller abbonierten Postfächer
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_getsubscribed</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>ref</parameter></paramdef>
      <paramdef>string <parameter>pattern</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion entspricht weitgehend
     <function>imap_getmailboxes</function>, allerdings werden nur
     Postfächer zurückgegeben, die der aktuelle Benutzer auch
     abboniert hat.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-mail-copy">
   <refnamediv>
    <refname>imap_mail_copy</refname>
    <refpurpose>Kopiert Nachrichten in ein Postfach</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_mail_copy</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>msglist</parameter></paramdef>
      <paramdef>string <parameter>mbox</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     Diese Funktion kopiert die in <parameter>msglist</parameter>
     angegebenen Nachrichten in das Postfach <parameter>mbox</parameter>.
     <parameter>msglist</parameter> kann eine einzelne Nachrichtennummer
     oder Aufzählungen und Bereiche gemäß 
     <ulink url="&url.rfc;rfc2060.html">RFC2060</ulink> enthalten.
    </para>
    <para>
     Die Bitmaske <parameter>flags</parameter> kann aus den foldengen
     Werten zusammengesetzt werden.
     <itemizedlist>
      <listitem>
       <simpara>
	CP_UID - Die Nummern in <parameter>msglist</parameter>
	entsprechen den UIDs der gewünschten Nachrichten
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	CP_MOVE - Die ursprunglichen Nachrichten werden nach dem
	Kopieren gelöscht.  copying
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     Liefert true bei Erfolg und false bei Fehlern.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-mail-move">
   <refnamediv>
    <refname>imap_mail_move</refname>
    <refpurpose>
     Verschiebt Nachrichten in ein anderes Postfach
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_mail_move</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>msglist</parameter></paramdef>
      <paramdef>string <parameter>mbox</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     Diese Funktion verschiebt die in <parameter>msglist</parameter>
     angegebenen Nachrichten in das Postfach <parameter>mbox</parameter>.
     <parameter>msglist</parameter> kann eine einzelne Nachrichtennummer
     oder Aufzählungen und Bereiche gemäß 
     <ulink url="&url.rfc;rfc2060.html">RFC2060</ulink> enthalten.
    </para>
    <para>
     Die Bitmaske <parameter>flags</parameter> kann den foldengen
     Wert enthalten:
     <itemizedlist>
      <listitem>
       <simpara>
	CP_UID - Die Nummern in <parameter>msglist</parameter>
	entsprechen den UIDs der gewünschten Nachrichten
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     Liefert true bei Erfolg und false bei Fehlern.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-num-msg">
   <refnamediv>
    <refname>imap_num_msg</refname>
    <refpurpose>
     Liefert die Anzahl der Nachrichten im aktuellen Postfach
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_num_msg</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Liefert die Anzahl der Nachrichten im aktuellen Postfach
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-num-recent">
   <refnamediv>
    <refname>imap_num_recent</refname>
    <refpurpose>
     Liefert die Anzahl der neu hinzugekommenen Nachrichten 
     im aktuellen Postfach
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_num_recent</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Liefert die Anzahl der neu hinzugekommenen Nachrichten 
     im aktuellen Postfach
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-open">
   <refnamediv>
    <refname>imap_open</refname>
    <refpurpose>
     Öffnet eine Verbindung zu einem Postfach auf einem POP-, IMAP-
     oder NNTP-Server
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_open</function></funcdef>
      <paramdef>string <parameter>mailbox</parameter></paramdef>
      <paramdef>string <parameter>username</parameter></paramdef>
      <paramdef>string <parameter>password</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion liefert ein Verbindungs-Handle bzw. false bei
     evtl.  auftretenden Fehlern. Verbindungen können nicht nur zu
     IMAP-, sondern auch zu POP- oder NNTP-Servern aufgebaut werden,
     wobei dann allerdings nicht der gesamte Funktionsumfang zur
     Verfügung steht.  Liefert ein IMAP-Streamhandle oder false bei
     Fehlern.
    </para>
    <para> 
     Der Name eines Postfachs setzt sich zusammen aus der Bezeichnung
     des Servers und dem Pfad des Postfachs auf diesem Server. Der
     spezielle Name INBOX steht dabei als Synonym für das persönliche
     Postfach des jeweiligen Benutzers. Die Bezeichnung des Servers
     setzt sich zusammen aus dem eigentlichen Servernamen oder der
     entsprechenden IP-Adresse sowie das gewünschte Protokoll
     (getrennt durch '/') und optional der zu benutzende Port
     (getrennt durch ':'). Die gesamte Serverbezeichnung wird in '{'
     und '}' eingeschlossen und muß immer mit angegeben
     werden. Enthält der Name eines Postfachs Zeichen außerhalb des
     druckbaren ASCII-Bereiches wie z.B. Umlaute oder das 'ß', so muß
     er mit Hilfe der Funktion <function>imap_utf7_encode</function>
     codiert werden.
    </para>
    <para>
     Der optionale Parameter <parameter>flags</parameter> kann sich
     aus den folgenden Bitmasken zusammensetzen:
     <itemizedlist>
      <listitem>
       <simpara>
	OP_READONLY - Über diese Verbindung darf nur lesend
	zugegriffen werden
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	OP_ANONYMOUS - Bei NNTP-Verbindungen wird die Datei .newsrc
	nicht aktualisiert
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	OP_HALFOPEN - es wird eine IMAP- oder NNTP-Verbindung
	aufgebaut, aber noch kein Postfach ausgewählt
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	CL_EXPUNGE - beim Schließen der Verbindung werden alle zum
	Löschen vorgemerkte Nachrichten endgültig gelöscht (siehe auch
	<function>imap_delete</function> und
	<function>imap_expunge</function>)
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     Das folgende Beispiel stellt eine Verbindung zu einem 
     lokalen IMAP-Server (IMAP = Port 143) her:
     <informalexample>
      <programlisting role="php"> 
$mbox = imap_open ("{localhost:143}INBOX", "user_id", "password");
      </programlisting>
     </informalexample>
     Eine Verbindung zu einem lokalen POP3-Server (POP3 = Port 110) 
     erhalten sie mit:
     <informalexample>
      <programlisting role="php">
$mbox = imap_open ("{localhost/pop3:110}INBOX", "user_id", "password");
      </programlisting>
     </informalexample>
     Eine Verbindung zu einem lokalen News-Server (NNTP = Port 119)
     erhalten Sie mit:
     <informalexample>
      <programlisting role="php">
$nntp = imap_open ("{localhost/nntp:119}comp.test", "", "");
      </programlisting>
     </informalexample>
     Eine Verbindung zu einem nicht lokalen Server können Sie
     herstellen, indem Sie in den oben genannten Beispielen
     "localhost" durch den Namen oder die IP-Adresse des Servers
     ersetzen.
    </para>
    <para>
     <example>
      <title><function>Imap_open</function> Beispiel</title>
      <programlisting>
$mbox = imap_open ("{your.imap.host:143}", "username", "password");

echo "&lt;p>&lt;h1>Mailboxes&lt;/h1>\n";
$folders = imap_listmailbox ($mbox, "{your.imap.host:143}", "*");
if ($folders == false)
    echo "Call failed&lt;br>\n";
else
    while (list ($key, $val) = each ($folders))
        echo $val . "&lt;br>\n";

echo "&lt;p>&lt;h1>Headers in INBOX&lt;/h1>\n";
$headers = imap_headers ($mbox);
if ($headers == false)
    echo "Call failed&lt;br>\n";
else
    while (list ($key, $val) = each ($headers))
        echo $val . "&lt;br>n";

imap_close ($mbox);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-ping">
   <refnamediv>
    <refname>imap_ping</refname>
    <refpurpose>
     Prüft, ob die aktuelle Verbindung noch verfügbar ist
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_ping</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>  
     Liefert true, wenn die aktuelle Verbindung noch verfügbar ist,
     sonst false.
    </para>
    <para>
     Die <function>imap_ping</function> Funktion schickt ein
     Ping-Signal an den Mailserver und prüft so die Verfügbarkeit der
     Verbindung.  Auf diese Weise kann die Verbindung zu einem Server
     aufrechterhalten werden, der Verbindungen nach einer gewissen
     Zeit ohne Aktivität automatisch beendet (da PHP-Scripte
     i.A. nicht sehr lange laufen, kann ich mir kaum vorstellen, das
     jemand diese Funktion wirklich benötigt).
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-renamemailbox">
   <refnamediv>
    <refname>imap_renamemailbox</refname>
    <refpurpose>Ändert den Namen eines Postfachs</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_renamemailbox</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>old_mbox</parameter></paramdef>
      <paramdef>string <parameter>new_mbox</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     Die Funktion <function>imap_renamemailbox</function> ändert 
     den Namen eines Postfachs.
    </para>
    <para>
     Liefert true bei Erfolg und false bei Fehlern.
    </para>
    <para>
     Siehe auch <function>imap_createmailbox</function> und
     <function>imap_deletemailbox</function> sowie
     <function>imap_open</function> für das Format der Parameter
     <parameter>old_mbox</parameter> und
     <parameter>new_mbox</parameter>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-reopen">
   <refnamediv>
    <refname>imap_reopen</refname>
    <refpurpose>Wechselt das aktuelle Postfach der Verbindung</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_reopen</function></funcdef>
      <paramdef>string <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>mailbox</parameter></paramdef>
      <paramdef>string
       <parameter><optional>flags</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>  
     Mit Hilfe dieser Funktion kann auf IMAP- und NNTP-Servern ein
     anderes Postfach als das bisher aktuelle ausgewählt werden.
    </para>
    <para>
     Der optionale Parameter <parameter>flags</parameter> kann sich
     aus den folgenden Bitmasken zusammensetzen:
     <itemizedlist>
      <listitem>
       <simpara>
	OP_READONLY - Auf das Postfach soll nur lesend zugegriffen
	werden
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	OP_ANONYMOUS - Bei NNTP-Verbindungen wird die persönliche
	.newsrc Datei nicht aktualisiert
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	OP_HALFOPEN - bei IMAP- oder NNTP-Servern wird in den
	allgemeinen Verbindungsstatus ohne aktuelles Postfach
	zurückgeschaltet
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	CL_EXPUNGE - beim Schließen der Verbindung werden alle zum
	Löschen vorgemerkte Nachrichten endgültig gelöscht (siehe auch
	<function>imap_delete</function> und
	<function>imap_expunge</function>)
       </simpara>
      </listitem>
     </itemizedlist>
    </para>  
    <para>
     Liefert true bei Erfolg und false bei Fehlern.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-subscribe">
   <refnamediv>
    <refname>imap_subscribe</refname>
    <refpurpose>Abbonieren eines Postfachs</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_subscribe</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>mbox</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>  
     Abbonieren eines Postfachs.
    </para>
    <para>
     Liefert true bei Erfolg und false bei Fehlern.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-undelete">
   <refnamediv>
    <refname>imap_undelete</refname> 
    <refpurpose>
     Nimmt eine bereits gesetzte Löschmarkierung einer Nachricht
     zurück
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_undelete</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msg_number</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     Diese Funktion nimmt eine evtl. durch die Funktionen 
     <function>imap_delete</function> oder 
     <function>imap_mail_move</function> gesetzte Löschmarkierung
     für die durch <parameter>msg_number</parameter> spezifizierte
     Nachricht zurück.
    </para>
    <para>
     Liefert true bei Erfolg und false bei Fehlern.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-unsubscribe">
   <refnamediv>
    <refname>imap_unsubscribe</refname>
    <refpurpose>Abbonement eines Postfachs beenden</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_unsubscribe</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>mbox</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>  
     Abbonement eines Postfachs beenden.
    </para>
    <para>
     Liefert true bei Erfolg und false bei Fehlern.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-qprint">
   <refnamediv>
    <refname>imap_qprint</refname>
    <refpurpose>
     Konvertiert einen quoted-printable kodierten String 
     in einen 8bit-String
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_qprint</function></funcdef>
      <paramdef>string <parameter>string</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>  
     Konvertiert einen quoted-printable kodierten String 
     (gemäß <ulink url="&url.rfc;rfc2045.html">RFC2045</ulink>, 
     Abschnitt 6.7) in einen 8bit-String.
    </para>
    <para>
     Siehe auch <function>imap_8bit</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-8bit">
   <refnamediv>
    <refname>imap_8bit</refname>
    <refpurpose>
     Konvertiert einen String in einen quoted-printable kodierten String.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_8bit</function></funcdef>
      <paramdef>string <parameter>string</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>  
     Konvertiert einen String in einen quoted-printable kodierten String 
     (gemäß <ulink url="&url.rfc;rfc2045.html">RFC2045</ulink>, 
     Abschnitt 6.7).
    </para>
    <para>
     Siehe auch <function>imap_qprint</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-binary">
   <refnamediv>
    <refname>imap_binary</refname>
    <refpurpose>
     Konvertiert 8Bit-Text in einen BASE64-kodierten String.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_binary</function></funcdef>
      <paramdef>string <parameter>string</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>  
     Konvertiert 8Bit-Text in einen BASE64-kodierten String 
     (gemäß <ulink url="&url.rfc;rfc2045.html">RFC2045</ulink>, 
     Abschnitt 6.8).
    </para>
    <para>
     Siehe auch <function>imap_base64</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-scanmailbox">
   <refnamediv>
    <refname>imap_scanmailbox</refname>
    <refpurpose>
     Druchsucht Postfächer nach einen String
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_scanmailbox</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>ref</parameter></paramdef>
      <paramdef>string <parameter>pat</parameter></paramdef>
      <paramdef>string <parameter>content</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion arbeitet ähnlich wie
     <function>imap_listmailbox</function>.  Sie giebt aber nur die
     Namen der Postfächer zurück, in denen irgendwo der Text
     <parameter>content</parameter> vorkommt.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-mailboxmsginfo">
   <refnamediv>
    <refname>imap_mailboxmsginfo</refname>
    <refpurpose>
     Liefert Informationen über das aktuelle Postfach
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>object <function>imap_mailboxmsginfo</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion liefert dieselben Informationen wie 
     <function>imap_status</function> sowie zusätzlich die Größe
     des Postfachs in Bytes. Diese wird aus der Summe der Größe der
     einzelnen Nachrichten gebildet, deshalb benötigt diese Funktion
     mehr Zeit zur Ausführung als <function>imap_status</function>.
    </para> 
    <para>
     <table>
       <title>Felder des Rückgabe-Objekts</title>
       <tgroup cols="2">
        <tbody>
        <row>
	 <entry>Date   </entry>
	 <entry>Datum der letzten Änderung    </entry>
	</row>
        <row>
	 <entry>Driver </entry>
	 <entry>Driver                        </entry>
	</row>
        <row>
	 <entry>Mailbox</entry>
	 <entry>Name des Postfachs            </entry>
	</row>
        <row>
	 <entry>Nmsgs  </entry>
	 <entry>Anzahl der Nachrichten        </entry>
	</row>
        <row>
	 <entry>Recent </entry>
	 <entry>Anzahl neuer Nachrichten      </entry>
	</row>
        <row>
	 <entry>Unread </entry>
	 <entry>Anzahl ungelesener Nachrichten</entry>
	</row>
        <row>
	 <entry>Size   </entry>
	 <entry>Größe des Postfachs in Byte   </entry>
	</row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     <example>
      <title><function>imap_mailboxmsginfo</function> Beispiel</title>
      <programlisting role="php">
$mbox = imap_open ("{your.imap.host}INBOX", "username", "password")
    || die ("can't connect: " . imap_last_error());
 
$check = imap_mailboxmsginfo ($mbox);
 
if ($check) {
    print "Date: "     . $check->Date    . "&lt;br>\n";
    print "Driver: "   . $check->Driver  . "&lt;br>\n";
    print "Mailbox: "  . $check->Mailbox . "&lt;br>\n";
    print "Messages: " . $check->Nmsgs   . "&lt;br>\n" ;
    print "Recent: "   . $check->Recent  . "&lt;br>\n";
    print "Size: "     . $check->Size    . "&lt;br>\n";
} else {
    print "imap_check() failed: " . imap_lasterror() . "&lt;br>\n";
} 
imap_close ($mbox);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-rfc822-write-address">
   <refnamediv>
    <refname>imap_rfc822_write_address</refname>
    <refpurpose>
     Bildet aus Realnamen, Postfach und Server eine korekt 
     formatierte Mail-Adresse
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string 
       <function>imap_rfc822_write_address</function>
      </funcdef>
      <paramdef>string <parameter>mailbox</parameter></paramdef>
      <paramdef>string <parameter>host</parameter></paramdef>
      <paramdef>string <parameter>personal</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Bildet aus Realnamen, Postfach und Server eine korekt 
     formatierte Mail-Adresse gemäß 
     <ulink url="&url.rfc;rfc822.html">RFC822</ulink>.
    </para>
    <para>
     <example>
      <title>
       <function>Imap_rfc822_write_address</function> Beispiel
      </title>
      <programlisting role="php">
print imap_rfc822_write_address ("hartmut", "cvs.php.net", 
                                 "Hartmut Holzgraefe);      
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-rfc822-parse-adrlist">
   <refnamediv>
    <refname>imap_rfc822_parse_adrlist</refname>
    <refpurpose>Parsen eines Adress-Strings</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array
       <function>imap_rfc822_parse_adrlist</function>
      </funcdef>
      <paramdef>string <parameter>address</parameter></paramdef>
      <paramdef>string <parameter>default_host</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion zerlegt einen Adress-String gemäß 
     <ulink url="&url.rfc;rfc822.html">RFC822</ulink> und liefert 
     ein Array von Objekten mit einem Eintrag je erkannter Adresse.
     Die Address-Objekte bestehen dabei jeweils aus den folgenden
     vier String-Elementen:
    </para>
    <para>
     <itemizedlist>
      <listitem>
       <simpara>
        mailbox - Name des Postfachs (Username)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        host - Hostname
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        personal - Realer Name des Empfängers
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        adl - at domain source route
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     <example>
      <title>
       <function>Imap_rfc822_parse_adrlist</function> Beispiel
      </title>
      <programlisting role="php">
$address_string = "Hartmut Holzgraefe &lt;hartmut@php.net>, 
                   postmaster@somedomain.net, root";
$address_array  = imap_rfc822_parse_adrlist ($address_string, 
                                             "somedomain.net");
if (! is_array ($address_array)) die ("somethings wrong\n");
 
reset ($address_array);
while (list( $key, $val) = each ($address_array)) {
    print "mailbox : " . $val->mailbox  . "&lt;br>\n";
    print "host    : " . $val->host     . "&lt;br>\n";
    print "personal: " . $val->personal . "&lt;br>\n";
    print "adl     : " . $val->adl      . "&lt;p>\n";
} 
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-setflag-full">
   <refnamediv>
    <refname>imap_setflag_full</refname>
    <refpurpose>Setzt Flags einer Nachricht</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_setflag_full</function></funcdef>
      <paramdef>int <parameter>stream</parameter></paramdef>
      <paramdef>string <parameter>sequence</parameter></paramdef>
      <paramdef>string <parameter>flag</parameter></paramdef>
      <paramdef>string <parameter>options</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion setzt die übergebenen Flags für eine oder mehrere
     Nachrichten.
    </para>
    <para>
     Mögliche Flags sind "\\Seen", "\\Answered", "\\Flagged",
     "\\Deleted", "\\Draft", und "\\Recent" (siehe auch <ulink
     url="&url.rfc;rfc2060.html">RFC2060</ulink>)
    </para>
    <para>
     Enthält <parameter>options</parameter> den Wert ST_UID, so werden
     die übergebenen Nachrichtennummern als UIDs anstelle von Indizes
     interpretiert.  
    </para>
    <para>
     <example>
      <title><function>imap_setflag_full</function> Beispiel</title>
      <programlisting role="php">
$mbox = imap_open ("{your.imap.host:143}", "username", "password")
     || die ("can't connect: " . imap_last_error());
 
$status = imap_setflag_full ($mbox, "2,5", "\\Seen \\Flagged");
if (!$status) echo imap_last_error();
 
imap_close ($mbox);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-clearflag-full">
   <refnamediv>
    <refname>imap_clearflag_full</refname>
    <refpurpose>Löscht Flags einer Nachricht</refpurpose>
    </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string 
       <function>imap_clearflag_full</function>
      </funcdef>
      <paramdef>int <parameter>stream</parameter></paramdef>
      <paramdef>string <parameter>sequence</parameter></paramdef>
      <paramdef>string <parameter>flag</parameter></paramdef>
      <paramdef>string <parameter>options</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion löscht die übergebenen Flags für eine oder mehrere
     Nachrichten.
    </para>
    <para>
     Mögliche Flags sind "\\Seen", "\\Answered", "\\Flagged",
     "\\Deleted", "\\Draft", und "\\Recent" ( siehe auch <ulink
     url="&url.rfc;rfc2060.html">RFC2060</ulink>)
    </para>
    <para>
     Enthält <parameter>options</parameter> den Wert ST_UID, so werden
     die übergebenen Nachrichtennummern als UIDs anstelle von Indizes
     interpretiert.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-sort">
   <refnamediv>
    <refname>imap_sort</refname>
    <refpurpose>Sortiert Nachrichten eines Postfachs</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_sort</function></funcdef>
      <paramdef>int <parameter>stream</parameter></paramdef>
      <paramdef>int <parameter>criteria</parameter></paramdef>
      <paramdef>int <parameter>reverse</parameter></paramdef>
      <paramdef>int <parameter>options</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion liefert die Indizes der Nachrichten eines
     Postfachs als sortiertes Array zurück. Als Sortier-Kriterium
     kann im Parameter <parameter>criteria</parameter> genau einer
     der folgenden Werte angegeben werden
     <itemizedlist>
      <listitem><simpara>
       SORTDATE        Versanddatum der Nachricht
      </simpara></listitem>
      <listitem><simpara>
       SORTARRIVAL     Empfangsdatum der Nachricht
      </simpara></listitem>
      <listitem><simpara>
       SORTFROM        Benutzername des ersten From: Eintrags
      </simpara></listitem>
      <listitem><simpara>
       SORTSUBJECT     Betreff der Nachricht
      </simpara></listitem>
      <listitem><simpara>
       SORTTO          Benutzername des ersten To: Eintrags
      </simpara></listitem>
      <listitem><simpara>
       SORTCC          Benutzername des ersten CC: Eintrags
      </simpara></listitem>
      <listitem><simpara>
       SORTSIZE        Größe der Nachricht in Bytes
      </simpara></listitem>
     </itemizedlist>
    </para>
    <para>
     Ist <parameter>reverse</parameter> ungleich 0, so werden
     die Nachrichten in umgekehrter Reihenfolge übergeben.
    </para>
    <para>
     Die Bitmaske <parameter>options</parameter> kann aus folgenden
     werten zusammengesetzt werden:
     <itemizedlist>
      <listitem>
       <simpara>
        SE_UID          Es werden UIDs anstelle von Indizes zurückgegeben
      </simpara>
      </listitem>
      <listitem>
       <simpara>
        SE_NOPREFETCH   Es werden keine Nachrichten im Cache gehalten
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-fetchheader">
   <refnamediv>
    <refname>imap_fetchheader</refname>
    <refpurpose>Liefert den Kopf einer Nachricht</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string<function>imap_fetchheader</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msgno</parameter></paramdef>
      <paramdef>int <parameter>flags</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion liefert den vollständigen, ungefilterten und gemäß
     <ulink url="&url.rfc;rfc822.html">RFC 822</ulink> formatierten
     Kopf einer Nachricht als String zurück.
    </para>
    <para>
     Die Bitmaske <parameter>flags</parameter> kann aus folgenden
     Werten zusammengesetzt werden:
     <itemizedlist>
      <listitem>
       <simpara>
        FT_UID          <parameter>msgno</parameter> enthält eine UID 
      </simpara>
      </listitem>
      <listitem>
       <simpara>
        FT_INTERNAL     Der Kopf wird im "internen" Format, d.h.
                        ohne jegliche Konvertierung von Zeilenenden
                        zurückgegeben
      </simpara>
      </listitem>
      <listitem>
       <simpara>
        FT_PREFETCHTEXT Der Körper der Nachricht wird ebenfalls angefordert,
                        hierdurch wird ein zus. Zugriff vermieden, wenn z.B.
                        für eine Save-Operation der gesamte Text einer 
                        Nachricht benötigt wird
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-uid">
   <refnamediv>
    <refname>imap_uid</refname>
    <refpurpose>
     Liefert die UID zu einem gegeben Nachrichten-Index
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_uid</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>msgno</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion ermittelt die UID zu einem gegebenen 
     Nachrichten-Index. Während die Nachrichten-Indices einfach
     von eins an aufsteigend durchnummeriert sind und sich z.B.
     bei Löschoperationen ändern können, ist die UID einer Nachricht
     innerhalb eines Postfachs unveränderbar eindeutig.
     ( Siehe auch <function>imap_msgno</function>).
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-msgno">
   <refnamediv>
    <refname>imap_msgno</refname>
    <refpurpose>
     Liefert den aktuellen Nachrichten-Index zu einer UID
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imap_msgno</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>int <parameter>uid</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion liefert den aktuellen Index einer Nachricht
     innerhalb eines Postfachs aus der eindeutigen UID. Sie ist somit
     die Umkehrung der Funktion <function>imap_uid</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-search">
   <refnamediv>
    <refname>imap_search</refname>
    <refpurpose>
     Sucht Nachrichten, die den übergebenen Suchkriterien entsprechen
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_search</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>criteria</parameter></paramdef>
      <paramdef>int <parameter>flags</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion durchsucht die Nachrichten des aktuellen Postfachs
     und liefert ein Array mit den Nummern der Nachrichten, die mit den
     angegebenen Kriterien übereinstimmen. 
     Der Parameter <parameter>criteria</parameter> enthält einen String, 
     der sich aus den folgenden Suchbegriffen zusammensetzen kann 
     <itemizedlist>  
      <listitem>
       <simpara>
	ALL - liefert alle Nachrichten, die den restlichen Kriterien
	entsprechen
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	ANSWERED - das \\ANSWERED Flag der Nachricht ist gesetzt
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	BCC "string" - Das Bcc: Feld der Nachricht enthält "string" 
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	BEFORE "date" - Das Date: Feld der Nachricht enthält ein
	Datum, das vor dem in "date" angegebenen liegt
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	BODY "string" - Im Inhalt der Nachricht ist "string" enthalten 
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	CC "string" - Das Cc: Feld der Nachricht enthält "string" 
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	DELETED - Die Nachricht ist zum Löschen vorgemerkt
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	FLAGGED - Das \\FLAGGED (wichtig bzw. dringend) Flag der
	Nachricht ist gesetzt
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	FROM "string" - Das From: Feld der Nachricht enthält "string"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	KEYWORD "string" - Das Feld Keyword: enthält "string"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	NEW - die Nachricht ist neu
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	OLD - die Nachricht ist nicht neu
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	ON "date" - Das Datum in Date: entspricht "date"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	RECENT - Das \\RECENT Flag ist gesetzt
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	SEEN - Das \\SEEN Flag ist gesetzt, die Nachricht wurde
	bereits einmal abgerufen
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	SINCE "date" - Das Datum "date" liegt vor dem im Date: Feld
	der Nachricht
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	SUBJECT "string" - "string" ist Teil des Betreffs der
	Nachricht
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	TEXT "string" - "string" ist Teil der Nachricht (Kopf oder
	Inhalt)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	TO "string" - Das To: Feld der Nachricht enthält "string"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	UNANSWERED - Die Nachricht wurde nicht beantwortet, das
	\\Answered Flag ist nicht gesetzt
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	UNDELETED - Die Nachricht ist nicht zum Löschen vorgemerkt
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	UNFLAGGED - Die Nachricht ist nicht als 'wichtig' markiert
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	UNKEYWORD "string" - "string" ist nicht Schlüsselwort der
	Nachricht
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	UNSEEN - Die Nachricht wurde bisher nicht gelesen
       </simpara>
      </listitem>
     </itemizedlist>
     Argumente, die Leerzeichen enthalten, müssen dabei in
     Anführungszeichen eingebettet werden.
    </para>
    <para>
     Um zum Beispiel alle unbeantworteten Nachrichten von Mama zu
     finden übergeben Sie als <parameter>criteria</parameter>:
     "UNANSWERED FROM Mama".  Die Suche scheint nicht zwischen Groß-
     und Kleinschreibung zu unterscheiden.  Die Liste der Suchbegriffe
     entstand nach Inspektion der UW c-client Sourcen und ist
     vermutlich nicht vollständig (siehe auch <ulink
     url="&url.rfc;rfc2060.html">RFC 2060</ulink>, Abschnitt 6.4.4).
    </para>
    <para>
     Enthält der optionale Parameter <parameter>flags</parameter> den
     Wert SE_UID, so werden UIDs anstelle von laufenden
     Nachrichtennummern zurückgegeben.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-last-error">
   <refnamediv>
    <refname>imap_last_error</refname>
    <refpurpose>
     Diese Funktion liefert die zuletzt während dieses Seitenzugriffs 
     aufgetretene Fehlermeldung (falls vorhanden)
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_last_error</function></funcdef>
      <paramdef>void </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion liefert den vollständigen Text der zuletzt
     aufgetretenen Fehlermeldung dieses Requests.  Der Zustand des
     Fehlerstacks wird durch diese Funktion nicht verändert, weitere
     Aufrufe von <function>imap_last_error</function> liefern somit
     weiter dasselbe Ergebis, solange keine weiteren Fehler
     aufgetreten sind.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-errors">
   <refnamediv>
    <refname>imap_errors</refname>
    <refpurpose>
     Diese Funktion liefert alle bisher aufgetretenen Fehlermeldungen
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_errors</function></funcdef>
      <paramdef>void </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion liefert in Form eines String-Arrays alle seit 
     Beginn des Requests bzw. seit dem letzten Aufruf von
     <function>imap_errors</function> aufgetretenen Fehlermeldung.
     Der Fehler-Stack wird dabei gelöscht, so daß folgende Aufrufe
     von <function>imap_errors</function> bzw.  
     <function>imap_last_errors</function> bis zum mächsten 
     aufgetretenen Fehler kein Ergebnis liefern.
    </para> 
   </refsect1>
  </refentry>

  <refentry id="function.imap-alerts">
   <refnamediv>
    <refname>imap_alerts</refname>
    <refpurpose>
     Diese Funktion liefert alle alert-Meldungen zurück, die während
     der Ausführung dieses Requests bzw. seit dem letzten Reset des
     alert-Stacks aufgetreten sind.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_alerts</function></funcdef>
      <paramdef>void </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion liefert in Form eines String-Arrays alle IMAP
     alert-Medlungen, die seit Beginn dieses Requests bzw. dem letzten
     Aufruf der Funktion aufgetreten sind. Durch den Aufruf der
     Funktion wird der alert-Stack gelöscht, so daß weitere Aufrufe
     zunächst bis zum Auftreten eines neuen alerts kein Ergebnis
     liefern.
    </para>
    <para>
     Die IMAP-Spezifikationen verlangen, daß diese Meldungen an den 
     Benutzer weitergegeben werden.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-status">
   <refnamediv>
    <refname>imap_status</refname>
    <refpurpose>
     Liefert ausgewählte Statusinformationen zum angegebenen Postfach
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>object <function>imap_status</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>mailbox</parameter></paramdef>
      <paramdef>int <parameter>options</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion liefert Statusinformationen zum mit 
     <parameter>mailbox</parameter> angegebenen Postfach.
     Im der Bitmaske <parameter>options</parameter> können dabei
     folgende Funktionen ausgewählt werden, die den Inhalt des
     zurückgegebenen Objekts beeinflussen:
     <itemizedlist>
      <listitem>
       <simpara>
	SA_MESSAGES - das Feld messages wird mit der Anzahl der
	enthaltenen Nachrichten gefüllt
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	SA_RECENT - das Feld recent wird mit der Anzahl der neuen
	Nachrichten gefüllt
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	SA_UNSEEN - das Feld unseen wird mit der Anzahl der noch nicht
	abgerufenen Nachrichten gefüllt
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	SA_UIDNEXT - das Feld uidnext wird mit der UID gefüllt, die
	die nächste in diesem Postfach abgelegte Nachricht erhalten
	wird
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	SA_UIDVALIDITY - das Feld uidvalidity wird mit einer
	Konstanten gefüllt, die sich immer dann verändern wird, wenn
	die UIDs der Nachrichten im Postfach sich vermutlich verändert
	haben
       </simpara>
      </listitem>
      <listitem>
       <simpara>
	SA_ALL - es werden alle beschriebenen Felder gefüllt
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     Status->flags wird ebenfalls gesetzt und enthält eine Bitmaske
     aus den oben genannten Werten, die die tatsächlich
     zurückgegebenen Informationen beschreibt.
    </para>
    <para>
     <example>
      <title><function>Imap_status</function> Beispiel</title>
      <programlisting role="php">
$mbox = imap_open ("{your.imap.host}", "username", "password", OP_HALFOPEN)
      || die ("can't connect: " . imap_last_error());
 
$status = imap_status ($mbox, "{your.imap.host}INBOX", SA_ALL);
if($status) {
    print ("Messages:    " . $status->messages   ) . "&lt;br>\n";
    print ("Recent:      " . $status->recent     ) . "&lt;br>\n";
    print ("Unseen:      " . $status->unseen     ) . "&lt;br>\n";
    print ("UIDnext:     " . $status->uidnext    ) . "&lt;br>\n";
    print ("UIDvalidity: " . $status->uidvalidity) . "&lt;br>\n"; 
} else {
    print "imap_status failed: " . imap_lasterror() . "\n";
} 
imap_close ($mbox);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-utf7-decode">
   <refnamediv>
    <refname>imap_utf7_decode</refname>
    <refpurpose>
     Dekodiert einem String im modifizierten UTF-7 Format.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_utf7_decode</function></funcdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>  
     Dekodiert den String <parameter>text</parameter> aus dem 
     modifizierten UTF-7 Format in 8Bit-Text.
    </para>
    <para>
     Liefert den dekodierten Text oder false, wenn die Eingabe nicht
     gemäß modifiziertem UTF-7 formatiert war. Diese Funktion wird
     benötigt, um Postfachnamen zu decodieren, die internationale
     Sonderzeichen, wie z.B. unsere Umlaute, enthalten.
    </para>
    <para>
     (siehe <ulink url="&url.rfc;rfc2152.html">RFC2152</ulink> 
     für UTF-7 und <ulink url="&url.rfc;rfc2060.html">RFC2060</ulink>, 
     Abschnitt 5.1.3 für modifiziertes UTF-7)
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-utf7-encode">
   <refnamediv>
    <refname>imap_utf7_encode</refname>
    <refpurpose>
      Kodiert Text im modifizieren UTF-7 Format
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_utf7_encode</function></funcdef>
      <paramdef>string <parameter>data</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Konvertiert den in <parameter>data</parameter> übergebenen Text
     in das modifizierte UTF-7 Format. Diese Funktion wird benötigt,
     um Postfachnamen darzustellen, die internationale Sonderzeichen,
     wie z.B. unsere Umlaute, enthalten.
    </para>
    <para>
     (siehe <ulink url="&url.rfc;rfc2152.html">RFC2152</ulink> 
     für UTF-7 und <ulink url="&url.rfc;rfc2060.html">RFC2060</ulink>, 
     Abschnitt 5.1.3 für modifiziertes UTF-7)
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-utf8">
   <refnamediv>
    <refname>imap_utf8</refname>
    <refpurpose>
      Konvertiert Text zu UTF8
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_utf8</function></funcdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Konvertiert den übergebenen String in das UTF8-Format
     gemäß <ulink url="&url.rfc;rfc2044.html">RFC2044</ulink>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-fetch-overview">
   <refnamediv>
    <refname>imap_fetch_overview</refname>
    <refpurpose>
     Liefert einen Auszug aus den Header-Feldern von Nachrichten
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_fetch_overview</function></funcdef>
      <paramdef>int <parameter>imap_stream</parameter></paramdef>
      <paramdef>string <parameter>sequence</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>flags</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion liefert ausgewählte Headerfelder der in
     <parameter>sequence</parameter> übergebenen Nachrichten und
     liefert sie in einem Array mit je einem Objekt pro Nachricht
     zurück. <parameter>sequence</parameter> enthält eine Sequenz von
     Nachrichten-Indizes oder, bei gesetztem FT_UID in
     <parameter>flags</parameter>, von UIDs. Die einzelnen Objekte des
     zurückgegeben Arrays enthalten dabei folgende Informationen:
     <itemizedlist>
      <listitem>
       <simpara>
        subject - Betreff
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        from - Absender
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        date - Sendedatum
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        message_id - Message-ID 
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        references - bezieht sich auf Message-ID
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        size - Größe in Byte
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        uid - UID der Nachricht im Postfach
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        msgno - Index der Nachricht im Postfach
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        recent - Flag gesetzt 
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        flagged - Flag gesetzt
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        answered - Flag gesetzt
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        deleted - Flag gesetzt
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        seen - Flag gesetzt
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        draft - Flag gesetzt
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     <example>
      <title><function>Imap_fetch_overview</function> Beispiel</title>
      <programlisting role="php">
$mbox = imap_open ("{your.imap.host:143}", "username", "password")
    || die ("can't connect: " . imap_last_error());
 
$overview = imap_fetch_overview ($mbox, "2,4:6", 0);
 
if (is_array ($overview )) {
    reset ($overview);
    while (list ($key, $val) = each ($overview)) {
        print $val->msgno
            . " - " . $val->date
            . " - " . $val->subject
            . "\n";
    }
}
 
imap_close ($mbox);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-mime-header-decode">
   <refnamediv>
    <refname>imap_mime_header_decode</refname>
    <refpurpose>Decode MIME header elements</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imap_header_decode</function></funcdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
		 <function>imap_mime_header_decode</function> decodiert MIME Headerfelder, 
     die mehr als nur reinen ASCII-Text enthalten und gemäß 
     <ulink url="&url.rfc;rfc2047.html">RFC2047</ulink> codiert wurden.
		 Die decodierten Teilstücke werden in einem Array von Objekten zurückgegeben, 
     wobei jedes Objekt die Felder "text" für den decodierten Teiltext und "charset"
     für den zugehörigen Zeichensatz enthält. Nichtcodierte Teile des Headerfeldes
     werden dabei durch den Wert "default" beschrieben.
    </para>
    <para>
		 Im folgenden Beispiel besteht das Headerfeld aus zwei Teilstücken, 
     wobei das erste nach ISO-8859-1 codiert ist:
    </para>
    <para>
     <example>
      <title><function>imap_mime_header_decode</function> example</title>
      <programlisting role="php">
$text="=?ISO-8859-1?Q?Keld_J=F8rn_Simonsen?= &lt;keld@dkuug.dk>";

$elements=imap_mime_header_decode($text);
for($i=0;$i&lt;count($elements);$i++) {
       echo "Charset: {$elements[$i]->charset}\n";
       echo "Text: {$elements[$i]->text}\n\n";
}

      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>


  <refentry id="function.imap-mail-compose">
   <refnamediv>
    <refname>imap_mail_compose</refname>
    <refpurpose>
     Erzeugt eine MIME-Nachricht aus gegebenen Header- und Body-Teilen
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_mail_compose</function></funcdef>
      <paramdef>array <parameter>envelope</parameter></paramdef>
      <paramdef>array <parameter>body</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
<!--
envelope
 remail
 return_path
 date
 from
 reply_to
 to
 cc
 bcc
 message_id
body
 type
 encoding
 subtype
 id
 contents.data
 lines
 bytes
 md5
-->
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imap-mail">
   <refnamediv>
    <refname>imap_mail</refname>
    <refpurpose>
     Versendet eine Email
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>imap_mail</function></funcdef>
      <paramdef>string <parameter>to</parameter></paramdef>
      <paramdef>string <parameter>subject</parameter></paramdef>
      <paramdef>string <parameter>message</parameter></paramdef>
      <paramdef>string 
       <parameter><optional>additional_headers</optional></parameter>
      </paramdef>
      <paramdef>string 
       <parameter><optional>cc</optional></parameter>
      </paramdef>
      <paramdef>string 
       <parameter><optional>bcc</optional></parameter>
      </paramdef>
      <paramdef>string 
       <parameter><optional>rpath</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     This function is currently not available for PHP4 on WIN32.  
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
