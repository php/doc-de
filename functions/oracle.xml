<?xml version="1.0" encoding="iso-8859-1"?>
 <reference id="ref.oracle">
  <title>Oracle Funktionen</title>
  <titleabbrev>Oracle</titleabbrev>

  <refentry id="function.ora-bind">
   <refnamediv>
    <refname>Ora_Bind</refname>
    <refpurpose>
     Bindet eine PHP-Variable an einen Oracle-Parameter
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>

    <methodsynopsis>
     <type>int</type><methodname>ora_bind</methodname>
     <methodparam>
      <type>int</type><parameter>cursor</parameter>
     </methodparam>
     <methodparam>
      <type>string</type><parameter>PHP-Variablenname</parameter>
     </methodparam>
     <methodparam>
      <type>string</type><parameter>SQL-Parametername</parameter>
     </methodparam>
     <methodparam>
      <type>int</type><parameter>Länge</parameter>
     </methodparam>
     <methodparam choice="opt">
      <type>int</type><parameter>Typ</parameter>
     </methodparam>
    </methodsynopsis>

    <para>
     Gibt nach erfolgter Bindung &true;, andernfalls &false; zurück.
     Einzelheiten über den Fehler bekommen Sie mit den Funktionen
     <function>ora_error</function> und
     <function>ora_errorcode</function>.
    </para>
    <para>
     Diese Funktion bindet die genannte PHP-Variable an einen
     SQL-Parameter. Der SQL-Parameter muss von der Form ":name" sein.
     Mit dem optionalen Parameter <parameter>Typ</parameter> können
     sie definieren, ob der SQL-Parameter ein in/out- (0,
     Grundeinstellung), in- (1) oder out- (2) Parameter ist. Ab PHP
     3.0.1 können Sie statt der Zahlen die Konstanten ORA-BIND_INOUT,
     ORA_BIND_IN und ORA_BIND_OUT verwenden.
    </para>
    <para>
     <function>ora_bind</function> muss nach
     <function>ora_parse</function> und vor
     <function>ora_exec</function> aufgerufen werden. Die Eingabewerte
     können durch Zuweisung an die gebundenen PHP-Variablen angegeben
     werden. Nach dem Aufruf von <function>ora_exec</function>
     enthalten die gebunden PHP-Variablen die Ausgabewerte, falls
     diese verfügbar sind.
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
ora_parse($curs, "declare tmp INTEGER; begin tmp := :in; :out := tmp; :x := 7.77; end;");
ora_bind($curs, "ergebnis", ":x", $len, 2);
ora_bind($curs, "eingabe", ":in", 5, 1);
ora_bind($curs, "ausgabe", ":out", 5, 2);
$eingabe = 765;
ora_exec($curs);
echo "Ergebnis: $ergebnis<BR>Ausgabe: $ausgabe<BR>Eingabe: $eingabe";
?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-close">
   <refnamediv>
    <refname>Ora_Close</refname>
    <refpurpose>Schließt einen Oracle-Cursor</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>

    <methodsynopsis>
     <type>int</type><methodname>ora_close</methodname>
     <methodparam>
      <type>int</type><parameter>Cursor</parameter>
     </methodparam>
    </methodsynopsis>

    <para>
     Gibt nach erfolgtem Schließen &true;, andernfalls &false; zurück.
     Einzelheiten über den Fehler bekommen Sie mit den Funktionen
     <function>ora_error</function> und
     <function>ora_errorcode</function>.
    </para>
    <para>
     Diese Funktion schließt den mittels <function>ora_open</function>
     geöffneten Daten-Cursor.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-columnname">
   <refnamediv>
    <refname>Ora_ColumnName</refname>
    <refpurpose>
     Liefert den Namen eines Oracle-Ergebnisfeldes
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>

    <methodsynopsis>
     <type>string</type><methodname>Ora_ColumnName</methodname>
     <methodparam>
      <type>int</type><parameter>Cursor</parameter>
     </methodparam>
     <methodparam>
      <type>int</type><parameter>Feld</parameter>
     </methodparam>
    </methodsynopsis>

    <para>
     Gibt den Namen des Feldes <parameter>Feld</parameter> des Cursors
     <parameter>Cursor</parameter> zurück. Der zurückgegebene Name ist
     komplett in Großbuchstaben.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-columnsize">
   <refnamediv>
    <refname>Ora_ColumnSize</refname>
    <refpurpose>
     Liefert die Größe eines Oracle-Ergebnisfeldes
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>

    <methodsynopsis>
     <type>int</type><methodname>Ora_ColumnSize</methodname>
     <methodparam>
      <type>int</type><parameter>Cursor</parameter>
     </methodparam>
     <methodparam>
      <type>int</type><parameter>Feld</parameter>
     </methodparam>
    </methodsynopsis>

    <para>
     Gibt die Größe des Feldes <parameter>Feld</parameter> des Cursors
     <parameter>Cursor</parameter> zurück.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-columntype">
   <refnamediv>
    <refname>Ora_ColumnType</refname>
    <refpurpose>
     Liefert den Typ eines Oracle-Ergebnisfeldes
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>

    <methodsynopsis>
     <type>string</type><methodname>Ora_ColumnType</methodname>
     <methodparam>
      <type>int</type><parameter>cursor</parameter>
     </methodparam>
     <methodparam>
      <type>int</type><parameter>column</parameter>
     </methodparam>
    </methodsynopsis>

    <para>
     Gibt den Datentyp des Feldes <parameter>Feld</parameter> des
     Cursors <parameter>Cursor</parameter> zurück. Der zurückgegebene
     Typ ist einer der folgenden:
     <simplelist>
      <member><literal>"VARCHAR2"</literal></member>
      <member><literal>"VARCHAR"</literal></member>
      <member><literal>"CHAR"</literal></member>
      <member><literal>"NUMBER"</literal></member>
      <member><literal>"LONG"</literal></member>
      <member><literal>"LONG RAW"</literal></member>
      <member><literal>"ROWID"</literal></member>
      <member><literal>"DATE"</literal></member>
      <member><literal>"CURSOR"</literal></member>
     </simplelist>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-commit">
   <refnamediv>
    <refname>Ora_Commit</refname>
    <refpurpose>Bestätigt eine Oracle-Transaktion</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>

    <methodsynopsis>
     <type>int</type><methodname>ora_commit</methodname>
     <methodparam>
      <type>int</type><parameter>conn</parameter>
     </methodparam>
    </methodsynopsis>

    <para>
     Gibt bei Erfolg &true; und bei Auftreten eines Fehlers &false;
     zurück. Einzelheiten über den Fehler bekommen Sie mit den
     Funktionen <function>ora_error</function> und
     <function>ora_errorcode</function>.
    </para>
    <para>
     Diese Funktion bestätigt eine Oracle-Transaktion. Eine
     Transaktion ist definiert als Gesamtheit aller Änderungen seit
     der letzten Bestätigung/dem letzten Rollback, seit die
     automatische Bestätigung abgeschaltet wurde oder seit die
     Verbindung besteht.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-commitoff">
   <refnamediv>
    <refname>Ora_CommitOff</refname>
    <refpurpose>Schaltet die automatische Bestätigung ab</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>

    <methodsynopsis>
     <type>int</type><methodname>ora_commitoff</methodname>
     <methodparam>
      <type>int</type><parameter>conn</parameter>
     </methodparam>
    </methodsynopsis>

    <para>
     Gibt bei Erfolg &true; und bei Auftreten eines Fehlers &false;
     zurück. Einzelheiten über den Fehler bekommen Sie mit den
     Funktionen <function>ora_error</function> und
     <function>ora_errorcode</function>.
    </para>
    <para>
     Diese Funktion schaltet die automatische Bestätigung nach jedem
     Aufruf von <function>ora_exec</function> ab.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-commiton">
   <refnamediv>
    <refname>Ora_CommitOn</refname>
    <refpurpose>Schaltet die automatische Bestätigung ein</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>

    <methodsynopsis>
     <type>int</type><methodname>ora_commiton</methodname>
     <methodparam>
      <type>int</type><parameter>conn</parameter>
     </methodparam>
    </methodsynopsis>

    <para>
     Gibt bei Erfolg &true; und bei Auftreten eines Fehlers &false;
     zurück. Einzelheiten über den Fehler bekommen Sie mit den
     Funktionen <function>ora_error</function> und
     <function>ora_errorcode</function>.
    </para>
    <para>
     Diese Funktion schaltet die automatische Bestätigung nach jedem
     Aufruf von <function>ora_exec</function> über die angegebene
     Verbindung ein.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-do">
   <refnamediv>
    <refname>Ora_Do</refname>
    <refpurpose>
     Kombiniert die Funktionen Ora_Parse, Ora_Exec und Ora_Fetch
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>

    <methodsynopsis>
     <type>int</type><methodname>ora_do</methodname>
     <methodparam>
      <type>int</type><parameter>conn</parameter>
     </methodparam>
     <methodparam>
      <type>string</type><parameter>Abfrage</parameter>
     </methodparam>
    </methodsynopsis>

    <para>
     Gibt bei Erfolg &true; und bei Auftreten eines Fehlers &false;
     zurück. Einzelheiten über den Fehler bekommen Sie mit den
     Funktionen <function>ora_error</function> und
     <function>ora_errorcode</function>.
    </para>
    <para>
     Diese Funktion ist eine schnelle Kombination von
     <function>ora_parse</function>, <function>ora_exec</function> und
     <function>ora_fetch</function>. Sie analysiert eine Anweisung,
     führt sie aus und ruft dann den ersten Datensatz des Ergebnisses
     ab.
    </para>
    <simpara>
     Siehe auch: <function>ora_parse</function>,
     <function>ora_exec</function> und <function>ora_fetch</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ora-error">
   <refnamediv>
    <refname>Ora_Error</refname>
    <refpurpose>Liefert eine Oracle-Fehlermeldung</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>

    <methodsynopsis>
     <type>string</type><methodname>ora_error</methodname>
     <methodparam>
      <type>int</type><parameter>Cursor_oder_Verbindung</parameter>
     </methodparam>
    </methodsynopsis>

    <para>
     Gibt eine Fehlermeldung in der Form
     <replaceable>XXX</replaceable>-<replaceable>NNNNN</replaceable>
     zurück, worin <replaceable>XXX</replaceable> angibt, wo der
     Fehler auftrat und <replaceable>NNNNN</replaceable> die
     Fehlermeldung identifiziert.
     <note>
      <para>
       Die Unterstützung von Verbindungs-IDs wurde in 3.0.4 eingeführt.
      </para>
     </note>
    </para>
    <para>
     Bei den UNIX-Versionen von Oracle können Sie Einzelheiten über
     eine Fehlermeldung auf die folgende Weise finden:
     <computeroutput>
<prompt>$</prompt> <userinput>oerr ora
<replaceable>00001</replaceable></userinput> 00001, 00000,
"unique constraint (%s.%s) violated" // *Cause: An update or insert
statement attempted to insert a duplicate key //         For Trusted
ORACLE configured in DBMS MAC mode, you may see //         this message
if a duplicate entry exists at a different level.  // *Action: Either
remove the unique restriction or do not insert the key
     </computeroutput>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-errorcode">
   <refnamediv>
    <refname>Ora_ErrorCode</refname>
    <refpurpose>Liefert den Oracle-Fehlercode</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>

    <methodsynopsis>
     <type>int</type><methodname>Ora_ErrorCode</methodname>
     <methodparam>
      <type>int</type><parameter>Cursor_oder_Verbindung</parameter>
     </methodparam>
    </methodsynopsis>

    <para>
     Gibt den numerischen Fehlercode der zuletzt ausgeführten
     Anweisung des angegebenen Cursors, bzw. der angegebenen
     Verbindung zurück.
     <!-- FIXME: should possible values be listed? -->
     <note>
      <para>
       Die Unterstützung von Verbindungs-IDs wurde in 3.0.4
       eingeführt.
      </para>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-exec">
   <refnamediv>
    <refname>Ora_Exec</refname>
    <refpurpose>
     Führt eine analysierte Anweisung an einem Oracle-Cursor aus
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>

    <methodsynopsis>
     <type>int</type><methodname>ora_exec</methodname>
     <methodparam>
      <type>int</type><parameter>Cursor</parameter>
     </methodparam>
    </methodsynopsis>

    <para>
     Gibt bei Erfolg &true; und bei Auftreten eines Fehlers &false;
     zurück. Einzelheiten über den Fehler bekommen Sie mit den
     Funktionen <function>ora_error</function> und
     <function>ora_errorcode</function>.
    </para>
    <simpara>
     Siehe auch: <function>ora_parse</function>,
     <function>ora_fetch</function> und <function>ora_do</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ora-fetch">
   <refnamediv>
    <refname>Ora_Fetch</refname>
    <refpurpose>Ruft einen Datensatz eines Cursors ab</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>

    <methodsynopsis>
     <type>int</type><methodname>ora_fetch</methodname>
     <methodparam>
      <type>int</type><parameter>Cursor</parameter>
     </methodparam>
    </methodsynopsis>

    <para>
     Gibt &true; (Datensatz wurde abgerufen) oder &false; (keine
     weiteren Datensätze oder Auftreten eines Fehlers) zurück. Bei
     Auftreten eines Fehlers bekommen Sie die Einzelheiten mit den
     Funktionen <function>ora_error</function> und
     <function>ora_errorcode</function>. Wenn es keinen Fehler gab,
     gibt <function>ora_errorcode</function> 0 zurück.
    </para>
    <para>
     Diese Funktion ruft einen Datensatz des angegebenen Cursors ab.
    </para>
    <simpara>
     Siehe auch: <function>ora_parse</function>,
     <function>ora_exec</function> und <function>ora_do</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ora-fetch-into">
   <refnamediv>
    <refname>Ora_Fetch_Into</refname>
    <refpurpose>
     Ruft einen Datensatz in ein angegebenes Ergebnisarray ab
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>

    <methodsynopsis>
     <type>int</type><methodname>ora_fetch_into</methodname>
     <methodparam>
      <type>int</type><parameter>Cursor</parameter>
     </methodparam>
     <methodparam>
      <type>array</type><parameter>Ergebnis</parameter>
     </methodparam>
     <methodparam choice="opt">
      <type>int</type><parameter>Flags</parameter>
     </methodparam>
    </methodsynopsis>

    <para>
     Mit dieser Funktion können sie einen Datensatz in ein Array
     abrufen.
     <example>
      <title>Oracle-Abruf in ein Array</title>
      <programlisting role="php">
<![CDATA[
<?php
array($ergebnisse);
ora_fetch_into($cursor, &$ergebnisse);
echo $ergebnisse[0];
echo $ergebnisse[1];
?>
]]>
      </programlisting>
     </example>
     Beachten Sie, dass Sie das Array als Verweis einbringen müssen.
    </para>
    <simpara>
     Siehe auch: <function>ora_parse</function>,
     <function>ora_exec</function>, <function>ora_fetch</function> und
     <function>ora_do</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ora-getcolumn">
   <refnamediv>
    <refname>Ora_GetColumn</refname>
    <refpurpose>
     Liefert die Daten eines abgerufenen Feldes
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>

    <methodsynopsis>
     <type>mixed</type><methodname>ora_getcolumn</methodname>
     <methodparam>
      <type>int</type><parameter>Cursor</parameter>
     </methodparam>
     <methodparam>
      <type>mixed</type><parameter>Feld</parameter>
     </methodparam>
    </methodsynopsis>

    <para>
     Gibt die Felddaten zurück. Falls ein Fehler auftritt, wird
     &false; zurückgegeben und <function>ora_errorcode</function> gibt
     einen Wert (nicht &null;) zurück. Beachten Sie aber, dass die
     false-Überprüfung der Ergebnisse dieser Funktion auch dann wahr
     ergeben kann, wenn gar kein Fehler auftrat (Ergebnis &null;,
     leere Zeichenkette, die Zahl 0, die Zeichenkette "0").
    </para>
    <para>
     Diese Funktion liefert die Daten eines Feld- oder
     Funktionsergebnisses.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-logoff">
   <refnamediv>
    <refname>Ora_Logoff</refname>
    <refpurpose>Beendet eine Oracle-Verbindung</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>

    <methodsynopsis>
     <type>int</type><methodname>ora_logoff</methodname>
     <methodparam>
      <type>int</type><parameter>Verbindung</parameter>
     </methodparam>
    </methodsynopsis>

    <para>
     Gibt bei Erfolg &true; und bei Auftreten eines Fehlers &false;
     zurück. Einzelheiten über den Fehler bekommen Sie mit den
     Funktionen <function>ora_error</function> und
     <function>ora_errorcode</function>.
    </para>
    <para>
     Diese Funktion meldet den Benutzer ab und trennt die Verbindung
     zum Server.
    </para>
    <simpara>
     See also <function>ora_logon</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ora-logon">
   <refnamediv>
    <refname>Ora_Logon</refname>
    <refpurpose>Baut eine Oracle-Verbindung auf</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>

    <methodsynopsis>
     <type>int</type><methodname>ora_logon</methodname>
     <methodparam>
      <type>string</type><parameter>Benutzername</parameter>
     </methodparam>
     <methodparam>
      <type>string</type><parameter>Passwort</parameter>
     </methodparam>
    </methodsynopsis>

    <para>
     Gibt bei Erfolg einen Verbindungs-Index oder bei Auftreten eines
     Fehlers &false; zurück. Einzelheiten über den Fehler bekommen Sie
     mit den Funktionen <function>ora_error</function> und
     <function>ora_errorcode</function>.
    </para>
    <para>
     Diese Funktion baut mit <parameter>Benutzername</parameter> und
     <parameter>Passwort</parameter> eine Verbindung zwischen PHP und
     einer Oracle Datenbank auf.
    </para>
    <para>
     Verbindungen können unter Verwendung von
     <productname>SQL*Net</productname> durch Eingabe des
     <acronym>TNS</acronym>-Namens zu
     <parameter>Benutzername</parameter> wie folgt aufgebaut werden:
     <informalexample>
      <programlisting role="php">
$conn = Ora_Logon("Benutzername<emphasis>@TNSNAME</emphasis>", "pass");
      </programlisting>
     </informalexample>
    </para>
    <para>
     Falls Sie einen Zeichensatz mit nicht-ASCII-Zeichen verwenden,
     sollten Sie sicherstellen, dass in ihrer Umgebung
     <envar>NLS_LANG</envar> gesetzt ist. Bei Servermodulen sollten
     Sie sie in der Umgebung des Servers setzen, bevor Sie den Server
     starten.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-plogon">
   <refnamediv>
    <refname>Ora_pLogon</refname>
    <refpurpose>
     Baut eine persistente Oracle-Verbindung auf
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>

    <methodsynopsis>
     <type>int</type><methodname>ora_plogon</methodname>
     <methodparam>
      <type>string</type><parameter>Benutzername</parameter>
     </methodparam>
     <methodparam>
      <type>string</type><parameter>Passwort</parameter>
     </methodparam>
    </methodsynopsis>

    <para>
     Diese Funktion baut mit <parameter>Benutzername</parameter> und
     <parameter>Passwort</parameter> eine persistente Verbindung
     zwischen PHP und einer Oracle Datenbank auf.
    </para>
    <simpara>
     Siehe auch: <function>ora_logon</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ora-numcols">
   <refnamediv>
    <refname>Ora_Numcols</refname>
    <refpurpose>Liefert die Anzahl der Felder</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>

    <methodsynopsis>
     <type>int</type><methodname>ora_numcols</methodname>
     <methodparam>
      <type>int</type><parameter>cursor_ind</parameter>
     </methodparam>
    </methodsynopsis>

    <para>
     <function>ora_numcols</function> gibt die Anzahl der Felder eines
     Ergebnisses zurück. Aussagekräftige Werte werden nur nach einer
     analysieren/ausführen/abrufen-Abfolge zurückgegeben.
    </para>
    <simpara>
     Siehe auch: <function>ora_parse</function>,
     <function>ora_exec</function>, <function>ora_fetch</function> und
     <function>ora_do</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ora-numrows">
   <refnamediv>
    <refname>Ora_Numrows</refname>
    <refpurpose>Liefert die Anzahl der Datensätze</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>

    <methodsynopsis>
     <type>int</type><methodname>ora_numrows</methodname>
     <methodparam>
      <type>int</type><parameter>cursor_ind</parameter>
     </methodparam>
    </methodsynopsis>

    <para>
     <function>ora_numrows</function> gibt die Anzahl der Datensätze
     eines Ergebnisses zurück.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-open">
   <refnamediv>
    <refname>Ora_Open</refname>
    <refpurpose>Öffnet einen Oracle-Cursor</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>

    <methodsynopsis>
     <type>int</type><methodname>ora_open</methodname>
     <methodparam>
      <type>int</type><parameter>Verbindung</parameter>
     </methodparam>
    </methodsynopsis>

    <para>
     Gibt bei Erfolg einen Cursor-Index oder bei Auftreten eines
     Fehlers &false; zurück. Einzelheiten über den Fehler bekommen Sie
     mit den Funktionen <function>ora_error</function> und
     <function>ora_errorcode</function>.
    </para>
    <para>
     Diese Funktion öffnet einen Oracle-Cursor, der mit
     <parameter>Verbindung</parameter> verknüpft ist.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ora-parse">
   <refnamediv>
    <refname>Ora_Parse</refname>
    <refpurpose>Analysiert eine SQL-Anweisung</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>

    <methodsynopsis>
     <type>int</type><methodname>ora_parse</methodname>
     <methodparam>
      <type>int</type><parameter>Cursor_ind</parameter>
     </methodparam>
     <methodparam>
      <type>string</type><parameter>SQL-Anweisung</parameter>
     </methodparam>
     <methodparam>
      <type>int</type><parameter>aufschieben</parameter>
     </methodparam>
    </methodsynopsis>

    <para>
     &return.success;
    </para>
    <para>
     Diese Funktion analysiert eine SQL-Anweisung oder einen
     PL/SQL-Block und verknüpft diese(n) mit dem angegebenen Cursor.
    </para>
    <simpara>
     Siehe auch: <function>ora_exec</function>,
     <function>ora_fetch</function> und <function>ora_do</function>.
    </simpara>
   </refsect1>
  </refentry>

  <refentry id="function.ora-rollback">
   <refnamediv>
    <refname>Ora_Rollback</refname>
    <refpurpose>Macht eine Transaktion rückgängig</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>

    <methodsynopsis>
     <type>int</type><methodname>ora_rollback</methodname>
     <methodparam>
      <type>int</type><parameter>Verbindung</parameter>
     </methodparam>
    </methodsynopsis>

    <para>
     Gibt bei Erfolg &true; und bei Auftreten eines Fehlers &false;
     zurück. Einzelheiten über den Fehler bekommen Sie mit den
     Funktionen <function>ora_error</function> und
     <function>ora_errorcode</function>.
    </para>
    <para>
     Diese Funktion macht eine Oracle-Transaktion rückgängig
     (Definition einer Transaktion: siehe
     <function>ora_commit</function>).
    </para>
   </refsect1>
  </refentry>
 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
