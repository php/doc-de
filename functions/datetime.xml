<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.69 Maintainer: betz Status: ready -->
 <reference id="ref.datetime">
  <title>Datums- und Zeit-Funktionen</title>
  <titleabbrev>Datum/Zeit</titleabbrev>
<!-- Anmerkung des Übersetzers:
     entspricht en/functions/datetime.xml 1.23 -->

  <refentry id="function.checkdate">
   <refnamediv>
    <refname>checkdate</refname>
    <refpurpose>
     Prüft eine gregorianische Datums- bzw. Zeitangabe auf Gültigkeit
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
     <methodsynopsis>
      <type>bool</type><methodname>checkdate</methodname>
      <methodparam><type>int</type><parameter>Monat</parameter></methodparam>
      <methodparam><type>int</type><parameter>Tag</parameter></methodparam>
      <methodparam><type>int</type><parameter>Jahr</parameter></methodparam>
     </methodsynopsis>
    <para>
     Ist das angegebene Datum gültig wird &true; zurückgegeben, ansonsten
     &false;. Prüft die Gültigkeit der angebenen Datumswerte. Ein Datum wird 
     als gültig angesehen, wenn
     <itemizedlist>
      <listitem>
       <simpara>
        das Jahr zwischen 1 und 32767 (inclusive) ist,
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        der Monat zwischen 1 und 12 (inclusive) ist und
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        der <parameter>Tag</parameter> innerhalb der erlaubten Werte des angegebenen
        <parameter>Monat</parameter>s ist. Schalt<parameter>Jahre</parameter>
        werden berücksichtigt.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     Siehe auch <function>mktime</function> und <function>strtotime</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.date">
   <refnamediv>
    <refname>date</refname>
    <refpurpose>Formatiert ein(e) angegebene(s) Zeit/Datum</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
     <methodsynopsis>
      <type>string</type><methodname>date</methodname>
      <methodparam><type>string</type><parameter>Format</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>Timestamp</parameter></methodparam>
     </methodsynopsis>
    <para>
     Gibt einen formatierten String anhand eines vorzugebenden Musters
     zurück. Dabei wird entweder der angegebene
     <parameter>Timestamp</parameter> oder die gegenwärtige lokale
     Zeit berücksichtigt, wenn kein Timestamp angegegeben wird.
    </para>
    <note>
     <para>
      Der gültige Bereich eines Timestamp liegt typischerweise zwischen
      Fri, 13 Dec 1901 20:45:54 GMT und Tue, 19 Jan 2038 03:14:07 GMT.
      (Das entspricht den minimalen und maximalen Werten für einen 
      vorzeichenbehafteten 32-Bit Integer.)
      </para>
      <para>
       Um einen Timestamp aus aus einem Datums-String zu erzeugen, können Sie
       die Funktion <function>strtotime</function> benutzen. Zusätzlich bieten
       einige Datenbanken Funktionen, um Ihre Datumsfromate in Timestamps
       umzuwandeln (siehe die MySQL-Funktion UNIX_TIMESTAMP).
      </para>
     </note>
    <para>
     Die folgenden Platzhalter werden zur Formatierung benutzt:
     <itemizedlist>
      <listitem>
       <simpara>
        a - "am" oder "pm"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        A - "AM" oder "PM"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        B - Swatch-Internet-Zeit
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        d - Tag des Monats, 2-stellig mit führender Null: "01" bis "31"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        D - Tag der Woche als 3 Buchstaben, z.B. "Fri"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        F - Monat als ganzes Wort, z.B "January"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        g - Stunde im 12-Stunden-Format, ohne führende Null: "1" bis "12"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        G - Stunde im 24-Stunden-Format, ohne führende Null: "0" bis "23"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        h - Stunde im 12-Stunden-Format: "01" bis "12"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        H - Stunde im 24-Stunden-Format: "00" bis "23"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        i - Minuten: "00" bis "59"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        I (großes 'i') - "1" bei Sommerzeit, sonst "0"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        j - Tag des Monats ohne führende Null: "1" bis "31"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        l - (kleines 'L') ausgeschriebener Tag der Woche, z.B. "Friday"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        L - boolscher Wert für Schaltjahre: "0" oder "1"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        m - Monat: "01" to "12"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        M - Monat als 3 Buchstaben, z.B. "Jan"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        n - Monat ohne führende Null: "1" bis "12"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        O - Zeitdifferenz zur Greenwich Zeit in Stunden (z.B. +0200)
       </simpara>
      </listitem>     
      <listitem>
       <simpara>
        r - Nach RFC 822 formattiertes Datum; z.B.:
        "Sun, 7 Oct 2001 14:56:02 +0200" (seit PHP 4.0.4)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        s - Sekunden: "00" bis "59"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        S - Anhang der englischen Aufzählung, 2 Buchstaben, z.B. "th"
        [bei 4 für fourth], "nd" [bei 2 für second]
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        t - Anzahl der Tage des angegebenen Monats: "28" bis "31"
       </simpara>
      </listitem>
     <listitem>
       <simpara>
       T - Zeitzoneneinstellung des Rechners, z.B. "MDT"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        U - Sekunden seit Beginn der UNIX-Epoche (1.1.1970)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        w - Wochentag numersich, beginnend mit "0" (Sonntag) bis "6" (Samstag)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        W - ISO-8601 Wochennummer des Jahres (Woche beginnt mit Montag)
        (seit PHP 4.1.0)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        y - Jahr als zweistellige Zahl, z.B. "99"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Y - Jahr als vierstellige Zahl, z.B. "1999"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        z - Tag des Jahres: "0" bis "365"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Z - Offset der Zeitzone gegen GTM ("-43200" bis "43200") in
        Sekunden. Der Offset für Zeitzone West nach UTC ist immer negativ
        und für Zeitzone Ost nach UTC immer positiv.
       </simpara>
      </listitem>
     </itemizedlist>
     Nicht definierte Zeichen werden unverändert zurück gegeben. Das
     "Z"-Format gibt beim Gebrauch von <function>gmdate</function> immer
     "0" zurück.
    </para>
    <para>
     <example>
      <title><function>date</function> Beispiel</title>
      <programlisting role="php">
<![CDATA[
print (date("l dS of F Y h:i:s A"));
print ("July 1, 2000 is on a " . date ("l", mktime(0,0,0,7,1,2000)));
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Möchten Sie verhindern, dass ein definiertes Zeichen im Formatstring
     ersetzt wird, sollten Sie dieses Zeichen mit einem vorangestellten
     Backslash escapen. Ist das Zeichen mit dem Backslash bereits eine
     spezielle Zeichenfolge, müssen Sie diesen Backslash ebenso escapen.
     <example>
      <title>Escaping von Zeichen in <function>date</function></title>
      <programlisting role="php">
<![CDATA[
echo date("l \\t\h\e jS"); // gibt etwas ähnliches aus wie 'Saturday the 8th'
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Es ist möglich, <function>date</function> und
     <function>mktime</function> gleichzeitig zu verwenden, um
     Datumsangaben der Zukunft/Vergangenheit herauszufinden.
     <example>
      <title>
       <function>date</function> und <function>mktime</function>
       Beispiele
      </title>
      <programlisting role="php">
<![CDATA[
$morgen        = mktime(0, 0, 0, date ("m") , date ("d")+1, date("Y"));
$letztermonat  = mktime(0, 0, 0, date("m")-1,date("d"), date("Y"));
$naechstesjahr = mktime(0, 0, 0, date("m"), date("d"), date("Y")+1);
]]>
      </programlisting>
     </example>
     <note>
      <para>
       Dieses Vorgehen kann zu verlässlicheren Ergebnissen führen, als simples
       Addieren oder Subtrahieren der Anzahl von Sekunden in Tagen oder Monaten
       zu einem Timestamp, da Sommer- und Winterzeit zu berücksichtigen ist.
     </para>
     </note>
    </para>
    <para>
     Es folgen einige Beispiele zur <function>date</function> Formatierung.
     Beachten Sie, dass Sie alle anderen Zeichen escapen sollten, da alle
     Zeichen, die im Augenblick eine spezielle Beduetung haben unerwünschte
     Resultate liefern. Bei allen weiteren Zeichen kann es durchaus möglich
     sein, dass diesen in zukünftigen PHP-Versionen eine Bedeutung zukommt.
     Beim escapen sollten Sie darauf achten einfache Anführungszeichen
     benutzen, damit Zeichenfolgen wie zum Beispiel \n zu keinem
     Zeilenumbruch führen.
     <example>
      <title>
       <function>date</function> Formatierungen
      </title>
      <programlisting role="php">
<![CDATA[
/* Today is March 10th, 2001, 5:16:18 pm */
$today = date("F j, Y, g:i a");                 // March 10, 2001, 5:16 pm
$today = date("m.d.y");                         // 03.10.01
$today = date("j, n, Y");                       // 10, 3, 2001
$today = date("Ymd");                           // 20010310
$today = date('h-i-s, j-m-y, it is w Day z ');  // 05-16-17, 10-03-01, 1631 1618 6 Fripm01
$today = date('\i\t \i\s \t\h\e jS \d\a\y.');   // It is the 10th day.
$today = date("D M j G:i:s T Y");               // Sat Mar 10 15:16:08 MST 2001
$today = date('H:m:s \m \i\s\ \m\o\n\t\h');     // 17:03:17 m is month
$today = date("H:i:s");                         // 17:16:17
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Um Datumsangaben in anderen Sprach-/Zeitzonen-Formaten
     auszugeben, sollten sie die Funktionen
     <function>setlocale</function> und <function>strftime</function>
     nutzen.
    </para>
    <para>
     Siehe auch <function>getlastmod</function>, <function>gmdate</function>,
     <function>mktime</function>, <function>strftime</function>
     und <function>time</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.getdate">
   <refnamediv>
    <refname>getdate</refname>
    <refpurpose>Gibt Datums- und Zeitinformationen zurück</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
     <methodsynopsis>
      <type>array</type><methodname>getdate</methodname>
      <methodparam choice="opt"><type>int</type><parameter>Timestamp</parameter></methodparam>
     </methodsynopsis>
    <para>
     Gibt ein assoziatives Array mit Datums- und Zeitangaben des
     angegebenen <parameter>Timestamp</parameter> zurück. Wird kein Timestamp
     angegeben, wird die lokal gültige Zeit berücksichtigt. Die Arrayelemente
     sind folgende:
     <itemizedlist>
      <listitem>
       <simpara>
        "seconds" - Sekunden
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "minutes" - Minuten
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "hours" - Stunden
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "mday" - Tag des Monats
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "wday" - numerischer Tag der Woche: von 0 als Sonntag bis 6 als Samstag
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "mon" - Monat als Zahl
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "year" - Jahr als Zahl
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "yday" - Tag des Jahres als Zahlwert, z.B. "299"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "weekday" - ausgeschriebener Wochentag, z.B. "Friday"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "month" - ausgeschriebener Monatsname, z.B. "January"
       </simpara>
      </listitem>
     </itemizedlist>
     <example>
      <title>
       <function>getdate</function> Beispiel
      </title>
      <programlisting role="php">
<![CDATA[
$heute     = getdate(); 
$monat     = $heute['month']; 
$tag_monat = $heute['mday']; 
$Jahr      = $heute['year']; 
echo "$monat $tag_monat, $jahr";
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gettimeofday">
   <refnamediv>
    <refname>gettimeofday</refname>
    <refpurpose>Gibt die aktuelle Zeit zurück</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
     <methodsynopsis>
      <type>array</type><methodname>gettimeofday</methodname>
      <void/>
     </methodsynopsis>
    <para>
     Es handelt sich um eine Schnittstelle zum Systemaufruf von
     gettimeofday(2). Die Zeitangaben werden als assoziatives Array
     zurück gegeben. Folgende Arrayelemente sind vorhanden:
     <itemizedlist>
      <listitem>
       <simpara>
        "sec" - Sekunden
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "usec" - Microsekunden
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "minuteswest" - Minuten westlich von Greenwich
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "dsttime" - Art der Korrektur der Sommerzeit
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmdate">
   <refnamediv>
    <refname>gmdate</refname>
    <refpurpose>Formatiert eine GMT/CUT Zeit- Datumsangabe</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
     <methodsynopsis>
      <type>string</type><methodname>gmdate</methodname>
      <methodparam><type>string</type><parameter>Format</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>Timestamp</parameter></methodparam>
     </methodsynopsis>
    <para>
     Entspricht der <function>date</function> Funktion, ausser dass als
     Zeitangabe immer Greenwich Mean Time (GMT) zurück gegeben
     wird. Steht ihr System in Deutschland (GMT + 01:00) wird im
     Beispiel unten (1. Zeile) "Jan 01 1998 00:00:00" ausgegeben,
     wogegen die 2. Zeile "Dec 31 1997 23:00:00" zurück gibt.
     <example>
      <title><function>gmdate</function> Beispiel</title>
      <programlisting role="php">
<![CDATA[
echo date ("M d Y H:i:s", mktime (0,0,0,1,1,1998));
echo gmdate("M d Y H:i:s", mktime (0,0,0,1,1,1998));
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Siehe auch <function>date</function>, <function>mktime</function>
     ,<function>gmmktime</function> und <function>strftime</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmmktime">
   <refnamediv>
    <refname>gmmktime</refname>
    <refpurpose>
     Gibt einen UNIX-Timestamp (Zeitstempel) als GMT zurück
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
     <methodsynopsis>
      <type>int</type><methodname>gmmktime</methodname>
      <methodparam><type>int</type><parameter>Stunde</parameter></methodparam>
      <methodparam><type>int</type><parameter>Minute</parameter></methodparam>
      <methodparam><type>int</type><parameter>Sekunde</parameter></methodparam>
      <methodparam><type>int</type><parameter>Monat</parameter></methodparam>
      <methodparam><type>int</type><parameter>Tag</parameter></methodparam>
      <methodparam><type>int</type><parameter>Jahr</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>is_dst</parameter></methodparam>
     </methodsynopsis>
    <para>
     Identisch zu <function>mktime</function>. Die angegebenen
     Parameter werden aber als GMT-Datum/Zeit interpretiert.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.gmstrftime">
   <refnamediv>
    <refname>gmstrftime</refname>
    <refpurpose>
     Formatiert eine Datum-/Zeitangabe in GMT/CUT-Format entsprechend den
     lokalen Einstellungen
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
     <methodsynopsis>
      <type>string</type><methodname>gmstrftime</methodname>
      <methodparam><type>string</type><parameter>Format</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>Timestamp</parameter></methodparam>
     </methodsynopsis>
    <para>
     Bewirkt das gleiche wie <function>strftime</function> mit dem
     Unterschied, dass die GMT-Zeit zurück gegeben wird. In
     Deutschland (GMT + 01:00) wird im folgenden Beispiel bei strftime
     "Dez 31 1998 00:00:00", bei gmstrftime dagegen "Dec 31 1998
     23:00:00" ausgegeben.
     <example>
      <title><function>gmstrftime</function> Beispiel</title>
      <programlisting role="php">
<![CDATA[
setlocale ('LC_TIME', 'de_DE');
echo strftime ("%b %d %Y %H:%M:%S", mktime(0,0,0,12,31,98))."\n";
echo gmstrftime ("%b %d %Y %H:%M:%S", mktime(0,0,0,12,31,98))."\n";
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Siehe auch <function>strftime</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.localtime">
   <refnamediv>
    <refname>localtime</refname>
    <refpurpose>Ermittelt die lokalen Zeitwerte</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
     <methodsynopsis>
      <type>array</type><methodname>localtime</methodname>
      <methodparam choice="opt"><type>int</type><parameter>Timestamp</parameter></methodparam>
      <methodparam choice="opt"><type>bool</type><parameter>is_associative</parameter></methodparam>
     </methodsynopsis>
    <para>
     Die <function>localtime</function>-Funktion gibt ein Array
     zurück, welches hinsichtlich seiner Struktur identisch ist mit
     dem des Funktionsaufrufs in C. Das erste (optionale) Argument
     von <function>localtime</function> ist der UNIX-Zeitstempel
     (Timestamp). Fehlt dieser, wird die aktuelle Zeit genommen. Als
     zweites wird der Parameter <parameter>is_associative</parameter>
     übergeben. Ist dieser 0 oder nicht gesetzt, wird das Werte-Array
     als reguläres, numerisch indiziertes Array zurück gegeben. Ist
     er dagegen 1, liefert <function>localtime</function> ein
     assoziatives Array zurück, welches alle Elemente der Struktur des
     localtime-Aufrufs in C enthält. Die Bezeichner der verschiedenen
     Schlüssel dieses assoziatien Arrays lauten:
     <itemizedlist>
      <listitem>
       <simpara>
        "tm_sec" - Sekunde
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "tm_min" - Minute
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "tm_hour" - Stunde
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "tm_mday" - Tag des Monats
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "tm_mon" - Monat des Jahres, beginnt bei 0 für Januar
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "tm_year" - Jahr seit 1900
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "tm_wday" - Tag der Woche
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "tm_yday" - Tag des Jahres
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        "tm_isdst" - für das Datum ist die Sommerzeit zu berücksichtigen
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.microtime">
   <refnamediv>
    <refname>microtime</refname>
    <refpurpose>
     Gibt den aktuellen UNIX-Timestamp/Zeitstempel in Mikrosekunden
     zurück
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
     <methodsynopsis>
      <type>string</type><methodname>microtime</methodname>
      <void/>
     </methodsynopsis>
    <para>
     Gibt die Zeichenkette "msec sec" zurück, wobei sec die aktuelle
     Zeit ist, ausgedrückt als Anzahl der Sekunden seit Beginn der
     UNIX-Epoche (0:00:00 January 1, 1970 GMT). Msec stellt den
     Mikrosekunden-Teil dar. Diese Funktion ist nur auf Systemen
     möglich, die den Systemaufruf gettimeofday() unterstützen.
    </para>
    <para>
     Beide Teile des Strings werden in Sekunden zurückgegen.
     <example>
      <title><function>microtime</function> Beispiel</title>
      <programlisting role="php">
<![CDATA[
function getmicrotime(){ 
    list($usec, $sec) = explode(" ",microtime()); 
    return ((float)$usec + (float)$sec); 
    } 

$time_start = getmicrotime();
    
for ($i=0; $i < 1000; $i++){
    //mach nichts,1000 mal
    }

$time_end = getmicrotime();
$time = $time_end - $time_start;

echo "Nichts getan in $time Sekunden";
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Siehe auch <function>time</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.mktime">
   <refnamediv>
    <refname>mktime</refname>
    <refpurpose>
     Gibt den UNIX-Timestamp/Zeitstempel für ein Datum zurück
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
     <methodsynopsis>
      <type>int</type><methodname>mktime</methodname>
      <methodparam><type>int</type><parameter>Stunde</parameter></methodparam>
      <methodparam><type>int</type><parameter>Minute</parameter></methodparam>
      <methodparam><type>int</type><parameter>Sekunde</parameter></methodparam>
      <methodparam><type>int</type><parameter>Monat</parameter></methodparam>
      <methodparam><type>int</type><parameter>Tag</parameter></methodparam>
      <methodparam><type>int</type><parameter>Jahr</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>is_dst</parameter></methodparam>
     </methodsynopsis>
    <para>
     <emphasis>Warnung:</emphasis> Beachten sie die andersartige
     Anordnung der Argumente. Diese unterscheidet sich von der
     Reihenfolge des UNIX-Befehls mktime(). Das ist eine häufige
     Fehlerursache in Scripts.
    </para>
    <para>
     Gibt den UNIX Timestamp/Zeitstempel an Hand der gegebenen
     Argumente zurück. Der Zeitstempel ist ein long-integer-Wert, der
     die Anzahl der Sekunden zwischen der UNIX Epoche (January 1 1970) und
     der angegebenen Zeit enthält.
    </para>
    <para>
     Einzelne Argumente können von rechts nach links weggelassen
     werden. Sie werden dann ersetzt mit den Werten der lokalen
     Systemzeit bzw. des lokalen Systemdatums.
    </para>
    <para>
     <parameter>is_dst</parameter> kann bei Sommerzeit auf 1 gesetzt
     werden. 0 bedeutet Winter-/Normalzeit, -1 (Vorgabewert)
     heisst, dass nicht bekannt ist, ob Sommer- oder Winterzeit
     herrscht.
    </para>
    <note>
     <para>
      <parameter>is_dst</parameter> wurde in 3.0.10. eingeführt.
     </para>
    </note>
    <para>
     <function>mktime</function> ist hilfreich bei Datumsberechnungen
     und -überprüfungen, da automatisch das korrekte Datum für ungültige
     Angaben berechnet wird. So wird in den folgenden Beispielen immer die
     Zeichenkette "Jan-01-1998" ausgegeben.
     <example>
      <title><function>mktime</function> Beispiel</title>
      <programlisting>
<![CDATA[
echo date ("M-d-Y", mktime(0,0,0,12,32,1997));
echo date ("M-d-Y", mktime(0,0,0,13,1,1997));
echo date ("M-d-Y", mktime(0,0,0,1,1,1998));
echo date ("M-d-Y", mktime(0,0,0,1,1,98));
]]>
      </programlisting>
     </example>
     Das <parameter>Jahr</parameter> darf zwei- oder vierstellig
     angegeben werden. Werte von 0 bis 69 stehen dann für die Jahre 2000 bis
     2069, und 70 bis 99 für die Jahre von 1970-1999 (auf Systemen,
     die time_t als 32Bit-Integer abbilden, liegt der gültige Bereich
     für <parameter>Jahr</parameter> zwischen 1902 und 2037).
    </para>
    <para>
     Der letzte Tag eines gegebenen Monats kann als der Tag "0" des
     nächsten Monats ausgedrückt werden (nicht als der Tag
     "-1"). Jedes der folgenden Beispiele gibt die Zeichenkette
     "Letzter Tag im Feb. 2000 ist der 29." zurück.
     <example>
      <title>Letzter Tag des nächsten Monats</title>
      <programlisting>
$lastday = mktime (0,0,0,3,0,2000);
echo strftime ("Letzter Tag im Feb. 2000 ist der %d.", $lastday);

$lastday = mktime(0,0,0,4,-31,2000);
echo strftime ("Letzter Tag im Feb. 2000 ist der %d.", $lastday);
      </programlisting>
     </example>
    </para>
    <simpara>
     Datumsangaben, bei denen das Jahr, der Monat und Tag gleich Null
     sind, werden als ungültig angesehen (ansonsten als 30.11.1999, was
     nicht gewollt sein kann).
    </simpara>
    <para>
     Siehe auch <function>date</function> und
     <function>time</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.strftime">
   <refnamediv>
    <refname>strftime</refname>
    <refpurpose>
     Formatiert eine Zeit-/Datumsangabe nach den lokalen Einstellungen
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
     <methodsynopsis>
      <type>string</type><methodname>strftime</methodname>
      <methodparam><type>string</type><parameter>format</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>
        Timestamp
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     Gibt einen String zurück, der den angegebenen Formatierungs-Merkmalen
     entspricht. Dabei wird der gegebene <parameter>Timestamp</parameter>/
     Zeitstempel oder - falls dieser fehlt - die momentane lokale Zeit benutzt.
     Der Monats- und Wochentagsname wird entsprechend des per 
     <function>setlocale</function> eingestellten Wertes gesetzt.
    </para>
    <para>
     Nachfolgend die im Formatierungsstring gültigen / bekannten
     Platzhalter:
     <itemizedlist>
      <listitem>
       <simpara>
        %a - abgekürzter Name des Wochentages, abhängig von der
        gesetzten Umgebung
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %A - ausgeschriebener Name des Wochentages, abhängig von der
        gesetzten Umgebung
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %b - abgekürzter Name des Monats, abhängig von der gesetzten
        Umgebung
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %B - ausgeschriebener Name des Monats, abhängig von der
        gesetzten Umgebung
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %c - Wiedergabewerte für Datum und Zeit, abhängig von der
        gesetzten Umgebung
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %C - Jahrhundert (Jahr geteilt durch 100, gekürzt auf Integer,
        Wertebereich 00 bis 99)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %d - Tag des Monats als Zahl (Bereich 00 bis 31)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %D - so wie %m/%d/%y
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %e - Tag des Monats als Dezimal-Wert, einstelligen Werten wird
        ein Leerzeichen voran gestellt (Wertebereich ´ 0´ bis ´31´)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %g - wie %G, aber ohne Jahrhundert.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %G - Das vierstellige Jahr entsprechend der ISO Wochennummer (siehe %V).
        Das gleiche Format und der gleiche Wert wie bei %Y. Besonderheit:
        entspricht die ISO Wochennummer dem vorhergehenden oder folgendem
        Jahr, wird dieses Jahr verwendet.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %h - so wie %b
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %H - Stunde als Zahl im 24-Stunden-Format (Bereich 00 bis 23)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %I - Stunde als Zahl im 12-Stunden-Format (Bereich 01 bis 12)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %j - Tag des Jahres als Zahl (Bereich 001 bis 366)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %m - Monat als Zahl (Bereich 01 bis 12)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %M - Minute als Dezimal-Wert
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %n - neue Zeile
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %p - entweder `am' oder `pm' (abhängig von der gesetzten
        Umgebung) oder die entsprechenden Zeichenketten der gesetzten
        Umgebung
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %r - Zeit im Format a.m. oder p.m.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %R - Zeit in der 24-Stunden-Formatierung
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %S - Sekunden als Dezimal-Wert
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %t - Tabulator
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %T - aktuelle Zeit, genau wie %H:%M:%S
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %u - Tag der Woche als Dezimal-Wert [1,7], dabei ist 1 der Montag.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %U - Nummer der Woche des aktuellen Jahres als Dezimal-Wert,
        beginnend mit dem ersten Sonntag als erstem Tag der ersten Woche.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %V - Kalenderwoche (nach ISO 8601:1988) des aktuellen Jahres.
        Als Dezimal-Zahl mit dem Wertebereich 01 bis 53, wobei die
        Woche 01 die erste Woche mit mindestens 4 Tagen im aktuellen
        Jahr ist. Die Woche beginnt Montags (nicht Sonntags).(Benutzen Sie
        %G or %g für die Jahreskomponente die der Wochennummer für den
        gegebenen Timestamp entspricht.)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %w - Wochentag als Dezimal-Wert, Sonntag ist 0
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %W - Nummer der Woche des aktuellen Jahres, beginnend mit dem
        ersten Montag als erstem Tag der ersten Woche.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %x - bevorzugte Datumswiedergabe (ohne Zeit), abhängig von der
        gesetzten Umgebung.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %X - bevorzugte Zeitwiedergabe (ohne Datum), abhängig von der
        gesetzten Umgebung.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %y - Jahr als 2-stellige-Zahl (Bereich 00 bis 99)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %Y - Jahr als 4-stellige-Zahl
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %Z - Zeitzone, Name, oder eine Abkürzung
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        %% - ein %-Zeichen
       </simpara>
      </listitem>
     </itemizedlist>
     <note>
      <para>
       Es ist durchaus möglich, dass Ihre C-Bibliothek nicht alle angegebenen
       Formatierungszeichen erkennt. In diesem Fall werden diese Zeichen von
       der PHP-Funktion <function>strftime</function> nicht unterstützt.
      </para>
     </note>
     <example>
      <title><function>strftime</function> Beispiel</title>
      <programlisting role="php">
setlocale ("LC_TIME", "C");
print (strftime ("%A in Finnland ist "));
setlocale ("LC_TIME", "fi_FI");
print (strftime ("%A, in Frankreich "));
setlocale ("LC_TIME", "fr_CA");
print (strftime ("%A und in Deutschland "));
setlocale ("LC_TIME", "de_DE");
print (strftime ("%A.\n"));
      </programlisting>
     </example>
      Diese Beispiele funktionieren nur, wenn auf Ihrem System die entsprechenden
      Locale-Codes installiert sind.
     </para>
    <para>
     Siehe auch <function>setlocale</function> und
     <function>mktime</function> und die <ulink url="&spec.strftime;">
     Open Group Spezifikation von <function>strftime</function></ulink>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.time">
   <refnamediv>
    <refname>time</refname>
    <refpurpose>
     Gibt den gegenwärtigen UNIX-Timestamp/Zeitstempel zurück
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>int</type><methodname>time</methodname>
      <void/>
     </methodsynopsis>
    <para>
     Gibt die seit Beginn der UNIX-Epoche (Januar 1 1970 00:00:00 GMT)
     bis jetzt vergangenen Sekunden zurück.
    </para>
    <para>
     Siehe auch <function>date</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.strtotime">
   <refnamediv>
    <refname>strtotime</refname>
    <refpurpose>
     Wandelt ein beliebiges Datum (englisches Format) in einen
     Unix-Zeitstempel (Timestamp) um.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
     <methodsynopsis>
      <type>int</type><methodname>strtotime</methodname>
      <methodparam><type>string</type><parameter>time</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>now</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Diese Funktion erwartet einen String mit einem Datum im
     englischen Format und versucht, diesen in einen UNIX-Timestamp
     umzusetzen. Versucht wird dies relativ zu dem Timestamp den Sie mit
     <parameter>now</parameter> angeben. Fehlt diese Angabe wird die aktuelle
     Zeit angenommen. Schlägt die Umwandlung fehl, wird <literal>-1</literal>
     zurückgegeben.
    </simpara>
    <simpara>
     Diese Funktion <function>strtotime</function> verhält sich gemäß der Syntax von
     GNU Date. Daher sollten Sie einen Blick in die GNU Manual Seite
     <ulink url="&url.gnu.man.date-input;">Date Input Formats</ulink> werfen.
     Dort wird die gültige Syntax für <parameter>time</parameter> beschrieben.
    </simpara>
    <para>
     <example>
      <title><function>strtotime</function>-Beispiele:</title>
      <programlisting role="php">
<![CDATA[
echo strtotime ("now"), "\n";
echo strtotime ("10 September 2000"), "\n";
echo strtotime ("+1 day"), "\n";
echo strtotime ("+1 week"), "\n";
echo strtotime ("+1 week 2 days 4 hours 2 seconds"), "\n";
echo strtotime ("next Thursday"), "\n";
echo strtotime ("last Monday"), "\n";
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Fehlerüberprüfung</title>
      <programlisting role="php">
<![CDATA[
$str = 'Nicht gut';
if (($timestamp = strtotime($str)) === -1) {
    echo "Der String ($str) ist falsch.";
} else {
    echo "$str == ". date('l dS of F Y h:i:s A',$timestamp);
}
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      Der gültige Bereich eines Timestamp liegt typischerweise zwischen
      Fri, 13 Dec 1901 20:45:54 GMT und Tue, 19 Jan 2038 03:14:07 GMT.
      (Das sind die Datumsangaben, die dem minimalen und maximalen Wert eines
      vorzeichenbehafteten 32-bit Integer entsprechen.)
     </para>
    </note>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

