<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.7 $ -->
  <reference id="ref.nis">
  <title>YP/NIS Funktionen</title>
  <titleabbrev>YP/NIS</titleabbrev>

  <partintro>
   <para>
    NIS (früher unter dem Namen Yellow Pages bekannt) erlauben das
    netzwerkweite Management von wichtigen administrativen Dateien (z.B der
    Passwort-Datei. Für weitere Informationen zu NIS empfehlen wir die
    NIS Manpage und die <unlink url="&url.nis;">Einführung zu YP/NIS</ulink>
    Des weiteren ist ein empfehlenswertes Buch mit dem Titel <ulink
    url="&url.nis.book;">Managing NFS and NIS</ulink> von Hal Stern erhältlich.
   </para>
   <para>
    Um die NIS-Funktionen mit PHP nutzen zu können, muß PHP vor der
    Compilierung mit den Optionen
    <option role="configure">--with-yp</option>(PHP 3) oder
    <option role="configure">--enable-yp</option>(PHP 4) konfiguriert werden.
   </para>
  </partintro>

  <refentry id="function.yp-get-default-domain">
   <refnamediv>
    <refname>yp_get_default_domain</refname>
    <refpurpose>Gibt die voreingestellte NIS-Domäne der aktuellen
    Maschine zurück.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>yp_get_default_domain</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>yp_get_default_domain</function> gibt die voreingestellt Domäne
     des aktuellen Knotens oder &false; zurück. Kann für erfolgreiche NIS
     Aufrufe als der Parameter domain genutzt werden.
    </para>
    <para>
     Eine NIS-Domäne kann als Gruppe von NIS-Maps beschrieben werden. Jeder
     Host, der Informationen abrufen möchte, verbindet sich selbst zu einer
     bestimmten Domäne. Weitere Informationen hierzu finden sie in den oben
     genannten Quellen.
    </para>
    <para>
     <example>
      <title>Beispiel für die voreingestellte Domäne</title>
      <programlisting role="php">
&lt;?php
$domain = yp_get_default_domain();
echo "Default NIS domain is: " . $domain;
?>
      </programlisting>
     </example>
    </para>
<!--
    <para>
     Siehe auch: <link linkend="function.yp-errno">yp_errno</link> und
     <link linkend="function.yp-err-string">yp_err_string</link>
    </para>
-->
   </refsect1>
  </refentry>

  <refentry id="function.yp-order">
   <refnamediv>
    <refname>yp_order</refname>
    <refpurpose>Gibt die Ordnungsnummer einer Map zurück</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>yp_order</function></funcdef>
      <paramdef>string <parameter>domain</parameter></paramdef>
      <paramdef>string <parameter>map</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>yp_order</function> gibt die Nummer einer Map in der
     Reihenfolge der NIS Maps oder &false; zurück.
    </para>
    <para>
     <example>
      <title>Beispiel für die NIS Reihenfolge</title>
      <programlisting role="php">
&lt;?php
    $number = yp_order($domain,$mapname);
    echo "Order number for this map is: " . $number;
?>
      </programlisting>
     </example>
    </para>
    <para>
     See also <function>yp-get-default-domain</function>.
<!--
     linkend="function.yp-errno">yp_errno</link> and <link
     linkend="function.yp-err-string">yp_err_string</link>
-->
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.yp-master">
   <refnamediv>
    <refname>yp_master</refname> 
    <refpurpose>
     Gibt den Namen des Hauptservers für eine NIS-Map zurück
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>yp_master</function></funcdef> 
      <paramdef>string <parameter>domain</parameter></paramdef>
      <paramdef>string <parameter>map</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>yp_master</function> gibt den Namen des Hauptservers (Master)
     für eine NIS-Map zurück.
    </para>
    <para>
     <example>
      <title>Beispiel für den NIS Master</title>
      <programlisting role="php">
&lt;?php
$number = yp_master ($domain, $mapname);
echo "Master for this map is: " . $master;
?>
      </programlisting>
     </example>
    </para>
    <para>
     Siehe auch <function>yp-get-default-domain</function>.
<!--
     linkend="function.yp-errno">yp_errno</link> and <link
     linkend="function.yp-err-string">yp_err_string</link>
-->
    </para>
   </refsect1>
  </refentry>
 
  <refentry id="function.yp-match">
   <refnamediv>
    <refname>yp_match</refname>
    <refpurpose>Gibt die übereinstimmende Zeile zurück</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>yp_match</function></funcdef>
      <paramdef>string <parameter>domain</parameter></paramdef>
      <paramdef>string <parameter>map</parameter></paramdef>
      <paramdef>string <parameter>key</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>yp_match</function> gibt den Wert zurück, der mit dem
     übergebenen Schlüssel der angegebenen Map verbunden ist, bei einem
     Fehler &false;. Der Schlüssel muss eindeutig sein.
    </para>
    <para>
     <example>
      <title>Beispiel für den übereinstimmenden NIS-Eintrag</title>
      <programlisting role="php">
&lt;?php
$entry = yp_match ($domain, "passwd.byname", "joe");
echo "Matched entry is: " . $entry;
?>
      </programlisting>
     </example>
    </para>
    <para>
     In diesem Fall wäre folgendes möglich: joe:##joe:11111:100:Joe
     User:/home/j/joe:/usr/local/bin/bash
    </para>
    <para>
     See also <function>yp-get-default-domain</function>
<!--
     linkend="function.yp-errno">yp_errno</link> and <link
     linkend="function.yp-err-string">yp_err_string</link>
-->
    </para>
   </refsect1>
  </refentry>
  
  <refentry id="function.yp-first">
   <refnamediv>
    <refname>yp_first</refname> 
    <refpurpose>
     Gibt das erste Schlüssel-Wert-Paar der angegebenen Map zurück
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>yp_first</function></funcdef>
      <paramdef>string <parameter>domain</parameter></paramdef>
      <paramdef>string <parameter>map</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>yp_first</function> gibt das erste Schlüssel-Wert-Paar der
     angegebenen Map zurück, andernfalls &false;.
    </para>
    <para>
     <example>
      <title>Beispiel für den ersten NIS-Eintrag</title
      <programlisting role="php">
&lt;?php
$entry = yp_first($domain, "passwd.byname");
$key = $entry ["key"];
$value = $entry ["value"];
echo "First entry in this map has key " . $key . " and value " . $value;
?>
      </programlisting>
     </example>
    </para>
    <para>
     See also <function>yp-get-default-domain</function>
<!--
     <link linkend="function.yp-errno">yp_errno</link> and <link
     linkend="function.yp-err-string">yp_err_string</link>
-->
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.yp-next">
   <refnamediv>
    <refname>yp_next</refname>
    <refpurpose>Gibt das nächste Schlüssel-Wert-Paar in der angegebenen Map
    zurück.</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>yp_next</function></funcdef>
      <paramdef>string <parameter>domain</parameter></paramdef>
      <paramdef>string <parameter>map</parameter></paramdef>
      <paramdef>string <parameter>key</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>yp_next</function> gibt den das nächste Schlüssel-Wert-Paar in
     der angegebene Map zurück, nachdem der Schlüssel übergeben wurde, bei
     einem Fehler &false;.
    </para>
    <para>
     <example>
      <title>Beispiel für den nächsten NIS-Eintrag</title>
      <programlisting role="php">
&lt;?php
$entry = yp_next ($domain, "passwd.byname", "joe");

if (!$entry) {
	echo "No more entries found\n";
    <!-- echo yp_errno() . ": " . yp_err_string(); -->
}

$key = key ($entry);

echo "The next entry after joe has key " . $key 
      . " and value " . $entry[$key];
?>
      </programlisting>
     </example>
    </para>
    <para> 
     Siehe auch <function>yp-get-default-domain</function>.
<!--
     <link linkend="function.yp-errno">yp_errno</link> and <link
     linkend="function.yp-err-string">yp_err_string</link>
-->
    </para>
   </refsect1>
  </refentry>

<!-- Function doesn't exist
     Funktion existiert nicht, wird übersetzt, sobald die Funktion existiert. 
    
  <refentry id="function.yp-errno">
   <refnamediv>
   <refname>yp_errno</refname> 
    <refpurpose>
     Returns the error code of the previous operation
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>yp_errno</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para> 
     <function>yp_errno</function> returns the error code of the
     previous operation.
    </para>
    <para>
     Possible errors are:
    </para>
    <para>
     <simplelist>
      <member>1 args to function are bad</member> 
      <member>2 RPC failure - domain has been unbound</member>
      <member>3 can't bind to server on this domain</member>
      <member>4 no such map in server's domain</member>
      <member>5 no such key in map</member>
      <member>6 internal yp server or client error</member>
      <member>7 resource allocation failure</member> 
      <member>8 no more records in map database</member>
      <member>9 can't communicate with portmapper</member>
      <member>10 can't communicate with ypbind</member>
      <member>11 can't communicate with ypserv</member>
      <member>12 local domain name not set</member> 
      <member>13 yp database is bad</member> 
      <member>14 yp version mismatch</member> 
      <member>15 access violation</member> 
      <member>16 database busy</member>
     </simplelist>
    </para>
    <para>
     See also <function>yp_err_string</function>.
    </para>
   </refsect1>
  </refentry>

-->

<!-- Function doesn't exist
     Funktion existiert nicht, wird übersetzt sobald die Funktion existiert 

  <refentry id="function.yp-err-string">
   <refnamediv>
   <refname>yp_err_string</refname> 
   <refpurpose>
    Returns the error string associated with the previous operation
   </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>yp_err_string</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>yp_err_string</function> returns the error message
     associated with the previous operation.  Useful to indicate what
     exactly went wrong.
    </para>
    <para>
     <example>
      <title>Example for NIS errors</title>
      <programlisting role="php">
&lt;?php
    echo "Error: " . yp_err_string();
?>
      </programlisting>
     </example>
    </para>
    <para>
     See also <function>yp_errno</function>.
    </para>
   </refsect1>
  </refentry>

-->

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
