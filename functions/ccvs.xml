<?xml version="1.0" encoding="iso-8859-1"?>
<!-- 
CCVS Documentation by Brendan W. McAdams <brendan@plexmedia.com>
Copyright (c) 2000 by the PHP Group

-Special Thanks to RedHat, Inc. for the contribution of their original
documentation for the php3 version of this module, which helped us
start this document.  
-->
 
 <reference id="ref.ccvs">
  <title>CCVS API Funktionen</title>
  <titleabbrev>CCVS</titleabbrev>

  <partintro>
   <simpara>
    Die Funktionsschnittstelle der CCVS API erlaubt es direkt von PHP
    Scripten aus mit CCVS zu arbeiten. CCVS ist <ulink
    url="&url.redhat;">RedHat's</ulink> Lösung zu dem "Mann in der 
    Mitte" bei der Abwicklung von Kreditkarten. Es stellt die
    Möglichkeit zur Verfügung sich direkt über einen Unixrechner und 
    ein Modem zu einem Kartenanbieter zu verbinden. Mit hilfe des 
    CCVS Modules für PHP kann man Kreditkarten direkt durch CCVS über
    PHP Scripte abwickeln. Die folgende Referenz wird diesen Vorgang
    umreissen.
   </simpara>
   <simpara>
    Um CCVS Unterstützung zu aktivieren, sollte man erst das CCVS 
    Installationsverzeichnis überprüfen. Es ist notwendig PHP mit der
    Option <option role="configure">--with-ccvs</option> zu 
    configurieren. Wenn diese Option ohne den Pfad zu CCVS 
    installation angegeben wird, versucht PHP es in den 
    voreingestellten Pfaden einer CCVS standard installation 
    (/usr/local/ccvs) zu finden. Wenn CCVS nicht den Standard Pfad 
    hat, ist es nötig configure mit <option
    role="configure">--with-ccvs=$ccvs_pfad</option> zu starten,
    wobei $ccvs_pfad der Pfad zu installation ist. Anzumerken ist,
    das CCVS Unterstützung vorrausetzt das $ccvs_pfad/lib und
    $ccvs_pfad/include existieren, und die include cv_api.h im 
    include Verzeichnis, und libccvs.a im lib Verzeichnis liegen.
   </simpara>
   <simpara>
    Ausserdem muss ein ccvsd Prozess für die Einstellungen laufen
    die mit PHP Skripten arbeiten sollen. Es ist nötig das die 
    PHP Prozesse unter dem selben Benutzer laufen für den auch ccvs
    installiert wurde (bsp: wenn ccvs unter dem user 'ccvs' 
    installiert wurde, müssen die PHP Prozesse ebenfalls als 'ccvs' 
    laufen.)
   </simpara>
   <simpara>
    Weiter Informationen zu CCVS kann man unter <ulink
    url="&url.redhat.ccvs;">&url.redhat.ccvs;</ulink> finden.
   </simpara>
   <simpara>
    An diesem Dokumentationsteil wird noch gearbeitet. RedHat
    unterhält eine geringfügig veraltete aber immernoch brauchbare 
    Dokumentation unter:
    <ulink url="&url.redhat.support;">&url.redhat.support;</ulink>.
   </simpara>
  </partintro>

  <refentry id="function.ccvs-init">
   <refnamediv>
    <refname>ccvs_init</refname>
    <refpurpose>Initialize CCVS for use</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ccvs_init</function></funcdef>
      <paramdef>string <parameter>name</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ccvs-done">
   <refnamediv>
    <refname>ccvs_done</refname>
    <refpurpose>Terminate CCVS engine and do cleanup work</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ccvs_done</function></funcdef>
      <paramdef>string <parameter>sess</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ccvs-new">
   <refnamediv>
    <refname>ccvs_new</refname>
    <refpurpose>Create a new, blank transaction </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ccvs_new</function></funcdef>
      <paramdef>string <parameter>session</parameter></paramdef>
      <paramdef>string <parameter>invoice</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ccvs-add">
   <refnamediv>
    <refname>ccvs_add</refname>
    <refpurpose>Add data to a transaction </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ccvs_add</function></funcdef>
      <paramdef>string <parameter>session</parameter></paramdef>
      <paramdef>string <parameter>invoice</parameter></paramdef>
      <paramdef>string <parameter>argtype</parameter></paramdef>
      <paramdef>string <parameter>argval</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ccvs-delete">
   <refnamediv>
    <refname>ccvs_delete</refname>
    <refpurpose>Delete a transaction</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ccvs_delete</function></funcdef>
      <paramdef>string <parameter>session</parameter></paramdef>
      <paramdef>string <parameter>invoice</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ccvs-auth">
   <refnamediv>
    <refname>ccvs_auth</refname>
    <refpurpose> 
     Perform credit authorization test on a transaction 
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ccvs_auth</function></funcdef>
      <paramdef>string <parameter>session</parameter></paramdef>
      <paramdef>string <parameter>invoice</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ccvs-return">
   <refnamediv>
    <refname>ccvs_return</refname>
    <refpurpose>
     Transfer funds from the merchant to the credit card holder 
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ccvs_return</function></funcdef>
      <paramdef>string <parameter>session</parameter></paramdef>
      <paramdef>string <parameter>invoice</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ccvs-reverse">
   <refnamediv>
    <refname>ccvs_reverse</refname>
    <refpurpose>
     Perform a full reversal on an already-processed authorization 
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ccvs_reverse</function></funcdef>
      <paramdef>string <parameter>session</parameter></paramdef>
      <paramdef>string <parameter>invoice</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ccvs-sale">
   <refnamediv>
    <refname>ccvs_sale</refname>
    <refpurpose>
     Transfer funds from the credit card holder to the merchant
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ccvs_sale</function></funcdef>
      <paramdef>string <parameter>session</parameter></paramdef>
      <paramdef>string <parameter>invoice</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ccvs-void">
   <refnamediv>
    <refname>ccvs_void</refname>
    <refpurpose>
     Perform a full reversal on a completed transaction 
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ccvs_void</function></funcdef>
      <paramdef>string <parameter>session</parameter></paramdef>
      <paramdef>string <parameter>invoice</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ccvs-status">
   <refnamediv>
    <refname>ccvs_status</refname>
    <refpurpose>Check the status of an invoice</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ccvs_status</function></funcdef>
      <paramdef>string <parameter>session</parameter></paramdef>
      <paramdef>string <parameter>invoice</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ccvs-count">
   <refnamediv>
    <refname>ccvs_count</refname>
    <refpurpose>
     Find out how many transactions of a given type are stored in the system 
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>ccvs_count</function></funcdef>
      <paramdef>string <parameter>session</parameter></paramdef>
      <paramdef>string <parameter>type</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ccvs-lookup">
   <refnamediv>
    <refname>ccvs_lookup</refname>
    <refpurpose>
     Look up an item of a particular type in the database #
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ccvs_lookup</function></funcdef>
      <paramdef>string <parameter>session</parameter></paramdef>
      <paramdef>string <parameter>invoice</parameter></paramdef>
      <paramdef>int <parameter>inum</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ccvs-report">
   <refnamediv>
    <refname>ccvs_report</refname>
    <refpurpose>Return the status of the background communication process </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ccvs_report</function></funcdef>
      <paramdef>string <parameter>session</parameter></paramdef>
      <paramdef>string <parameter>type</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ccvs-command">
   <refnamediv>
    <refname>ccvs_command</refname>
    <refpurpose>
     Performs a command which is peculiar to a single protocol, 
     and thus is not available in the general CCVS API 
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ccvs_command</function></funcdef>
      <paramdef>string <parameter>session</parameter></paramdef>
      <paramdef>string <parameter>type</parameter></paramdef>
      <paramdef>string <parameter>argval</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.ccvs-textvalue">
   <refnamediv>
    <refname>ccvs_textvalue</refname>
    <refpurpose>Get text return value for previous function call</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>ccvs_textvalue</function></funcdef>
      <paramdef>string <parameter>session</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     &warn.undocumented.func;
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
