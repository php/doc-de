<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.21 Maintainer: tom Status: ready -->
<reference id="ref.com">
 <title>COM Support Funktionen für Windows</title>
 <titleabbrev>COM</titleabbrev>
 
 <partintro>
  <simpara>
   Die COM Funktionen sind nur in der Windows Version von PHP
   verfügbar, und wurden mit PHP 4 eingeführt
  </simpara>
 </partintro>
 
 <refentry id="class.com">
  <refnamediv>
   <refname>COM</refname>
   <refpurpose>COM Klasse</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
  <synopsis>$obj = new <classname>COM</classname>("server.object")</synopsis>
  </refsynopsisdiv>
  <refsect1 id="class.com.class">
   <title>Beschreibung</title>
   <simpara>
    Die COM Klasse bietet ein Gerüst zur Integration von (D)COM Komponenten
    in Ihre PHP Skripte.
   </simpara>
  </refsect1>
  <refsect1 id="class.com.constructor">
   <title>Methoden</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>COM::COM</function></funcdef>
     <paramdef>string <parameter>module_name</parameter></paramdef>
     <paramdef>string <parameter><optional>server_name</optional></parameter></paramdef>
     <paramdef>int <parameter><optional>codepage</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    COM Klassen Konstruktor. Parameter:
    <variablelist>
    <varlistentry><term>module_name</term>
    <listitem>
     <simpara>
      Name oder Klassen-ID der gewünschten Komponente.
     </simpara>
    </listitem>
    </varlistentry>
    <varlistentry><term>server_name</term>
    <listitem>
     <simpara>
      Name des DCOM Servers, von welchem die Komponente geholt werden soll.
      Ist &null; angegeben, wird <literal>localhost</literal> angenommen.
      Um DCOM zuzulassen, muss <constant>com.allow_dcom</constant> 
      in der <filename>php.ini</filename> auf &true; 
      gesetzt sein.
     </simpara>
    </listitem>
    </varlistentry>
    <varlistentry><term>codepage</term>
    <listitem>
     <simpara>
      Spezifiziert die Codepage, welche zur Konvertierung der PHP-Strings in 
      Unicode-Strings und umgekehrt verwendet wird. Mögliche Werte sind 
      <constant>CP_ACP</constant>, <constant>CP_MACCP</constant>,
      <constant>CP_OEMCP</constant>, <constant>CP_SYMBOL</constant>,
      <constant>CP_THREAD_ACP</constant>, <constant>CP_UTF7</constant>
      und <constant>CP_UTF8</constant>.
     </simpara>
    </listitem>
    </varlistentry>
    </variablelist>
   </para>
   <para>
    <example id="example.com1">
     <title>COM Beispiel (1)</title>
     <programlisting role="php">
// Word starten
$word = new COM("word.application") or die("Konnte Word nicht instantiieren");
print "Word geladen, Version {$word->Version}\n";

//Fenster anzeigen
$word->Visible = 1;

//ein leeres Dokument öffnen
$word->Documents->Add();

//irgendetwas tun
$word->Selection->TypeText("Dies ist ein Test...");
$word->Documents[1]->SaveAs("Useless test.doc");

//Word schließen
$word->Quit();

//Das Objekt freigeben
$word->Release();
$word = null;
     </programlisting>
    </example>
   </para>
   <para>
    <example id="example.com2">
     <title>COM Beispiel (2)</title>
     <programlisting role="php">
$conn = new COM("ADODB.Connection") or die("Kann ADO nicht starten");
$conn->Open("Provider=SQLOLEDB; Data Source=localhost;
Initial Catalog=database; User ID=user; Password=password");

$rs = $conn->Execute("SELECT * FROM sometable");    // Recordset

$num_columns = $rs->Fields->Count();
echo $num_columns . "\n";

for ($i=0; $i &lt; $num_columns; $i++)
{
    $fld[$i] = $rs->Fields($i);
}

$rowcount = 0;
while (!$rs->EOF)
{
    for ($i=0; $i &lt; $num_columns; $i++)
    {
        echo $fld[$i]->value . "\t";
    }
    echo "\n";
    $rowcount++;            // increments rowcount
    $rs->MoveNext();
}

$rs->Close();
$conn->Close();

$rs->Release();
$conn->Release();

$rs = null;
$conn = null;
     </programlisting>
    </example>
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="class.variant">
  <refnamediv>
   <refname>VARIANT</refname>
   <refpurpose>VARIANT Klasse</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
  <synopsis>$vVar = new <classname>VARIANT</classname>($var)</synopsis>
  </refsynopsisdiv>
  <refsect1 id="class.variant.class">
   <title>Beschreibung</title>
   <simpara>
    Ein einfacher Container, um Variablen VARIANT Strukturen zu verpacken.
   </simpara>
  </refsect1>
  <refsect1 id="class.variant.constructor">
   <title>Methoden</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>VARIANT::VARIANT</function></funcdef>
     <paramdef>mixed <parameter><optional>value</optional></parameter></paramdef>
     <paramdef>int <parameter><optional>type</optional></parameter></paramdef>
     <paramdef>int <parameter><optional>codepage</optional></parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    VARIANT Klassen-Konstruktor. Parameter:
    <variablelist>
    <varlistentry><term>value</term>
    <listitem>
     <simpara>
      Anfangswert. Ist er nicht angegeben, wird ein VT_EMPTY Objekt erzeugt.
     </simpara>
    </listitem>
    </varlistentry>
    <varlistentry><term>type</term>
    <listitem>
     <simpara>
      spezifiziert den Typ vom Inhalt des VARIANT Objektes. Mögliche Werte sind
      <constant>VT_UI1</constant>, <constant>VT_UI2</constant>, <constant>VT_UI4</constant>, 
      <constant>VT_I1</constant>, <constant>VT_I2</constant>, <constant>VT_I4</constant>, 
      <constant>VT_R4</constant>, <constant>VT_R8</constant>, <constant>VT_INT</constant>, <constant>VT_UINT</constant>,
      <constant>VT_BOOL</constant>, <constant>VT_ERROR</constant>, <constant>VT_CY</constant>, 
      <constant>VT_DATE</constant>, <constant>VT_BSTR</constant>, <constant>VT_DECIMAL</constant>, 
      <constant>VT_UNKNOWN</constant>, <constant>VT_DISPATCH</constant> und <constant>VT_VARIANT</constant>.
      Diese Werte sind wechselseitig exklusiv, können aber mit <constant>VT_BYREF</constant>
      vereinigt werden, um zu spezifizieren, dass es sich um einen Wert handelt. 
      Wird er weggelassen, wird der Typ von <parameter>value</parameter> verwendet.
      Konsultieren Sie bitte die MSDN Library für weitere Informationen.
     </simpara>
    </listitem>
    </varlistentry>
    <varlistentry><term>codepage</term>
    <listitem>
     <simpara>
      gibt die Codepage an, welche zur Konvertierung der PHP-Strings in
      Unicode-Strings und umgekehrt verwendet wird. Mögliche Werte sind 
      <constant>CP_ACP</constant>, <constant>CP_MACCP</constant>,
      <constant>CP_OEMCP</constant>, <constant>CP_SYMBOL</constant>,
      <constant>CP_THREAD_ACP</constant>, <constant>CP_UTF7</constant>
      und <constant>CP_UTF8</constant>.
     </simpara>
    </listitem>
    </varlistentry>
    </variablelist>
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.com-load">
  <refnamediv>
   <refname>com_load</refname>
   <refpurpose>
    Erstellt eine neue Referenz auf eine COM Komponente
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>com_load</function></funcdef>
     <paramdef>string <parameter>module name</parameter></paramdef>
     <paramdef>string
      <parameter>
      <optional>server name</optional>
      </parameter>
     </paramdef>
     <paramdef>int
      <parameter>
      <optional>codepage</optional>
      </parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>com_load</function> erstellt eine neue COM Komponente, 
    und gibt eine Referenz darauf zurück. Im Fehlerfall wird 
    &false; zurückgegeben. Mögliche Werte für 
    <parameter>codepage</parameter> sind <constant>CP_ACP</constant>, 
    <constant>CP_MACCP</constant>, <constant>CP_OEMCP</constant>, 
    <constant>CP_SYMBOL</constant>, <constant>CP_THREAD_ACP</constant>, 
    <constant>CP_UTF7</constant>, und <constant>CP_UTF8</constant>.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.com-invoke">
  <refnamediv>
   <refname>com_invoke</refname>
   <refpurpose>
    Ruft eine Methode einer COM Komponente auf
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>mixed <function>com_invoke</function></funcdef>
     <paramdef>resource <parameter>com_object</parameter></paramdef>
     <paramdef>string <parameter>function_name</parameter></paramdef>
     <paramdef>mixed
      <parameter>
      <optional>function parameters, ...</optional>
      </parameter>
     </paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    <function>com_invoke</function> ruft eine Methode des mittels 
    <parameter>com_object</parameter> referenzierten COM Komponente auf.
    Gibt bei Erfolg den Rückgabewert von <parameter>function_name</parameter>,
    oder im Fehlerfall &false; zurück.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.com-propget">
  <refnamediv>
   <refname>com_propget</refname>
   <refpurpose>
    Liefert den Wert der Eigenschaft einer COM Komponente
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>mixed <function>com_propget</function></funcdef>
     <paramdef>resource <parameter>com_object</parameter></paramdef>
     <paramdef>string <parameter>property</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    Diese Funktion ist ein Alias von <function>com_get</function>.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.com-get">
  <refnamediv>
   <refname>com_get</refname>
   <refpurpose>
    Liefert den Wert der Eigenschaft einer COM Komponente
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>mixed <function>com_get</function></funcdef>
     <paramdef>resource <parameter>com_object</parameter></paramdef>
     <paramdef>string <parameter>property</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    Liefert den Wert der Eigenschaft <parameter>property</parameter> der
    mittels <parameter>com_object</parameter> referenzierten COM Komponente.
    Gibt im Fehlerfall &false; zurück.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.com-propput">
  <refnamediv>
   <refname>com_propput</refname>
   <refpurpose>
    Weist einer Eigenschaft einer COM Komponente einen Wert zu 
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>com_propput</function></funcdef>
     <paramdef>resource <parameter>com_object</parameter></paramdef>
     <paramdef>string <parameter>property</parameter></paramdef>
     <paramdef>mixed <parameter>value</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    Diese Funktion ist ein Alias für <function>com_set</function>.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.com-propset">
  <refnamediv>
   <refname>com_propset</refname>
   <refpurpose>
    Weist einer Eigenschaft einer COM Komponente einen Wert zu 
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>com_propset</function></funcdef>
     <paramdef>resource <parameter>com_object</parameter></paramdef>
     <paramdef>string <parameter>property</parameter></paramdef>
     <paramdef>mixed <parameter>value</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    Diese Funktion ist ein Alias für <function>com_set</function>.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.com-set">
  <refnamediv>
   <refname>com_set</refname>
   <refpurpose>
    Weist einer Eigenschaft einer COM Komponente einen Wert zu.
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>void <function>com_set</function></funcdef>
     <paramdef>resource <parameter>com_object</parameter></paramdef>
     <paramdef>string <parameter>property</parameter></paramdef>
     <paramdef>mixed <parameter>value</parameter></paramdef>
    </funcprototype>
   </funcsynopsis>
   <para>
    Setzt den Wert der Eigenschaft <parameter>property</parameter> der COM
    Komponente <parameter>com_object</parameter>. Gibt bei Erfolg den neu gesetzten 
    Wert, oder im Fehlerfall &false; zurück.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.com-addref">
  <refnamediv>
   <refname>com_addref</refname>
   <refpurpose>
    Erhöht den Referenzzähler der Komponente
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
      <funcdef>void <function>com_addref</function></funcdef>
      <void/>
    </funcprototype>
   </funcsynopsis>
   <para>
    Erhöht den Referenzzähler der Komponente.
   </para>
  </refsect1>
 </refentry>
 
 <refentry id="function.com-release">
  <refnamediv>
   <refname>com_release</refname>
   <refpurpose>
    Reduziert den Referenzzähler der Komponente
   </refpurpose>
  </refnamediv>
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
      <funcdef>void <function>com_release</function></funcdef>
      <void/>
    </funcprototype>
   </funcsynopsis>
   <para>
    Reduziert den Referenzzähler der Komponente.
   </para>
  </refsect1>
 </refentry>
</reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
