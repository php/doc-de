 <reference id="ref.image">
  <title>Grafik-Funktionen</title>
  <titleabbrev>Grafiken</titleabbrev>
  <!-- Anmerkung des Übersetzers:
       entspricht en/functions/image.xml 1.26 -->


  <partintro>
   <simpara>
    Sie können die Grafik-Funktionen von PHP nicht nur benutzen, um
    die Grösse von <acronym>JPEG</acronym>, <acronym>GIF</acronym>,
    <acronym>PNG</acronym> und <acronym>SWF</acronym>-Bild-Dateien zu
    ermitteln, sondern auch - sofern Sie die
    <acronym>GD</acronym>-Bibliothek (verfügbar unter <ulink
    url="&url.gd;">&url.gd;</ulink>) eingebunden haben - Grafiken
    bzw. Bilder dynamisch (also zur Laufzeit ihres Skripts) erzeugen
    bzw. verändern.
   </simpara>
   <simpara>
    Die mittels dieser Funktionen veränderbaren Grafik-Formate sind
    abhängig von der bei ihnen installierten GD-Version. Versionen vor
    gd-1.6 unterstützen das GIF- aber kein PNG-Format. Die Versionen
    danach unterstützen zwar das PNG- aber nicht mehr das GIF-Format.
   </simpara>
   <simpara>
    Um JPEG-Grafiken lesen und schreiben zu können, benötigen Sie 
    jpeg-6b (siehe unter <ulink url="&url.jpeg;">&url.jpeg;</ulink>).
    Anschließend müssen Sie gd neu compilieren mit
    <option role="configure">--with-jpeg-dir=/path/to/jpeg-6b</option>.
    Danach muss auch PHP mit der Option
    <option role="configure">--with-jpeg-dir=/path/to/jpeg-6b</option>
    neu compiliert werden.
   </simpara>
   <simpara>
    Die Unterstützung von Type-1-Fonts können Sie mit der Installation
    von t1lib (siehe unter<ulink url="&url.t1lib;">&url.t1lib;</ulink>)
    einbinden. Beim Compilieren müssen Sie dann noch die Option
    <option role="configure">--with-t1lib[=dir]</option> angeben.
   </simpara>
  </partintro>

  <refentry id="function.getimagesize">
   <refnamediv>
    <refname>GetImageSize</refname>
    <refpurpose>
     Ermittelt die Ausmaße einer GIF-, JPEG-, PNG- oder 
     SWF-Grafik-Datei
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>getimagesize</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
      <paramdef>array 
       <parameter><optional>imageinfo</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Mit <function>GetImageSize</function> ermitteln Sie die Daten
     jeder <acronym>GIF</acronym>-, <acronym>JPG</acronym>-,
     <acronym>PNG</acronym> oder <acronym>SWF</acronym>-Datei. Es
     werden die Ausmaße in Abhängigkeit vom Grafik-Typ sowie die Höhe
     und Breite als <emphasis>ein</emphasis> String
     zurückgegeben. Dieser kann innerhalb eines regulären
     <acronym>HTML</acronym> <sgmltag>IMG</sgmltag>-Tags verwendet
     werden.
    </para>
    <para>
     Es wird ein Array aus 4 Elementen zurück gegeben. Im Array-Index
     0 steht die Breite. Index 1 enthält die Höhe, 2 ein Flag je nach
     Grafik-Typ (1 = GIF, 2 = JPG, 3 = PNG, SWF = 4) und Index 3 die
     richtige Zeichenkette im Format "height=xxx width=xxx" zur
     Verwendung im IMG-Tag von HTML.
     <example>
      <title>Grafik-Ausmaße ermitteln per GetImageSize:</title>
      <programlisting role="php">
&lt;?php $size = GetImageSize ("img/flag.jpg"); ?>
&lt;IMG SRC="img/flag.jpg" &lt;?php echo $size[3]; ?>
      </programlisting>
     </example>
    </para>
    <para>
     Mit dem optionalen <parameter>imageinfo</parameter>-Parameter
     können Sie weitere Informationen der Grafik-Datei auslesen.
     Z.Zt. unterstützt dies die verschiedenen <acronym>JPG</acronym>
     APP-Markierungen per assoziativem Array. Einige Programme nutzen
     diese Markierungen, um Text in diese Grafiken einzubinden.
     Gebräuchlich ist die Einbettung von <acronym>IPTC</acronym>
     <ulink url="&url.iptc;">&url.iptc;</ulink> Informationen in die
     APP13-Marke. Sie können <function>iptcparse</function> benutzen,
     um die binäre APP13-Marke in ein lesbares Format zu übertragen.
     <example>
      <title>GetImageSize mit IPTC-Informationen</title>
      <programlisting>
&lt;?php 
    $size = GetImageSize ("testimg.jpg",&$info);
    if (isset ($info["APP13"])) {
        $iptc = iptcparse ($info["APP13"]);
        var_dump ($iptc);
    }
?>
      </programlisting>
     </example>
     <note>
      <simpara>
       Dieser Befehl funktioniert auch ohne GD-Bibliothek.
      </simpara>
     </note>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagearc">
   <refnamediv>
    <refname>ImageArc</refname>
    <refpurpose>Zeichnen einer Teil-Ellipse</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagearc</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>cx</parameter></paramdef>
      <paramdef>int <parameter>cy</parameter></paramdef>
      <paramdef>int <parameter>w</parameter></paramdef>
      <paramdef>int <parameter>h</parameter></paramdef>
      <paramdef>int <parameter>s</parameter></paramdef>
      <paramdef>int <parameter>e</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ImageArc</function> zeichnet den Teil einer Ellipse
     mit Mittelpunkt bei <parameter>cx</parameter> und 
     <parameter>cy</parameter> (oben links ist 0, 0) in dem durch den
     <parameter>im</parameter>-Handle definiertem Bild.
     <parameter>W</parameter> und <parameter>h</parameter> benennen
     die Breite und Höhe der Ellipse, <parameter>s</parameter> und
     <parameter>e</parameter> den Start- bzw. Endwinkel des Bogens in
     Grad. Mit <parameter>col</parameter> bestimmen Sie die Farbe der
     Ellipse.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagechar">
   <refnamediv>
    <refname>ImageChar</refname>
    <refpurpose>
     Stellt ein Zeichen mit horizontaler Ausrichtung dar
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagechar</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>font</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>string <parameter>c</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ImageChar</function> zeichnet das erste Zeichen
     (Charakter) des Strings <parameter>c</parameter> in das Bild,
     auf das per <parameter>id</parameter> gezeigt wird. Die linke
     obere Ecke des Zeichens wird durch <parameter>x</parameter> /
     <parameter>y</parameter> bestimmt. Dabei wird von den
     Koordinaten 0 / 0 als Zeichnungsanfang links-oben ausgegangen.
     Die Farbe des Zeichens wird mit <parameter>col</parameter>
     bestimmt. Ist <parameter>font</parameter> als 1, 2, 3, 4 oder 5
     definiert, wird ein eingebauter Font genutzt (je grösser die
     Nummer, desto grösser der Font).
    </para>
    <para>
     Beachten Sie auch <function>imageloadfont</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecharup">
   <refnamediv>
    <refname>ImageCharUp</refname>
    <refpurpose>
     Zeichnet einen vertikal ausgerichteten Charakter
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecharup</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>font</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>string <parameter>c</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     <function>ImageCharUp</function> zeichnet das erste Zeichen
     (Charakter) des Strings <parameter>c</parameter> in das Bild,
     auf das per <parameter>id</parameter> gezeigt wird. Die
     Koordinaten des Zeichens werden durch <parameter>x</parameter> /
     <parameter>y</parameter> bestimmt. Dabei wird von den
     Koordinaten 0 / 0 als Zeichnungsanfang links-oben ausgegangen.
     Die Farbe des Zeichens wird mit <parameter>col</parameter>
     bestimmt. Ist <parameter>font</parameter> als 1, 2, 3, 4 oder 5
     definiert, wird ein eingebauter Font genutzt (je grösser die
     Nummer, desto grösser der Font).
    </para>
    <para>    
     Beachten Sie auch <function>imageloadfont</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorallocate">
   <refnamediv>
    <refname>ImageColorAllocate</refname>
    <refpurpose>Bestimmt die Farbe einer Grafik</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecolorallocate</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>red</parameter></paramdef>
      <paramdef>int <parameter>green</parameter></paramdef>
      <paramdef>int <parameter>blue</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ImageColorAllocate</function> gibt eine Farb-ID, die
     durch die angegebenen <acronym>RGB</acronym>-Werte bestimmt
     wird, zurück. Der Parameter <parameter>im</parameter> wird ihnen
     von der <function>imagecreate</function>-Funktion zurück gegeben.
     <function>ImageColorAllocate</function> muss für jede Farbe
     aufgerufen werden, die innerhalb der Grafik
     <parameter>im</parameter> verwendet werden soll.
     <informalexample>
      <programlisting role="php">
$weiss   = ImageColorAllocate ($im, 255, 255, 255);
$schwarz = ImageColorAllocate ($im, 0, 0, 0);
      </programlisting>
     </informalexample>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorat">
   <refnamediv>
    <refname>ImageColorAt</refname>
    <refpurpose>Ermittelt den Farbwert eines Bildpunktes</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecolorat</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>int <parameter>y</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Ermittelt den Farb-Wert eines Pixels an den Koordinaten
     <parameter>x</parameter> / <parameter>y</parameter> der mit
     <parameter>im</parameter> bestimmten Grafik.
    </para>
    <para>
     Beachten Sie auch <function>imagecolorset</function> und
     <function>imagecolorsforindex</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorclosest">
   <refnamediv>
    <refname>ImageColorClosest</refname>
    <refpurpose>
     Ermittelt den Farbwert-Index, der den angegebenen Farben
     am nächsten liegt
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecolorclosest</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>red</parameter></paramdef>
      <paramdef>int <parameter>green</parameter></paramdef>
      <paramdef>int <parameter>blue</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Gibt den Index der Farbwert-Palette des Bildes 
     <parameter>im</parameter> zurück, der den angegebenen
     <acronym>RGB</acronym>-Werten am nächsten kommt.
    </para>
    <para>
     Die "Entfernung" zwischen der angeforderten Farbe und jedem
     Farb-Paletten-Wert wird berechnet, als ob die angegebenen
     <acronym>RGB</acronym>-Werte Punkte in einem dreidimensionalen
     Raum darstellen.
    </para>
    <para>
     Siehe auch <function>imagecolorexact</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolordeallocate">
   <refnamediv>
    <refname>ImageColorDeAllocate</refname>
    <refpurpose>Löscht eine Farbdefinition</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecolordeallocate</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>index</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Die Funktion <function>ImageColorDeAllocate</function> löscht
     eine vorher über <function>ImageColorAllocate</function>
     ermittelte Farbe.
     <informalexample>
      <programlisting role="php">
$weiss = ImageColorAllocate($im, 255, 255, 255);
ImageColorDeAllocate($im, $weiss);
      </programlisting>
     </informalexample>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorexact">
   <refnamediv>
    <refname>ImageColorExact</refname>
    <refpurpose>
     Ermittelt den Index-Wert der angegebenen Farbe                  
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecolorexact</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>red</parameter></paramdef>
      <paramdef>int <parameter>green</parameter></paramdef>
      <paramdef>int <parameter>blue</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Gibt den Index der angegebenen Farbe in der Farb-Palette des
     Bildes <parameter>im</parameter> zurück.
    </para>
    <para>
     Existiert die Farbe in der Bild-Farb-Palette nicht, wird -1
     zurück gegeben.
    </para>
    <para>
     Siehe auch <function>imagecolorclosest</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorresolve">
   <refnamediv>
    <refname>ImageColorResolve</refname>
    <refpurpose>
     Ermittelt den Index-Wert der angegebenen Farbe oder die
     nächst mögliche Alternative dazu
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecolorresolve</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>red</parameter></paramdef>
      <paramdef>int <parameter>green</parameter></paramdef>
      <paramdef>int <parameter>blue</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion ermittelt garantiert einen Farb-Index zu der
     angegebenen Farbe, nämlich entweder den exakten oder den
     nächst möglichen Wert.
    </para>
    <para>
     Siehe auch <function>imagecolorclosest</function> und
     <function>imagecolorexact</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorset">
   <refnamediv>
    <refname>ImageColorSet</refname>
    <refpurpose>
     Setzt die Farbe für den angegebenen Paletten-Index
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>imagecolorset</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>index</parameter></paramdef>
      <paramdef>int <parameter>red</parameter></paramdef>
      <paramdef>int <parameter>green</parameter></paramdef>
      <paramdef>int <parameter>blue</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Hierdurch setzen Sie den Farbwert der Palette auf die angegebene
     Farbe. Dies ist nützlich bei Aktionen wie "Fülle Farbe X mit
     Farbe Y" (Flood-Fill-Effekt) ohne den sonst notwendigen Aufwand
     für solche Aktionen betreiben zu müssen.
    </para>
    <para>
     Siehe auch <function>imagecolorat</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorsforindex">
   <refnamediv>
    <refname>ImageColorsForIndex</refname>
    <refpurpose>
     Ermittelt die Farbwerte einer angegebenen Farb-Palette
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imagecolorsforindex</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>index</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Gibt ein assoziatives Array mit Rot-, Grün- und Blau-Werten
     zurück, die die Werte des Farb-Paletten-Index von
     <parameter>im</parameter> darstellen.
    </para>
    <para>
     Siehe auch <function>imagecolorat</function> und
     <function>imagecolorexact</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolorstotal">
   <refnamediv>
    <refname>ImageColorsTotal</refname>
    <refpurpose>
     Ermittelt die Anzahl der definierten Farben eines Bildes
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecolorstotal</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Ergibt die Anzahl der Farben der Palette des angegebenen
     Bildes <parameter>im</parameter>.
    </para>
    <para>
     Siehe auch <function>imagecolorat</function> und
     <function>imagecolorsforindex</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecolortransparent">
   <refnamediv>
    <refname>ImageColorTransparent</refname>
    <refpurpose>Definiert eine Farbe als transparent</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecolortransparent</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>col</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ImageColorTransparent</function> setzt die
     transparente Farbe des Bildes <parameter>im</parameter> auf die
     Farbe <parameter>col</parameter>. <parameter>Im</parameter> ist
     der Bild-Pointer, der von <function>ImageCreate</function>
     zurück gegeben wird und <parameter>col</parameter> ist ein
     Zeiger auf die Farbe, die von
     <function>ImageColorAllocate</function> ermittelt wird.
    </para>
    <para>
     Es wird ein Zeiger auf die neue - jetzt transparente - Farbe
     (oder die aktuelle, falls keine Farbe angegeben wurde) zurück
     gegeben.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecopy">
   <refnamediv>
    <refname>ImageCopy</refname>
    <refpurpose>Kopiert einen Bildausschnitt</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int
       <function>ImageCopy</function>
      </funcdef>
      <paramdef>int <parameter>dst_im</parameter></paramdef>
      <paramdef>int <parameter>src_im</parameter></paramdef>
      <paramdef>int <parameter>dst_x</parameter></paramdef>
      <paramdef>int <parameter>dst_y</parameter></paramdef>
      <paramdef>int <parameter>src_x</parameter></paramdef>
      <paramdef>int <parameter>src_y</parameter></paramdef>
      <paramdef>int <parameter>src_w</parameter></paramdef>
      <paramdef>int <parameter>src_h</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Kopiert einen Teil des Quellbildes <parameter>src_im</parameter>
     nach <parameter>dst_im</parameter>. Der zu kopierende Teil wird
     angegeben über die x/y-Koordinaten <parameter>src_x</parameter>
     und <parameter>src_y</parameter>. Die Breite wird in<parameter>
     src_w</parameter> und die Höhe in <parameter>src_h</parameter>
     angegeben. Der Ausschnitt wird an die x/y-Koordinaten<parameter>
     dst_x</parameter> und <parameter>dst_y</parameter> kopiert.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecopyresized">
   <refnamediv>
    <refname>ImageCopyResized</refname>
    <refpurpose>
     Kopieren und Ändern der Grösse eines Bild-Teiles
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecopyresized</function></funcdef>
      <paramdef>int <parameter>dst_im</parameter></paramdef>
      <paramdef>int <parameter>src_im</parameter></paramdef>
      <paramdef>int <parameter>dstX</parameter></paramdef>
      <paramdef>int <parameter>dstY</parameter></paramdef>
      <paramdef>int <parameter>srcX</parameter></paramdef>
      <paramdef>int <parameter>srcY</parameter></paramdef>
      <paramdef>int <parameter>dstW</parameter></paramdef>
      <paramdef>int <parameter>dstH</parameter></paramdef>
      <paramdef>int <parameter>srcW</parameter></paramdef>
      <paramdef>int <parameter>srcH</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ImageCopyResized</function> kopiert einen rechteckigen
     Ausschnitt eines Bildes in ein anderes.
     <parameter>Dst_im</parameter> gibt das Zielbild,
     <parameter>src_im</parameter> die Bildquelle an. Unterscheiden
     sich die Angaben der Quelle und des Ziels bezogen auf die
     Koordinaten, Höhe oder Breite, wird das Teilbild entsprechend
     gedehnt oder geschrumpft. Die Koordinaten beziehen sich auf die
     linke obere Ecke. Sie können hiermit auch Teilbilder innerhalb
     ein- und desselben Bildes kopieren, sofern
     <parameter>dst_im</parameter> und <parameter>src_im</parameter>
     gleich sind. Falls sich dabei aber die kopierten Teile
     überlappen, führt das zu unvorhersehbaren Ergebnissen.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecreate">
   <refnamediv>
    <refname>ImageCreate</refname>
    <refpurpose>Erzeugt ein neues Bild</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecreate</function></funcdef>
      <paramdef>int <parameter>x_size</parameter></paramdef>
      <paramdef>int <parameter>y_size</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     <function>ImageCreate</function> gibt den Zeiger auf ein neues
     Bild zurück. Dieser Zeiger stellt ein leeres Bild mit der Größe
     <parameter>x_size</parameter> und <parameter>y_size</parameter>
     dar.
     <example>
      <title>
       Erzeugung eines neuen GD-Bild-Streams und Ausgabe des Bildes:
      </title>
      <programlisting role="php">
&lt;?php
header ("Content-type: image/png");
$im = @ImageCreate (50, 100)
      or die ("Kann keinen neuen GD-Bild-Stream erzeugen");
$background_color = ImageColorAllocate ($im, 255, 255, 255);
$text_color = ImageColorAllocate ($im, 233, 14, 91);
ImageString ($im, 1, 5, 5, "Ein Test-String", $text_color);
ImagePNG ($im);
?>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagecreatefromgif">
   <refnamediv>
    <refname>ImageCreateFromGIF</refname>
    <refpurpose>
     Erzeugt ein neues Bild im GIF-Format, welches aus einer Datei
     oder von einer URL gelesen wird
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecreatefromgif</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ImageCreateFromGIF</function> gibt den Bezeichner auf
     ein Bild zurück, der das aus der angegebenen Datei eingelesene
     Bild darstellt.
    </para>
    <para> 
     Im Fehlerfall gibt <function>ImageCreateFromGIF</function> eine
     leere Zeichenkette zurück. Zudem wird eine Fehlermeldung
     erzeugt, die im Browser als Verbindungsabbruch dargestellt wird.
     Zum besseren Debuggen wird das folgende Beispiel einen 
     GIF-Fehler erzeugen:
    </para>
    <example>
     <title>
      Beispiel, um die Handhabung eines Fehlers bei der Bilderzeugung
      zu sehen (Dank an vic@zymsys.com):
     </title>
     <programlisting role="php">
function LoadGif ($imgname) {
    $im = @ImageCreateFromGIF ($imgname); /* Versuch, Datei zu öffnen */
    if (!$im) {                           /* Prüfen, ob fehlgeschlagen */
        $im = ImageCreate (150, 30);      /* Erzeugen eines leeren Bildes */
        $bgc = ImageColorAllocate ($im, 255, 255, 255);
        $tc  = ImageColorAllocate ($im, 0, 0, 0);
        ImageFilledRectangle ($im, 0, 0, 150, 30, $bgc); 
        /* Ausgabe einer Fehlermeldung */
        ImageString($im, 1, 5, 5, "Fehler beim Öffnen von: $imgname", $tc); 
    }
    return $im;
}
     </programlisting>
    </example>
    <note>
     <para>
      ACHTUNG: Ab Version 1.6 wurde die komplette GIF-Unterstützung
      aus der GD-Bibliothek entfernt. Diese Funktion ist also nur
      verfügbar, wenn Sie eine Version vor 1.6 verwenden.
     </para>
    </note>
   </refsect1>
  </refentry>

  <refentry id="function.imagecreatefromjpeg">
   <refnamediv>
    <refname>ImageCreateFromJPEG</refname>
    <refpurpose>
     Erzeugt ein neues Bild im JPEG-Format, welches aus einer Datei
     oder von einer URL gelesen wird
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecreatefromjpeg</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ImageCreateFromJPEG</function> gibt den Bezeichner auf
     ein Bild zurück, der das aus der angegebenen Datei eingelesene
     Bild darstellt.
    </para>
    <para> 
     Im Fehlerfall gibt <function>ImageCreateFromJPEG</function> eine
     leere Zeichenkette zurück. Zudem wird eine Fehlermeldung erzeugt,
     die im Browser als Verbindungsabbruch dargestellt wird. Zum
     besseren Debuggen wird das folgende Beispiel einen JPEG-Fehler
     erzeugen:
    </para>
    <example>
     <title>
      Beispiel, um die Handhabung eines Fehlers bei der Bilderzeugung
      zu sehen (Dank an vic@zymsys.com):
     </title>
     <programlisting role="php">
function LoadJpeg ($imgname) {
    $im = @ImageCreateFromJPEG ($imgname); /* Versuch, Datei zu öffnen */
    if (!$im) {                            /* Prüfen, ob fehlgeschlagen */
        $im = ImageCreate (150, 30);       /* Erzeugen eines leeren Bildes */
        $bgc = ImageColorAllocate ($im, 255, 255, 255);
        $tc  = ImageColorAllocate ($im, 0, 0, 0);
        ImageFilledRectangle ($im, 0, 0, 150, 30, $bgc); 
        /* Ausgabe einer Fehlermeldung */
        ImageString($im, 1, 5, 5, "Fehler beim Öffnen von: $imgname", $tc); 
    }
    return $im;
}
     </programlisting>
    </example>
   </refsect1>
  </refentry>

  <refentry id="function.imagecreatefrompng">
   <refnamediv>
    <refname>ImageCreateFromPNG</refname>
    <refpurpose>
     Erzeugt ein neues Bild im PNG-Format, welches aus einer Datei
     oder von einer URL gelesen wird
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagecreatefrompng</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ImageCreateFromPNG</function> gibt den Bezeichner auf
     ein Bild zurück, der das aus der angegebenen Datei eingelesene
     Bild darstellt.
    </para>
    <para> 
     Im Fehlerfall gibt <function>ImageCreateFromPNG</function> eine
     leere Zeichenkette zurück. Zudem wird eine Fehlermeldung
     erzeugt, die im Browser als Verbindungsabbruch dargestellt wird.
     Zum besseren Debuggen wird das folgende Beispiel einen
     JPEG-Fehler erzeugen:
    </para>
    <example>
     <title>
      Beispiel, um die Handhabung eines Fehlers bei der Bilderzeugung
      zu sehen (Dank an vic@zymsys.com):
     </title>
     <programlisting role="php">
function Loadpng ($imgname) {
    $im = @ImageCreateFromPNG ($imgname); /* Versuch, Datei zu öffnen */
    if (!$im) {                           /* Prüfen, ob fehlgeschlagen */
        $im = ImageCreate (150, 30);      /* Erzeugen eines leeren Bildes */
        $bgc = ImageColorAllocate ($im, 255, 255, 255);
        $tc  = ImageColorAllocate ($im, 0, 0, 0);
        ImageFilledRectangle ($im, 0, 0, 150, 30, $bgc); 
        /* Ausgabe einer Fehlermeldung */
        ImageString($im, 1, 5, 5, "Fehler beim Öffnen von: $imgname", $tc); 
    }
    return $im;
}
     </programlisting>
    </example>
   </refsect1>
  </refentry>

  <refentry id="function.imagedashedline">
   <refnamediv>
    <refname>ImageDashedLine</refname>
    <refpurpose>Zeichnen einer gestrichelten Linie</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagedashedline</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>x1</parameter></paramdef>
      <paramdef>int <parameter>y1</parameter></paramdef>
      <paramdef>int <parameter>x2</parameter></paramdef>
      <paramdef>int <parameter>y2</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>    
     <function>ImageDashedLine</function> zeichnet eine gestrichelte
     Linie, beginnend am Punkt <parameter>x1</parameter>,
     <parameter>y1</parameter> bis zum Punkt
     <parameter>x2</parameter>, <parameter>y2</parameter> (oben
     links ist 0, 0) in das Bild image <parameter>im</parameter> mit
     der Farbe <parameter>col</parameter>.
    </para>
    <para>    
     Siehe auch <function>imageline</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagedestroy">
   <refnamediv>
    <refname>ImageDestroy</refname>
    <refpurpose>Löscht ein Bild</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagedestroy</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>    
     <function>ImageDestroy</function> gibt den durch das Bild
     <parameter>im</parameter> belegten Speicher wieder frei.
     <parameter>Im</parameter> ist der Bezeichner, der ihnen beim
     Aufruf der Funktion <function>ImageCreate</function> zurück
     gegeben worden ist.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagefill">
   <refnamediv>
    <refname>ImageFill</refname>
    <refpurpose>Füllen mit Farbe ("flood fill")</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagefill</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>    
     <function>ImageFill</function> bewirkt das Füllen eines Bildes
     beginnend bei der Koordinate <parameter>x</parameter>,
     <parameter>y</parameter> (oben links ist 0, 0) mit der Farbe
     <parameter>col</parameter> im Bild <parameter>im</parameter>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagefilledpolygon">
   <refnamediv>
    <refname>ImageFilledPolygon</refname>
    <refpurpose>Zeichnet ein gefülltes Vieleck (Polygon)</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagefilledpolygon</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>array <parameter>points</parameter></paramdef>
      <paramdef>int <parameter>num_points</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     <function>ImageFilledPolygon</function> erzeugt ein Vieleck
     im Bild <parameter>im</parameter>, gefüllt mit der Farbe
     <parameter>col</parameter>. <parameter>Points</parameter>
     ist ein PHP-Array, das die Eckpunkte des Vielecks enthält.
     Points[0] ist die X-Koordinate (x0), points[1] die Y-Koordinate
     (y0) des ersten Eckunktes. Points[2] ist x1, points[3] = y1 usw.
     <parameter>Num_points</parameter> enthält die Anzahl der Punkte.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagefilledrectangle">
   <refnamediv>
    <refname>ImageFilledRectangle</refname>
    <refpurpose>Zeichnet ein gefülltes Rechteck</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagefilledrectangle</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>x1</parameter></paramdef>
      <paramdef>int <parameter>y1</parameter></paramdef>
      <paramdef>int <parameter>x2</parameter></paramdef>
      <paramdef>int <parameter>y2</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     <function>ImageFilledRectangle</function> erzeugt ein mit der
     Farbe <function>col</function> gefülltes Rechteck innerhalb des
     Bildes <parameter>im</parameter>. Die obere linke Eck-Koordinate
     wird mittels <parameter>x1</parameter> und
     <parameter>y1</parameter>, die untere rechte Eck-Koordinate
     mittels <parameter>x2</parameter> und <parameter>y2</parameter>
     definiert. 0, 0 ist dabei die linke obere Ecke des Bildes
     <parameter>im</parameter>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagefilltoborder">
   <refnamediv>
    <refname>ImageFillToBorder</refname>
    <refpurpose>
     Flächen-Farbfüllung ("flood fill") mit einer angegebenen Farbe
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagefilltoborder</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>int <parameter>border</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>    
     <function>ImageFillToBorder</function> bewirkt eine Farb-Füllung
     in einem Bereich, dessen Grenze durch die Farbe in
     <parameter>border</parameter> definiert wird. Der Startpunkt
     wird durch <parameter>x</parameter> und <parameter>y</parameter>
     angegeben (oben links ist 0, 0). Der Bereich wird gefüllt mit
     der Farbe <parameter>col</parameter>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagefontheight">
   <refnamediv>
    <refname>ImageFontHeight</refname>
    <refpurpose>Ermittelt die Font-Höhe</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagefontheight</function></funcdef>
      <paramdef>int <parameter>font</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Ermittelt die Höhe eines Zeichens (in Pixel) im angegebenen
     Font.
    </para>
    <para>
     Siehe auch <function>imagefontwidth</function> und
     <function>imageloadfont</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagefontwidth">
   <refnamediv>
    <refname>ImageFontWidth</refname>
    <refpurpose>Ermittelt die Font-Breite</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagefontwidth</function></funcdef>
      <paramdef>int <parameter>font</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>    
     Gibt die Zeichenbreite des angegebenen Fonts in Pixeln zurück.
    </para>
    <para> 
     Siehe auch <function>imagefontheight</function> und
     <function>imageloadfont</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagegammacorrect">
    <refnamediv>
      <refname>ImageGammaCorrect</refname>
      <refpurpose>
        Anwendung einer Gamma-Korrektur auf ein GD-Bild
      </refpurpose>
    </refnamediv>
    <refsect1>
      <title>Beschreibung:</title>
      <funcsynopsis>
     <funcprototype>
         <funcdef>int <function>imagegammacorrect</function></funcdef>
         <paramdef>int <parameter>im</parameter></paramdef>
         <paramdef>double <parameter>inputgamma</parameter></paramdef>
         <paramdef>double <parameter>outputgamma</parameter></paramdef>
     </funcprototype>
      </funcsynopsis>
      <para>
       Die Funktion <function>ImageGammaCorrect</function> bewirkt die
       Anwendung einer Gamma-Korrektur auf das mittels Bezeichner
       <parameter>im</parameter> angegebene GD-Bild. Anzugeben ist der
       Eingabe-Gammawert <parameter>inputgamma</parameter> und der
       Ausgabe-Gammawert <parameter>outputgamma</parameter>.
      </para>
    </refsect1>
  </refentry>

  <refentry id="function.imagegif">
   <refnamediv>
    <refname>ImageGIF</refname>
    <refpurpose>
     Ausgabe eines Bildes an den Browser oder in eine Datei
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagegif</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>string 
       <parameter><optional>filename</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ImageGIF</function> erzeugt eine Datei im Format
     <acronym>GIF</acronym> aus <parameter>im</parameter>. Falls
     Sie <optional>filename</optional> angegeben haben, wird die
     Ausgabe in diese Datei geschrieben, ansonsten wird die Ausgabe
     direkt an den Browser geleitet. <parameter>Im</parameter> ist
     das Ergebnis der <function>imagecreate</function>-Funktion.
    </para>
    <para>
     Das Format wird <acronym>GIF87a</acronym> sein, es sei denn, Sie
     haben das Bild per <function>ImageColorTransparent</function>
     als transparent formatiert. In diesem Fall wird das Bild im
     <acronym>GIF89a</acronym>-Format ausgegeben. 
    </para>
    <para>
     Die Angabe des Dateinamens ist optional. Falls er fehlt, werden
     die Bilddaten direkt ausgegeben. Durch Verwendung der Funktion
     <function>header</function> mit der "content-type"-Angabe
     "image/gif" können Sie PHP-Skripte erstellen, welche die
     <acronym>GIF</acronym>-Ausgabe direkt vornehmen.
     <note>
      <para>
       ACHTUNG: Ab Version 1.6 wurde die GIF-Unterstützung komplett
       aus der GD-Bibliothek entfernt. Diese Funktion ist also nur
       verfügbar, wenn Sie eine Version vor 1.6 verwenden.
      </para>
      <para>
       Um trotzdem portable PHP-Anwendungen schreiben zu können,
       kann mit folgendem Code-Stück automatisch geprüft werden,
       welches Bildformat in der mitgebundenen GD-Bibliothek
       nutzbar ist. Ersetzen Sie hierfür die Codesequenz
       <literal>Header("Content-type: image/gif");
       ImageGif($im);</literal> durch die flexiblere Folge:
       <informalexample>
        <programlisting role="php">
&lt;?php
  if (function_exists("imagegif")) {
    Header("Content-type: image/gif");
    ImageGif($im);
  }
  elseif (function_exists("imagejpeg")) {
    Header("Content-type: image/jpeg");
    ImageJpeg($im, "", 0.5);
  }
  elseif (function_exists("imagepng")) {
    Header("Content-type: image/png");
    ImagePng($im);
  }
  else
    die("Keine Grafik-Unterstützung vorhanden");
?&gt;
        </programlisting>
       </informalexample>
      </para>
     </note>
     <note>
      <para>
       In PHP 4 ab Version 4.0.2 haben Sie alternativ zum Test
       per <function>function_exists</function> auch die
       M&ouml;glichkeit, mit der
       <function>imagetypes</function>-Funktion
       die unterst&uuml;tzten Bildformate abzutesten.
       <informalexample>
        <programlisting role="php">
if (ImageTypes() &amp; IMG_GIF) {
    Header("Content-type: image/gif");
    ImageGif($im);
}
elseif (ImageTypes() &amp; IMG_JPG) {
... etc.</programlisting>
       </informalexample>
      </para>
     </note>
    </para>
    <para>
     Siehe auch <function>imagepng</function>,
     <function>imagejpeg</function>, <function>imagetypes</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagejpeg">
   <refnamediv>
    <refname>ImageJPEG</refname>
    <refpurpose>
     Ausgabe des Bildes im Browser oder als Datei
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagejpeg</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>string 
       <parameter><optional>filename</optional></parameter>
      </paramdef>
      <paramdef>int 
       <parameter><optional>quality</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ImageJPEG</function> erzeugt die Datei
     <parameter>filename</parameter> im <acronym>JPEG</acronym>-Format
     aus dem Zeiger auf <parameter>im</parameter>. Das Argument
     <parameter>im</parameter> wurde ihnen vorher durch den Aufruf der
     Funktion <function>ImageCreate</function> mitgeteilt.
    </para>
    <para>
     Die Angabe des Dateinamens <parameter>filename</parameter> ist
     optional. Fehlt er, werden die erzeugten Bilddaten direkt
     ausgegeben. Um die Angabe des Dateinamen zu umgehen, dennoch
     aber den Parameter als solchen zu nutzen, können Sie einen
     Leerstring ('') benutzen. Durch Verwendung der Funktion
     <function>header</function> mit der "content-type"-Angabe
     "image/jpeg" können Sie PHP-Skripte erstellen, welche die
     <acronym>JPEG</acronym>-Ausgabe direkt vornehmen.
    </para>
    <note>
     <para>
      Die JPEG-Unterstützung können Sie nur verwenden, wenn Sie PHP
      mit einer GD-Bibliothek ab Version 1.8 kompiliert haben.
     </para> 
    </note>
    <para>
     Siehe auch <function>imagepng</function>,
     <function>imagegif</function>, <function>imagetypes</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagepng">
   <refnamediv>
    <refname>ImagePNG</refname>
    <refpurpose>
     Ausgabe eines Bildes an den Browser oder in eine Datei
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagepng</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>string 
       <parameter><optional>filename</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ImagePNG</function> erzeugt eine Datei im Format
     <acronym>PNG</acronym> aus <parameter>im</parameter>. Falls
     Sie <optional>filename</optional> angegeben haben, wird die
     Ausgabe in diese Datei geschrieben, ansonsten wird die Ausgabe
     direkt an den Browser geleitet. <parameter>Im</parameter> ist
     das Ergebnis der <function>imagecreate</function>-Funktion.
     <informalexample>
      <programlisting role="php">
&lt;?php
$im = ImageCreateFromPNG("test.png");
ImagePNG($im);
?>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Die Angabe des Dateinamens ist optional. Fehlt er, werden die
     Bilddaten direkt ausgegeben. Durch Verwendung der Funktion
     <function>header</function> mit der "content-type"-Angabe
     "image/png" können Sie PHP-Skripte erstellen, welche die
     <acronym>PNG</acronym>-Ausgabe direkt vornehmen.
     <note>
      <para>
       ACHTUNG: Die PNG-Unterstützung ersetzt die GIF-Funktionen ab
       der GD-Bibliothek Version 1.6. Diese Funktion ist also nur
       verfügbar, wenn Sie eine Version ab 1.6 verwenden.
      </para>
     </note>
    </para>
    <para>
     Siehe auch <function>imagegif</function>,
     <function>imagejpeg</function>, <function>imagetypes</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imageinterlace">
   <refnamediv>
    <refname>ImageInterlace</refname>
    <refpurpose>
     Schaltet die Interlaced-Darstellung eines Bildes an oder aus
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imageinterlace</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>interlace</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Mit der Funktion <function>imageInterlace</function> setzen Sie
     das Bit für die interlaced-Darstellung eines Bildes auf An (1)
     oder Aus (0).
    </para>
    <para>
     Als Rückgabewert erhalten Sie die aktuelle Einstellung des
     Interlaced-Modus.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imageline">
   <refnamediv>
    <refname>ImageLine</refname>
    <refpurpose>Zeichnen einer Linie</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imageline</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>x1</parameter></paramdef>
      <paramdef>int <parameter>y1</parameter></paramdef>
      <paramdef>int <parameter>x2</parameter></paramdef>
      <paramdef>int <parameter>y2</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>    
     <function>ImageLine</function> zeichnet eine Linie von der
     <parameter>x1</parameter> / <parameter>y1</parameter>
     Koordinate bis zur Kordinate <parameter>x2</parameter> /
     <parameter>y2</parameter> (die Koordinate 0 / 0 ist die
     obere linke Ecke von <parameter>im</parameter>). Die
     Linienfarbe wird durch <parameter>col</parameter>
     festgelegt.  
    </para>
    <para> 
     Siehe auch <function>imagecreate</function> und
     <function>imagecolorallocate</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imageloadfont">
   <refnamediv>
    <refname>ImageLoadFont</refname>
    <refpurpose>Lädt einen neuen Font</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imageloadfont</function></funcdef>
      <paramdef>string <parameter>file</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ImageLoadFont</function> lädt einen vom Benutzer
     definierten Bitmap-Font und gibt einen Zeiger auf diesen
     zurück. Dessen Wert ist immer grösser als 5, um Konflikte
     mit den eingebauten Fonts zu vermeiden.
    </para>
    <para>
     Das Font-Datei-Format unterliegt binären Abhängigkeiten und
     ist von Rechner-Typ zu Rechner-Typ unterschiedlich. Das
     bedeutet, dass Sie die Font-Dateien immer auf dem Rechner-Typ
     erzeugen müssen, auf dem diese Verwendung finden.
    </para>
    <para>
     <table>
      <title>Font-Datei-Format</title>
      <tgroup cols="3">
       <thead>
	<row>
	 <entry>Byte-Position</entry>
	 <entry>C Daten-Typ</entry>
	 <entry>Beschreibung</entry>
	</row>
       </thead>
       <tbody>
	<row>
	 <entry>Byte 0-3</entry>
	 <entry>int</entry>
	 <entry>Anzahl der Zeichen des Font</entry>
	</row>
	<row>
	 <entry>Byte 4-7</entry>
	 <entry>int</entry>
	 <entry>
    Wert des ersten Zeichens des Fonts (meist 32 für Leerzeichen)
	 </entry>
	</row>
	<row>
	 <entry>Byte 8-11</entry>
	 <entry>int</entry>
	 <entry>Pixel-Breite jedes Zeichens</entry>
	</row>
	<row>
	 <entry>Byte 12-15</entry>
	 <entry>int</entry>
	 <entry>Pixel-Höhe jedes Zeichens</entry>
	</row>
	<row>
	 <entry>Byte 16-</entry>
	 <entry>Zeichen</entry>
	 <entry>
    Zeichen-Daten als Array, ein Byte je Pixel für jedes
    Zeichen; in der Summe also (Anzahl-Zeichen * Breite *
    Höhe)-Bytes.
	 </entry>
	</row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     Siehe auch <function>imagefontwidth</function> und
     <function>imagefontheight</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagepolygon">
   <refnamediv>
    <refname>ImagePolygon</refname>
    <refpurpose>Zeichnen eines Vielecks (Polygon)</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagepolygon</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>array <parameter>points</parameter></paramdef>
      <paramdef>int <parameter>num_points</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     <function>ImagePolygon</function> erzeugt ein Vieleck innerhalb
     von <parameter>im</parameter>. <parameter>Points</parameter>
     ist ein PHP-Array, das die Werte für die Eckpunkte des Polygons
     enthält, z.B. Points[0] = x0, Points[1] = y0, Points[2]
     = x1, Points[3] = y1 usw. <parameter>Num_points</parameter>
     enthält die Gesamtzahl an Points (Points[n]).
    </para>
    <para> 
     Siehe auch <function>imagecreate</function> und
     <function>imagefilledpolygon</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagepsbbox">
   <refnamediv>
    <refname>ImagePSBBox</refname>
    <refpurpose>
     Ermittelt die Ausmaße des Rechtecks, das für die Ausgabe eines
     Textes unter Verwendung eines PostScript-Fonts (Typ 1) notwendig
     ist.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imagepsbbox</function></funcdef>
      <paramdef>string <parameter>text</parameter></paramdef>
      <paramdef>int <parameter>font</parameter></paramdef>
      <paramdef>int <parameter>size</parameter></paramdef>
      <paramdef>int <parameter><optional>space</optional></parameter></paramdef>
      <paramdef>int <parameter><optional>tightness</optional></parameter></paramdef>
      <paramdef>float <parameter><optional>angle</optional></parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para><parameter>Size</parameter> ist die Größe in Pixel.
    </para>
    <para>
     <parameter>Space</parameter> ermöglicht ihnen, den vorgegebenen
     Wert für den Zeichen-Zwischenraum eines Fonts anzugeben. Dieser
     Wert wird zum Normal-Wert hinzu gezählt und kann auch negativ
     sein.
    </para>
    <para>
     <parameter>Tightness</parameter> ermöglicht ihnen die Kontrolle
     über die Breite eines Leerzeichens. Der angegebene Wert wird zur
     normalen Zeichenbreite hinzu gezählt und kann auch negativ sein.
    </para>
    <para>
     <parameter>Angle</parameter> (Winkel) wird in Grad angegeben und
     beinhaltet den Drehungswinkel des auszugebenden Textes.
    </para>
    <para>
     Die Parameter <parameter>space</parameter> und
     <parameter>tightness</parameter> haben als Einheit die
     Zeichenbreite, wobei der Wert 1 gleich 1/1000stel der Breite des
     Zeichens 'm' entspricht (Maß 'em').
    </para>
    <para>
     Die Parameter <parameter>space</parameter>,
     <parameter>tightness</parameter> und
     <parameter>angle</parameter> sind optional.
    </para>
    <para>
     Das umgebende Rechteck wird berechnet unter Verwendung der für
     die Zeichen-Abmessungen verfügbaren Informationen und
     unterscheidet sich immer etwas von den aktuellen Raster-Werten
     des Textes. Ist der Winkel (angle) mit 0 angegeben, können Sie
     davon ausgehen, dass der Text in jede Richtung immer 1 Pixel
     mehr braucht als sonst.
    </para>
    <para>
     Diese Funktion gibt ein Array zurück, welches die folgenden
     Elemente enthält:
     <informaltable>
      <tgroup cols="2">
       <tbody>
	<row>
	 <entry>0</entry>
	 <entry>untere linke x-Koordinate</entry>
	</row>
	<row>
	 <entry>1</entry>
	 <entry>untere linke y-Koordinate</entry>
	</row>
	<row>
	 <entry>2</entry>
	 <entry>obere rechte x-Koordinate</entry>
	</row>
	<row>
	 <entry>3</entry>
	 <entry>obere rechte y-Koordinate</entry>
	</row>
       </tbody>
      </tgroup>
     </informaltable>
    </para>
    <para>
     Siehe auch <function>imagepstext</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Die Funktion in t1lib, die von der folgenden Funktion gebraucht
wird, scheint 'buggy' zu sein...
Dieser Abschnitt sollte erst auskommentiert werden, sobald eine
Lösung für das Problem gefunden wurde.

  <refentry id="function.imagepscopyfont">
   <refnamediv>
    <refname>ImagePSCopyFont</refname>
    <refpurpose>
     Erstellt eine Kopie eines bereits geladenen Fonts für weitere
     Veränderungen
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagepscopyfont</function></funcdef>
      <paramdef>int <parameter>fontindex</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Falls Sie Veränderungen an einem Font (Größe, Dicke usw.)
     vornehmen wollen, den ursprüglichen Font aber noch brauchen,
     sollten Sie diese Funktion benutzen. Der zu kopierende Font
     muss über die Funktion <function>ImagePSLoadFont</function>
     vorher geladen worden sein. Eine Kopie dieses Fonts können Sie
     nicht verwenden. Sie können aber bereits vor dem Kopieren
     Veränderungen vornehmen.
    </para>
    <para>
     Falls Sie diese Funkton benutzen, <emphasis>müssen</emphasis>
     Sie die so erzeugten Fonts selbst freigeben und zwar in
     umgekehrter Reihenfolge, ansonsten <emphasis>wird</emphasis>
     ihr Skript 'hängen'.
    </para>
    <para>
     Falls alles klappt, wird ihnen ein gültiger Font-Index zurück
     gegeben, den Sie weiter verwenden können. Falls nicht, wird
     &false; zurück und eine Fehlermeldung ausgegeben.
    </para>
    <para>
     Siehe auch <function>imagepsloadfont</function>.
    </para>
   </refsect1>
  </refentry>
-->

  <refentry id="function.imagepsencodefont">
   <refnamediv>
    <refname>ImagePSEncodeFont</refname>
    <refpurpose>
     Ändert die Vektor-Beschreibung eines Fonts
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagepsencodefont</function></funcdef>
      <paramdef>string <parameter>encodingfile</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Lädt einen Zeichen-Beschreibungs-Vektor aus einer Datei und
     verändert die Vektor-Beschreibung des Fonts. Da ein PS-Font
     meist Lücken oberhalb des 127. Zeichens aufweist, werden Sie
     dies oft anpassen wollen, sofern Sie eine andere Sprache als
     Englisch benutzen. Das genaue Dateiformat ist in der
     Dokumentation zu T1Lib beschrieben. T1Lib wird mit zwei
     gebrauchsfertigen Beschreibungsdateien (IsoLatin1.enc und
     IsoLatin2.enc) ausgeliefert.
    </para>
    <para>
     Sollten Sie diese Funktion ständig benutzen, ist es besser,
     diese Beschreibungs-Datei innerhalb der
     <link linkend="configuration.file">Konfigurations-Datei</link>
     bei ps.default_encoding anzugeben. Dadurch wird immer die
     richtige Datei geladen und die Zeichen haben damit die richtige
     Beschreibung.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagepsextendfont">
   <refnamediv>
    <refname>ImagePsExtendFont</refname>
    <refpurpose>Vergrößert oder komprimiert einen Font</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>imagepsextendfont</function></funcdef>
      <paramdef>int <parameter>font_index</parameter></paramdef>
      <paramdef>double <parameter>extend</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Der mit <parameter>font_index</parameter> angegebene Font wird
     gedehnt (<parameter>extend</parameter> ist größer als der Font)
     oder verkleinert (<parameter>extend</parameter> ist kleiner als
     der Font).
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagepsfreefont">
   <refnamediv>
    <refname>ImagePSFreeFont</refname>
    <refpurpose>
     Gibt den durch einen Typ 1 PostScript-Font belegten Speicher
     wieder frei
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>imagepsfreefont</function></funcdef>
      <paramdef>int <parameter>fontindex</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Siehe auch <function>imagepsloadfont</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagepsloadfont">
   <refnamediv>
    <refname>ImagePSLoadFont</refname>
    <refpurpose>
     Lädt einen Typ 1 PostScript-Font aus einer Datei
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagepsloadfont</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Wenn alles in Ordnung ist, wird ein gültiger Zeiger (Index)
     zurück gegeben, auf den Sie immer wieder zurück greifen können;
     ansonsten wird &false; zurück und eine Fehlermeldung ausgegeben.
    </para>
    <para>
     Siehe auch <function>imagepsfreefont</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagepsslantfont">
   <refnamediv>
    <refname>ImagePsSlantFont</refname>
    <refpurpose>Setzt einen Font schräg</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>imagepsslantfont</function></funcdef>
      <paramdef>int <parameter>font_index</parameter></paramdef>
      <paramdef>double <parameter>slant</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Der mit <parameter>font_index</parameter> angegebene Font wird
     um den Faktor <parameter>slant</parameter> "verschrägt" (italic!).
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagepstext">
   <refnamediv>
    <refname>ImagePSText</refname>
    <refpurpose>
     Ausgabe eines Textes auf einem Bild unter Verwendung von
     Typ 1 PostScript-Fonts
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imagepstext</function></funcdef>
      <paramdef>int <parameter>image</parameter></paramdef>
      <paramdef>string <parameter>text</parameter></paramdef>
      <paramdef>int <parameter>font</parameter></paramdef>
      <paramdef>int <parameter>size</parameter></paramdef>
      <paramdef>int <parameter>foreground</parameter></paramdef>
      <paramdef>int <parameter>background</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>int 
       <parameter>
        <optional>space</optional>
       </parameter>
      </paramdef>
      <paramdef>int 
       <parameter>
        <optional>tightness</optional>
       </parameter>
      </paramdef>
      <paramdef>float 
       <parameter>
        <optional>angle</optional>
       </parameter>
      </paramdef>
      <paramdef>int 
       <parameter>
        <optional>antialias_steps</optional>
       </parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <parameter>Size</parameter> wird in Pixel ausgedrückt.
    </para>
    <para>
     <parameter>Foreground</parameter> ist die Text-Ausgabefarbe
     (Vordergrund). <parameter>Background</parameter> ist die Farbe,
     zu der ein Farbübergang versucht werden soll. Dabei wird kein
     Pixel mit der Farbe <parameter>Background</parameter>
     ausgegeben, so dass das Bild im Hintergrund keine festen Farben
     benötigt.
    </para>
    <para>
     Die Koordinaten <parameter>x</parameter> und 
     <parameter>y</parameter> definieren den Ursprung (bzw. den
     Referenz-Punkt) des ersten Zeichens (ungefähr die linke untere
     Ecke). Dies ist anders als bei der
     <function>ImageString</function>-Funktion, wo 
     <parameter>x</parameter> und <parameter>y</parameter> die obere
     linke Ecke des ersten Zeichens angeben. Lesen Sie in der
     Dokumentation zu PostScript und seines Maßsystems nach, falls
     Sie die Funktionsweise nicht verstehen.
    </para>
    <para>
     <parameter>Space</parameter> ermöglicht ihnen, die Vorgabe des
     Wertes für den Zeichen-Zwischenraum zu verändern. Der angegebene
     Wert wird addiert und kann auch negativ sein.
    </para>
    <para>
     <parameter>Tightness</parameter> ermöglicht die Kontrolle über
     die Breite des Leerzeichens. Der Wert wird addiert und kann auch
     negativ sein.
    </para>
    <para>
     <parameter>Angle</parameter> wird in Grad angegeben und hat die
     entsprechende Drehung des Ausgabetextes zur Folge.
    </para>
    <para>
     <parameter>Antialias_steps</parameter> erlaubt die Kontrolle
     über die Anzahl der Farben, mit der der Farbübergang vom Text
     zum Hintergrundbild vorgenommen werden soll. Möglich sind
     Werte von 4 bis 16. Der höhere Wert wird empfohlen bei
     Textgrössen kleiner als 20, wo der Effekt bei der Textqualität
     deutlich sichtbar ist. Bei grösseren Werten als 20 werden 4
     Farben empfohlen. Das ist weniger rechenintensiv.
    </para>
    <para>
     Die Parameter <parameter>space</parameter> und
     <parameter>tightness</parameter> werden in 1/1000-stel der
     Breite des Buchstabens "m" (Einheit 'em') angegeben.
    </para>
    <para>
     Die Parameter <parameter>space</parameter>,
     <parameter>tightness</parameter>, <parameter>angle</parameter>
     und <parameter>antialias</parameter> sind optional.
    </para>
    <para>
     Diese Funktion gibt ein Array mit den folgenden Werten zurück:
     <informaltable>
      <tgroup cols="2">
       <tbody>
	<row>
	 <entry>0</entry>
	 <entry>untere linke X-Koordinate</entry>
	</row>
	<row>
	 <entry>1</entry>
	 <entry>untere linke Y-Koordinate</entry>
	</row>
	<row>
	 <entry>2</entry>
	 <entry>obere rechte X-Koordinate</entry>
	</row>
	<row>
	 <entry>3</entry>
	 <entry>obere rechte Y-Koordinate</entry>
	</row>
       </tbody>
      </tgroup>
     </informaltable></para>
    <para>
     Siehe auch <function>imagepsbbox</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagerectangle">
   <refnamediv>
    <refname>ImageRectangle</refname>
    <refpurpose>Zeichnet ein Rechteck</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagerectangle</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>x1</parameter></paramdef>
      <paramdef>int <parameter>y1</parameter></paramdef>
      <paramdef>int <parameter>x2</parameter></paramdef>
      <paramdef>int <parameter>y2</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>    
     <function>ImageRectangle</function> erzeugt ein Rechteck mit
     der Linienfarbe <parameter>col</parameter>, beginnend bei der
     oberen linken Koordinate X1 und Y1. Das Ende liegt bei der
     unteren rechten Koordinate X2 und Y2. Dabei ist 0, 0 die
     linke obere Ecke des Bildes <parameter>im</parameter>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagesetpixel">
   <refnamediv>
    <refname>ImageSetPixel</refname>
    <refpurpose>Setzt ein einzelnes Pixel</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagesetpixel</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     <function>ImageSetPixel</function> zeichnet ein Pixel an der
     Koordinate <parameter>x</parameter> / <parameter>y</parameter>.
     Dabei ist die Koordinate 0, 0 die linke obere Ecke des Bildes
     <parameter>im</parameter>. Die Pixelfarbe wird durch
     <parameter>col</parameter> bestimmt.
    </para> 
    <para> 
     Siehe auch <function>imagecreate</function> und
     <function>imagecolorallocate</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagestring">
   <refnamediv>
    <refname>ImageString</refname>
    <refpurpose>Zeichnet einen horizontalen String</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagestring</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>font</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>string <parameter>s</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>    
     <function>ImageString</function> gibt den String
     <parameter>s</parameter> in dem durch den Parameter
     <parameter>im</parameter> bezeichneten Bild an den 
     Koordinaten <parameter>x</parameter> und
     <parameter>y</parameter> aus. Die Koordinaten 0, 0 geben die
     linke obere Ecke des Bildes <parameter>im</parameter> an. Der
     Font erscheint in der Farbe <parameter>col</parameter>. Hat
     <parameter>font</parameter> den Wert 1, 2, 3, 4 oder 5 wird
     ein interner Font benutzt.
    </para> 
    <para> 
     Siehe auch <function>imageloadfont</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagestringup">
   <refnamediv>
    <refname>ImageStringUp</refname>
    <refpurpose>Zeichnet einen vertikalen String</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagestringup</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>font</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>string <parameter>s</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>    
     <function>ImageStringUp</function> gibt den String
     <parameter>s</parameter> vertikal innerhalb des Bildes
     <parameter>im</parameter> an den Koordinaten
     <parameter>x</parameter> und <parameter>y</parameter> aus.
     Die linke obere Ecke von <parameter>im</parameter> ist dabei
     0, 0. Der Text wird in der Farbe <parameter>col</parameter>
     ausgegeben. Hat <parameter>font</parameter> den Wert 1, 2, 3,
     4 oder 5 wird ein interner Font benutzt.
    </para> 
    <para> 
     Siehe auch <function>imageloadfont</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagesx">
   <refnamediv>
    <refname>ImageSX</refname>
    <refpurpose>Ermittelt die Bild-Breite</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagesx</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para> 
     <function>ImageSX</function> ermittelt die Breite des Bildes,
     das durch <parameter>im</parameter> referenziert wird.
    </para>
    <para> 
     Siehe auch <function>imagecreate</function> und
     <function>imagesy</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagesy">
   <refnamediv>
    <refname>ImageSY</refname>
    <refpurpose>Ermittelt die Bild-Höhe</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagesy</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ImageSY</function> ermittelt die Höhe des Bildes,
     das durch <parameter>im</parameter> referenziert wird.
    </para> 
    <para>
     Siehe auch <function>imagecreate</function> und
     <function>imagesx</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagettfbbox">
   <refnamediv>
    <refname>ImageTTFBBox</refname>
    <refpurpose>
     Ermittelt die Rahmenmaße für die Ausgabe eines Textes
     im True-Type-Format
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imagettfbbox</function></funcdef>
      <paramdef>int <parameter>size</parameter></paramdef>
      <paramdef>int <parameter>angle</parameter></paramdef>
      <paramdef>string <parameter>fontfile</parameter></paramdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion errechnet die Grösse des Bereichs für eine
     True-Type-Textausgabe.
     <variablelist>
      <varlistentry>
       <term>
	<parameter>text</parameter>
       </term>
       <listitem>
	<simpara>Der zu messende Text</simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
	<parameter>size</parameter>
       </term>
       <listitem>
	<simpara>Die Font-Größe</simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
	<parameter>fontfile</parameter>
       </term>
       <listitem>
	<simpara>
	 Der Name der TTF-Datei (kann auch eine URL sein)
	</simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
	<parameter>angle</parameter>
       </term>
       <listitem>
	<simpara>
	 Der Winkel, in dem <parameter>text</parameter> ausgegeben wird
	</simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     <function>ImageTTFBBox</function> gibt ein Array mit acht
     Werten zurück. Diese enthalten die vier Punkte, durch die
     der Ausgabebereich markiert wird:
     <informaltable>
      <tgroup cols="2">
       <tbody>
	<row>
	 <entry>0</entry>
	 <entry>untere linke Ecke, X-Position</entry>
	</row>
	<row>
	 <entry>1</entry>
	 <entry>untere linke Ecke, Y-Position</entry>
	</row>
	<row>
	 <entry>2</entry>
	 <entry>untere rechte Ecke, X-Position</entry>
	</row>
	<row>
	 <entry>3</entry>
	 <entry>untere rechte Ecke, Y-Position</entry>
	</row>
	<row>
	 <entry>4</entry>
	 <entry>obere rechte Ecke, X-Position</entry>
	</row>
	<row>
	 <entry>5</entry>
	 <entry>obere rechte Ecke, Y-Position</entry>
	</row>
	<row>
	 <entry>6</entry>
	 <entry>obere linke Ecke, X-Position</entry>
	</row>
	<row>
	 <entry>7</entry>
	 <entry>obere linke Ecke, Y-Position</entry>
	</row>
       </tbody>
      </tgroup>
     </informaltable>
     Die Punkte sind relativ zum <emphasis>text</emphasis>. Ohne
     Rücksicht auf den Winkel ist oben-links also die obere linke
     Ecke, wobei die Textausgabe horizontal gesehen wird.
    </para>
    <para>
     Diese Funktion erfordert sowohl die GD- als auch die
     <ulink url="&url.freetype;">FreeType</ulink>-Bibliothek.
    </para>
    <para>
     Siehe auch <function>imagettftext</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagettftext">
   <refnamediv>
    <refname>ImageTTFText</refname>
    <refpurpose>Erzeugt TTF-Text im Bild</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>imagettftext</function></funcdef>
      <paramdef>int <parameter>im</parameter></paramdef>
      <paramdef>int <parameter>size</parameter></paramdef>
      <paramdef>int <parameter>angle</parameter></paramdef>
      <paramdef>int <parameter>x</parameter></paramdef>
      <paramdef>int <parameter>y</parameter></paramdef>
      <paramdef>int <parameter>col</parameter></paramdef>
      <paramdef>string <parameter>fontfile</parameter></paramdef>
      <paramdef>string <parameter>text</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>ImageTTFText</function> zeichnet den Text
     <parameter>text</parameter> in das per
     <parameter>im</parameter> angegebene Bild, beginnend bei den
     Koordinaten <parameter>x</parameter> und
     <parameter>y</parameter> (oben links ist 0, 0) mit einem
     Ausgabewinkel von <parameter>angle</parameter> in der Farbe
     <parameter>col</parameter> unter Verwendung der TTF-Datei,
     die mittels <parameter>fontfile</parameter> benannt wurde.
    </para>
    <para>
     Die per <parameter>x</parameter> und <parameter>y</parameter>
     angegebenen Koordinaten definieren den Startpunkt des ersten
     Zeichens (in etwa die linke untere Ecke). Das ist anders als
     bei der <function>ImageString</function>-Funktion, bei der x
     und y die obere rechte Ecke des ersten Zeichens darstellen.
    </para>
    <para>
     <parameter>Angle</parameter> ist in Grad anzugeben. 0 ist eine
     normale Ausrichtung von links nach rechts (von 9 nach 3 Uhr).
     Höhere Werte entsprechen einer immer weiteren Drehung entgegen
     dem Uhrzeiger-Sinn. Eine Drehung von 90 Grad entspricht also
     einer Text-Ausrichtung von unten nach oben (von 6 nach 12 Uhr).
    </para>
    <para>
     <parameter>Fontfile</parameter> ist der Pfad zur TTF-Datei, die 
     Sie verwenden wollen.
    </para>
    <para>
     <parameter>Text</parameter> ist der auszugebende String, der
     auch UTF-8-Zeichenfolgen enthalten darf (z.B. &amp;#123;)
    </para>
    <para>
     <parameter>Col</parameter> ist der Farbindex. Verwenden Sie den
     negativen Index-Wert, führt das zum Aufheben des Farbüberlaufs
     (Antialiasing).
    </para>
    <para>
     <function>ImageTTFText</function> gibt ein Array aus acht
     Elementen zurück, das die vier Ecken des Textausgabe-Bereichs
     enthält (wie <function>ImageTTFBBox</function>). Die Reihenfolge
     ist dabei oben links, oben rechts, unten rechts und unten links.
     Die Punkte sind dabei relativ zum Text. Deshalb gibt oben links
     die linke Ecke bei horizontaler Sichtweise an.
    </para>
    <para>
     Das Beispiel-Skript erzeugt eine schwarze GIF-Grafik von 400x30
     Pixel mit dem weissen Text "Teste..." im TT-Font Arial.
     <example>
      <title>ImageTTFText</title>
      <programlisting role="php">
&lt;?php
Header ("Content-type: image/gif");
$im = imagecreate (400, 30);
$black = ImageColorAllocate ($im, 0, 0, 0);
$white = ImageColorAllocate ($im, 255, 255, 255);
ImageTTFText ($im, 20, 0, 10, 20, $white, "/path/arial.ttf", 
              "Teste... Omega: &amp;#937;");
ImageGif ($im);
ImageDestroy ($im);
?&gt;
      </programlisting>
     </example>
    </para>
    <para>
     Diese Funktion erfordert sowohl die GD- als auch die
     <ulink url="&url.freetype;">FreeType</ulink>-Bibliothek.
    </para>
    <para>
     Siehe auch <function>imagettfbbox</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.imagetypes">
   <refnamediv>
    <refname>ImageTypes</refname>
    <refpurpose>
	   Gibt die von der aktuell verwendeten PHP-Version unterstützten
     Grafik-Formate zurück
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>imagetypes</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     Der von dieser Funktion zurück gegebene Bit-Wert stellt die von
     der in der aktuellen PHP-Kompilation enthaltenen GD-Version
     unterstützten Grafik-Formate dar. Die folgenden Bit-Werte sind
     möglich: IMG_GIF, IMG_JPG, IMG_PNG oder IMG_WBMP. Um das Vorhanden
     sein der GD-Unterstützung zu testen, können Sie folgendes machen:
     <example>
      <title>ImageTypes</title>
      <programlisting role="php">
&lt;?php
if (ImageTypes() &amp; IMG_PNG) {
    echo "PNG-Unterstützung ist vorhanden.";
}
?&gt;
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.read-exif-data">
   <refnamediv>
    <refname>read_exif_data</refname>
    <refpurpose>
     Liest die EXIF Header-Infos einer JPEG-Grafik
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>array <function>read_exif_data</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Die Funktion <function>read_exif_data</function> liest die EXIF
     Datei-Kopf-Informationen aus einer JPEG-Grafik-Datei. Es wird ein
     assoziatives Array in dem die Indizes die EXIF-Kopf-Bezeichnungen
     und die Werte die Inhalte dieser Kopf-Infos sind. EXIF-Infos sind
     häufig in JPEG-Grafiken enthalten, die mit einer Digital-Kamera
     aufgenommen wurden. Jeder Aufnehmende hat aber andere
     Vorstellungen über die Daten einer JPEG-Grafik. Diese Unterschiede
     können Sie mit dieser Funktion ermitteln.
     <example>
      <title>read_exif_data</title>
      <programlisting role="php">
&lt;?php
 $exif = read_exif_data ('p0001807.jpg');
 while(list($k,$v)=each($exif)) {
   echo "$k: $v&lt;br>\n";
 }
?>

Ausgabe:
FileName: p0001807.jpg
FileDateTime: 929353056
FileSize: 378599
CameraMake: Eastman Kodak Company
CameraModel: KODAK DC265 ZOOM DIGITAL CAMERA (V01.00)
DateTime: 1999:06:14 01:37:36
Height: 1024
Width: 1536
IsColor: 1
FlashUsed: 0
FocalLength:  8.0mm
RawFocalLength: 8
ExposureTime:  0.004 s (1/250)
RawExposureTime: 0.0040000001899898
ApertureFNumber: f/ 9.5
RawApertureFNumber: 9.5100002288818
FocusDistance: 16.66m
RawFocusDistance: 16.659999847412
Orientation: 1
ExifVersion: 0200
      </programlisting>
     </example>
    </para>
    <para>
     <note>
      <simpara>
       Diese Funktion ist in PHP 4 nur verfügbar, wenn Sie es mit
       --enable-exif compiliert haben.
      </simpara>
      <simpara>
       Diese Funktion erfordert nicht die GD-Library.
      </simpara>
     </note>
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
