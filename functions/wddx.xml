<?xml version="1.0" encoding="iso-8859-1"?>
 <reference id="ref.wddx">
  <title>WDDX Funktionen</title>
  <titleabbrev>WDDX</titleabbrev>

  <partintro>
   <para>
    Diese Funktionen arbeiten mit <ulink url="&url.wddx;">WDDX</ulink>
    zusammen.
   </para>
   <para>
    Es ist zu beachten, dass alle Funktionen die Variablen
    serialisieren immer das erste Element eines Arrays benutzen, um
    festzustellen ob das Array in ein Array oder ein 'Structure'
    serialisiert wird.  Wenn das erste Element einen String als
    Schlüssel hat, wird das Array in eine 'Structure' serialisiert,
    andernfalls in ein Array.
    <example>
     <title>Einen einzelnen String serialisieren</title>
     <programlisting role="php">
<![CDATA[
<?php
print wddx_serialize_value("PHP to WDDX packet example", "PHP packet");
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    dieses Beispiel erzeugt:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<wddxPacket version='1.0'><header comment='PHP packet'/><data>
<string>PHP to WDDX packet example</string></data></wddxPacket>
]]>     </programlisting>
    </informalexample>
    <example>
     <title>Die Verwendung von inkrementierenden Paketen</title>
     <programlisting role="php">
<![CDATA[
<?php
$pi = 3.1415926;
$packet_id = wddx_packet_start("PHP");
wddx_add_vars($packet_id, "pi");

/* So tun, als ob $cities aus einer Datenbank kommt */
$cities = array("Austin", "Novato", "Seattle");
wddx_add_vars($packet_id, "cities");

$packet = wddx_packet_end($packet_id);
print $packet;
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Diese Beispiel wird erzeugen:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<wddxPacket version='1.0'><header comment='PHP'/><data><struct>
<var name='pi'><number>3.1415926</number></var><var name='cities'>
<array length='3'><string>Austin</string><string>Novato</string>
<string>Seattle</string></array></var></struct></data></wddxPacket>
]]>     </programlisting>
    </informalexample>
   </para>
  </partintro>

  <refentry id="function.wddx-serialize-value">
   <refnamediv>
    <refname>wddx_serialize_value</refname>
    <refpurpose>
     Serialisiert einen einzelnen Wert in ein WDDX Paket
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>string</type><methodname>wddx_serialize_value</methodname>
      <methodparam><type>mixed</type><parameter>wert</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>kommentar</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>wddx_serialize_value</function> wird verwendet um einen
     einzelnen Wert in ein WDDX Paket zu serialisieren.  Übergeben
     wird der Wert in <parameter>wert</parameter> und ein optionaler
     Parameter <parameter>kommentar</parameter>, der im Header des
     WDDX Pakets erscheinen wird. Zurückgegeben wird das entsprechende
     WDDX Paket.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.wddx-serialize-vars">
   <refnamediv>
    <refname>wddx_serialize_vars</refname>
    <refpurpose>Serialisiert Variablen in WDDX Pakete</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>string</type><methodname>wddx_serialize_vars</methodname>
      <methodparam><type>mixed</type><parameter>var_name</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>wddx_serialize_vars</function> wird verwendet um ein
     WDDX Paket mit einer 'Structure' zu erzeugen, welches eine
     serialsierte Repräsentation der übergebenen Variablen
     enthält.
    </para>
    <para>
     <function>wddx_serialize_vars</function> akzeptiert eine variable
     Zahl von Argumenten. Diese können entweder einzelne Namen von
     Variablen, oder Arrays mit Variablennamen bzw. weiteren Arrays
     sein.
    </para>
    <para>
     <example>
      <title>wddx_serialize_vars example</title>
      <programlisting>
<![CDATA[
<?php
$a = 1;
$b = 5.5;
$c = array("blue", "orange", "violet");
$d = "colors";

$clvars = array("c", "d");
print wddx_serialize_vars("a", "b", $clvars);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Das obige Script erzeugt:
     <programlisting>
<![CDATA[
<wddxPacket version='1.0'><header/><data><struct><var name='a'><number>1</number></var>
<var name='b'><number>5.5</number></var><var name='c'><array length='3'>
<string>blue</string><string>orange</string><string>violet</string></array></var>
<var name='d'><string>colors</string></var></struct></data></wddxPacket>
]]>
     </programlisting>
    </para>

   </refsect1>
  </refentry>

  <refentry id="function.wddx-packet-start">
   <refnamediv>
    <refname>wddx_packet_start</refname>
    <refpurpose>
     Beginnt ein neues WDDX Paket mit einer 'Structure'
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>int</type><methodname>wddx_packet_start</methodname>
      <methodparam choice="opt"><type>string</type><parameter>kommentar</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>wddx_packet_start</function> wird verwendet um ein
     neues WDDX Paket zu erzeugen, zu welchem Variablen hinzugefügt
     werden können.  Ein optionaler Parameter
     <parameter>kommentar</parameter> vom Typ String kann angegeben
     werden.  Zurückgegeben wird eine Paket ID, die in den folgenden
     Funktionen zur Referenzierung benutzt wird. Desweiteren wird
     automatisch eine 'Structure' zur Aufnahme der Variablen
     angelegt.</para>
   </refsect1>
  </refentry>

  <refentry id="function.wddx-packet-end">
   <refnamediv>
    <refname>wddx_packet_end</refname>
    <refpurpose>
     Schliesst das WDDX Paket mit der angegebenen ID
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>string</type><methodname>wddx_packet_end</methodname>
      <methodparam><type>int</type><parameter>packet_id</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>wddx_packet_end</function> schliesst das WDDX Paket,
     dass mit <parameter>packet_id</parameter> identifiziert wird und
     gibt einen String, der das erzeugte WDDX Paket enthält
     zurück.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.wddx-add-vars">
   <refnamediv>
    <refname>wddx_add_vars</refname>
    <refpurpose>
     Fügt dem WDDX Paket mit der übergebenen ID Werte hinzu
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <methodname>wddx_add_vars</methodname>
      <methodparam><type>int</type><parameter>packet_id</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>name_var</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>wddx_add_vars</function> wird verwendet um die
     übergebenen Werte zu serialisieren und diese an das durch den
     Parameter <parameter>packet_id</parameter> referenzierte Paket
     anzuhängen.  Die Werteübergabe funktioniert genauso wie bei
     <function>wddx_serialize_vars</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.wddx-deserialize">
   <refnamediv>
    <refname>wddx_deserialize</refname>
    <refpurpose>Deserialisiert ein WDDX Paket</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>mixed</type><methodname>wddx_deserialize</methodname>
      <methodparam><type>string</type><parameter>packet</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>wddx_deserialize</function> übernimmt einen
     <parameter>packet</parameter> String and deserialisiert diesen.
     Es wird entweder ein String, eine Zahl, oder ein Array
     zurückgegeben.  'Structures' werden in assoziative Arrays
     deserialisiert.
    </para>
   </refsect1>
  </refentry>
 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

