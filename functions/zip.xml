<?xml encoding="iso-8859-1"?>
<!-- EN-Revision: 1.9 Maintainer: stefan_saasen Status: ready -->
<reference id="ref.zip">
 <title>ZIP-Datei Funktionen für den Lesezugriff</title>
 <titleabbrev>Zip</titleabbrev>
  
  <partintro>
   <para>
    Dieses Modul benutzt die Funktionen der <ulink
    url="&url.zziplib;">ZZIPlib</ulink> Bibliothek von Guido Draheim
    um ZIP komprimierte Archive und die darin enthaltenen Dateien zu
    lesen.
   </para>
   <para>
    Zu beachten ist, dass ZZIPlib nur eine Untermenge der Funktionen
    zur Verfügung stellt, die in einer vollständigen Implementation
    des ZIP Algorithmus vorhanden sind.  Zur Erstellung eines ZIP
    Archivs muss man sich eines der üblichen ZIP Programme bedienen.
   </para>
   <para>
   Die ZIP Unterstützung ist standardmäßig nicht aktiviert.  Um die
   ZIP Funktionen nutzen zu können, muss PHP mit der option <link
   linkend="install.configure.with-zip">--with-zip</link> kompiliert
   werden.  Das ZIP Modul benötigt ZZIPlib version &gt;= 0.10.6.
   </para>
   <note>
    <para>
     Zip Unterstützung für PHP vor Version 4.0.7 ist als experimentell
     anzusehen.  Dieser Abschnitt beschreibt die ZIP Unterstützung,
     wie sie für PHP ab Version 4.0.7 existiert.
    </para>
   </note>

   <sect1 id="zip-example">
    <title>Beispiel zur Verwendung</title>
    <para>
     Dieses Beispiel öffnet ein ein ZIP Archiv, liest jede Datei
     innerhalb des Archivs und gibt den Inhalt zurück. Das
     <filename>test2.zip</filename> Archiv, das in diesem Beispiel
     benutzt wird, wird mit der Original Distribution der ZZIPlib
     Bibliothek mitgeliefert.
    </para>
    <example>
     <title>Beispiel zur Verwendung der Zip Funktion</title>
     <programlisting role="php">
&lt;?php

$zip = zip_open("/tmp/test2.zip");

if ($zip) {

    while ($zip_entry = zip_read($zip)) {
        echo "Name:               " . zip_entry_name($zip_entry) . "\n";
        echo "Actual Filesize:    " . zip_entry_filesize($zip_entry) . "\n";
        echo "Compressed Size:    " . zip_entry_compressedsize($zip_entry) . "\n";
        echo "Compression Method: " . zip_entry_compressionmethod($zip_entry) . "\n";

        if (zip_entry_open($zip, $zip_entry, "r")) {
            echo "File Contents:\n";
            $buf = zip_entry_read($zip_entry, zip_entry_filesize($zip_entry));
            echo "$buf\n";

            zip_entry_close($zip_entry);
        }
        echo "\n";

    }

    zip_close($zip);

}

?&gt;
     </programlisting>
    </example>
   </sect1>
  </partintro>

  <refentry id="function.zip-open">
   <refnamediv>
    <refname>zip_open</refname>
    <refpurpose>Öffnet ein ZIP Archiv</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>zip_open</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Diese Funktion öffnet ein ZIP Archiv für den Lesezugriff.  Der
     Parameter <parameter>filename</parameter> ist der Name der zu
     öffnenden ZIP Datei.
    </para>
    <para>
     Gibt einen Dateizeiger zurück, der in den Funktionen
     <function>zip_read</function> und <function>zip_close</function>
     benutzt wird.  Existiert die Datei
     <parameter>filename</parameter> nicht wird &false; zurückgegeben.
    </para>
    <para>
     Siehe auch <function>zip_read</function> und
     <function>zip_close</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.zip-read">
   <refnamediv>
    <refname>zip_read</refname>
    <refpurpose>
     Liest den nächsten Eintrag innerhalb des ZIP Archivs
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>resource <function>zip_read</function></funcdef>
      <paramdef>resource <parameter>zip</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Liest den nächsten Eintrag innerhalb des ZIP Archivs.  Der
     Parameter <parameter>zip</parameter> muss ein Dateizeiger sein,
     der vorher durch <function>zip_open</function> zurückgegeben
     wurde.
    </para>
    <para>
     Gibt einen Verzeichniseintrag zur späteren Benutzung mit den
     <function>zip_entry_...</function> Funktionen zurück.
    </para>
    <para>
     Siehe auch <function>zip_open</function>,
     <function>zip_close</function>,
     <function>zip_entry_open</function> und
     <function>zip_entry_read</function>.
    </para>
   </refsect1>
  </refentry>
 
  <refentry id="function.zip-close">
   <refnamediv>
    <refname>zip_close</refname>
    <refpurpose>Schließt ein ZIP Archiv</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>zip_close</function></funcdef>
     <paramdef>resource <parameter>zip</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Schließt ein ZIP Archiv.  Der Parameter
     <parameter>zip</parameter> muss ein Dateizeiger sein, der vorher
     durch <function>zip_open</function> zurückgegeben wurde.
    </para>
    <para>
     Diese Funktion hat keinen Rückgabewert.
    </para>
    <para>
     Siehe auch <function>zip_open</function> und
     <function>zip_read</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.zip-entry-close">
   <refnamediv>
    <refname>zip_entry_close</refname>
    <refpurpose>Schließt einen Verzeichniseintrag</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>void <function>zip_entry_close</function></funcdef>
      <paramdef>resource <parameter>zip_entry</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Schließt einen Verzeichniseintrag, der durch den Parameter
     <parameter>zip_entry</parameter> identifiziert wird. Dieser
     Parameter muss ein gültiger Verzeichniseintrag sein, der vorher
     durch <function>zip_entry_open</function> geöffnet wurde.
    </para>
    <para>
     Diese Funktion hat keinen Rückgabewert.
    </para>
    <para>
     Siehe auch <function>zip_entry_open</function> und
     <function>zip_entry_read</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.zip-entry-compressedsize">
   <refnamediv>
    <refname>zip_entry_compressedsize</refname>
    <refpurpose>
     Gibt die komprimierte Größe eines Verzeichniseintrages zurück
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int 
       <function>zip_entry_compressedsize</function>
      </funcdef>
      <paramdef>resource <parameter>zip_entry</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Gibt die komprimierte Größe des Verzeichniseintrages zurück, der
     durch <parameter>zip_entry</parameter> spezifiziert wird.  Der
     Parameter <parameter>zip_entry</parameter> muss ein gültiger
     Verzeichniseintrag sein, der durch <function>zip_read</function>
     zurückgegeben wurde.
    </para>
    <para>
     Siehe auch <function>zip_open</function> und
     <function>zip_read</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.zip-entry-compressionmethod">
   <refnamediv>
    <refname>zip_entry_compressionmethod</refname>
    <refpurpose>
     Gibt die Komprimierungsmethode eines Verzeichniseintrages zurück.
    </refpurpose>
   </refnamediv>

   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string 
       <function>zip_entry_compressionmethod</function>
      </funcdef>
      <paramdef>resource <parameter>zip_entry</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Gibt die Komprimierungsmethode eines Verzeichniseintrages zurück,
     der durch <parameter>zip_entry</parameter> spezifiziert wird.
     Der Parameter <parameter>zip_entry</parameter> muss ein gültiger
     Verzeichniseintrag sein, der durch <function>zip_read</function>
     zurückgegeben wurde.
    </para>
    <para>
     Siehe auch <function>zip_open</function> und
     <function>zip_read</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.zip-entry-filesize">
   <refnamediv>
    <refname>zip_entry_filesize</refname>
    <refpurpose>
     Gibt die Größe eines Verzeichniseintrages zurück
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>zip_entry_filesize</function></funcdef>
      <paramdef>resource <parameter>zip_entry</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
    Gibt die Größe eines Verzeichniseintrages zurück, der durch
    <parameter>zip_entry</parameter> spezifiziert wird.  Der Parameter
    <parameter>zip_entry</parameter> muss ein gültiger
    Verzeichniseintrag sein, der durch <function>zip_read</function>
    zurückgegeben wurde.
    </para>
    <para>
     Siehe auch <function>zip_open</function> und
     <function>zip_read</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.zip-entry-name">
   <refnamediv>
    <refname>zip_entry_name</refname>                 
    <refpurpose>
     Gibt den Namen eines Verzeichniseintrages zurück</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>zip_entry_name</function></funcdef>
      <paramdef>resource <parameter>zip_entry</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Gibt den Namen eines Verzeichniseintrages zurück, der durch den
     Parameter <parameter>zip_entry</parameter> spezifiziert wurde.
     Der Parameter <parameter>zip_entry</parameter> muss ein gültiger
     Verzeichniseintrag sein, der durch <function>zip_read</function>
     zurückgegeben wurde.
    </para>
    <para>
     Siehe auch <function>zip_open</function> und
     <function>zip_read</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.zip-entry-open">
   <refnamediv>
    <refname>zip_entry_open</refname>
    <refpurpose>
     Öffnet einen Verzeichniseintrag für den Lesezugriff
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>zip_entry_open</function></funcdef>      
      <paramdef>resource <parameter>zip</parameter></paramdef>
      <paramdef>resource <parameter>zip_entry</parameter></paramdef>
      <paramdef>string 
       <parameter><optional>mode</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Öffnet einen Verzeichniseintrag für den Lesezugriff. Der
     Parameter <parameter>zip</parameter> muss ein Dateizeiger sein,
     der vorher durch <function>zip_open</function> zurückgegeben
     wurde.  Der Parameter <parameter>zip_entry</parameter> ist ein
     Verzeichniseintrag, der durch <function>zip_read</function>
     zurückgegeben wurde. Der optionale Parameter
     <parameter>mode</parameter> kann einer der in der Dokumentation
     zu <function>fopen</function> beschriebenen Werte sein.
    </para>
    <note>
     <para>
      Gegenwärtig wird der Parameter <parameter>mode</parameter>
      ignoriert und implizit auf <literal>"rb"</literal> gesetzt. Dies
      erfolgt aufgrund des ausschließlichen Lesezugriffs der aktuellen
      ZIP Unterstüzung für PHP. In der Dokumentation zu
      <function>fopen</function> finden sich weitere Erklärungen zu
      diesem Parameter.
     </para>
    </note>
    <para>
     Gibt bei Erfolg &true; zurück, andernfalls &false;.
    </para>
    <note>
     <para>
      Im Gegensatz zu <function>fopen</function> und vergleichbaren
      Funktionen zeigt der Rückgabewert von
      <function>zip_entry_open</function> nur das Gelingen an und wird
      nicht für weitere Operationen benötigt.
     </para>
    </note>
    <para>
     Siehe auch <function>zip_entry_read</function> und
     <function>zip_entry_close</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.zip-entry-read">
   <refnamediv>
    <refname>zip_entry_read</refname>
    <refpurpose>Liest einen geöffneten Verzeichniseintrag aus</refpurpose>
  </refnamediv>
  <refsect1>
   <title>Beschreibung</title>
   <funcsynopsis>
    <funcprototype>
     <funcdef>string <function>zip_entry_read</function></funcdef>
      <paramdef>resource <parameter>zip_entry</parameter></paramdef>
      <paramdef>int 
       <parameter><optional>length</optional></parameter>
      </paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Liest bis zu <parameter>length</parameter> Bytes von einem
     geöffneten Verzeichniseintrag aus.  Wenn der Parameter
     <parameter>length</parameter> nicht angegeben wurde, wird
     versucht die ersten 1024 Bytes auszulesen.  Der Parameter
     <parameter>zip_entry</parameter> muss ein gültiger
     Verzeichniseintrag sein, der durch <function>zip_read</function>
     zurückgegeben wurde.
    </para>
    <note>
     <para>
      Der Parameter <parameter>length</parameter> bezieht sich auf die
      unkomprimierte Größe.
     </para>
    </note>
    <para>
     Gibt die ausgelesenen Daten zurück oder &false;, wenn das Ende
     der Datei erreicht wurde.
    </para>
    <para>
     Siehe auch <function>zip_entry_open</function>,
     <function>zip_entry_close</function> und
     <function>zip_entry_filesize</function>.
    </para>
   </refsect1>
  </refentry>
  
 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
