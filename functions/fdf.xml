 <reference id="ref.fdf">
  <title>Forms Data Format Funktionen</title>
  <titleabbrev>FDF</titleabbrev>

  <partintro>

   <simpara>
    Forms Data Format (FDF) ist ein Format zur Verarbeitung von 
    Formularen innerhalb von PDF Dokumenten.
    Weiterführende Informationen zu FDF und dessen Verwendung 
    sind unter <ulink url="&spec.pdf.fdf;">&spec.pdf.fdf;</ulink> zu finden.
   </simpara>

   <note><simpara>
    Bei Problemen mit der Konfiguration der FdfTk-Unterstützung sollte man 
    überprüfen, ob die Datei FdfTk.h sowie die Bibliothek libFdfTk.so im richtigen 
    Verzeichnis zu finden sind. Die korrekten Verzeichnisse sind fdftk-dir/include
    und fdftk-dir/lib. Das ausschließliche Entpacken der Distribution führt nicht
    zu dem gewünschten Ergebnis.
   </simpara></note>

   <simpara>
    Der Ansatz den FDF verfolgt, ist vergleichbar mit dem üblicher HTML Formulare.
    Die wesentlichen Unterschiede liegen in der Übertragung der Daten nach Absenden des Formulars (dies ist das eigentliche Form Data Format), sowie in dem Format des Dokuments welches das Formular enthält(PDF).
    Die Verarbeitung der FDF Daten ist eine der Möglichkeiten, die 
    die FDF Funktionen bereitstellen.
    Darüberhinaus kann man beispielsweise innerhalb eines vorhandenen PDF Formulars
    die Input Felder dynamisch mit Daten füllen, ohne das Formular selbst zu verändern.
    Hierzu erzeugt man das FDF Dokument (<function>fdf_create</function>), setzt die Werte 
    der jeweiligen Input Felder (<function>fdf_set_value</function>) und verbindet es 
    mit dem jeweiligen PDF Formular (<function>fdf_set_file</function>).
    Nachdem man das FDF Dokument, mit dem passenden MimeType <literal>application/vnd.fdf</literal>
    versehen, ausgegeben hat, erkennt das Acrobat Reader PlugIn des Browsers den MimeType und 
    füllt das Zielformular mit den Daten des FDF Dokuments.
   </simpara>

   <simpara>
    Betrachtet man ein FDF Dokument mit einem Text Editor, findet sich dort
    ein Katalog Objekt <literal>FDF</literal>. Dieses Objekt kann mehrere Einträge
    der Art <literal>Fields</literal>, <literal>F</literal>, <literal>Status</literal> etc.. 
    enthalten. Die gebräuchlichsten Einträge sind <literal>Fields</literal>, welches zu einer
    Anzahl von Input Feldern verweist, sowie <literal>F</literal> das den Dateinamen des
    zugehörigen PDF Dokuments enthält. Diese Einträge finden sich in der FDF Dokumentation 
    unter /F-Key oder /Status-Key.
    Modifikationen dieser Einträge werden mit Hilfe der Funktionen <function>fdf_set_file</function> und 
    <function>fdf_set_status</function> vorgenommen.
    Felder werden u.a. mit <function>fdf_set_value</function>, <function>fdf_set_opt</function>
    modifiziert.
   </simpara>
   <simpara>
    Das Beispiel zeigt die Auswertung der Formular Daten.
   </simpara>
   <simpara></simpara>
    <example>
     <title>Auswertung eines FDF Dokuments</title>
     <programlisting>
&lt;?php
// Speichern der FDF Daten in eine temporäre Datei
$fdffp = fopen("test.fdf", "w");
fwrite($fdffp, $HTTP_FDF_DATA, strlen($HTTP_FDF_DATA));
fclose($fdffp);

// Öffnen der temporären Datei und Auswertung der Daten
// Das PDF Formular enthält verschiedene Eingabefelder mit den zugehörigen Namen
// band, datum, kommentar, verleger, bearbeiter, sowie zwei Checkboxen
// zeige_verleger und zeige_bearbeiter.

$fdf = fdf_open("test.fdf");
$band = fdf_get_value($fdf, "band");
echo "Das Feld Band hat den Wert '&lt;B>$band&lt;/B>'&lt;BR>";

$datum = fdf_get_value($fdf, "datum");
echo "Das Feld Datum hat den Wert '&lt;B>$datum&lt;/B>'&lt;BR>";

$kommentar = fdf_get_value($fdf, "kommentar");
echo "Das Feld Kommentar hat den Wert '&lt;B>$kommentar&lt;/B>'&lt;BR>";

if(fdf_get_value($fdf, "zeige_verleger") == "On") {
  $verleger = fdf_get_value($fdf, "verleger");
  echo "Das Feld Verleger hat den Wert '&lt;B>$verleger&lt;/B>'&lt;BR>";
} else
  echo "Verleger soll nicht angezeigt werden.&lt;BR>";

if(fdf_get_value($fdf, "zeige_bearbeiter") == "On") {
  $bearbeiter = fdf_get_value($fdf, "bearbeiter");
  echo "Das Feld Bearbeiter hat den Wert '&lt;B>$bearbeiter&lt;/B>'&lt;BR>";
} else
  echo "Bearbeiter soll nicht angezeigt werden.&lt;BR>";
fdf_close($fdf);
?&gt;
     </programlisting>
    </example>

  </partintro>

  <refentry id="function.fdf-open">
   <refnamediv>
    <refname>fdf_open</refname>
    <refpurpose>Öffnet ein FDF Dokument</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>fdf_open</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Die Funktion <function>fdf_open</function> öffnet 
     eine Datei mit Formulardaten. Diese Datei muß die von einem 
     PDF Formular zurückgegebenen Formulardaten enthalten.
     Momentan muss diese Datei 'manuell' erzeugt werden.
     Mit Hilfe von <function>fopen</function> schreibt man den Inhalt von HTTP_FDF_DATA
     mit <function>fwrite</function> in die Datei.
     Eine automatische Vorbelegung von Variablen mit den Daten der Eingabefelder, 
     wie sie bei HTML Formularen möglich ist, existiert in diesem Fall nicht.</para>
    <para>
    <example>
     <title>Zugang zu den Fornmulardaten</title>
     <programlisting>
&lt;?php
// Speichern der FDF Daten in eine temporäre Datei
$fdffp = fopen("test.fdf", "w");
fwrite($fdffp, $HTTP_FDF_DATA, strlen($HTTP_FDF_DATA));
fclose($fdffp);

// Öffnen der temporären Datei und Auswertung der Daten
$fdf = fdf_open("test.fdf");
...
fdf_close($fdf);
?&gt;
     </programlisting>
    </example></para>

    <para>
     Siehe auch <function>fdf_close</function>.</para>

   </refsect1>
  </refentry>

  <refentry id="function.fdf-close">
   <refnamediv>
    <refname>fdf_close</refname>
    <refpurpose>Schließt ein FDF Dokument</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>fdf_close</function></funcdef>
      <paramdef>int <parameter>fdf_document</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Die Funktion <function>fdf_close</function> schließt das FDF Dokument.</para>

    <para>
     Siehe auch <function>fdf_open</function>.</para>

   </refsect1>
  </refentry>

  <refentry id="function.fdf-create">
   <refnamediv>
    <refname>fdf_create</refname>
    <refpurpose>Erzeugt ein neues FDF Dokument</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>fdf_create</function></funcdef>
      <void/>
     </funcprototype>
    </funcsynopsis>
    <para>
     Die Funktion <function>fdf_create</function> erzeugt ein neues FDF Dokument. 
     Diese Funktion wird benötigt, wenn man Eingabefelder in einem PDF Dokument 
     mit Daten belegen möchte.</para>
    <para>
    <example>
     <title>Füllen von Formularwerten in einem PDF Dokument</title>
     <programlisting>
&lt;?php
$outfdf = fdf_create();
fdf_set_value($outfdf, "band", $band, 0);

fdf_set_file($outfdf, "http:/testfdf/resultlabel.pdf");
fdf_save($outfdf, "outtest.fdf");
fdf_close($outfdf);
Header("Content-type: application/vnd.fdf");
$fp = fopen("outtest.fdf", "r");
fpassthru($fp);
unlink("outtest.fdf");
?&gt;
     </programlisting>
    </example></para>

    <para>
     Siehe auch <function>fdf_close</function>,
              <function>fdf_save</function>,
              <function>fdf_open</function>.</para>

   </refsect1>
  </refentry>

  <refentry id="function.fdf-save">
   <refnamediv>
    <refname>fdf_save</refname>
    <refpurpose>Speichern eines FDF Dokuments</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>int <function>fdf_save</function></funcdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Die Funktion <function>fdf_save</function> speichert ein FDF Dokument.
     Das FDF Toolkit stellt eine Möglichkeit zur Verfügung, das Dokument an 
     der Standardausgabe auszugeben, wenn der Parameter <parameter>filename</parameter>
     '.' ist. Dies funktioniert allerdings nicht, wenn PHP als Apache Module verwendet wird.
     In diesem Fall sollte man die Ausgabe in eine Datei schreiben und die Funktion 
     <function>fpassthru</function> verwenden, um den Inhalt anzuzeigen.</para>
    <para>
     Siehe auch <function>fdf_close</function> and example for
              <function>fdf_create</function>.</para>

   </refsect1>
  </refentry>

  <refentry id="function.fdf-get-value">
   <refnamediv>
    <refname>fdf_get_value</refname>
    <refpurpose>Gibt den Wert eines Feldes zurück</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>fdf_get_value</function></funcdef>
      <paramdef>int <parameter>fdf_document</parameter></paramdef>
      <paramdef>string <parameter>fieldname</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Die Funktion <function>fdf_get_value</function> gibt den Wert eines 
     Feldes zurück.</para>

    <para>
     Siehe auch <function>fdf_set_value</function>.</para>

   </refsect1>
  </refentry>

  <refentry id="function.fdf-set-value">
   <refnamediv>
    <refname>fdf_set_value</refname>
    <refpurpose>Setzt den Wert eines Feldes</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>fdf_set_value</function></funcdef>
      <paramdef>int <parameter>fdf_document</parameter></paramdef>
      <paramdef>string <parameter>fieldname</parameter></paramdef>
      <paramdef>string <parameter>value</parameter></paramdef>
      <paramdef>int <parameter>isName</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Die Funktion <function>fdf_set_value</function> setzt den Wert 
     eines Feldes. Der letzte Parameter bestimmt, ob der Wert des Feldes 
     in einen PDF Namen (<parameter>isName</parameter> = 1) konvertiert oder 
     als PDF String (<parameter>isName</parameter> = 0) behandelt wird.</para>

    <para>
     Siehe auch <function>fdf_get_value</function>.</para>

   </refsect1>
  </refentry>

  <refentry id="function.fdf-next-field-name">
   <refnamediv>
    <refname>fdf_next_field_name</refname>
    <refpurpose>Gibt den Namen des nächsten Feldes zurück</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>fdf_next_field_name</function></funcdef>
      <paramdef>int <parameter>fdf_document</parameter></paramdef>
      <paramdef>string <parameter>fieldname</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Die Funktion <function>fdf_next_field_name</function> gibt den Namen 
     des Feldes nach <parameter>fieldname</parameter> oder den Namen des 
     ersten Feldes zurück, wenn der Parameter &null; ist.</para>

    <para>
     Siehe auch <function>fdf_set_field</function>,
              <function>fdf_get_field</function>.</para>

   </refsect1>
  </refentry>

  <refentry id="function.fdf-set-ap">
   <refnamediv>
    <refname>fdf_set_ap</refname>
    <refpurpose>Legt das Aussehen eines Feldes fest</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>fdf_set_ap</function></funcdef>
      <paramdef>int <parameter>fdf_document</parameter></paramdef>
      <paramdef>string <parameter>field_name</parameter></paramdef>
      <paramdef>int <parameter>face</parameter></paramdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
      <paramdef>int <parameter>page_number</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Die Funktion <function>fdf_set_ap</function> legt das Aussehen 
     eines Feldes (d.h den Wert des /AP Schlüssels) fest.
     Mögliche Werte von <parameter>face</parameter> sind 
     1=FDFNormalAP, 2=FDFRolloverAP, 3=FDFDownAP.</para>

   </refsect1>
  </refentry>

  <refentry id="function.fdf-set-status">
   <refnamediv>
    <refname>fdf_set_status</refname>
    <refpurpose>Setzt den Wert des /STATUS Schlüssels</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>fdf_set_status</function></funcdef>
      <paramdef>int <parameter>fdf_document</parameter></paramdef>
      <paramdef>string <parameter>status</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Die Funktion <function>fdf_set_status</function> setzt den Wert 
     des /STATUS Schlüssels.</para>

    <para>
     Siehe auch <function>fdf_get_status</function>.</para>

   </refsect1>
  </refentry>

  <refentry id="function.fdf-get-status">
   <refnamediv>
    <refname>fdf_get_status</refname>
    <refpurpose>Gibt den Wert des /STATUS Schlüssels zurück</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>fdf_get_status</function></funcdef>
      <paramdef>int <parameter>fdf_document</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Die Funktion <function>fdf_get_status</function> gibt den Wert 
     des /STATUS Schlüssels zurück.</para>

    <para>
     Siehe auch <function>fdf_set_status</function>.</para>

   </refsect1>
  </refentry>

  <refentry id="function.fdf-set-file">
   <refnamediv>
    <refname>fdf_set_file</refname>
    <refpurpose>Setzt den Wert des /F Schlüssels</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>fdf_set_file</function></funcdef>
      <paramdef>int <parameter>fdf_document</parameter></paramdef>
      <paramdef>string <parameter>filename</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Die Funktion <function>fdf_set_file</function> setzt den Wert des /F Schlüssels. 
     Der /F Schlüssel ist eine Referenz zu einem PDF Formular welches mit Daten gefüllt werden soll.
     In einer Web Umgebung ist diese Referenz ein URL (z.B. http:/testfdf/resultlabel.pdf).</para>

    <para>
     Siehe auch <function>fdf_get_file</function> und das Beispiel zu 
              <function>fdf_create</function>.</para>

   </refsect1>
  </refentry>

  <refentry id="function.fdf-get-file">
   <refnamediv>
    <refname>fdf_get_file</refname>
    <refpurpose>Gibt den Wert des /F Schlüssels zurück</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>string <function>fdf_get_file</function></funcdef>
      <paramdef>int <parameter>fdf_document</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Die Funktion  <function>fdf_set_file</function> gibt den Wert 
     des /F Schlüssels zurück.</para>

    <para>
     Siehe auch <function>fdf_set_file</function>.</para>

   </refsect1>
  </refentry>

  <refentry id="function.fdf-set-flags">
   <refnamediv>
    <refname>fdf_set_flags</refname>
    <refpurpose>Setzt Flags eines Feldes</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>fdf_set_flags</function></funcdef>
      <paramdef>int <parameter>fdf_document</parameter></paramdef>
      <paramdef>string <parameter>fieldname</parameter></paramdef>
      <paramdef>int <parameter>whichFlags</parameter></paramdef>
      <paramdef>int <parameter>newFlags</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Die Funktion  <function>fdf_set_flags</function> setzt bestimmte Flags 
     des Feldes <parameter>fieldname</parameter>.</para>

    <para>
     Siehe auch <function>fdf_set_opt</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.fdf-set-opt">
   <refnamediv>
    <refname>fdf_set_opt</refname>
    <refpurpose>Setzt die Option eines Feldes</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>fdf_set_opt</function></funcdef>
      <paramdef>int <parameter>fdf_document</parameter></paramdef>
      <paramdef>string <parameter>fieldname</parameter></paramdef>
      <paramdef>int <parameter>element</parameter></paramdef>
      <paramdef>string <parameter>str1</parameter></paramdef>
      <paramdef>string <parameter>str2</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Die Funktion <function>fdf_set_opt</function> setzt Optionen  
     des Feldes <parameter>fieldname</parameter>.
    </para> 
    <para>
     Siehe auch <function>fdf_set_flags</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.fdf-set-submit-form-action">
   <refnamediv>
    <refname>fdf_set_submit_form_action</refname>
    <refpurpose>Setzt die 'Submit Form Action' für ein Feld</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>fdf_set_submit_form_action</function></funcdef>
      <paramdef>int <parameter>fdf_document</parameter></paramdef>
      <paramdef>string <parameter>fieldname</parameter></paramdef>
      <paramdef>int <parameter>trigger</parameter></paramdef>
      <paramdef>string <parameter>script</parameter></paramdef>
      <paramdef>int <parameter>flags</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     Die Funktion <function>fdf_set_submit_form_action</function> setzt die 
     'Submit Form Action' für das Feld <parameter>fieldname</parameter>.
    </para>
    <para>
     Siehe auch <function>fdf_set_javascript_action</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.fdf-set-javascript-action">
   <refnamediv>
    <refname>fdf_set_javascript_action</refname>
    <refpurpose>Weist einem Feld eine Javascript Aktion zu</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>fdf_set_javascript_action</function></funcdef>
      <paramdef>int <parameter>fdf_document</parameter></paramdef>
      <paramdef>string <parameter>fieldname</parameter></paramdef>
      <paramdef>int <parameter>trigger</parameter></paramdef>
      <paramdef>string <parameter>script</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>fdf_set_javascript_action</function> weist dem Feld <parameter>fieldname</parameter> 
     eine Javascript Aktion zu.
    </para>
    <para>
     Siehe auch <function>fdf_set_submit_form_action</function>.
    </para>
   </refsect1>
  </refentry>

  <refentry id="function.fdf-set-encoding">
   <refnamediv>
    <refname>fdf_set_encoding</refname>
    <refpurpose>Legt die Kodierung des FDF Zeichensatzes fest</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
    <funcsynopsis>
     <funcprototype>
      <funcdef>bool <function>fdf_set_encoding</function></funcdef>
      <paramdef>int <parameter>fdf_document</parameter></paramdef>
      <paramdef>string <parameter>encoding</parameter></paramdef>
     </funcprototype>
    </funcsynopsis>
    <para>
     <function>fdf_set_encoding</function> legt die Kodierung des 
     Zeichensatzes innerhalb des FDF Dokuments <parameter>fdf_document</parameter> fest.
     In Acrobat 5.0 sind "<literal>Shift_JIS</literal>", "<literal>UHC</literal>", 
     "<literal>GBK</literal>","<literal>BigFive</literal>" gültige Werte für den Parameter 
     <parameter>encoding</parameter>.
    </para>
    <para>
     Die Funktion <function>fdf_set_encoding</function> ist ab PHP-4.0.7 oder 
     später verfügbar.
    </para>
   </refsect1>
  </refentry>

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
 -->
