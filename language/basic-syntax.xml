<?xml version="1.0" encoding="iso-8859-1"?>
  <chapter id="language.basic-syntax">
   <title>Grundlagen der Syntax</title>

   <sect1 id="language.basic-syntax.phpmode">
    <title>Den HTML-Bereich der Datei verlassen</title>
  
    <para>
     Es gibt vier Möglichkeiten, den HTML-Bereich einer Skript-Datei zu 
     verlassen und in den "PHP-Modus" zu wechseln:</para>

    <para>
     <example>
      <title>Möglichkeiten, den HTML-Bereich zu verlassen</title>
      <programlisting>
1.  &lt;? echo ("Das ist die einfachste Möglichkeit: eine SGML-´proccessing instruction´\n"); ?>
 
2.  &lt;?php echo("Um XML-konforme Dokumente herzustellen, benutzt man diese Syntax\n"); ?>

3.  &lt;script language="php"> 
        echo ("Manche Editoren (z. B. Frontpage) mögen keine ´processing instructions´\n");
    &lt;/script>

4.  &lt;% echo ("Optional können auch Tags im ASP-Stil verwendet werden"); %>
    &lt;%= $variable; # Das ist ein Abkuerzung fuer "&lt;%echo .." %>
      </programlisting>
     </example></para>

    <para>
     Die erste Methode ist nur verfügbar, wenn ´short tags´ 
     aktiviert sind. Dies kann durch die
     <function>short_tags</function>-Funktion
     geschehen, durch Aktivieren der 
     <link linkend="ini.short-open-tag">short_open_tag</link>- Einstellung in
     der PHP-Konfigurationsdatei oder durch das Übergeben der 
     ´--enable-short-tags´-Option an den <command>configure</command>-Befehl 
     beim Kompilieren des PHP-Parsers.</para>

    <para>
     Die vierte Methode ist nur verfügbar, wenn Tags im ASP-Stil
     (ASP-style tags) aktiviert sind. Das ist möglich, indem man
     die <link linkend="ini.asp-tags">asp_tags</link>-Konfigurationseinstellung
     aktiviert.
    <note>
     <para>Die Unterstützung der Tags im ASP-Stil wurde in Version 3.0.4.
      hinzugefügt.</para>
    </note></para>

    <para>
     Der schließende Tag für den PHP-Block schließt eine sofort
     folgende Zeilenschaltung mit ein, falls diese vorhanden
     ist. Außerdem beinhaltet der schließende Tag ein implizites Semikolon;
     Sie müssen also die letzte Zeile eines PHP-Blocks nicht mit einem
     Semikolon beenden.
    </para></sect1>


   <sect1 id="language.basic-syntax.instruction-separation">
    <title>Abgrenzung von Anweisungen</title>

    <simpara>
     Einzelne Anweisungen werden genauso voneinander abgetrennt wie
     in C oder Perl - jedes Statement wird mit einem Semikolon beendet.
     </simpara>

    <para>
     Auch der schließende Tag (?&gt;) bedeutet das Ende eines Statements,
     deshalb sind die folgenden Beispiele gleichwertig:

     <informalexample>
      <programlisting>
&lt;?php
    echo "Dies ist ein Test";
?>

&lt;?php echo "Dies ist ein Test" ?>
      </programlisting>
     </informalexample></para></sect1>

   <sect1 id="language.basic-syntax.comments">
    <title>Kommentare</title>
   
    <para>
     PHP unterstützt 'C', 'C++' und  Unix-shell-artige Kommentare. Beispiele:

    <informalexample><programlisting>
&lt;?php
    echo "Dies ist ein Test"; // Dies ist ein einzeiliger Kommentar im c++-Stil.
    /* Dies ist ein mehrzeiliger Kommentar
       und noch eine Kommentar-Zeile */
    echo "Dies ist noch ein Test";
    echo "... und ein abschliessender Test"; # Dies ist ein Shell-artiger Kommentar.
?>
     </programlisting>
    </informalexample></para>

    <simpara>
     Die einzeiligen Kommentar-Arten kommentieren  sämtlichen
     Text bis zum Zeilenende oder bis zum Ende des aktuellen PHP-Blocks
     aus, je nachdem, was zuerst eintritt.</simpara>
    <informalexample><programlisting>
&lt;h1>Dies ist ein  &lt;?# echo "einfaches";?> Beispiel.&lt;/h1>
&lt;p>Obige Ueberschrift wird lauten: 'Dies ist ein Beispiel.'.
</programlisting></informalexample> 

    <simpara>
     Man sollte darauf achten, nicht mehrere ´C´-artigen Kommentare ineinander
     zu setzen, was vorkommen kann, wenn man große Blocks auskommentiert.
     </simpara>

    <informalexample><programlisting>
&lt;?php
 /* 
    echo "Dies ist ein Test"; /* Dieser Kommentar wird ein Problem verursachen. */
 */
?>
    </programlisting></informalexample></sect1>
  </chapter>
 
 <!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
indent-tabs-mode:nil
 sgml-parent-document:nil
 sgml-default-dtd-file:"../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 -->
