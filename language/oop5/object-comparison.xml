<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.5 Maintainer: simp Status: ready -->
  <sect1 xml:id="language.oop5.object-comparison" xmlns="http://docbook.org/ns/docbook">
   <title>Objekte vergleichen</title>
   <para>
    In PHP 5 ist der Vergleich von Objekten komplizierter als in PHP 4 und 
    in stärkerer Übereinstimmung zu dem, was man von einer objektorientierten
    Programiersprache erwartet (nicht dass PHP 5 eine derartige Sprache wäre).
   </para>
   <para>
    Wenn man den Vergleichsoperator (<literal>==</literal>) benutzt, werden 
    Objektvariablen auf einfache Weise verglichen, nämlich: Zwei Objektinstanzen
    sind gleich, wenn Sie die gleichen Attribute haben und Instanzen der selben
    Klasse sind.
   </para>
   <para>
    Wenn man andererseits den Identitätsoperator benutzt (<literal>===</literal>)
    sind zwei Objekte identisch, genau dann wenn sie die selbe Instanz der
    selben Klasse referenzieren.
   </para>
   <para>
    Ein Beispiel wird diese Regeln verdeutlichen.
    <example>
     <title>Beispiel für Objektvergleiche in PHP 5</title>
     <programlisting role='php'>
<![CDATA[
<?php
function bool2str($bool)
{
    if ($bool === false) {
        return 'FALSE';
    } else {
        return 'TRUE';
    }
}

function compareObjects(&$o1, &$o2)
{
    echo 'o1 == o2 : ' . bool2str($o1 == $o2) . "\n";
    echo 'o1 != o2 : ' . bool2str($o1 != $o2) . "\n";
    echo 'o1 === o2 : ' . bool2str($o1 === $o2) . "\n";
    echo 'o1 !== o2 : ' . bool2str($o1 !== $o2) . "\n";
}

class Flag
{
    public $flag;

    function Flag($flag = true) {
        $this->flag = $flag;
    }
}

class OtherFlag
{
    public $flag;

    function OtherFlag($flag = true) {
        $this->flag = $flag;
    }
}

$o = new Flag();
$p = new Flag();
$q = $o;
$r = new OtherFlag();

echo "Zwei Instanzen der selben Klasse\n";
compareObjects($o, $p);

echo "\nZwei Referenzen auf die selbe Instanz\n";
compareObjects($o, $q);

echo "\nInstanzen zweier verschiedener Klassen\n";
compareObjects($o, $r);
?>
]]>
     </programlisting>
     &example.outputs;
     <screen>
<![CDATA[
Zwei Instanzen der selben Klasse
o1 == o2 : TRUE
o1 != o2 : FALSE
o1 === o2 : FALSE
o1 !== o2 : TRUE

Zwei Referenzen auf die selbe Instanz
o1 == o2 : TRUE
o1 != o2 : FALSE
o1 === o2 : TRUE
o1 !== o2 : FALSE

Instanzen zweier verschiedener Klassen
o1 == o2 : FALSE
o1 != o2 : TRUE
o1 === o2 : FALSE
o1 !== o2 : TRUE
]]>
     </screen>
    </example>
   </para>
  </sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
