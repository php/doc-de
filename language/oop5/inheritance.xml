<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 324459 Maintainer: simp Status: ready -->
 <sect1 xml:id="language.oop5.inheritance" xmlns="http://docbook.org/ns/docbook">
  <title>Objekt-Vererbung</title>
  <para>
   Vererbung ist ein gängiges Prinzip der Programmierung und PHP verwendet
   dieses Prinzip in seinem Objektmodell. Dieses Prinzip beeinflusst die
   Art und Weise, in der mehrere Klassen und Objekte in Beziehung zueinander
   stehen.
  </para>
  <para>
   Wenn man zum Beispiel von einer Klasse erbt, so erbt die Unterklasse
   alle Methoden der Sichtbarkeiten public und protected von der Vaterklasse.
   Wenn eine Klasse diese Methoden nicht überschreibt, wird die ursprüngliche
   Funktionalität beibehalten.
  </para>
  <para>
   Dies ist nützlich, um Funktionalität zu definieren und zu abstrahieren und
   erlaubt es, zusätzliche Funktionalität in ähnlichen Objekten zu
   implementieren, ohne sämtliche gemeinsame Funktionalitäten neu
   implementieren zu müssen.
  </para>
  
  <note>
   <para>
    Wenn Autoloading nicht verwendet wird, so müssen die Klassen definiert werden
    bevor sie verwendet werden. Wenn eine Klasse eine andere erweitert, so muss die
    Vaterklasse vor der Kindklasse deklariert werden. Diese Regel gilt für Klassen,
    die von anderen Klassen und Interfaces erben.
   </para>
  </note>
  
  <sect2 xml:id="language.oop5.inheritance.examples">
   <example xml:id="language.oop5.inheritance.examples.ex1">
    <title>Beispiel für Vererbung</title>
     <programlisting role="php">
<![CDATA[
<?php

class foo
{
    public function printItem($string)
    {
        echo 'Foo: ' . $string . PHP_EOL;
    }
    
    public function printPHP()
    {
        echo 'PHP ist großartig.' . PHP_EOL;
    }
}

class bar extends foo
{
    public function printItem($string)
    {
        echo 'Bar: ' . $string . PHP_EOL;
    }
}

$foo = new foo();
$bar = new bar();
$foo->printItem('baz'); // Ausgabe: 'Foo: baz'
$foo->printPHP();       // Ausgabe: 'PHP ist großartig.'
$bar->printItem('baz'); // Ausgabe: 'Bar: baz'
$bar->printPHP();       // Ausgabe: 'PHP ist großartig.'

?>
]]>
    </programlisting>
   </example>
  </sect2>
 </sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->