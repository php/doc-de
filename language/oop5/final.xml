<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 214912bef853e01a194fe627f109d132f7602bab Maintainer: wiesemann Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: 3ddc88b8364f27727a53ba6eb7c9a98f8525f3ce Reviewer: samesch -->
 <sect1 xml:id="language.oop5.final" xmlns="http://docbook.org/ns/docbook">
  <title>Final-Schlüsselwort</title>
  <para>
   Das Schlüsselwort final hält Kindklassen davon ab, Methoden, Eigenschaften
   oder Konstanten zu überschreiben, indem man der Definition
   <literal>final</literal> voranstellt. Wenn die Klasse selbst als final
   definiert wird, kann sie nicht erweitert werden.
  </para>
  <para>
   <example>
    <title>Beispiel für finale Methoden</title>
    <programlisting role="php">
<![CDATA[
<?php
class BaseClass {
   public function test() {
       echo "BaseClass::test() aufgerufen\n";
   }

   final public function moreTesting() {
       echo "BaseClass::moreTesting() aufgerufen\n";
   }
}

class ChildClass extends BaseClass {
   public function moreTesting() {
       echo "ChildClass::moreTesting() aufgerufen\n";
   }
}
// Erzeugt einen fatalen Fehler: Cannot override final method BaseClass::moreTesting()
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Beispiel für finale Klassen</title>
    <programlisting role="php">
<![CDATA[
<?php
final class BaseClass {
   public function test() {
       echo "BaseClass::test() aufgerufen\n";
   }

   // Da die Klasse bereits final ist, ist das Schlüsselwort final redundant
   final public function moreTesting() {
       echo "BaseClass::moreTesting() aufgerufen\n";
   }
}

class ChildClass extends BaseClass {
}
// Erzeugt einen fatalen Fehler: Class ChildClass may not inherit from final class (BaseClass)
?>
]]>
    </programlisting>
   </example>
  </para>
  <example>
   <title>Beispiel für finale Eigenschaften (seit PHP 8.4.0)</title>
   <programlisting role="php">
<![CDATA[
<?php
class BaseClass {
   final protected string $test;
}

class ChildClass extends BaseClass {
    public string $test;
}
// Erzeugt einen fatalen Fehler: Cannot override final property BaseClass::$test
?>
]]>
   </programlisting>
  </example>
  <example xml:id="language.oop5.final.example.php81">
   <title>Beispiel für finale Konstanten (seit PHP 8.1.0)</title>
   <programlisting role="php">
<![CDATA[
<?php
class Foo
{
    final public const X = "foo";
}

class Bar extends Foo
{
    public const X = "bar";
}

// Fatal error: Bar::X cannot override final constant Foo::X
?>
]]>
   </programlisting>
  </example>
  <note>
   <simpara>
    Seit PHP 8.0.0 dürfen private Methoden nicht mehr als final deklariert
    werden. Ausgenommen davon ist der
    <link linkend="language.oop5.decon.constructor">Konstruktor</link>.
   </simpara>
  </note>
  <note>
   <simpara>
    Eine als
    <link linkend="language.oop5.visibility-members-aviz"><literal>private(set)</literal></link>
    deklarierte  Eigenschaft ist implizit <literal>final</literal>.
   </simpara>
  </note>
 </sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
