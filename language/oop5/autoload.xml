<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.7 $ -->
<!-- EN-Revision: 1.10 Maintainer: hholzgra Status: ready -->
<!-- Credits: simp -->
<sect1 xml:id="language.oop5.autoload" xmlns="http://docbook.org/ns/docbook">
  <title>Autoloading</title>
  <para>
   Viele Entwickler, die objektorientierte Anwendungen entwickeln, erzeugen
   eine eigene PHP Quelldatei für jede Klassendefinition. Eines der größten
   Ärgernisse ist die Notwendigkeit, eine lange Liste von benötigten 
   Include-Anweisungen am Anfang eines jeden Skripts (eine für jede Klasse).
  </para>
  <para>
   In PHP 5 ist das nicht länger notwendig. Man kann eine __autoload Funktion
   definieren, die automatisch aufgerufen wird, falls man versucht eine noch
   nicht definierte Klasse oder ein nicht definiertes Interface zu benutzen.
   Durch den Aufruf dieser Funktion erhält die Scripting Engine einen letzten 
   Versuch, die Klasse zu laden, bevor PHP unter Ausgabe einer Fehlermeldung 
   scheitert.
  </para>
  <note>
   <para>
    Exceptions, die in einer __autoload Funktion geworfen werden, sind nicht
    in einem <link linkend="language.exceptions">Catch</link>-Block fangbar
    und führen zu einem fatalen Fehler.
   </para>
  </note>
  <note>
   <para>
    Autoloading ist nicht verfügbar, wenn man PHP im CLI <link
    linkend="features.commandline">interaktiven Modus</link> betreibt.
   </para>
  </note>
  <note>
   <para>
    Wird der Klassenname z.B. an die Funktion <function>call_user_func</function> 
    ist zu beachten das er gefährliche Zeichen wie z.B. <literal>../</literal>
    enthalten kann. Es wird daher empfohlen keine Benutzereingaben an
    solche Funktionen weiterzugeben oder zumindest die Eingaben in
    der <function>__autoload</function> zu prüfen. 
   </para>
  </note>
  <para>
   <example>
    <title>Autoload Beispiel</title>
    <para>
     Dieses Beispiel versucht die Klassen <literal>MyClass1</literal> und
     <literal>MyClass2</literal> aus den entsprechenden Dateien 
     <filename>MyClass1.php</filename> und <filename>MyClass2.php</filename>
     zu laden.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
function __autoload($class_name) {
    require_once $class_name . '.php';
}

$obj  = new MyClass1();
$obj2 = new MyClass2(); 
?>
]]>
    </programlisting>
   </example>
   <example>
    <para>
     Dieses Beispiel versucht das Interface <literal>ITest</literal> 
     zu laden.
    </para>
    <programlisting role="php">
<![CDATA[
<?php

function __autoload($name) {
    var_dump($name);
}

class Foo implements ITest {
}
 
/*
string(5) "ITest"
 
Fatal error: Interface 'ITest' not found in ...
*/
?>
]]>
    </programlisting>
   </example>
  </para>

 </sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
