<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 312947 Maintainer: raphaelm Status: ready -->

<sect1 xml:id="control-structures.elseif" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title><literal>elseif</literal>/<literal>else if</literal></title>
 <?phpdoc print-version-for="elseif"?>
 <para>
  <literal>elseif</literal>, wie der Name schon sagt, ist eine Kombination
  aus <literal>if</literal> und <literal>else</literal>. Wie
  <literal>else</literal> erweitert es eine <literal>if</literal>-Kontrollstruktur,
  um alternative Befehle auszuführen, wenn die ursprüngliche <literal>if</literal>-Bedingung
  nicht zutrifft. Im Gegensatz zu <literal>else</literal> werden die
  Alternativ-Befehle aber nur ausgeführt, wenn die <literal>elseif</literal>-Bedingung
  zutrifft. Der folgende Beispielcode gibt <computeroutput>a ist größer
  als b</computeroutput>, <computeroutput>a ist gleich groß wie 
  b</computeroutput> oder <computeroutput>a ist kleiner als b</computeroutput>
  aus:
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
if ($a > $b) {
    echo "a is größer als b";
} elseif ($a == $b) {
    echo "a ist gleich groß wie b";
} else {
    echo "a ist kleiner als b";
}
?>
]]>
   </programlisting>
  </informalexample>
 </para>
 <simpara>
  Innerhalb einer <literal>if</literal>-Kontrollstruktur können mehrere
  <literal>elseif</literal>-Strukturen benutzt werden. Die erste, deren
  Bedingung zutrifft, wird ausgeführt. In PHP kann ebenfalls als 
  Schlüsselwort 'else if' (in zwei Wörtern) benutzt werden, was sich
  komplett identisch wie 'elseif' (in einem Wort) verhält. Die syntaktische
  Bedeutung ist geringfügig anders (ähnlich wie in C), aber das Ergebnis ist,
  dass beide sich exakt genauso verhalten.
 </simpara>
 <simpara>
  Der <literal>elseif</literal>-Teil wird nur ausgeführt, wenn die vorhergehende
  <literal>if</literal>-Bedingung und alle vorhergehenden <literal>elseif</literal>-Bedingungen
  nicht zutrafen (&false;) und die aktuelle <literal>elseif</literal>-Bedingung
  zutrifft (&true;).
 </simpara>
 <note>
  <simpara>
   Achtung: <literal>elseif</literal> und <literal>else if</literal>
   verhalten sich nur gleich, wenn geschwungene Klammern verwendet werden,
   wie im obigen Beispiel. Wenn ein Doppelpunkt zur Definition der
   <literal>if</literal>/<literal>elseif</literal>-Bedingungen benutzt wird,
   darf <literal>else if</literal> nicht in zwei Wörtern geschrieben werden,
   oder PHP wird das Skript mit einem Parse Error abbrechen.
  </simpara>
 </note>
 <para>
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php

/* Falsch: */
if ($a > $b):
    echo $a." ist größer als ".$b;
else if ($a == $b): // Funktioniert nicht.
    echo "Die vorige Zeile wird einen Parse Error verursachen.";
endif;


/* Richtig: */
if ($a > $b):
    echo $a." ist größer als ".$b;
elseif ($a == $b): // elseif in einem Wort!
    echo $a." ist gleich groß wie ".$b;
else:
    echo $a." ist weder größer als noch gleich wie ".$b;
endif;

?>
]]>
   </programlisting>
  </informalexample>
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
