<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 312947 Maintainer: hholzgra  Status: ready -->

<sect1 xml:id="control-structures.goto" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title><literal>goto</literal></title>
 <?phpdoc print-version-for="goto"?>
 <para>
  Der <literal>goto</literal>-Operator kann benutzt werden um
  innerhalb eines Programs zu einer anderen Anweisung zu springen.
  Die Zielanweisung wird durch einen Namen gefolgt von einem 
  Doppelpunkt festgelegt und der <literal>goto</literal>-Anweisung
  wird der entsprechende Zielname angefügt. Hierbei handelt es sich
  jedoch nicht um ein vollständig uneingeschränktes <literal>goto</literal>:
  Die Zielanweisung muss in der selben Datei und im selben Kontext liegen,
  d.h. dass weder aus einer Funktion oder Methode herausgesprungen werden
  kann, noch in sie hineingesprungen. Weiterhin kann nicht in eine Schleifen-
  oder switch-Anweisung hineingesprungen werden. Es ist jedoch möglich aus
  diesen hinauszuspringen, weshalb <literal>goto</literal> häufig als Ersatz
  für ein mehrstufiges <literal>break</literal> verwendet wird.
 </para>
 <para>
  <example>
   <title><literal>goto</literal>-Beispiel</title>
   <programlisting role="php">
<![CDATA[
<?php
goto a;
echo 'Foo';
 
a:
echo 'Bar';
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
Bar
]]>
   </screen>
  </example>
 </para>
 <para>
  <example>
   <title><literal>goto</literal> Schleifenbeispiel</title>
   <programlisting role="php">
<![CDATA[
<?php
for ($i=0, $j=50; $i<100; $i++) {
  while ($j--) {
    if ($j==17) goto end; 
  }  
}
echo "i = $i";
end:
echo 'j hit 17';
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
j hit 17
]]>
   </screen>
  </example>
 </para>
 <para>
  <example>
   <title>Das wird nicht funktionieren</title>
   <programlisting role="php">
<![CDATA[
<?php
goto loop;
for ($i=0, $j=50; $i<100; $i++) {
  while ($j--) {
    loop:
  }
}
echo "$i = $i";
?>
]]>
   </programlisting>
   &example.outputs;
   <screen>
<![CDATA[
Fatal error: 'goto' into loop or switch statement is disallowed in
script on line 2
]]>
   </screen>
  </example>
 </para>
 <note>
  <para>
   Der <literal>goto</literal>-Operator ist ab PHP 5.3 verfügbar.
  </para>
 </note>
 <para>
  <mediaobject>
   <alt>Was ist das schlimmste, was passieren könnte, wenn man goto benutzt?</alt>
   <imageobject>
    <imagedata fileref="en/language/figures/xkcd-goto.png" format="PNG"/>
   </imageobject>
  </mediaobject>
  Bild von <link xlink:href="&url.xkcd;292">xkcd</link>
 </para>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
