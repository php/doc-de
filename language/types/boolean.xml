<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 312534 Maintainer: hholzgra  Status: ready -->
<sect1 xml:id="language.types.boolean">
 <title>Booleans</title>

 <simpara>
  Dies ist der einfachste Typ. Ein <type>boolean</type> Ausdruck ist
  ein Wahrheitswert der entweder &true; (wahr) oder &false; (falsch)
  sein kann.
 </simpara>

 <note>
  <simpara>
   Der <type>boolean</type> Typ wurde in PHP 4 eingeführt.
  </simpara>
 </note>

 <sect2 xml:id="language.types.boolean.syntax">
  <title>Syntax</title>
  <para>
   Ein <type>boolean</type> Wert wird über die Schlüsselworte
   &true; und &false; spezifiziert, Groß- und Kleinschreibung
   ist dabei nicht von Bedeutung.
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
$foo = True; // weist $foo den Wert TRUE zu
?>
]]>
   </programlisting>
  </informalexample>

  <para>
   Normalerweise wird ein <type>boolean</type> von einem
   <link linkend="language.operators">Operator</link> zurückgegeben
   und an eine <link linkend="language.control-structures"
   >Kontrollstruktur</link> weitergegeben.
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
// == ist ein Operator der auf Gleichheit prüft
// und ein boolean Ergebnis zurückgibt
if ($action == "show_version") {
    echo "Die Version ist 1.23";
}

// die Angabe von '== TRUE' ist nicht nötig...
if ($show_separators == TRUE) {
    echo "<hr>\n";
}

// ... weil folgendes *genau* die selbe Bedeutung hat:
if ($show_separators) {
    echo "<hr>\n";
}
?>
]]>
   </programlisting>
  </informalexample>
 </sect2>

 <sect2 xml:id="language.types.boolean.casting">
  <title>Converting to boolean</title>

  <simpara>
   To explicitly convert a value to <type>boolean</type>, use the
   <literal>(bool)</literal> or <literal>(boolean)</literal> casts. However, in
   most cases the cast is unncecessary, since a value will be automatically
   converted if an operator, function or control structure requires a
   <type>boolean</type> argument.
  </simpara>

  <simpara>
   Siehe auch <link linkend="language.types.type-juggling">Typumwandlungen</link>.
  </simpara>

  <para>
   Bei der Konvertierung zum Typ <type>boolean</type> gelten die folgenden
   Werte als &false;:
  </para>

  <itemizedlist>
   <listitem>
    <simpara>
     <link linkend="language.types.boolean">boolean</link> &false; selbst
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="language.types.integer">integer</link> 0 (zero)
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="language.types.float">float</link> 0.0 (zero)
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Der leere <link linkend="language.types.string">string</link>, und der
     <link linkend="language.types.string">string</link> "0"
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Ein <link linkend="language.types.array">array</link> ohne Elemente
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Ein <link linkend="language.types.object">object</link> ohne
     Eigenschaftsvariablen (nur PHP 4)
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     Der spezielle Typ <link linkend="language.types.null">NULL</link>
     (inklusive nicht gesetzter Variablen)
    </simpara>
   </listitem>
   <listitem>
    <simpara>
     <link linkend="ref.simplexml">SimpleXML</link> Objekte die
     aus leeren Tags erzeugt wurden.
    </simpara>
   </listitem>
  </itemizedlist>

  <para>
   Jeder andere Wert wird als &true; angenommen (inklusive
   jeglicher
   <link linkend="language.types.resource">resource</link>
   Werte).
  </para>

  <warning>
   <simpara>
    <literal>-1</literal> gilt als &true; wie jeder
    andere Integerwert ungleich 0 (egal ob positiv
    oder negativ)!
   </simpara>
  </warning>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
var_dump((bool) "");        // bool(false)
var_dump((bool) 1);         // bool(true)
var_dump((bool) -2);        // bool(true)
var_dump((bool) "foo");     // bool(true)
var_dump((bool) 2.3e5);     // bool(true)
var_dump((bool) array(12)); // bool(true)
var_dump((bool) array());   // bool(false)
var_dump((bool) "false");   // bool(true)
?>
]]>
   </programlisting>
  </informalexample>

 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
