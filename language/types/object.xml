<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 344924 Maintainer: nobody Status: ready -->
<!-- Credits: hholzgra, simp -->

<sect1 xml:id="language.types.object">
 <title>Objekte</title>

 <sect2 xml:id="language.types.object.init">
  <title>Objekt Initialisierung</title>

  <para>
   Um ein neues Objekt (<type>object</type>) zu erstellen, ist die
   <literal>new</literal>-Anweisung zu verwenden,
   um eine Klasse zu instanziieren:
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
class foo
{
    function do_foo()
    {
        echo "Mache foo."; 
    }
}

$bar = new foo;
$bar->do_foo();
?>
]]>
   </programlisting>
  </informalexample>

  <simpara>
   Für die vollständige Erörterung ist dem Kapitel
   <link linkend="language.oop5">Klassen und Objekte</link> zu entnehmen.
  </simpara>

 </sect2>
 
 <sect2 xml:id="language.types.object.casting">
  <title>Konvertierung zu Objekt</title>
  
  <para>
   Wenn ein <type>object</type> zu einem <type>object</type> konvertiert wird, wird es nicht
   verändert. Wenn ein Wert irgendeines anderen Typs zu einem 
   <type>object</type> konvertiert wird, dann wird ein neues Exemplar der eingebauten <literal>stdClass</literal>
   Klasse erstellt. Wenn der Wert &null; war, wird das neue Exemplar leer sein.
   <type>Array</type>s konvertieren zu <type>object</type> mit nach Schlüsseln 
   benannten Eigenschaften und korrespondierenden Werten. Es ist zu beachten, dass
   in diesem Fall vor PHP 7.2.0 auf numerische Schlüssel außer beim Iterieren nicht
   zugegriffen werden konnte.
  </para>
  
  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
$obj = (object) array('1' => 'foo');
var_dump(isset($obj->{'1'})); // Ausgabe 'bool(true)' von PHP 7.2.0 an; 'bool(false)' zuvor
var_dump(key($obj)); // Ausgabe 'string(1) "1"' von PHP 7.2.0 an;  'int(1)' zuvor
?>
]]>
   </programlisting>
  </informalexample>
  
  <para>
   Für alle anderen Werte enthält eine Member-Variable namens <literal>scalar</literal> den
   Wert.
  </para>
  
    <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
$obj = (object) 'ciao';
echo $obj->scalar;  // Ausgabe 'ciao'
?>
]]>
   </programlisting>
  </informalexample>

 </sect2>
</sect1>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
