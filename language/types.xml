<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.47 $ -->
<!-- EN-Revision: 1.200 Maintainer: hholzgra Status: ready -->
<!-- CREDITS: samesch, betz -->
<chapter xml:id="language.types" xmlns="http://docbook.org/ns/docbook">
 <title>Typen</title>

 <sect1 xml:id="language.types.intro">
  <title>Einführung</title>
  <simpara>
   PHP unterstützt acht primitive Typen.
  </simpara>

  <para>
   Vier skalare Typen:
  </para>

  <itemizedlist>

   <listitem>
    <simpara>
     <type>Boolean</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>Integer</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>Fließkomma-Zahl (float)</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>String / Zeichenkette</type>
    </simpara>
   </listitem>

  </itemizedlist>

  <para>
   Zwei zusammengesetzte Typen:
  </para>

  <itemizedlist>

   <listitem>
    <simpara>
     <type>Array</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>Object</type>
    </simpara>
   </listitem>

  </itemizedlist>

  <para>
   Und zuletzt zwei spezielle Typen:
  </para>

  <itemizedlist>

   <listitem>
    <simpara>
     <type>resource</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>NULL</type>
    </simpara>
   </listitem>

  </itemizedlist>

  <para>    
   Für die bessere Lesbarkeit führt dieses Handbuch ein paar <link
   linkend="language.pseudo-types">Pseudo-Typen</link> ein:
  </para>

  <itemizedlist>

   <listitem>
    <simpara>
     <type>mixed</type>
    </simpara>
   </listitem>

   <listitem>
    <simpara>
     <type>number</type>
    </simpara>
   </listitem>
 
   <listitem>
    <simpara>
     <type>callback</type>
    </simpara>
   </listitem>

  </itemizedlist>

  <para>
   Sowie die Pseudovariable <parameter>$...</parameter>.
  </para>

  <para>
   Sie werden auch ein paar Hinweise auf den Typ "Double" finden.
   Betrachten Sie Double als dasselbe wie Float. Die beiden
   Bezeichnungen existieren nur aus historischen Gründen.
  </para>
 
  <simpara>
   Der Typ einer Variablen wird normalerweise nicht vom
   Programmierer bestimmt. Zur Laufzeit von PHP wird entschieden,
   welchen Typs eine Variable ist, abhängig vom Zusammenhang in dem
   die Variable benutzt wird.
  </simpara>

   <note>
    <simpara>
     Um den Typ und den Wert eines bestimmten <link
     linkend="language.expressions">Ausdrucks (Expression)</link> zu
     überprüfen, können Sie <function>var_dump</function> benutzen.
    </simpara>
    <para>
     Wenn Sie zur Fehlersuche einfach nur eine lesbare Darstellung
     eines Typs benötigen, benutzen Sie <function>gettype</function>.
     Um auf einen bestimmten Typ zu prüfen, sollten Sie
     <emphasis>nicht</emphasis> <function>gettype</function> benutzen.
     Stattdessen sollten Sie die
     <literal>is_<replaceable>type</replaceable></literal> Funktionen
     verwenden.  Ein paar Beispiele:
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
$bool = TRUE;   // ein Boolean (Wahrheitswert)
$str  = "foo";  // ein String (Zeichenkette)
$int  = 12;     // ein Integer (Ganzzahl)

echo gettype($bool); // gibt "boolean" aus
echo gettype($str);  // gibt "string" aus

// Falls es ein Integer ist, erhöhe ihn um vier
if (is_int($int)) {
    $int += 4;
}

// Falls $bool ein String ist, gebe ihn aus
// (gibt überhaupt nichts aus)
if (is_string($bool)) {
    echo "String: $bool";
}
?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </note>
   <simpara>
    Wenn sie die Umwandlung in einen bestimmten Variablen-Typ
    erzwingen wollen, erreichen Sie dies entweder durch <link
    linkend="language.types.typecasting">Typ-Umwandlung</link> oder
    durch Gebrauch der Funktion <function>settype</function>.
   </simpara>
   <simpara>
    Beachten Sie, dass eine Variable abhängig vom Typ, dem die
    Variable zu dem Zeitpunkt entspricht, in bestimmten Situationen
    unterschiedlich ausgewertet werden kann. Weitere Informationen
    entnehmen Sie dem Abschnitt zur <link
    linkend="language.types.type-juggling">Typ-Veränderung</link>.
    Schauen Sie sich außerdem <link linkend="types.comparisons">PHP
    type comparison tables</link> an, wenn Sie an Beispielen
    verschiedener typenbezogener Vergleiche interessiert sind.
   </simpara>
  </sect1>

 &language.types.boolean;
 &language.types.integer;
 &language.types.float;
 &language.types.string;
 &language.types.array;
 &language.types.object;
 &language.types.resource;
 &language.types.null;
 &language.types.pseudo-types;
 &language.types.type-juggling;
 
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
