<?xml version="1.0" encoding="utf-8"?>
<!-- EN-Revision: 2946c8a267734a9e8696e1764f7436e6caa8909c Maintainer: nobody Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: e4b889a3e8b9d87ab605aac9bbe85d2c16c69a1b Reviewer: samesch -->
<!-- CREDITS: tzwenny, betz -->
<chapter xml:id="language.operators" xmlns="http://docbook.org/ns/docbook" annotations="interactive">
 <title>Operatoren</title>
 <simpara>
  Ein Operator ist etwas das Sie mit einem oder mehreren Werten (oder
  Ausdrücken, um im Programmierjargon zu sprechen) füttern und Sie erhalten
  als Ergebnis einen anderen Wert (damit wird diese Konstruktion selbst zu
  einem Ausdruck).
 </simpara>
 <para>
  Operatoren können gemäß der Anzahl der Operanden, die sie erwarten,
  gruppiert werden. Unäre Operatoren arbeiten mit nur einem Operanden, zum
  Beispiel <literal>!</literal> (der
  <link linkend="language.operators.logical">logische Negationsoperator</link>)
  oder <literal>++</literal> (der
  <link linkend="language.operators.increment">Inkrementoperator</link>).
  Binäre Operatoren arbeiten mit zwei Operanden, wie etwa die bekannten
  <link linkend="language.operators.arithmetic">arithmetischen Operatoren</link>
  <literal>+</literal> (Plus) und <literal>-</literal> (Minus), und die
  meisten PHP-Operatoren fallen in diese Kategorie. Schließlich gibt es einen
  einzigen
  <link linkend="language.operators.comparison.ternary">ternären Operator</link>,
  <literal>? :</literal>, der mit drei Operanden arbeitet; dieser wird meist
  einfach "der ternäre Operator" genannt (obwohl er wohl richtiger bedingter
  Operator genannt werden könnte).
 </para>
 <para>
  Eine vollständige Liste von PHP-Operatoren folgt im Abschnitt
  <link linkend="language.operators.precedence">Operator-Rangfolge</link>.
  Dieser Abschnitt erklärt weiterhin die Operator-Rangfolge und die
  Assoziativität (Ausführungspriorität), die regeln wie Ausdrücke, die
  mehrere unterschiedliche Operatoren enthalten, ausgewertet werden.
 </para>

 &language.operators.precedence;
 &language.operators.arithmetic;
 &language.operators.increment;
 &language.operators.assignment;
 &language.operators.bitwise;
 &language.operators.comparison;
 &language.operators.errorcontrol;
 &language.operators.execution;
 &language.operators.logical;
 &language.operators.string;
 &language.operators.array;
 &language.operators.type;
 &language.operators.functional;

</chapter>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
