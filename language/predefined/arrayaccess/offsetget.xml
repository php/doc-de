<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 305566 Maintainer: sammywg Status: ready -->

<refentry xml:id="arrayaccess.offsetget" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ArrayAccess::offsetGet</refname>
  <refpurpose>Gibt den Wert eines Offset-Punkts zurück</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>abstract</modifier> <modifier>public</modifier> <type>mixed</type><methodname>ArrayAccess::offsetGet</methodname>
   <methodparam><type>mixed</type><parameter>offset</parameter></methodparam>
  </methodsynopsis>
  <para>
   Gibt den Wert des angegebenen Offset-Punkts zurück.
  </para>
  <para>
   Diese Methode wird ausgeführt, wenn geprüft wird, ob ein Offset-Punkt
   <function>empty</function> ist.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Der zu untersuchende Offset-Punkt.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Beginnend mit PHP 5.3.4 kann <function>ArrayAccess::offsetGet</function>
    per Referenz zurückgeben. Somit ist es möglich Array Offsets von
    Objekten welche mit <classname>ArrayAccess</classname> überladen
    wurden indirekt zu modifizieren.
   </para>
   <para>
    Bei einer direkten Änderung wird der Wert eines Array Offsets
    komplett ersetzt (beispielsweise <literal>$obj[6] = 7</literal>).
    Bei einer indirekten Änderung wird nur ein Teil des Array
    Offsets geändert (<literal>$obj[6][7] = 7</literal>) oder das
    Array Offset einer Variablen per Referenz zugewiesen
    (<literal>$var =&amp; $obj[6]</literal>). Auch Inkrementierung
    mit <literal>++</literal> und Dekrementierung mit <literal>--</literal>
    sind derartig implementiert, dass sie indirekte Änderung erfordern.
   </para>
   <para>
    Direkte Änderungen führen zu einem Aufruf von
    <function>ArrayAccess::offsetSet</function>, wohingegen indirekte
    Änderungen in einem Aufruf von <function>ArrayAccess::offsetGet</function>
    resultieren. In diesem Fall muss die Implementierung von
    <function>ArrayAccess::offsetGet</function> in der Lage sein per Referenz
    zurückzugeben, ansonsten wird ein <constant>E_NOTICE</constant> Fehler
    generiert.
   </para>
  </note>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Kann Werte aller Typen zurückgeben.
  </para>
 </refsect1>

<!--
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>ArrayAccess::offsetGet</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
/* ... */
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
...
]]>
    </screen>
   </example>
  </para>
 </refsect1>
-->

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>ArrayAccess::offsetExists</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
