<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 339426 Maintainer: sammywg Status: ready -->

<phpdoc:varentry xmlns:phpdoc="http://php.net/ns/phpdoc" xml:id="reserved.variables.server" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>$_SERVER</refname>
  <refname>$HTTP_SERVER_VARS [entfernt]</refname>
  <refpurpose>Informationen über Server und Ausführungsumgebung</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>
   <varname>$_SERVER</varname> ist ein Array, das Informationen wie Header,
   Pfade und die verschiedenen Wege, das Skript anzusprechen beinhaltet. Die Einträge in
   diesem Array werden vom Webserver erstellt. Es gibt keine Garantie dafür,
   dass jeder Webserver alle möglichen Einträge unterstützt - Server können
   einige weglassen oder andere Einträge unterstützen, die hier nicht aufgeführt
   sind. Das meint, die meisten der Variablen werden in der<link
   xlink:href="&url.rfc;3875">CGI 1.1-Spezifikation</link> ausgewiesen, daher
   sollten Sie diese als von Ihrem Webserver unterstützt erwarten können.
  </para>

  <simpara>
   Vor PHP 5.4.0 enthielt <varname>$HTTP_SERVER_VARS</varname> anfangs die selben Informationen,
   war aber kein <link
   linkend="language.variables.superglobals">Superglobal</link>. (Beachten Sie,
   dass <varname>$HTTP_SERVER_VARS</varname> und <varname>$_SERVER</varname>
   unterschiedliche Variablen waren und von PHP daher entsprechend behandelt
   wurden.)
  </simpara>
 </refsect1>

 <refsect1 role="indices">
  &reftitle.indices;
  <simpara>
   Es kann sein, dass Sie die folgenden Elemente in <varname>$_SERVER</varname>
   vorfinden. Beachten Sie, dass einige davon, sofern vorhanden, nur verfügbar
   sind oder einen sinnvollen Wert haben, wenn PHP auf der <link
   linkend="features.commandline">Kommandozeile</link> läuft.
  </simpara>

  <para>
   <variablelist>
    <varlistentry>
     <term>'<varname>PHP_SELF</varname>'</term>
     <listitem>
      <simpara>
       Der Dateiname des aktuell ausgeführten Skripts, relativ zum Document Root.
       Beispielsweise enthält <varname>$_SERVER['PHP_SELF']</varname> in einem
       Skript, das über die Adresse
       <filename>http://example.com/foo/bar.php</filename> aufgerufen wird,
       den Wert <filename>/foo/bar.php</filename>. Die Konstante <link
       linkend="language.constants.predefined">__FILE__</link> enthält den
       vollständigen Pfad und Dateinamen der aktuellen (z.B. via include
       eingebundenen) Datei.
      </simpara>
      <simpara>
       Läuft PHP als Kommandozeilenprogramm, enthält diese Variable seit PHP
       4.3.0 den Namen des Skripts. Davor war die Variable nicht verfügbar.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<link linkend="reserved.variables.argv">argv</link>'</term>
     <listitem>
      <simpara>
       Array der an das Skript übergebenen Argumente. Wenn das Skript auf der
       Kommandozeile ausgeführt wird, erhalten Sie auf diesem Weg einen an die
       Sprache C angelehnten Zugriff auf die Kommandozeilenparameter. Wird
       das Skript via GET aufgerufen, enthält die Variable den Querystring.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<link linkend="reserved.variables.argc">argc</link>'</term>
     <listitem>
      <simpara>
       Enthält die Anzahl der per Kommandozeile an das Skript übergebenen
       Parameter (sofern das Skript auf der Kommandozeile ausgeführt wird).
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>GATEWAY_INTERFACE</varname>'</term>
     <listitem>
      <simpara>
       Enthält die Version der vom Server verwendete CGI-Spezifikation, z. B.
       '<literal>CGI/1.1</literal>'.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_ADDR</varname>'</term>
     <listitem>
      <simpara>
       Die IP-Adresse des Servers, auf dem das aktuelle Skript ausgeführt wird.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_NAME</varname>'</term>
     <listitem>
      <simpara>
       Der Hostname des Servers, auf dem das aktuelle Skript ausgeführt wird.
       Wenn das Skript auf einem Virtuellen Host läuft, wird dieser Wert vom
       Virtuellen Host bestimmt.
      </simpara>
      <note>
       <simpara>
        Unter Apache 2 muss <literal>UseCanonicalName = On</literal> und
        <literal>ServerName</literal> gesetzt werden. Ansonsten reflektiert
        dieser Wert den Hostnamen, der vom Client gesendet wurde, und der
        vorgetäuscht werden kann. Es ist nicht sicher, sich in
        sicherheitsrelevanten Kontexten auf diesen Wert zu verlassen.
       </simpara>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_SOFTWARE</varname>'</term>
     <listitem>
      <simpara>
       Identifikation der verwendeten Server-Software, die bei einer Antwort auf
       den eingegangenen Request verwendet wird.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_PROTOCOL</varname>'</term>
     <listitem>
      <simpara>
       Name und Versionsnummer des verwendeten Übertragungsprotokolls, mittels
       dessen die aktuelle Seite aufgerufen wurde, z. B.
       '<literal>HTTP/1.0</literal>'.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REQUEST_METHOD</varname>'</term>
     <listitem>
      <simpara>
       Enthält die für den Zugriff auf die Seite verwendete Requestmethode, z. B.
       '<literal>GET</literal>', '<literal>HEAD</literal>',
       '<literal>POST</literal>' oder '<literal>PUT</literal>'.
      </simpara>
      <note>
       <para>
        Ist die Requestmethode <literal>HEAD</literal>, wird ein PHP-Skript
        beendet, nachdem die Header gesendet wurden (sofern
        Ausgaben ohne die Verwendung des Ausgabepuffers (output buffering)
        erzeugt werden).
       </para>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REQUEST_TIME</varname>'</term>
     <listitem>
      <simpara>
       Der Timestamp des Zeitpunkts, an dem der Request eintraf. Verfügbar seit
       PHP 5.1.0.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REQUEST_TIME_FLOAT</varname>'</term>
     <listitem>
      <simpara>
       Der Timestamp des Zeitpunkts, an dem der Request eintraf, in
       Mikrosekunden-Genauigkeit. Verfügbar seit PHP 5.4.0.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>QUERY_STRING</varname>'</term>
     <listitem>
      <simpara>
       Sofern vorhanden, der Querystring, mittels dessen auf die Seite
       zugegriffen wurde.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>DOCUMENT_ROOT</varname>'</term>
     <listitem>
      <simpara>
       Das Document Root-Verzeichnis, unter dem das aktuelle Skript ausgeführt
       wird, so wie es in der Konfiguration des Servers festgelegt wurde.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>HTTP_ACCEPT</varname>'</term>
     <listitem>
      <simpara>
       Enthält den Inhalt des <literal>Accept:</literal>-Headers des aktuellen
       Requests, sofern ein solcher gesendet wurde.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>HTTP_ACCEPT_CHARSET</varname>'</term>
     <listitem>
      <simpara>
       Enthält den Inhalt des <literal>Accept-Charset:</literal>-Headers des
       aktuellen Requests, sofern ein solcher gesendet wurde. Beispiel:
       '<literal>iso-8859-1,*,utf-8</literal>'.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>HTTP_ACCEPT_ENCODING</varname>'</term>
     <listitem>
      <simpara>
       Enthält den Inhalt des <literal>Accept-Encoding:</literal>-Headers des
       aktuellen Requests, sofern ein solcher gesendet wurde. Beispiel:
       '<literal>gzip</literal>'.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>HTTP_ACCEPT_LANGUAGE</varname>'</term>
     <listitem>
      <simpara>
       Enthält den Inhalt des <literal>Accept-Language:</literal>-Headers des
       aktuellen Requests, sofern ein solcher gesendet wurde. Beispiel:
       '<literal>en</literal>'.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>HTTP_CONNECTION</varname>'</term>
     <listitem>
      <simpara>
       Enthält den Inhalt des <literal>Connection:</literal>-Headers des
       aktuellen Requests, sofern ein solcher gesendet wurde. Beispiel:
       '<literal>Keep-Alive</literal>'.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>HTTP_HOST</varname>'</term>
     <listitem>
      <simpara>
       Enthält den Inhalt des <literal>Host:</literal>-Headers des
       aktuellen Requests, sofern ein solcher gesendet wurde.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>HTTP_REFERER</varname>'</term>
     <listitem>
      <simpara>
       Sofern vorhanden, die Adresse der Seite, auf der der Benutzer einen Link
       auf die aktuell aufgerufene Seite angeklickt hat. Dieser Wert wird vom
       Browser des Benutzers gesetzt. Nicht alle Programme unterstützen diesen
       Wert, manche offerieren als Feature sogar die Möglichkeit, den Wert von
       <varname>HTTP_REFERER</varname> selbst zu bestimmen. Kurz, Sie können
       diesem Wert nicht wirklich vertrauen.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>HTTP_USER_AGENT</varname>'</term>
     <listitem>
      <simpara>
       Enthält den Inhalt des <literal>User-Agent:</literal>-Headers des
       aktuellen Requests, sofern ein solcher gesendet wurde. Dies ist eine
       Zeichenkette, die das für den Zugriff auf die Seite verwendete Programm
       anzeigt. Ein typisches Beispiel ist <computeroutput>Mozilla/4.5 [en]
       (X11; U; Linux 2.2.9 i586)</computeroutput>. Sie können diesen Wert unter
       anderem mittels der Funktion <function>get_browser</function> dafür
       nutzen, den Inhalt Ihrer Seite auf die Möglichkeiten des jeweiligen
       Browsers zuzuschneiden.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>HTTPS</varname>'</term>
     <listitem>
      <simpara>
       Wird auf einen nicht-leeren Wert gesetzt, wenn das Skript via HTTPS
       aufgerufen wurde.
      </simpara>
      <note>
       <simpara>
        Beachten Sie bei der Verwendung von ISAPI unter IIS, dass der Wert
        auf <literal>off</literal> gesetzt wird, wenn der Request nicht mittels
        HTTPS erfolgte.
       </simpara>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REMOTE_ADDR</varname>'</term>
     <listitem>
      <simpara>
       Die IP-Adresse, von der aus der Benutzer die aktuelle Seite ansieht.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REMOTE_HOST</varname>'</term>
     <listitem>
      <simpara>
       Der Name des Hosts, von dem aus der Benutzer die aktulle Seite ansieht.
       Der Auflösung der IP-Adresse (Reverse DNS Lookup) basiert auf der
       <varname>REMOTE_ADDR</varname> des Benutzers.
      </simpara>
      <note>
       <simpara>
        Ihr Webserver muss darauf konfiguriert sein, diese Variable zu erzeugen.
        Im Apache benötigen Sie dazu zum Beispiel die Direktive
        <literal>HostnameLookups On</literal> innerhalb der &httpd.conf;. Lesen
        Sie dazu auch die Beschreibung der Funktion
        <function>gethostbyaddr</function>.
       </simpara>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REMOTE_PORT</varname>'</term>
     <listitem>
      <simpara>
       Der vom Rechner des Benutzers verwendete Port, um mit dem Webserver
       zu kommunizieren.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REMOTE_USER</varname>'</term>
     <listitem>
      <simpara>
        Der beglaubigte Benutzer.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REDIRECT_REMOTE_USER</varname>'</term>
     <listitem>
      <simpara>
        Der beglaubigte Benutzer, falls der Request intern weiter geleitet wurde.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SCRIPT_FILENAME</varname>'</term>
     <listitem>
      <para>
       Der absolute Pfad des aktuell ausgeführten Skripts.
       <note>
        <para>
         Wenn ein Skript als CLI mit einem relativen Pfad wie
         <filename>file.php</filename> oder <filename>../file.php</filename>
         ausgeführt wird, enthält <varname>$_SERVER['SCRIPT_FILENAME']</varname>
         den vom Benutzer angegebenen relativen Pfad.
        </para>
       </note>
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_ADMIN</varname>'</term>
     <listitem>
      <simpara>
       Der Wert, der für die SERVER_ADMIN-Direktive (für Apache) im
       Konfigurationsfile des Webservers eingestellt wurde. Wenn das Skript
       auf einem Virtuellen Host läuft, wird der für diesen Virtuellen Host
       definierte Wert verwendet.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_PORT</varname>'</term>
     <listitem>
      <simpara>
       Der Port, der auf dem Server vom Webserver für die Kommunikation genutzt
       wird. In einer Standardumgebung ist dies '<literal>80</literal>'; wenn
       Sie beispielsweise SSL verwenden, wird dieser Wert auf den Port geändert,
       über den Sie Ihre verschlüsselte HTTP-Kommunikation abwickeln.
      </simpara>
      <note>
       <simpara>
        Unter Apache 2 müssen Sie <literal>UseCanonicalName = On</literal> sowie
        <literal>UseCanonicalPhysicalPort = On</literal> setzen, um den physikalischen
        (wirklichen) Port zu erhalten; andernfalls kann dieser Wert gefälscht
        werden, und gibt dann den physikalischen Port Wert zurück, oder nicht.
        Es ist nicht sicher, sich auf diesen Wert in sicherheitsabhängigen
        Umfeldern zu verlassen.
       </simpara>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SERVER_SIGNATURE</varname>'</term>
     <listitem>
      <simpara>
       Ein String, der die Version der verwendeten Serversoftware und den Namen
       des Virtuellen Hosts enthält, der, sofern die Option auf dem Server
       aktiviert ist, an die servergenerierte Seiten angefügt wird.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>PATH_TRANSLATED</varname>'</term>
     <listitem>
      <simpara>
       Auf dem Dateisystem (nicht dem Document Root!) basierender Pfad zum
       aktuellen Skript, nachdem der Server ein Virtual-to-Real-Mapping
       durchgeführt hat.
      </simpara>
      <note>
       <simpara>
        Seit PHP 4.3.2  wird <envar>PATH_TRANSLATED</envar> nicht länger implizit
        unter der Apache 2 <acronym>SAPI</acronym> gesetzt, im Gegensatz zur
        Situation unter Apache 1, bei dem diese Variable automatisch auf den
        Wert von <envar>SCRIPT_FILENAME</envar> gesetzt wird, sofern Apache
        nicht selbst einen Wert einfügt. Diese Änderung entspricht dem in der
        <acronym>CGI</acronym>-Spezifikation beschriebenen Verhalten, nach dem
        <envar>PATH_TRANSLATED</envar> nur dann gesetzt sein sollte, wenn
        <envar>PAT_INFO</envar> definiert ist.
       </simpara>
       <simpara>
        Apache 2-Benutzer können die Direktive <literal>AcceptPathInfo =
        On</literal> in der <filename>httpd.conf</filename> verwenden, um
        einen Wert für <envar>PATH_INFO</envar> zu definieren.
       </simpara>
      </note>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>SCRIPT_NAME</varname>'</term>
     <listitem>
      <simpara>
       Enthält den Pfad zum aktuellen Skript. Dies ist nützlich für Seiten, die
       auf sich selbst verweisen sollen. Die Konstante <link
       linkend="language.constants.predefined">__FILE__</link> enthält den
       vollständigen Pfad und Dateinamen der aktuellen (z.B. via include
       eingebundenen) Datei.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>REQUEST_URI</varname>'</term>
     <listitem>
      <simpara>
       Der URI, der angegeben wurde, um auf die aktuelle Seite zuzugreifen,
       beispielsweise '<literal>/index.html</literal>'.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>PHP_AUTH_DIGEST</varname>'</term>
     <listitem>
      <simpara>
       Wenn Digest HTTP Authentication verwendet wird, wird diese Variable mit
       dem Inhalt des vom Client gesendeten 'Authorization'-Headers gefüllt,
       welchen Sie für eine adäquate Validierung nutzen sollten.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>PHP_AUTH_USER</varname>'</term>
     <listitem>
      <simpara>
       Wenn HTTP authentication verwendet wird, wird diese Variable mit dem
       vom Benutzer angegebenen Usernamen gefüllt.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>PHP_AUTH_PW</varname>'</term>
     <listitem>
      <simpara>
       Wenn HTTP authentication verwendet wird, wird diese Variable mit dem
       vom Benutzer angegebenen Passwort gefüllt.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>AUTH_TYPE</varname>'</term>
     <listitem>
      <simpara>
       Wenn HTTP-Authentication verwendet wird, wird diese Variable mit dem
       verwendeten HTTP-Authentifizierungsmechanismus gefüllt.
      </simpara>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term>'<varname>PATH_INFO</varname>'</term>
     <listitem>
      <simpara>
       Enthält, sofern vorhanden, den Teil des Pfadnamens hinter dem Namen
       des PHP-Skripts, aber vor dem Query-String.
       Wenn zum Beispiel das aktuelle Skript mittels dem URL
       <filename>http://www.example.com/php/path_info.php/some/stuff?foo=bar</filename>
       aufgerufen wird, würde <varname>$_SERVER['PATH_INFO']</varname>
       <literal>/some/stuff</literal> enthalten.
      </simpara>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term>'<varname>ORIG_PATH_INFO</varname>'</term>
     <listitem>
      <simpara>
       Originalversion von '<varname>PATH_INFO</varname>' vor der
       Verarbeitung durch PHP.
      </simpara>
     </listitem>
    </varlistentry>
    
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.4.0</entry>
       <entry>
        <varname>$HTTP_SERVER_VARS</varname> ist nicht mehr verfügbar, da die
        Registrierung von langen Arrays entfernt wurde.
       </entry>
      </row>
      <row>
       <entry>5.3.0</entry>
       <entry>
        Die Direktive <link linkend="ini.register-long-arrays">register_long_arrays</link>,
        die <varname>$HTTP_SERVER_VARS</varname> verfügbar gemacht hat, wurde
        missbilligt.
       </entry>
      </row>
      <row>
       <entry>4.1.0</entry>
       <entry>
        Einführung von <varname>$_SERVER</varname> als Ablösung der bis dahin
        existierenden <varname>$HTTP_SERVER_VARS</varname>.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example xml:id="variable.server.basic">
    <title><varname>$_SERVER</varname>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
echo $_SERVER['SERVER_NAME'];
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
www.example.com
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.is-superglobal;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="book.filter">Die Filter-Erweiterung</link></member>
   </simplelist>
  </para>
 </refsect1>

</phpdoc:varentry>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
