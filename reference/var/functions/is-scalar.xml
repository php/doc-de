<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 283841 Maintainer: hholzgra  Status: ready -->
<refentry xml:id="function.is-scalar" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>is_scalar</refname>
  <refpurpose>
   Prüft ob eine Variable skalar ist
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>is_scalar</methodname>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
  </methodsynopsis>
  <para>
   Prüft ob die gegebene Variable skalar ist.
  </para>
  <para>
   Unter skalaren Variablen versteht man solche die einen
   <type>integer</type>, <type>float</type>, <type>string</type> oder 
   <type>boolean</type> Wert enthalten. Variablen vom Typ <type>array</type>, 
   <type>object</type> und <type>resource</type> sind nicht skalar.
  </para>
  <note>
   <para>
    <function>is_scalar</function> betrachtet Variablen vom Typ
    <type>resource</type> nicht als skalar da Resourcen abstrakte
    Datentypen darstellen auch wenn sie zur Zeit als Integer repräsentiert
    sind. Sie sollten sich nicht auf dieses Implementationsdetail
    verlassen da es sich ändern kann.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       Die zu prüfende Variable.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Liefert &true; wenn <parameter>var</parameter> skalar ist,
   sonst &false;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>is_scalar</function> Example</title>
    <programlisting role="php">
<![CDATA[
<?php
function show_var($var) 
{
    if (is_scalar($var)) {
        echo $var;
    } else {
        var_dump($var);
    }
}
$pi = 3.1416;
$proteins = array("Hämoglobin", "Cytochrom C Oxidase", "Ferredoxin");

show_var($pi);
show_var($proteins)

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
3.1416
array(3) {
  [0]=>
  string(10) "Hämoglobin"
  [1]=>
  string(20) "Cytochrome C Oxidase"
  [2]=>
  string(10) "Ferredoxin"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>is_float</function></member>
    <member><function>is_int</function></member>
    <member><function>is_numeric</function></member>
    <member><function>is_real</function></member>
    <member><function>is_string</function></member>
    <member><function>is_bool</function></member>
    <member><function>is_object</function></member>
    <member><function>is_array</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
