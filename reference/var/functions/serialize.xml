<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- splitted from ./de/functions/var.xml, last change in rev 1.20 -->
<!-- last change to 'serialize' in en/ tree in rev 1.28 -->
  <refentry id="function.serialize">
   <refnamediv>
    <refname>serialize</refname>
    <refpurpose>
     Erzeugt ein speicherbares Datenformat
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
     <methodsynopsis>
      <type>string</type><methodname>serialize</methodname>
      <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>serialize</function> gibt eine Zeichenkette (String)
     zurück, die eine Byte-Stream entsprechende Wiedergabe von
     <parameter>value</parameter> enthält und beliebig abgespeichert
     werden kann.
    </simpara>
    <simpara>
     Diese Funktion dient der Speicherung oder Übergabe von
     PHP-Werten, ohne dass diese ihren Wert oder ihre Struktur
     verlieren.
    </simpara>
    <simpara>
     Um eine serialisierte Zeichenkette wieder als PHP-Wert verfügbar
     zu machen steht die <function>unserialize</function>-Funktion zur
     Verfügung. <function>serialize</function> kann mit den Typen
     <type>integer</type>, <type>double</type>, <type>string</type>,
     <type>array</type> (mehrdimensional) und <type>object</type>
     umgehen. Beim Objekt werden die Eigenschaften serialisiert, die
     Methoden gehen aber verloren.
    </simpara>
    <para>
     <example>
      <title><function>serialize</function>-Beispiel:</title>
      <programlisting role="php">
// $session_data enthält ein mehrdimensionales Array mit
// Session-Informationen des aktuellen Benutzers. Wir benutzen
// serialize() um diese Infos am Ende der Anfrage in eine
// Datenbank zu speichern.

$conn = odbc_connect ("webdb", "php", "moorhuhn");
$stmt = odbc_prepare ($conn,
                      "UPDATE sessions SET data = ? WHERE id = ?");
$sqldata = array (serialize($session_data), $PHP_AUTH_USER);
if (!odbc_execute ($stmt, &amp;$sqldata)) {
    $stmt = odbc_prepare ($conn,
                          "INSERT INTO sessions (id, data) VALUES(?, ?)");
    if (!odbc_execute($stmt, &amp;$sqldata)) {
        /* Etwas lief schief. Fluche, heule und stöhne. */
    }
}
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
