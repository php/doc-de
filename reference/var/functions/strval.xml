<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 294415 Maintainer: sammywg Status: ready -->

<refentry xml:id="function.strval" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>strval</refname>
  <refpurpose>Ermittelt die String-Repräsentation einer Variable</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
   <methodsynopsis>
    <type>string</type><methodname>strval</methodname>
    <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
   </methodsynopsis>
  <simpara>
   Gibt die String-Repräsentation einer Variablen zurück. Lesen Sie die
   Dokumentation über den Typ <type>string</type>, um weitere Informationen
   über das Konvertieren in Strings zu erhalten.
  </simpara>
  <simpara>
    Diese Funktion führt keine Formatierung auf dem zurückgegebenen Wert durch.
    Wenn Sie nach einem Weg suchen, einen numerischen Wert als String zu
    formatieren, lesen Sie bitte die Dokumentation zu
    <function>sprintf</function> oder <function>number_format</function>.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       Die nach <type>string</type> zu konvertierende Variable.
      </para>
      <para>
       <parameter>var</parameter> darf jeder skalare Datentyp sein. Sie können
       <function>strval</function> jedoch nicht auf Arrays oder Objekte
       anwenden.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Die <type>String</type>-Repräsentation des Wertes von
   <parameter>var</parameter>.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>strval</function>-Beispiel für die Verwendung der magischen
     PHP-Methode __toString</title>
    <programlisting role="php">
<![CDATA[
<?php
class StrValTest
{
    public function __toString()
    {
        return __CLASS__;
    }
}

// Gibt 'StrValTest' aus
echo strval(new StrValTest);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>floatval</function></member>
    <member><function>intval</function></member>
    <member><function>settype</function></member>
    <member><function>sprintf</function></member>
    <member><function>number_format</function></member>
    <member><link linkend="language.types.type-juggling">Typ-Veränderung</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
