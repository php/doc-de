<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: sammywg Status: ready -->

<refentry xml:id="function.is-object" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>is_object</refname>
  <refpurpose>Prüft, ob eine Variable vom Typ object ist</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
   <methodsynopsis>
    <type>bool</type><methodname>is_object</methodname>
    <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
   </methodsynopsis>
  <para>
   Prüft, ob die gegebene Variable ein Objekt ist.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       Die zu untersuchende Variable.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt &true; zurück, wenn <parameter>var</parameter> vom Typ
   <type>object</type> ist, ansonsten &false;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>is_object</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
// Eine einfache Funktion deklarieren, die ein Array unseres Objekts zurückgibt
function get_students($obj)
{
    if(!is_object($obj))
    {
        return(false);
    }

    return($obj->students);
}

// Deklarieren einer neue Instanz der Klasse und befüllen mit Werten
$obj = new stdClass;
$obj->students = Array('Kalle', 'Ross', 'Felipe');

var_dump(get_students(NULL));
var_dump(get_students($obj));
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Die Funktion wird &false; zurückgeben, wenn sie auf ein unserialisiertes
    Objekt angewendet wird, dessen Klassendefinition nicht geladen ist (auch
    wenn <function>gettype</function> <type>object</type> zurückgibt).
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>is_bool</function></member>
    <member><function>is_int</function></member>
    <member><function>is_float</function></member>
    <member><function>is_string</function></member>
    <member><function>is_array</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
