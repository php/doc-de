<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.14 Maintainer: fa Status: ready -->
<!-- splitted from ./de/functions/var.xml in rev 1.2 -->
  <refentry id="function.isset">
   <refnamediv>
    <refname>isset</refname>
    <refpurpose>Prüft die Existenz einer Variablen</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
     <methodsynopsis>
      <type>bool</type><methodname>isset</methodname>
      <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>var</parameter></methodparam>
      <methodparam choice="opt"><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Diese Funktion liefert &true;, wenn die Variable oder
     das Array-Element <parameter>var</parameter> existiert,
     sonst &false;.
    </simpara>
    <para>
     Wird eine Variable oder ein Array-Element mit
     <function>unset</function> freigegeben, so liefert
     <function>isset</function> anschließend ebenfalls &false;. Zu Beachten ist
     auch, dass ein &null;-Byte (<literal>"\0"</literal>) nicht der
     PHP-Konstante &null; entspricht.
     </para>
     <note>
     <title>Warnung</title>
     <para>
      <function>isset</function> funktioniert nur mit Variablen, da der Aufruf
      mit etwas anderem einen Parse-Error verursacht. Um zu überprüfen, ob
      <link linkend="language.constants">Konstanten</link> gesetzt sind, sollte
      die Funktion <function>defined</function> benutzt werden.
     </para>
    </note>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php

$var = '';

// Dieser Ausdruck wird zu TRUE ausgewertet, also wird der Text angezeigt
if (isset($var)) {
    echo "Die Variable ist gesetzt, also wird etwas ausgegeben.";
}

// In den nächsten Beispielen wird var_dump() benutzt, um den Rückgabewert von
// isset() auszugeben.

$a = "test";
$b = "anothertest";

var_dump(isset($a));     // TRUE
var_dump(isset($a, $b)); // TRUE

unset ($a);

var_dump(isset($a));     // FALSE
var_dump(isset($a, $b)); // FALSE

$foo = NULL;
var_dump(isset($foo));   // FALSE

?>
]]>
      </programlisting>
     </informalexample>
    </para>
    
    &note.language-construct;
    
    <simpara>
     Siehe auch <function>empty</function>,
     <function>unset</function>, 
     <function>defined</function>,
     <link linkend="types.comparisons">die Tabelle zum Typenvergleich</link>,
     <function>array_key_exists</function>
     und den Fehler-Kontroll-Operator 
     <link linkend="language.operators.errorcontrol">@</link>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
