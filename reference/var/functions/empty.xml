<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.13 Maintainer: fa Status: ready -->
<!-- splitted from ./de/functions/var.xml in rev 1.2 -->
<refentry xml:id="function.empty" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>empty</refname>
  <refpurpose>Prüft, ob eine Variable einen Wert enthält</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>empty</methodname>
   <methodparam><type>mixed</type><parameter>var</parameter></methodparam>
  </methodsynopsis>
  <para>
   Prüft, ob eine Variable einen Wert enthält
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>var</parameter></term>
     <listitem>
      <para>
       Die zu prüfende Variable.
      </para>
      <note>
       <para>
        <function>empty</function> überprüft nur Variablen, alles andere führt
        zu einem Parse-Error. Anders gesagt wird folgendes nicht funktionieren:
        <command>empty(trim($name))</command>.
       </para>
      </note>
      <para>
       <function>empty</function> ist das Gegenteil von
       <literal>(boolean) <parameter>var</parameter></literal>,
       außer dass keine Warnung erzeugt wird, wenn die Variable nicht gesetzt ist.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt &false; zurück, wenn <parameter>var</parameter> einen nicht-leeren und
   von 0 verschiedenen Wert hat.
  </para>
  <para>
   Folgende Dinge zählen als nicht mit einem Wert belegt:
      <simplelist>
    <member><literal>"" (eine leere Zeichenkette)</literal></member>
    <member><literal>0 (0 als Integer)</literal></member>
    <member><literal>"0" (0 als Zeichenkette)</literal></member>
    <member>&null;</member>
    <member>&false;</member>
    <member><literal>array() (ein leeres Array)</literal></member>
    <member><literal>var $var; (in einer Klasse deklarierte, aber nicht belegt Variable)</literal></member>
   </simplelist>
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>PHP 5</entry>
       <entry>
        <para>
         Seit PHP 5 zählen Objekte ohne Properties nicht mehr als nicht mit einem Wert belegt.
        </para>
       </entry>
      </row>
      <row>
       <entry>PHP 4</entry>
       <entry>
        <para>
         Seit PHP 4 zählt der Wert "0" einer Zeichenkette als nicht mit einem Wert belegt.
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>
     Ein einfacher Vergleich von <function>empty</function> / 
     <function>isset</function>
    </title>  
    <programlisting role="php">
<![CDATA[
<?php
$var = 0;

// true, weil $var keinen Wert enthält
if (empty($var)) {
    echo '$var ist 0, nicht mit einem Wert belegt, oder nicht gesetzt';
}

// true, weil $var gesetzt wurde
if (isset($var)) {
    echo '$var ist gesetzt, enthält aber keinen Wert';
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="notes">
  &reftitle.notes;
  &note.language-construct;
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>isset</function></member>
    <member><function>unset</function></member>
    <member><function>array_key_exists</function></member>
    <member><function>count</function></member> 
    <member><function>strlen</function></member>
    <member><link linkend="types.comparisons">die Tabelle zum Typenvergleich</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
