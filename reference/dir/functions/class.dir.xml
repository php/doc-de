<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- splitted from ./de/functions/dir.xml, last change in rev 1.2 -->
<!-- last change to 'class.dir' in en/ tree in rev 1.2 -->
  <refentry id="class.dir">
   <refnamediv>
    <refname>dir</refname>
    <refpurpose>Verzeichnis-Klasse</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
    <classsynopsis>
     <ooclass><classname>dir</classname></ooclass>
     <constructorsynopsis>
      <methodname>dir</methodname>
      <methodparam><type>string</type><parameter>directory</parameter></methodparam>
     </constructorsynopsis>
     <fieldsynopsis>
      <type>string</type><varname>path</varname>
     </fieldsynopsis>
     <fieldsynopsis>
      <type>resource</type><varname>handle</varname>
     </fieldsynopsis>
     <methodsynopsis><type>string</type><methodname>read</methodname><void/></methodsynopsis>
     <methodsynopsis><type>void</type><methodname>rewind</methodname><void/></methodsynopsis>
     <methodsynopsis><type>void</type><methodname>close</methodname><void/></methodsynopsis>
    </classsynopsis>

    <para>
     Ein Pseudo-Objekt-Orientierter Mechanismus zum Lesen eines
     Verzeichnisses. Das per <parameter>directory</parameter>
     angegebene Verzeichnis wird geöffnet. Sobald das Verzeichnis
     geöffnet ist, stehen 2 Eigenschaften zur Verfügung. Die
     Eigenschaft Handle kann mit anderen Verzeichnis-Funktionen wie
     <function>readdir</function>, <function>rewinddir</function>
     und <function>closedir</function> benutzt werden (Handles
     sind Verweise auf Einträge in einer internen Tabelle zur
     Verwaltung von Objekten). Die Eigenschaft Path enthält die
     Pfadangabe des geöffneten Verzeichnisses. Es sind 3 Methoden
     verfügbar: read, rewind und close.
    </para>
    <para>
     Beachten Sie im nachfolgenden Beispiel, wie der Rückgabewert der
     Funktion <function>dir</function> überprüft wird. Es wird explizit
     getestet, ob der Rückgabewert identisch (den gleichen Wert und
     Datentyp hat, siehe <link linkend="language.operators.comparison">)
     mit &false; ist, weil sonst jeder Verzeichniseintrag, der
     zu &false; ausgewertet wird, die Schleife abbricht.
     <example>
      <title><function>dir</function>-Beispiel:</title>
      <programlisting role="php">
<![CDATA[
<?php
$d = dir("/etc");
echo "Handle: ".$d->handle."&lt;br&gt;\n";
echo "Path: ".$d->path."&lt;br&gt;\n";
while (false !== ($entry = $d->read())) {
   echo $entry."<br />\n";
}
$d->close();
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      Die Reihenfolge der Verzeichniseinträge, die von der
      read-Methode zurückgegeben werden, ist systemabhängig.
     </para>
    </note>
    <note>
     <para>
      Hierdurch wird die interne Klasse       <classname>Directory</classname>
      definiert, was bedeutet, dass Sie keine eigenen Klassen mit
      diesem Namen definieren können. Eine vollständige Liste der
      vordefinierten Klassen in PHP gibt es unter <link
      linkend="reserved.classes">Vordefinierte Klassen</link>.
     </para>
    </note>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
