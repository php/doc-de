<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.5 Maintainer: sammywg Status: ready -->

<refentry xml:id="function.json-last-error" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>json_last_error</refname>
  <refpurpose>Gibt den letzten aufgetretenen Fehler zurück</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>json_last_error</methodname>
   <void />
  </methodsynopsis>
  <para>
   Gibt (sofern vorhanden) den letzten Fehler zurück, der beim letzten Parsen
   von JSON aufgetreten ist.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  &no.function.parameters;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt einen Integer zurück, der Wert kann eine der folgenden Konstanten sein:
  </para>
  <table>
   <title>JSON-Fehlercodes</title>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>Konstante</entry>
      <entry>Bedeutung</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry><constant>JSON_ERROR_NONE</constant></entry>
      <entry>Kein Fehler aufgetreten.</entry>
     </row>
     <row>
      <entry><constant>JSON_ERROR_DEPTH</constant></entry>
      <entry>Die maximale Stacktiefe wurde überschritten.</entry>
     </row>
     <row>
      <entry><constant>JSON_ERROR_CTRL_CHAR</constant></entry>
      <entry>Steuerzeichenfehler, möglicherweise unkorrekt kodiert.</entry>
     </row>
     <row>
      <entry><constant>JSON_ERROR_SYNTAX</constant></entry>
      <entry>Syntaxfehler.</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>json_last_error</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
// Ein gültiger JSON-String
$json[] = '{"Organisation": "PHP-Dokumentationsteam"}';

// Ein ungültiger JSON-String, der einen Syntaxfehler hervorruft,
// in diesem Fall werden ' anstelle von " als Anführungszeichen verwendet
$json[] = "{'Organisation': 'PHP-Dokumentationsteam'}";


foreach($json as $string)
{
 echo 'Dekodiere: ' . $string;
 json_decode($string);

 switch(json_last_error())
 {
  case JSON_ERROR_DEPTH:
   echo ' - Maximale Stacktiefe überschritten';
  break;
  case JSON_ERROR_CTRL_CHAR:
   echo ' - Unerwartetes Steuerzeichen gefunden';
  break;
  case JSON_ERROR_SYNTAX:
   echo ' - Syntaxfehler, ungültiges JSON';
  break;
  case JSON_ERROR_NONE:
   echo ' - Keine Fehler';
  break;
 }

 echo PHP_EOL;
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Decoding: {"Organisation": "PHP-Dokumentationsteam"} - Keine Fehler
Decoding: {'Organisation': 'PHP-Dokumentationsteam'} - Syntaxfehler, ungültiges JSON
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>json_decode</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
