<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 313913 Maintainer: nobody Status: ready -->

<refentry xml:id="function.snmpwalkoid" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>snmpwalkoid</refname>
  <refpurpose>Abfrage über einen Baum einer Netzwerkeinheit</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>snmpwalkoid</methodname>
   <methodparam><type>string</type><parameter>hostname</parameter></methodparam>
   <methodparam><type>string</type><parameter>community</parameter></methodparam>
   <methodparam><type>string</type><parameter>object_id</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>timeout</parameter><initializer>1000000</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>retries</parameter><initializer>5</initializer></methodparam>
  </methodsynopsis>
  <para>
   Die <function>snmpwalkoid</function> Funktion wird verwendet, um alle
   Objektkennungen und deren Werte von dem SNMP Agenten zu lesen, der bei
   <parameter>hostname</parameter> angegeben wurde.
  </para>
  <para>
   Die Existenz von <function>snmpwalkoid</function> und
   <function>snmpwalk</function> hat historische Gründe. Beide Funktionen gibt
   es aus Kompatiblitätsgründen. Statt dessen ist
   <function>snmprealwalk</function> zu verwenden.
  </para> 
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>hostname</parameter></term>
     <listitem>
      <para>
       Der SNMP-Agent.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>community</parameter></term>
     <listitem>
      <para>
       Die "read community".
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>object_id</parameter></term>
     <listitem>
      <para>
       Wenn &null;, wird <parameter>object_id</parameter> als Wurzel des
       <acronym>SNMP</acronym> Objektbaums interpretiert, und alle Objekte in
       diesem Baum werden als Array zurückgegegeben.
      </para>
      <para>
       Wird <parameter>object_id</parameter> angegeben, werden alle
       <acronym>SNMP</acronym> Objekte unter dieser
       <parameter>object_id</parameter> zurückgegeben.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>timeout</parameter></term>
     <listitem>
      <para>
       Die Zahl der Mikrosekunden bis zum ersten Timeout.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>retries</parameter></term>
     <listitem>
      <para>
       Die Anzahl der Wiederholungsversuche, wenn Timeouts auftreten.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein assoziatives Array mit Objektkennungen und deren entsprechenden
   Objektwerten, beginnend mit mit <parameter>object_id</parameter> als Wurzel,
   zurück, oder &false; im Fehlerfall.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para> 
   <example>
    <title><function>snmpwalkoid</function> Example</title>
    <programlisting role="php"> 
<![CDATA[
<?php
$a = snmpwalkoid("127.0.0.1", "public", ""); 
for (reset($a); $i = key($a); next($a)) {
    echo "$i: $a[$i]<br />\n";
}
?>
]]>
    </programlisting>
   </example>
  </para> 
  <para>
   Der obige Funktionsaufruf gibt alle SNMP Objekte des Agenten, der auf
   localhost läuft, zurück. In einer Schleife können alle Werte durchlaufen
   werden.
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>snmprealwalk</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
