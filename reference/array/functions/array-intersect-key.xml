<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: c84024092aee02b51dd18b909af0f2ccbdd24f98 Maintainer: simp Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: c84024092aee02b51dd18b909af0f2ccbdd24f98 Reviewer: samesch -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.array-intersect-key">
 <refnamediv>
  <refname>array_intersect_key</refname>
  <refpurpose>Ermittelt die Schnittmenge von Arrays, indem es die Schlüssel vergleicht</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_intersect_key</methodname>
   <methodparam><type>array</type><parameter>array</parameter></methodparam>
   <methodparam rep="repeat"><type>array</type><parameter>arrays</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>array_intersect_key</function> gibt ein Array zurück, welches
   alle Werte von <parameter>array</parameter> enthält, die Schlüssel
   besitzen, die in allen anderen Argumenten enthalten sind.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Das Array mit den Hauptschlüsseln, auf die geprüft werden soll.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arrays</parameter></term>
     <listitem>
      <para>
       Arrays zum Vergleichen der Schlüssel.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein assoziatives Array zurück, welches alle Einträge von
   <parameter>array</parameter> enthält, deren Schlüssel in allen weiteren
   Arrays vorhanden sind.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      &array.changelog.require-only-one;
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>array_intersect_key</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$array1 = array('blau' => 1, 'rot'  => 2, 'grün' => 3, 'violett' => 4);
$array2 = array('grün' => 5, 'blau' => 6, 'gelb' => 7, 'türkis'  => 8);

var_dump(array_intersect_key($array1, $array2));
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
array(2) {
  ["blau"]=>
  int(1)
  ["grün"]=>
  int(3)
}
]]>
    </screen>
   </example>
  </para>
  <para>
   In unserem Beispiel ist zu sehen, dass nur die Schlüssel
   <literal>'blau'</literal> und <literal>'grün'</literal> in beiden Arrays
   vorhanden sind und daher zurückgegeben werden. Zu beachten ist auch, dass
   <literal>'blau'</literal> und <literal>'grün'</literal> in beiden Arrays
   unterschiedliche Werte besitzen. Eine Übereinstimmung wird dennoch
   festgestellt, da nur die Schlüssel geprüft werden. Die zurückgegebenen
   Werte sind diejenigen aus <parameter>array</parameter>.
  </para>
  <para>
   Die beiden Schlüssel der <literal>Schlüssel =&gt; Wert</literal>-Paare
   werden genau dann als gleich erachtet, wenn
   <literal>(string) $key1 === (string) $key2 </literal>. Anders ausgedrückt
   findet eine strikte Prüfung statt, in der die String-Darstellungen gleich
   sein müssen.
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_diff</function></member>
    <member><function>array_udiff</function></member>
    <member><function>array_diff_assoc</function></member>
    <member><function>array_diff_uassoc</function></member>
    <member><function>array_udiff_assoc</function></member>
    <member><function>array_udiff_uassoc</function></member>
    <member><function>array_diff_key</function></member>
    <member><function>array_diff_ukey</function></member>
    <member><function>array_intersect</function></member>
    <member><function>array_intersect_assoc</function></member>
    <member><function>array_intersect_uassoc</function></member>
    <member><function>array_intersect_ukey</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
