<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 339490 Maintainer: cmb Status: ready -->
<!-- CREDITS: tom -->

<refentry xml:id="function.natsort" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>natsort</refname>
  <refpurpose>Sortiert ein Array in "natürlicher Reihenfolge"</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>natsort</methodname>
   <methodparam><type>array</type><parameter role="reference">array</parameter></methodparam>
  </methodsynopsis>
  <para>
   Diese Funktion implementiert einen Sortieralgorithmus, welcher
   alphanumerische Zeichenketten reiht, wie es auch ein Mensch tun
   würde, wobei Sie die Schlüssel-Wert-Zuordnung beibehält.
   Das wird als "natürliche Reihenfolge" bezeichnet.
   würde. Ein Beispiel für den Unterschied zwischen diesem und
   dem normalen Sortieralgorithmus für Strings eines Computers
   (verwendet in <function>sort</function>) ist weiter unten zu sehen.
  </para>
  &note.sort-unstable;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Das Eingabe-Array.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>5.2.10</entry>
      <entry>
       Mit 0 aufgefüllte numerische Zeichenketten (z.B. '00005') ignorieren nun
       die 0-Füllung im Wesentlichen.
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>
     <function>natsort</function> Beispiele, die die grundlegende Verwendung demonstrieren
    </title>
    <programlisting role="php">
<![CDATA[
<?php
$array1 = $array2 = array("img12.png", "img10.png", "img2.png", "img1.png");

sort ($array1);
echo "Standardsortierung\n";
print_r ($array1);

natsort ($array2);
echo "\nSortieren mit natürlicher Reihenfolge\n";
print_r ($array2);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Standardsortierung
Array
(
    [0] => img1.png
    [1] => img10.png
    [2] => img12.png
    [3] => img2.png
)

Sortieren mit natürlicher Reihenfolge
Array
(
    [3] => img1.png
    [2] => img2.png
    [1] => img10.png
    [0] => img12.png
)
]]>
    </screen>
    <para>
     Detailliertere Informationen finden Sie auf Martin Pools <link
     xlink:href="&url.strnatcmp;">Natural Order String Comparison</link>
     Seite.
    </para>
   </example>
   <example>
    <title>
     <function>natsort</function> Beispiele, die potentielle Tücken demonstrieren
    </title>
    <programlisting role="php">
<![CDATA[
<?php
echo "Negative Zahlen\n";
$negative = array('-5','3','-2','0','-1000','9','1');
print_r($negative);
natsort($negative);
print_r($negative);

echo "0-Füllung\n";
$zeros = array('09', '8', '10', '009', '011', '0');
print_r($zeros);
natsort($zeros);
print_r($zeros);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Negative Zahlen
Array
(
    [0] => -5
    [1] => 3
    [2] => -2
    [3] => 0
    [4] => -1000
    [5] => 9
    [6] => 1
)
Array
(
    [2] => -2
    [0] => -5
    [4] => -1000
    [3] => 0
    [6] => 1
    [1] => 3
    [5] => 9
)

0-Füllung
Array
(
    [0] => 09
    [1] => 8
    [2] => 10
    [3] => 009
    [4] => 011
    [5] => 0
)
Array
(
    [5] => 0
    [1] => 8
    [3] => 009
    [0] => 09
    [2] => 10
    [4] => 011
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>natcasesort</function></member>
    <member>&seealso.array.sorting;</member>
    <member><function>strnatcmp</function></member>
    <member><function>strnatcasecmp</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
