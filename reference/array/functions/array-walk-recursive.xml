<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: nobody Status: ready -->
<refentry xml:id="function.array-walk-recursive" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_walk_recursive</refname>
  <refpurpose>Wendet eine Benutzerfunktion rekursiv auf jedes Element eines 
   Arrays an</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>array_walk_recursive</methodname>
   <methodparam><type>array</type><parameter role="reference">input</parameter></methodparam>
   <methodparam><type>callback</type><parameter>funcname</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>userdata</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Wendet die mittels <parameter>funcname</parameter> angegebene
   Benutzerfunktion für jedes Element von <parameter>input</parameter>
   an. Diese Funktion steigt tiefer in Arrays hinab. üblicherweise benötigt
   <parameter>funcname</parameter> zwei Parameter. Der Wert von 
   <parameter>input</parameter> wird als erster übergeben, und der
   Schlüssel/Index als zweites. Ist der optionale Parameter
   <parameter>userdata</parameter> angegeben, so wird er als dritter
   Parameter an die Funktion <parameter>funcname</parameter> übergeben.
  </simpara>
  <simpara>
   &return.success;
  </simpara>
  <note>
   <para>
    Falls <parameter>funcname</parameter> mit den tatsächlichen Werten des
    Arrays arbeiten muss, muss man den ersten Parameter von 
    <parameter>funcname</parameter> als
    <link linkend="language.references">Reference</link> übergeben. Dann werden
    alle Änderungen an den Elementen im ürsprünglichen Array selbst vorgenommen.
   </para>
  </note>
  <para>
   <example>
    <title><function>array_walk_recursive</function> Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$sweet = array('a' => 'Apfel', 'b' => 'Banane');
$fruits = array('süß' => $sweet, 'sauer' => 'Zitrone');

function test_print($item, $key) 
{
    echo "$key beinhaltet $item\n";
}

array_walk_recursive($fruits, 'test_print');
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
a beinhaltet Apfel
b beinhaltet Banane
sauer beinhaltet Zitrone
]]>
    </screen>
    <para>
     Sie werden bemerken, dass der Schlüssel 'süß' nicht angezeigt wird. Jeder
     Schlüssel, der ein <type>array</type> beinhaltet, wird nicht an die 
     Funktion übergeben.
    </para>
   </example>
  </para>
  <simpara>
   Siehe auch <function>array_walk</function>, und
   &seealso.callback;.
  </simpara>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->