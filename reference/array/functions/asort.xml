<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: wiesemann Status: ready -->
<!-- CREDITS: tom -->
<refentry xml:id="function.asort" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>asort</refname>
  <refpurpose>Sortiert ein Array und erhält die Index-Assoziation</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>asort</methodname>
   <methodparam><type>array</type><parameter role="reference">array</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>sort_flags</parameter><initializer>SORT_REGULAR</initializer></methodparam>
  </methodsynopsis>
  <para>
   Diese Funktion sortiert ein Array so, dass der Zusammenhang
   zwischen den Indizes und den entsprechenden Elementen des Arrays
   erhalten bleibt. Dies wird hauptsächlich zur Sortierung assoziativer
   Arrays verwendet, bei denen die aktuelle Reihenfolge der Elemente
   bedeutend ist.
  </para>
  &note.sort-unstable;
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Das Eingabe-Array.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sort_flags</parameter></term>
     <listitem>
      <para>
       Sie können das Verhalten der Sortierung mittels dem optionalen
       Parameter <parameter>sort_flags</parameter> beeinflussen, für
       Details siehe <function>sort</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>asort</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$fruits = array("d" => "Zitrone", "a" => "Orange", "b" => "Banane", "c" => "Apfel");
asort($fruits);
foreach ($fruits as $key => $val) {
    echo "$key = $val\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
c = Apfel
b = Banane
a = Orange
d = Zitrone
]]>
    </screen>
    <para>
     Die Früchte wurden alphabetisch sortiert und die Zuordnung
     zwischen Index und Element blieb erhalten.
    </para>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>arsort</function></member>
    <member>&seealso.array.sorting;</member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
