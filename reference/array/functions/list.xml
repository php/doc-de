<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 337337 Maintainer: cmb Status: ready -->
<!-- CREDITS: tom -->

<refentry xml:id="function.list" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>list</refname>
  <refpurpose>Weist Variablen zu, als wären sie ein Array</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>list</methodname>
   <methodparam><type>mixed</type><parameter>var1</parameter></methodparam>
   <methodparam rep="repeat" choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   Wie <function>array</function> ist auch dies keine wirkliche
   Funktion, sondern ein Sprachkonstrukt. <function>list</function>
   wird verwendet, um eine Liste von Variablen mit einer
   Operation zuzuweisen.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>var1</parameter></term>
     <listitem>
      <para>
       Eine Variable.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt das zugewiesene Array zurück.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.0.0</entry>
       <entry>
        <link linkend="migration70.incompatible.variable-handling.list.order">
         Die Reihenfolge, in der die Zuweisungsoperationen durchgeführt werden,
         wurde geändert.
        </link>
       </entry>
      </row>
      <row>
       <entry>7.0.0</entry>
       <entry>
        <link linkend="migration70.incompatible.variable-handling.list.empty">
         <function>list</function> Ausdrücke dürfen nicht mehr vollständig leer
         sein.
        </link>
       </entry>
      </row>
      <row>
       <entry>7.0.0</entry>
       <entry>
        <link linkend="migration70.incompatible.variable-handling.list.string">
         Zeichenketten können nicht mehr entpackt werden.
        </link>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>list</function> Beispiele</title>
    <programlisting role="php">
<![CDATA[
<?php

$info = array('Kaffee', 'braun', 'Koffein');

// Auflisten aller Variablen
list($drink, $color, $power) = $info;
echo "$drink ist $color und $power macht es zu etwas besonderem.\n";

// Ein paar davon auflisten
list($drink, , $power) = $info;
echo "$drink hat $power.\n";

// Oder nur die dritte ausgeben
list( , , $power) = $info;
echo "Ich brauche $power!\n";

// list() funktioniert nicht mit Zeichenketten
list($bar) = "abcde";
var_dump($bar); // NULL
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Eine Beispielverwendung von <function>list</function></title>
    <programlisting role="php">
<![CDATA[
<table>
 <tr>
  <th>Mitarbeitername</th>
  <th>Gehalt</th>
 </tr>

<?php

$result = $pdo->query("SELECT id, name, salary FROM employees");
while (list($id, $name, $salary) = $result->fetch(PDO::FETCH_NUM)) {
    echo " <tr>\n".
         "  <td><a href=\"info.php?id=$id\">$name</a></td>\n".
         "  <td>$salary</td>\n".
         " </tr>\n";
}

?>

</table>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Verschachtelte <function>list</function> verwenden</title>
    <programlisting role="php">
<![CDATA[
<?php

list($a, list($b, $c)) = array(1, array(2, 3));

var_dump($a, $b, $c);

?>
]]>
    </programlisting>
    <screen>
<![CDATA[
int(1)
int(2)
int(3)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title><function>list</function> mit Array Indizes verwenden</title>
    <programlisting role="php">
<![CDATA[
<?php

$info = array('Kaffee', 'braun', 'Koffein');

list($a[0], $a[1], $a[2]) = $info;

var_dump($a);

?>
]]>
    </programlisting>
    <para>
     Erzeugt folgende Ausgabe (beachten Sie die Reihenfolge der Elemente verglichen mit
     der in <function>list</function> eingetragenen Reihenfolge):
    </para>
    <screen>
<![CDATA[
array(3) {
  [2]=>
  string(7) "Koffein"
  [1]=>
  string(5) "braun"
  [0]=>
  string(6) "Kaffee"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    In PHP 5 weist <function>list</function> die Werte von rechts beginnend zu.
    In PHP 7 beginnt <function>list</function> von links.
   </para>
   <para>
    Wenn Sie einfache Variablen benutzen, brauchen Sie sich nicht darum
    zu kümmern. Wenn Sie jedoch Arrays mit Indizes verwenden, erwarten Sie
    gewöhnlich die Reihenfolge der Indizes in dem Array genau so, wie Sie
    sie in <function>list</function> geschrieben haben (von links nach
    rechts), was jedoch in PHP 5 nicht der Fall ist. Es wird in der umgekehrten
    Reihenfolge zugewiesen.
   </para>
   <para>
    Allgemein gesagt, ist es ratsam sich nicht auf eine bestimmte Operations-Reihenfolge
    zu verlassen, da sich diese zukünftig wieder ändern könnte.
   </para>
  </warning>
  <warning>
   <para>
    Die Veränderung des Array während der Ausführung von
    <function>list</function> (z.B. durch <literal>list($a, $b) = $b</literal>),
    hat undefiniertes Verhalten zur Folge.
   </para>
  </warning>
  <note>
   <para>
    <function>list</function> funktioniert nur bei numerischen Arrays und
    basiert auf der Annahme, dass die numerischen Indizes bei 0 beginnen.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>each</function></member>
    <member><function>array</function></member>
    <member><function>extract</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
