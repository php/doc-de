<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.4 Maintainer: tom Status: ready -->
  <refentry id="function.list">
   <refnamediv>
    <refname>list</refname>
    <refpurpose>
     Weist Variablen zu, als wären sie ein Array
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>void</type><methodname>list</methodname>
      <methodparam rep="repeat"><type>mixed</type><parameter>...</parameter></methodparam>
     </methodsynopsis>
    <para>
     Wie <function>array</function> ist auch dies keine wirkliche
     Funktion, sondern ein Sprachkonstrukt. <function>list</function>
     wird verwendet, um eine Liste von Variablen innerhalb einer
     Operation zuzuweisen.
    </para>
    <note>
     <para>
      <function>list</function> funktioniert nur bei numerischen Arrays und
      basiert auf der Annahme, dass die numerischen Indizes bei 0 beginnen.
     </para>
    </note>
    <para>
     <example>
      <title><function>list</function></title>
      <programlisting role="php">
<![CDATA[
<?php

$info = array('coffee', 'brown', 'caffeine');

// Auflisten aller Variablen
list($drink, $color, $power) = $info;
print "$drink is $color and $power makes it special.\n";

// Ein paar davon auflisten
list($drink, , $power) = $info;
print "$drink has $power.\n";

// Oder nur die dritte ausgeben
list( , , $power) = $info;
print "I need $power!\n";

?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title><function>list</function></title>
      <programlisting role="php">
<![CDATA[
<table>
 <tr>
  <th>Mitarbeitername</th>
  <th>Gehalt</th>
 </tr>

<?php

$result = mysql_query ("SELECT id, name, salary FROM employees",$conn);
while (list ($id, $name, $salary) = mysql_fetch_row ($result)) {
    print (" <tr>\n".
           "  <td><a href=\"info.php?id=$id\">$name</a></td>\n".
           "  <td>$salary</td>\n".
           " </tr>\n");
}

?>

</table>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Siehe auch <function>each</function>, <function>array</function>
     und <function>extract</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
