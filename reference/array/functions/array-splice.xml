<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.4 Maintainer: tom Status: ready -->
  <refentry id="function.array-splice">
   <refnamediv>
    <refname>array_splice</refname>
    <refpurpose>
     Entfernt einen Teil eines Arrays und ersetzt ihn durch etwas
     anderes
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>array</type><methodname>array_splice</methodname>
      <methodparam><type>array</type><parameter>input</parameter></methodparam>
      <methodparam><type>int</type><parameter>offset</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>
        replacement
       </parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_splice</function> entfernt die durch
     <parameter>offset</parameter> und <parameter>length</parameter>
     angegebenen Elemente des Arrays <parameter>input</parameter>, und
     ersetzt diese durch die Elemente des Arrays
     <parameter>replacement</parameter>, wenn angegeben und gibt ein
     Array mit den entfernten Elemente zurück.
    </para>
    <para>
     Ist <parameter>offset</parameter> positiv, beginnt der zu
     entfernende Bereich bei diesem Offset vom Anfang des Arrays
     <parameter>input</parameter>. Ist <parameter>offset</parameter>
     negativ, beginnt der zu entfernende Bereich
     <parameter>offset</parameter> Elemente vor dem Ende des Arrays
     <parameter>input</parameter>.
    </para>
    <para>
     Ist <parameter>length</parameter> nicht angegeben, wird alles von
     <parameter>offset</parameter> bis zum Ende des Arrays
     entfernt. Ist <parameter>length</parameter> positiv, wird die
     angegebene Anzahl Elemente entfernt. Ist
     <parameter>length</parameter> negativ, dann wird der Bereich von
     <parameter>length</parameter> Elementen vor dem Ende, bis zum
     Ende des Arrays entfernt. Tipp: Um alles von
     <parameter>offset</parameter> bis zum Ende des Arrays zu
     entfernen wenn <parameter>replacement</parameter> ebenfalls
     angegeben ist, verwenden Sie <literal>count($input)</literal> als
     <parameter>length</parameter>.
    </para>
    <para>
     Ist das Array <parameter>replacement</parameter> angegeben,
     werden die entfernten Elemente durch die Elemente dieses Arrays
     ersetzt. Sind <parameter>offset</parameter> und
     <parameter>length</parameter> so angegeben dass nichts entfernt
     wird, werden die Elemente von <parameter>replacement</parameter>
     an der von <parameter>offset</parameter> spezifizierten Stelle
     eingefügt. Tipp: Soll die Ersetzung durch nur ein Element erfolgen
     ist es nicht nötig ein Array zu anzugeben es sei denn, dieses
     Element ist selbst ein Array.
    </para>
    <para>
     Hier einige Entsprechungen:
     <programlisting role="php">
<![CDATA[
array_push ($input, $x, $y)     array_splice ($input, count ($input), 0,
                                             array ($x, $y))
array_pop ($input)              array_splice ($input, -1)
array_shift ($input)            array_splice ($input, 0, 1)
array_unshift ($input, $x, $y)  array_splice ($input, 0, 0, array ($x, $y))
$a[$x] = $y                     array_splice ($input, $x, 1, $y)
]]>
     </programlisting>
    </para>
    <para>
     Gibt das Array mit den entfernten Elementen zurück.
    </para>
    <para>
     <example>
      <title><function>array_splice</function></title>
      <programlisting role="php">
<![CDATA[
$input = array ("rot", "grün", "blau", "gelb");
array_splice ($input, 2);
// $input ist nun array ("rot", "grün")

$input = array ("rot", "grün", "blau", "gelb");
array_splice ($input, 1, -1);
// $input ist nun array ("rot", "gelb")

$input = array ("rot", "grün", "blau", "gelb");
array_splice ($input, 1, count($input), "orange");
// $input ist nun array ("rot", "orange")

$input = array ("rot", "grün", "blau", "gelb");
array_splice ($input, -1, 1, array("schwarz", "braun"));
// $input ist nun array ("rot", "grün", "blau", "schwarz", "braun")
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Siehe auch <function>array_slice</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
