<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.14 $ -->
<!-- EN-Revision: 1.18 Maintainer: nobody Status: ready -->
<!-- CREDITS: tom -->
  <refentry xml:id="function.array-filter" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>array_filter</refname>
    <refpurpose>Filtert Elemente eines Arrays mittels einer Callback-Funktion</refpurpose>
   </refnamediv>
   <refsect1 role="description">
    &reftitle.description;
     <methodsynopsis>
      <type>array</type><methodname>array_filter</methodname>
      <methodparam><type>array</type><parameter>input</parameter></methodparam>
      <methodparam choice="opt"><type>callback</type><parameter>callback</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_filter</function> übergibt nacheinander alle Werte in dem
     Array <parameter>input</parameter> and die <parameter>callback</parameter>
     Funktion. Gibt die <parameter>callback</parameter> Funktion true zurück,
     wird der aktuelle Wert von <parameter>input</parameter> in das Ergebnis-Array
     geschrieben. Die Schlüssel des Arrays bleiben erhalten.
    </para>
    <para>
     <example>
      <title><function>array_filter</function></title>
      <programlisting role="php">
<![CDATA[
<?php
function ungerade($var)
{
    return($var & 1);
}

function gerade($var)
{
    return(!($var & 1));
}

$array1 = array("a"=>1, "b"=>2, "c"=>3, "d"=>4, "e"=>5);
$array2 = array(6, 7, 8, 9, 10, 11, 12);

echo "Ungerade :\n";
print_r(array_filter($array1, "ungerade"));
echo "Gerade:\n";
print_r(array_filter($array2, "gerade"));
?>
]]>
      </programlisting>
      &example.outputs;
      <screen role="php">
<![CDATA[
Ungerade :
Array
(
    [a] => 1
    [c] => 3
    [e] => 5
)
Gerade:
Array
(
    [0] => 6
    [2] => 8
    [4] => 10
    [6] => 12
)
]]>
      </screen>
     </example>
    </para>
    <para>
     Von der Benutzerfunktion aus darf das Array selbst nicht geändert
     werden, wie zum Beispiel durch Hinzufügen oder Löschen eines
     Elementes, oder auch Löschen des Arrays, auf das
     <function>array_filter</function> angewendet wird. Ist das Array
     geändert, so ist das Verhalten dieser Funktion undefiniert.
    </para>
    <para>
     Falls die Function <parameter>callback</parameter> nicht angegeben wurde,
     wird <function>array_filter</function> alle Einträge aus dem Array
     entfernen, die &false; sind. Schauen Sie sich <link
     linkend="language.types.boolean.casting">Konvertierung in Booleans</link>
     für mehr Informationen hierzu an.
    </para>
    <para>
     <example>
      <title><function>array_filter</function> ohne
      <parameter>callback</parameter></title>
      <programlisting role="php">
<![CDATA[
<?php

$entry = array(
             0 => 'foo',
             1 => false,
             2 => -1,
             3 => null,
             4 => ''
          );

print_r(array_filter($entry));
?>
]]>
      </programlisting>
      &example.outputs;
      <screen>
<![CDATA[
Array
(
    [0] => foo
    [2] => -1
)
]]>
      </screen>
     </example>
     </para>
    <para>
     Siehe auch <function>array_map</function>,
     <function>array_reduce</function> und <function>array_walk</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
