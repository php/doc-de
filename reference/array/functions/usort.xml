<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./de/functions/array.xml, last change in rev 1.2 -->
<!-- last change to 'usort' in en/ tree in rev 1.2 -->
<!-- EN-Revision: 1.2 Maintainer: tom Status: ready -->
<!-- OLD-Revision: 1.173/EN.1.2 -->
  <refentry id="function.usort">
   <refnamediv>
    <refname>usort</refname>
    <refpurpose>
     Sortiert ein Array nach Werten mittels einer benutzerdefinierten
     Vergleichsfunktion.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>void</type><methodname>usort</methodname>
      <methodparam><type>array</type><parameter>array</parameter></methodparam>
      <methodparam><type>string</type><parameter>cmp_function</parameter></methodparam>
     </methodsynopsis>
    <para>
     Diese Funktion sortiert ein Array nach seinen Werten mittels
     einer benutzerdefinierten Vergleichsfunktion. Soll das Array nach
     nicht trivialen Kriterien sortiert werden, sollten Sie diese
     Funktion verwenden.
    </para>
    <para>
     Die Vergleichsfunktion muss einen Integer zurückgeben, der
     kleiner, gleich, oder größer ist als &null;, wenn für das erste
     Argument auch angenommen wird, dass es kleiner, gleich, oder
     größer ist als das zweite. Sind zwei Elemente gleich, ist deren
     Reihenfolge nicht definiert.
    </para>
    <para>
     <example>
      <title><function>usort</function></title>
      <programlisting role="php">
<![CDATA[
function cmp ($a, $b) {
    if ($a == $b) return 0;
    return ($a > $b) ? -1 : 1;
}

$a = array (3, 2, 5, 6, 1);

usort ($a, "cmp");

while (list ($key, $value) = each ($a)) {
    echo "$key: $value\n";
}
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Dieses Beispiel würde folgendes anzeigen:
    </para>
    <para>
     <screen>
<![CDATA[
0: 6
1: 5
2: 3
3: 2
4: 1
]]>
     </screen>
    </para>
    <note>
     <para>
      Offensichtlich würde <function>rsort</function> für diesen
      einfachen Fall besser passen.
     </para>
    </note>
    <para>
     <example>
      <title>
       <function>usort</function> Beispiel mit einem mehrdimensionalen
       Array
      </title>
      <programlisting role="php">
<![CDATA[
function cmp ($a, $b) {
    return strcmp($a["fruit"], $b["fruit"]);
}

$fruits[0]["fruit"] = "Zitronen";
$fruits[1]["fruit"] = "Äpfel";
$fruits[2]["fruit"] = "Trauben";

usort($fruits, "cmp");

while (list ($key, $value) = each ($fruits)) {
    echo "\$fruits[$key]: " . $value["fruit"] . "\n";
}
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Wird ein mehrdimensionales Array sortiert, enthalten $a und $b
     Referenzen zu dem ersten Index des Arrays.
    </para>
    <para>
     Dieses Beispiel würde folgendes anzeigen:
    </para>
    <para>
     <screen>
<![CDATA[
$fruits[0]: Äpfel
$fruits[1]: Trauben
$fruits[2]: Zitronen
]]>
     </screen>
    </para>
    &note.func-callback;
    <para>
     <example>
      <title>
       <function>usort</function> mit Verwendung einer Member Funktion eines Objektes
      </title>
      <programlisting role="php">
<![CDATA[
class TestObj {
    var $name;

    function TestObj($name)
    {
        $this->name = $name;
    }

    /* Dies ist die statische Vergleichsfunktion: */
    function cmp_obj($a, $b)
    {
        $al = strtolower($a->name);
        $bl = strtolower($b->name);
        if ($al == $bl) return 0;
        return ($al > $bl) ? +1 : -1;
    }
}

$a[] = new TestObj("c");
$a[] = new TestObj("b");
$a[] = new TestObj("d");

uasort($a, array ("TestObj", "cmp_obj"));

foreach ($a as $item) {
    print $item->name."\n";
}
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Dieses Beispiel würde folgendes anzeigen:
    </para>
    <para>
     <screen>
b
c
d
     </screen>
    </para>
    <warning>
     <para>
      Die zugrundeliegende quicksort Funktion in machen C
      Bibliotheken (wie z.B. Solaris Systeme) könnte einen PHP Crash
      verursachen, wenn die Vergleichsfunktion keine gleichbleibenden
      Werte zurückgibt.
     </para>
    </warning>
    <para>
     Siehe auch <function>uasort</function>,
     <function>uksort</function>, <function>sort</function>,
     <function>asort</function>,
     <function>arsort</function>,<function>ksort</function>,
     <function>natsort</function> und <function>rsort</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
