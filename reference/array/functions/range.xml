<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: nobody Status: ready -->
<!-- CREDITS: tom -->
  <refentry xml:id="function.range" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>range</refname>
    <refpurpose>Erstellt ein Array mit einem Bereich von Elementen</refpurpose>
   </refnamediv>
   <refsect1 role="description">
   &reftitle.description;
    <methodsynopsis>
     <type>array</type><methodname>range</methodname>
     <methodparam><type>mixed</type><parameter>low</parameter></methodparam>
     <methodparam><type>mixed</type><parameter>high</parameter></methodparam>
     <methodparam choice="opt"><type>number</type><parameter>step</parameter></methodparam>
    </methodsynopsis>
    <para>
     <function>range</function> gibt ein Array mit Elementen im
     Bereich von <parameter>low</parameter> bis
     <parameter>high</parameter> zurück. Wenn low > high, wird die
     Sequenz von high nach low sein.
    </para>
    <note>
     <title>Neuer Parameter</title>
     <simpara>
      Der optionale Parameter <parameter>step</parameter> wurde in 5.0.0 eingeführt.
     </simpara>
    </note>
    <para>
     Ist ein <parameter>step</parameter> Wert angegeben, wird es Schrittweite
     zwischen den Elementen in der Sequenz verwendet. <parameter>step</parameter>
     sollte als positive Zahl angegeben werden. Ist <parameter>step</parameter>
     nicht angegeben, wird automatisch der Wert 1 angenommen.
    </para>
    <para>
     <example>
      <title><function>range</function></title>
      <programlisting role="php">
<![CDATA[
<?php
// array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12)
foreach(range(0, 12) as $number) {
    echo $number;
}

// Der Parameter step wurde in PHP 5.0.0 eingeführt
// array(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 100)
foreach(range(0, 100, 10) as $number) {
    echo $number;
}

// Die Verwendung von Zeichenfolgen wurde in 4.1.0 eingeführt
// array('a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i');
foreach(range('a', 'i') as $letter) {
    echo $letter;
}
// array('c','b','a');
foreach(range('c', 'a') as $letter) {
    echo $letter;
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      Vor der Version 4.1.0 hat die Funktion <function>range</function> nur
      aufsteigende Integer Arrays erstellt. Die Unterstützung für Zeichenfolgen
      und Arrays in absteigender Reihenfolge wurde in 4.1.0 hinzugefügt. Werte
      mit Zeichenfolgen sind auf eine Länge von 1 limitiert. Wird eine Länge
      größer als 1 eingegeben, wird nur das erste Zeichen verwendet.
     </para>
    </note>
    <caution>
     <para>
      In den PHP Versionen 4.1.0 bis 4.3.2 werden numerische Zeichenfolgen von
      <function>range</function> als Strings, und nicht als integer gesehen.
      Stattdessen werden diese für Zeichenfolgen genutzt, z.B. wird
      <literal>"4242"</literal> als <literal>"4"</literal> betrachtet.
     </para>
    </caution>
    <para>
     Siehe auch <function>shuffle</function>,
     <function>array_fill</function> und
     <link linkend="control-structures.foreach">foreach</link>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
