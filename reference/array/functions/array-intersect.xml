<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: c84024092aee02b51dd18b909af0f2ccbdd24f98 Maintainer: nobody Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: c84024092aee02b51dd18b909af0f2ccbdd24f98 Reviewer: samesch -->
<!-- CREDITS: tom -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.array-intersect">
 <refnamediv>
  <refname>array_intersect</refname>
  <refpurpose>Ermittelt die Schnittmenge von Arrays</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_intersect</methodname>
   <methodparam><type>array</type><parameter>array</parameter></methodparam>
   <methodparam rep="repeat"><type>array</type><parameter>arrays</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>array_intersect</function> gibt ein Array mit allen Werten von
   <parameter>array</parameter> zurück, die auch in allen anderen Argumenten
   enthalten sind. Beachten Sie, dass die Schlüssel erhalten bleiben.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Das Array mit den Hauptwerten, auf die überprüft werden soll.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arrays</parameter></term>
     <listitem>
      <para>
       Die Arrays, mit deren Werten verglichen wird.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein Array mit allen Werten von <parameter>array</parameter> zurück,
   die auch in allen anderen Argumenten enthalten sind.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      &array.changelog.require-only-one;
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>array_intersect</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$array1 = array("a" => "grün", "rot", "blau");
$array2 = array("b" => "grün", "gelb", "rot");
$ergebnis = array_intersect($array1, $array2);
print_r($ergebnis);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Array
(
    [a] => grün
    [0] => rot
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <simpara>
    Zwei Elemente werden genau dann als gleich angesehen, wenn
    <literal>(string) $elem1 === (string) $elem2</literal>. In Worten: Wenn
    die String-Repräsentationen identisch sind.
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_intersect_assoc</function></member>
    <member><function>array_diff</function></member>
    <member><function>array_diff_assoc</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
