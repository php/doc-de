<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 336764 Maintainer: simp Status: ready -->
<refentry xml:id="function.array-diff-assoc" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_diff_assoc</refname>
  <refpurpose>
   Berechnet den Unterschied zwischen Arrays mit zusätzlicher
   Indexprüfung
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_diff_assoc</methodname>
   <methodparam><type>array</type><parameter>array1</parameter></methodparam>
   <methodparam><type>array</type><parameter>array2</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   Vergleicht <parameter>array1</parameter> mit <parameter>array2</parameter> und
   gibt den Unterschied zurück. Im Gegensatz zu <function>array_diff</function>
   werden die Schlüssel des Arrays ebenfalls beim Vergleich herangezogen.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>

    <varlistentry>
     <term><parameter>array1</parameter></term>
     <listitem>
      <para>
       Das Array, das verglichen werden soll
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>array2</parameter></term>
     <listitem>
      <para>
       Das Array, mit dem verglichen werden soll
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
       Weitere Arrays, mit denen vergleichen werden soll
      </para>
     </listitem>
    </varlistentry>

   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein <type>Array</type> zurück, das alle Werte aus 
   <parameter>array1</parameter> enthält, die in keinem der
   anderen Arrays vorhanden ist. 
  </para>
 </refsect1>

<!--
 <refsect1 role="errors">
  &reftitle.errors;
  &errors.no.unusual.errors;
 </refsect1>
-->

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>array_diff_assoc</function>-Beispiel</title>
    <para>
     In diesem Beispiel sieht man, dass das
     <literal>"a" =&gt; "gruen"</literal>-Paar in beiden Arrays enthalten ist
     und daher nicht in der Ausgabe der Funktion auftaucht. Andererseits ist das
     Paar <literal>0 =&gt; "rot"</literal> in der Ausgabe, weil
     <literal>"red"</literal> im zweiten Array den Wert
     <literal>1</literal> enthält.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$array1 = array("a" => "gruen", "b" => "braun", "c" => "blau", "rot");
$array2 = array("a" => "gruen", "gelb", "rot");
$result = array_diff_assoc($array1, $array2);
print_r($result);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [b] => braun
    [c] => blau
    [0] => rot
)
]]>
    </screen>
   </example>
  </para>
  <para>
   <example>
    <title><function>array_diff_assoc</function>-Beispiel</title>
    <para>
     Zwei Werte von <emphasis>Schlüssel =&gt; Wert</emphasis>-Paaren werden nur
     dann als gleich betrachtet, wenn <literal>(string) $elem1 === (string)
     $elem2 </literal> gilt. Anders ausgedrückt findet eine strikte Prüfung statt,
     in der die String-Repräsentationen gleich sein müssen.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$array1 = array(0, 1, 2);
$array2 = array("00", "01", "2");
$result = array_diff_assoc($array1, $array2);
print_r($result);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [0] => 0
    [1] => 1
    )
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <simpara>
    Diese Funktion überprüft nur eine Dimension eines
    n-dimensionalen Arrays. Natürlich kann man tiefere Dimensionen
    überprüfen, indem man zum Beispiel
    <literal>array_diff_assoc($array1[0], $array2[0]);</literal> verwendet.
   </simpara>
  </note>
  <note>
   <simpara>
    Stellen Sie sicher, dass Sie die Parameter in der korrekten Reihenfolge
    übergeben, wenn Sie mit ähnlichen Arrays mit mehr Schlüsseln vergleichen.
    Das neue Array sollte das erste in der Liste sein.
   </simpara>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_diff</function></member>
    <member><function>array_diff_uassoc</function></member>
    <member><function>array_udiff_assoc</function></member>
    <member><function>array_udiff_uassoc</function></member>
    <member><function>array_intersect</function></member>
    <member><function>array_intersect_assoc</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
