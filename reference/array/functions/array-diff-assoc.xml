<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- splitted from ./en/functions/array.xml, last change in rev 1.14 -->
<!-- EN-Revision: n/a Maintainer: nobody Status: ready -->
  <refentry xml:id="function.array-diff-assoc" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>array_diff_assoc</refname>
    <refpurpose>Berechnet den Unterschied zwischen Arrays mit zusätzlicher
     Indexprüfung</refpurpose>
   </refnamediv>
   <refsect1 role="description">
    &reftitle.description;
     <methodsynopsis>
      <type>array</type><methodname>array_diff_assoc</methodname>
      <methodparam><type>array</type><parameter>array1</parameter></methodparam>
      <methodparam><type>array</type><parameter>array2</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter> ...</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_diff_assoc</function> gibt ein <type>array</type> zurück,
     das alle Werte aus <parameter>array1</parameter> enthält, die in keinem der
     anderen Argumente vorhanden ist. Beachten Sie, dass die Schlüssel anders
     als von <function>array_diff</function> in den Vergleich einbezogen werden.
    </para>
    <para>
     <example>
      <title><function>array_diff_assoc</function>-Beispiel</title>
      <programlisting role="php">
<![CDATA[
<?php
$array1 = array("a" => "gruen", "b" => "braun", "c" => "blau", "rot");
$array2 = array("a" => "gruen", "gelb", "rot");
$result = array_diff_assoc($array1, $array2);
print_r($result);
?>
]]>
      </programlisting>
      &example.outputs;
      <screen>
<![CDATA[
Array
(
    [b] => braun
    [c] => blau
    [0] => rot
)
]]>
      </screen>
     </example>
    </para>
    <simpara>
     In unserem obigen Beispiel sieht man, dass das
     <literal>"a" =&gt; "gruen"</literal>-Paar in beiden Arrays enthalten ist
     und daher nicht in der Ausgabe der Funktion auftaucht. Andererseits ist das
     Paar <literal>0 =&gt; "rot"</literal> in der Ausgabe, weil
     <literal>"red"</literal> im zweiten Argument einen Schlüsselwert von
     <literal>1</literal> enthält.
    </simpara>
    <simpara>
     Zwei Werte von <emphasis>Schlüssel =&gt; Wert</emphasis>-Paaren werden nur
     dann als gleich betrachtet, wenn <literal>(string) $elem1 === (string)
     $elem2 </literal> gilt. Anders ausgedrückt findet eine strikte Prüfung statt,
     in der die String-Repräsentationen gleich sein müssen.
     <!-- TODO: example of it... -->
    </simpara>
    <note>
     <simpara>
      Bitte beachten Sie, dass diese Funktion nur eine Dimension eines
      n-dimensionalen Arrays prüft. Natürlich kann man tiefere Dimensionen
      überprüfen, indem man zum Beispiel
      <literal>array_diff_assoc($array1[0], $array2[0]);</literal> verwendet.
     </simpara>
    </note>
    <para>
     Siehe auch <function>array_diff</function>,
     <function>array_intersect</function>
     und <function>array_intersect_assoc</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
