<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.3 Maintainer: simp Status: ready -->
  <refentry id="function.array-diff-ukey">
   <refnamediv>
    <refname>array_diff_ukey</refname>
    <refpurpose>
     Berechnet den Unterschied von Arrays mittels einer Callbackfunktion für den
     Vergleich der Schlüssel
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>array</type><methodname>array_diff_ukey</methodname>
      <methodparam><type>array</type><parameter>array1</parameter></methodparam>
      <methodparam><type>array</type><parameter>array2</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter> ...</parameter></methodparam>
      <methodparam><type>callback</type><parameter>key_compare_func</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_diff_ukey</function> gibt ein Array zurück, welches alle
     Werte von <parameter>array1</parameter> enthält, deren Schlüssel in keinem
     der anderen Argumente vorkommen. Beachten Sie, dass die Assoziativität
     erhalten bleibt. Diese Funktion ähnelt <function>array_diff</function>,
     aber der Vergleich arbeitet auf den Schlüsseln anstatt den Werten.
    </para>
    <para>
     Dieser Vergleich wird von einer benutzerdefinierten Callbackfunktion
     durchgeführt. Diese muss einen Integer kleiner als, genau gleich oder
     größer als Null zurückgeben, wenn das erste Argument entsprechend als
     kleiner, gleich oder größer als das Zweite betrachtet wird.
    </para>
    <para>
     <example>
      <title><function>array_diff_ukey</function> Beispiel</title>
      <programlisting role="php">
<![CDATA[
<?php
function key_compare_func($key1, $key2)
{
    if ($key1 == $key2)
        return 0;
    else if ($key1 > $key2)
        return 1;
    else
        return -1;
}

$array1 = array('blau'  => 1, 'rot'  => 2, 'gruen'  => 3, 'violett' => 4);
$array2 = array('gruen' => 5, 'blau' => 6, 'gelb' => 7, 'tuerkis'   => 8);

var_dump(array_diff_ukey($array1, $array2, 'key_compare_func'));
?>
]]>
      </programlisting>
      &example.outputs;
      <screen>
<![CDATA[
array(2) {
  ["rot"]=>
  int(2)
  ["violett"]=>
  int(4)
}
]]>
      </screen>
     </example>
    </para>
    <note>
     <simpara>
      Bitte beachten Sie, dass diese Funktion nur eine Dimension eines
      n-dimensionalen Arrays prüft. Natürlich kann man tiefere Dimensionen
      überprüfen, indem man      
      <literal>array_diff_ukey($array1[0], $array2[0], 'callback_func');</literal>
      verwendet.
     </simpara>
    </note>
    <para>
     Siehe auch <function>array_diff</function>,
     <function>array_udiff</function>
     <function>array_diff_assoc</function>,
     <function>array_diff_uassoc</function>,
     <function>array_udiff_assoc</function>,
     <function>array_udiff_uassoc</function>,
     <function>array_diff_key</function>,
     <function>array_intersect</function>,
     <function>array_intersect_assoc</function>,
     <function>array_intersect_uassoc</function>,
     <function>array_intersect_key</function> und
     <function>array_intersect_ukey</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
