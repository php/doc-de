<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.5 Maintainer: tom Status: ready -->
  <refentry id="function.array-walk">
   <refnamediv>
    <refname>array_walk</refname>
    <refpurpose>
     Wendet eine Benutzerfunktion an jedem Element eines Arrays an
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>int</type><methodname>array_walk</methodname>
      <methodparam><type>array</type><parameter>array</parameter></methodparam>
      <methodparam><type>string</type><parameter>func</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>userdata</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Wendet die mittels <parameter>func</parameter> angegebene
     Benutzerfunktion für jedes Element von <parameter>array</parameter>
     an. <parameter>func</parameter> benötigt zwei Parameter. Der Wert
     von <parameter>array</parameter> wird als erster übergeben, und der
     Schlüssel/Index als zweites. Ist der optionale Parameter
     <parameter>userdata</parameter> angegeben, so wird er als dritter
     Parameter an die Funktion <parameter>func</parameter> übergeben.
    </simpara>
    <simpara>
     <parameter>func</parameter> muss eine vom Benutzer definierte
     Funktion sein, und nicht eine native PHP Funktion wie z.B.
     <function>strtolower</function> oder
     <function>stripslashes</function>. Die vom Benutzer definierte
     Funktion kann native PHP Funktionen verwenden.
    </simpara>
    &note.func-callback;
    <simpara>
     Sollte <parameter>func</parameter> mehr als die ihr übergebenen
     Parameter benötigen, wird bei jedem Aufruf von
     <parameter>func</parameter> seitens <function>array_walk</function>
     eine Fehlermeldung der Stufe <link linkend="errorfunc.constants">
     E_WARNING</link> generiert. Diese Warnmeldungen können unterdrückt
     werden, indem man dem Funktionsaufruf von
     <function>array_walk</function> den Operator <link
     linkend="language.operators.errorcontrol">@</link> voranstellt,
     oder <function>error_reporting</function> verwendet.
    </simpara>
    <note>
     <para>
      Wenn <parameter>func</parameter> direkt mit den Werten des
      Arrays arbeiten soll, spezifizieren Sie den ersten Parameter
      von <parameter>func</parameter> als <link
      linkend="language.references">Referenz</link>. Dann werden alle
      Änderungen an diesen Elementen direkt in dem originalen Array
      durchgeführt.
     </para>
     <para>
      Die Modifizierung des Arrays aus <parameter>func</parameter>
      heraus könnte ein unvorhersehbares Verhalten hervorrufen.
     </para>
    </note>
    <note>
     <para>
      Die Übergabe des Schlüssels und von
      <parameter>userdata</parameter> an <parameter>func</parameter>
      wurde mit PHP 4.0.0 eingeführt.
     </para>
    </note>
    <para>
     <function>array_walk</function> ist nicht von dem internen
     Arrayzeiger von <parameter>array</parameter> betroffen. <function>
     array_walk</function> geht ungeachtet der Zeigerposition das
     gesamte Array durch. Um den Zeiger zurückzusetzen, verwenden Sie
     <function>reset</function>. In PHP 3 setzt
     <function>array_walk</function> den Zeiger zurück.
    </para>
    <para>
     Von der Benutzerfunktion aus darf das Array selbst nicht geändert
     werden, wie zum Beispiel durch Hinzufügen oder Löschen eines
     Elementes, etc. Wird das auf <function>array_walk</function> 
     angewendete Array geändert, so ist das Verhalten dieser Funktion
     undefiniert und unvorhersagbar.
    </para>
    <para>
     <example>
      <title><function>array_walk</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$fruits = array ("d"=>"Zitrone", "a"=>"Orange", "b"=>"Banane", "c"=>"Apfel");

function test_alter (&$item1, $key, $prefix) {
    $item1 = "$prefix: $item1";
}

function test_print ($item2, $key) {
    echo "$key. $item2<br>\n";
}

echo "Vorher ...:\n";
array_walk ($fruits, 'test_print');

array_walk ($fruits, 'test_alter', 'Frucht');
echo "... und nachher:\n";

array_walk ($fruits, 'test_print');
?>
]]>
      </programlisting>
      <para>
       Das obige Programm wird folgendes ausgeben:
       <screen role="php">
<![CDATA[
Vorher ...:
d. Zitrone
a. Orange
b. Banane
c. Apfel
... und nachher:
d. Frucht: Zitrone
a. Frucht: Orange
b. Frucht: Banane
c. Frucht: Apfel
]]>
       </screen>
      </para>
     </example>
    </para>
    <simpara>
     Siehe auch <function>list</function>,
     <link linkend="control-structures.foreach">foreach</link>, 
     <function>each</function> und <function>call_user_func_array</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
