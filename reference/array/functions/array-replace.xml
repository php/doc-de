<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 345370 Maintainer: cmb Status: ready -->
<!-- CREDITS: Christian Jantz -->

<refentry xml:id="function.array-replace" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_replace</refname>
  <refpurpose>Ersetzt Elemente von übergebenen Arrays im ersten Array</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_replace</methodname>
   <methodparam><type>array</type><parameter>array1</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>array_replace</function> ersetzt die Werte von
   <parameter>array1</parameter> mit Werten, die die selben Schlüssel in den folgenden
   Arrays haben. Wenn ein Schlüssel des ersten Arrays im zweiten Array existiert, wird der Wert
   durch den Wert im zweiten Array ersetzt. Wenn der Schlüssel im zweiten, jedoch nicht im
   ersten Array existiert, wird dieser im ersten angelegt.
   Wenn ein Schlüssel nur im ersten Array existiert, bleibt dieser erhalten.
   Wenn mehrere Arrays zur Ersetzung übergeben werden, läuft die Abarbeitung der Reihe nach und spätere
   Arrays überschreiben vorherige Werte.
  </para>
  <para>
   <function>array_replace</function> ist nicht rekursiv: Werte im ersten Array
   werden, egal mit welchem Datentyp aus dem Zweiten Array ersetzt.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array1</parameter></term>
     <listitem>
      <para>
       Das Array in welchem die Elemente ersetzt werden.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
       Arrays, aus denen Elemente extrahiert werden.
       Werte späterer Arrays überschreiben die vorherigen Werte.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein <type>array</type> zurück, oder &null; falls ein Fehler auftritt.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>array_replace</function> Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$base = array("Orange", "Banane", "Apfel", "Himbeere");
$replacements = array(0 => "Ananas", 4 => "Kirsche");
$replacements2 = array(0 => "Traube");

$basket = array_replace($base, $replacements, $replacements2);
print_r($basket);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Array
(
    [0] => Traube
    [1] => Banane
    [2] => Apfel
    [3] => Himbeere
    [4] => Kirsche
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_replace_recursive</function></member>
    <member><function>array_merge</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
