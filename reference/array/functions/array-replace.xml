<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 5cc10e8d90a9d0cbb35779b60580e772e7d660a1 Maintainer: cmb Status: ready -->
<!-- CREDITS: Christian Jantz -->
<refentry xml:id="function.array-replace" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_replace</refname>
  <refpurpose>Ersetzt Elemente von übergebenen Arrays im ersten Array</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_replace</methodname>
   <methodparam><type>array</type><parameter>array</parameter></methodparam>
   <methodparam rep="repeat"><type>array</type><parameter>replacements</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>array_replace</function> erstellt ein neues Array und fügt für
   jeden Schlüssel aus den übergebenen Arrays die entsprechenden Elemente
   hinzu. Wenn ein Schlüssel in mehreren der übergebenen Arrays existiert, wird
   der Wert des Schlüssels aus dem weiter rechts stehenden Array übernommen.
  </para>
  <para>
   <function>array_replace</function> verarbeitet die Elemente nicht rekursiv,
   sondern ersetzt bei jeder Ersetzung den Wert jedes Schlüssels vollständig.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Das Array in welchem die Elemente ersetzt werden.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replacements</parameter></term>
     <listitem>
      <para>
       Arrays, aus denen Elemente extrahiert werden.
       Werte späterer Arrays überschreiben die vorherigen Werte.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein <type>array</type> zurück.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>array_replace</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$base = array("Orange", "Banane", "Apfel", "Himbeere");
$replacements = array(0 => "Ananas", 4 => "Kirsche");
$replacements2 = array(0 => "Traube");

$basket = array_replace($base, $replacements, $replacements2);
var_dump($basket);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
array(5) {
  [0]=>
  string(5) "Traube"
  [1]=>
  string(6) "Banane"
  [2]=>
  string(5) "Apfel"
  [3]=>
  string(9) "Himbeere"
  [4]=>
  string(6) "Kirsche"
}
]]>
    </screen>
   </example>
   <example>
    <title>Beispiel für die Behandlung von verschachtelten Arrays</title>
    <programlisting role="php">
<![CDATA[
<?php
$base = [ 'Zitrusfrüchte' => [ 'Orange', 'Zitrone' ], 'Kernobst' => [ 'Apfel' ] ];
$replacements = [ 'Zitrusfrüchte' => [ 'Grapefruit' ] ];
$replacements2 = [ 'Zitrusfrüchte' => [ 'Kumquat', 'Zitronatzitrone' ], 'Kernobst' => [ 'Loquat' ] ];

$basket = array_replace($base, $replacements, $replacements2);
var_dump($basket);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
array(2) {
  ["Zitrusfrüchte"]=>
  array(2) {
    [0]=>
    string(7) "Kumquat"
    [1]=>
    string(6) "Zitronatzitrone"
  }
  ["Kernobst"]=>
  array(1) {
    [0]=>
    string(6) "Loquat"
  }
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_replace_recursive</function></member>
    <member><function>array_merge</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
