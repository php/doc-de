<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 332158 Maintainer: Christian Jantz Status: ready -->
<!-- Reviewed: no -->

<refentry xml:id="function.array-replace" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>array_replace</refname>
  <refpurpose>Ersetzt Elemente von übergebenen arrays in das erste array</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_replace</methodname>
   <methodparam><type>array</type><parameter>array1</parameter></methodparam>
   <methodparam><type>array</type><parameter>array2</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>array_replace</function> ersetzt die Inhalte von 
   <parameter>array1</parameter> mit Inhalten, welche in den gleichen Keys in folgenden 
   arrays. Wenn ein Key des ersten arrays im zweiten array existiert, wird der Inhalt 
   durch den Inhalt vom zweiten array ersetzt. Wenn der Key im zweiten, jedoch nicht im 
   ersten, array existiert wird dieser im ersten angelegt. 
   Wenn der Key nur im ersten array existiert bleibt dieser erhalten. 
   Wenn mehrere arrays übergeben werden, läuft die Abarbeitung der Reihe nach und spätere 
   Inhalte ersetzen die der vorherigen. 
  </para>
  <para>
   <function>array_replace</function> ist nicht rekursiv : Inhalte in array1 
   werden, egal mit welchem Datentyp, aus array2 überschrieben.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array1</parameter></term>
     <listitem>
      <para>
       Das array in welchem die Inhalte ersetzt werden.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>array2</parameter></term>
     <listitem>
      <para>
       Das array aus welchem Inhalte extrahiert werden.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>...</parameter></term>
     <listitem>
      <para>
       Weitere arrays, aus welchen Inhalte extrahiert werden.
       Spätere arrays ersetzen die Inhalte der vorherigen. 
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein <type>array</type> zurück, oder &null; falls ein Fehler auftritt.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>array_replace</function> Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$base = array("orange", "banana", "apple", "raspberry");
$replacements = array(0 => "pineapple", 4 => "cherry");
$replacements2 = array(0 => "grape");

$basket = array_replace($base, $replacements, $replacements2);
print_r($basket);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen role="php">
<![CDATA[
Array
(
    [0] => grape
    [1] => banana
    [2] => apple
    [3] => raspberry
    [4] => cherry
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>array_replace_recursive</function></member>
    <member><function>array_merge</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
