<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.3 Maintainer: simp Status: ready -->
  <refentry id="function.array-diff-key">
   <refnamediv>
    <refname>array_diff_key</refname>
    <refpurpose>
     Berechnet den Unterschied zwischen Arrays indem es die Schlüssel vergleicht
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>array</type><methodname>array_diff_key</methodname>
      <methodparam><type>array</type><parameter>array1</parameter></methodparam>
      <methodparam><type>array</type><parameter>array2</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter> ...</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>array_diff_key</function> gibt ein Array zurück, welches alle
     Werte aus <parameter>array1</parameter> enthält, die Schlüssel besitzen
     die in keinem der anderen Argumente enthalten sind. Beachten Sie, dass
     die Assoziativität erhalten bleibt. Diese Funktion arbeitet wie 
     <function>array_diff</function> mit dem Unterschied, dass der Vergleich
     mit den Schlüsseln statt den Werten arbeitet.
    </para>
    <para>
     <example>
      <title><function>array_diff_key</function> Beispiel</title>
      <programlisting role="php">
<![CDATA[
<?php
$array1 = array('blau'  => 1, 'rot'  => 2, 'gruen'  => 3, 'violett' => 4);
$array2 = array('gruen' => 5, 'blau' => 6, 'gelb' => 7, 'tuerkis'   => 8);

var_dump(array_diff_key($array1, $array2));
?>
]]>
      </programlisting>
      &example.outputs;
      <screen>
<![CDATA[
array(2) {
  ["rot"]=>
  int(2)
  ["violett"]=>
  int(4)
}
]]>
      </screen>
     </example>
    </para>
    <simpara>
     Die beiden Schlüssel des <literal>key =&gt; Wert</literal> Paares werden
     als gleich erachtet, genau dann wenn <literal>(string) $key1 === (string)
     $key2 </literal>. Anders ausgedrückt findet eine strikte Prüfung statt, 
     in der die String-Repräsentationen gleich sein müssen.
    </simpara>
    <note>
     <simpara>
      Bitte beachten Sie, dass diese Funktion nur eine Dimension eines
      n-dimensionalen Arrays prüft. Natürlich kann man tiefere Dimensionen
      überprüfen, indem man 
      <literal>array_diff_key($array1[0], $array2[0]);</literal> verwendet.
     </simpara>
    </note>
    <para>
     Siehe auch <function>array_diff</function>,
     <function>array_udiff</function>
     <function>array_diff_assoc</function>,
     <function>array_diff_uassoc</function>,
     <function>array_udiff_assoc</function>,
     <function>array_udiff_uassoc</function>,
     <function>array_diff_ukey</function>,
     <function>array_intersect</function>,
     <function>array_intersect_assoc</function>,
     <function>array_intersect_uassoc</function>,
     <function>array_intersect_key</function> und
     <function>array_intersect_ukey</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
