<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: c84024092aee02b51dd18b909af0f2ccbdd24f98 Maintainer: nikic Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: c84024092aee02b51dd18b909af0f2ccbdd24f98 Reviewer: samesch -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.array-intersect-assoc">
 <refnamediv>
  <refname>array_intersect_assoc</refname>
  <refpurpose>Ermittelt die Schnittmenge von Arrays mit zusätzlicher Indexprüfung</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>array_intersect_assoc</methodname>
   <methodparam><type>array</type><parameter>array</parameter></methodparam>
   <methodparam rep="repeat"><type>array</type><parameter>arrays</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   <function>array_intersect_assoc</function> gibt ein Array mit allen Werten
   von <parameter>array</parameter> zurück, die auch in allen anderen
   Argumenten enthalten sind. Es ist zu beachten, dass, anders als bei
   <function>array_intersect</function>, auch die Schlüssel zum Vergleich
   herangezogen werden.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>array</parameter></term>
     <listitem>
      <para>
       Ein Array mit den Hauptwerten, die geprüft werden sollen.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arrays</parameter></term>
     <listitem>
      <para>
       Arrays zum Vergleichen der Werte.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein assoziatives Array zurück, welches alle Werte aus
   <parameter>array</parameter> enthält, die auch in allen anderen
   Argumenten enthalten sind.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      &array.changelog.require-only-one;
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>array_intersect_assoc</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$array1 = array("a" => "grün", "b" => "braun", "c" => "blau", "rot");
$array2 = array("a" => "grün", "b"=>"gelb", "blau", "rot");
$ergebnis_array = array_intersect_assoc($array1, $array2);
print_r($ergebnis_array);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [a] => grün
)
]]>
    </screen>
   </example>
  </para>
  <simpara>
   In unserem Beispiel ist zu sehen, dass einzig das Paar <literal>"a" =&gt;
   "green"</literal> in beiden Arrays enthalten ist und daher zurückgegeben
   wird. Der Wert <literal>"rot"</literal> wird nicht zurückgegeben, weil
   sein Schlüsselwert in <varname>$array1</varname> <literal>0</literal> ist,
   wohingegen der Schlüssel von "rot" in <varname>$array2</varname> den Wert
   <literal>1</literal> hat. Der Schlüssel <literal>"b"</literal> wird nicht
   zurückgegeben, weil er in beiden Arrays einen anderen Wert hat.
  </simpara>
  <simpara>
   Die beiden Werte der <literal>Schlüssel =&gt; Wert</literal>-Paare werden
   genau dann als gleich erachtet, wenn <literal>(string) $elem1 ===
   (string) $elem2 </literal>. Anders ausgedrückt wird eine strikte
   Typenprüfung durchgeführt, sodass die String-Darstellung gleich sein muss.
   <!-- TODO: example of it... -->
  </simpara>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <simplelist>
   <member><function>array_intersect</function></member>
   <member><function>array_uintersect_assoc</function></member>
   <member><function>array_intersect_uassoc</function></member>
   <member><function>array_uintersect_uassoc</function></member>
   <member><function>array_diff</function></member>
   <member><function>array_diff_assoc</function></member>
  </simplelist>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
