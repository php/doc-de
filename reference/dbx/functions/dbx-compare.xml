<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./de/functions/dbx.xml, last change in rev 1.1 -->
<!-- last change to 'dbx-compare' in en/ tree in rev 1.3 -->
<!-- EN-Revision: 1.1 Maintainer: tom Status: ready -->
<!-- OLD-Revision: 1.28/EN.1.3 -->
  <refentry id="function.dbx-compare">
   <refnamediv>
    <refname>dbx_compare</refname>
    <refpurpose>Vergleicht zwei Reihen für Sortierzwecke</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>int</type><methodname>dbx_compare</methodname>
      <methodparam><type>array</type><parameter>row_a</parameter></methodparam>
      <methodparam><type>array</type><parameter>row_b</parameter></methodparam>
      <methodparam><type>string</type><parameter>column_key</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>dbx_compare</function> gibt 0 zurück, wenn
     <literal>row_a[$column_key]</literal> gleich
     <literal>row_b[$column_key]</literal> ist. Ist der erste Wert
     größer oder kleiner als der zweite, wird <literal>1</literal>
     bzw. <literal>-1</literal> zurückgegeben (oder umgekehrt, wenn
     der Parameter <parameter>flag</parameter> auf
     <constant>DBX_CMP_DESC</constant> gesetzt ist). 
     <function>dbx_compare</function> ist eine Hilfsfunktion für 
     <function>dbx_sort</function>, um das Erstellen bzw. Verwenden
     der Benutzerfunktion zu vereinfachen.
    </para>
    <para>
     Der Parameter <parameter>flags</parameter> spezifiziert die
     Vergleichsrichtung:
     <itemizedlist>
      <listitem>
       <simpara>
        <constant>DBX_CMP_ASC</constant> - aufsteigende Reihenfolge
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <constant>DBX_CMP_DESC</constant> - absteigende Reihenfolge
       </simpara>
      </listitem>
     </itemizedlist>
     und den bevorzugten Vergleichstyp:
     <itemizedlist>
      <listitem>
       <simpara>
        <constant>DBX_CMP_NATIVE</constant> - keine Typenkonvertierung
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <constant>DBX_CMP_TEXT</constant> - vergleicht die Werte als Strings
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        <constant>DBX_CMP_NUMBER</constant> - vergleicht die Werte numerisch
       </simpara>
      </listitem>
     </itemizedlist>
     Eine der Vergleichs-, und eine der Typkonstanten können mit dem
     Bit-Operator OR (|) kombiniert werden. Die Standardwerte für
     <parameter>flags</parameter> sind <constant>DBX_CMP_ASC</constant>
     | <constant>DBX_CMP_NATIVE</constant>.
    </para>
    <example>
     <title><function>dbx_compare</function></title>
     <programlisting role="php">
<![CDATA[
<?php
function user_re_order ($a, $b) {
    $rv = dbx_compare ($a, $b, "parentid", DBX_CMP_DESC);
    if ( !$rv ) {
        $rv = dbx_compare ($a, $b, "id", DBX_CMP_NUMBER);
    }
    return $rv;
}

$link   = dbx_connect (DBX_ODBC, "", "db", "username", "password")
    or die ("Fehler beim Verbinden");

$result = dbx_query ($link, "SELECT id, parentid, description FROM table ORDER BY id");
    // die Daten in $result sind nun nach id gereiht

dbx_sort ($result, "user_re_order");
    // die Daten in $result sind nun nach parentid (absteigend) gereiht,
    // und dann nach id

dbx_close ($link);
?>
]]>
     </programlisting>
    </example>
    <para>
     Siehe auch <function>dbx_sort</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
