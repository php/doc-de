<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: samesch Status: ready -->
<refentry xml:id="function.mssql-fetch-object" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mssql_fetch_object</refname>
  <refpurpose>Liefert einen Datensatz als Objekt</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>object</type><methodname>mssql_fetch_object</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>mssql_fetch_object</function> ist
   <function>mssql_fetch_array</function> ähnlich, aber es besteht ein
   Unterschied: statt eines Arrays wird ein Objekt zurückgegeben. Indirekt
   bedeutet das, dass nur über die Feldnamen auf die Daten zugegriffen werden
   kann, nicht aber über ihre Offsets (Zahlen sind als Namen von Eigenschaften
   nicht erlaubt).
  </para>
  <para>
   Was die Geschwindigkeit betrifft, ist diese Funktion mit
   <function>mssql_fetch_array</function> identisch und fast genauso schnell
   wie <function>mssql_fetch_row</function> (der Unterschied ist unbedeutend).
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result</parameter></term>
     <listitem>
      <para>
       Der Bezeichner des Ergebnisses, das ausgewertet wird. Dieses Ergebnis
       stammt von einem Aufruf von <function>mssql_query</function>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein Objekt mit den Eigenschaften des gelieferten Datensatzes zurück
   oder &false;, wenn es keinen weiteren Datensatz gibt.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>mssql_fetch_object</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
// Eine Select-Anfrage an MSSQL senden
$anfrage = mssql_query('SELECT [username], [name] FROM [php].[dbo].[userlist]');

// Überprüfen, ob es Datensätze gab
if (!mssql_num_rows($anfrage)) {
    echo 'Keine Datensätze gefunden';
} else {
    // Eine Liste der Benutzer in folgendem Format ausgeben:
    // * name (username)

    echo '<ul>';

    while ($datensatz = mssql_fetch_object($anfrage)) {
        echo '<li>' . $datensatz->name . ' (' . $datensatz->username . ')</li>';
    }

    echo '</ul>';
}

// Den Ergebnisspeicher freigeben
mssql_free_result($anfrage);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &database.field-case;
  &database.fetch-null;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mssql_fetch_array</function></member>
    <member><function>mssql_fetch_row</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
