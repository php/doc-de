<?xml version='1.0'?>
<!-- splitted from ./de/functions/pgsql.xml, last change in rev 1.9 -->
<!-- last change to 'pg-fetch-object' in en/ tree in rev 1.2 -->
<!-- EN-Revision: 1.2 Maintainer: conni Status: ready -->
<!-- OLD-Revision: 1.78/EN.1.2 -->
<!-- $Revision: 1.3 $ -->
  <refentry id='function.pg-fetch-object'>
   <refnamediv>
    <refname>pg_fetch_object</refname>
    <refpurpose>Holt einen Datensatz als Objekt</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>object</type><methodname>pg_fetch_object</methodname>
      <methodparam><type>resource</type><parameter>result</parameter></methodparam>
      <methodparam><type>int</type><parameter>row</parameter></methodparam>
      <methodparam choice='opt'><type>int</type><parameter>result_type</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>pg_fetch_object</function> gibt ein Objekt zurück,
     dessen Eigenschaften mit den Feldern des erhaltenen
     Datensatzes übereinstimmen oder &false;, wenn
     kein Datensatz mehr gelesen werden konnte oder ein Fehler auftrat.
    </para>
    <para> 
     <function>pg_fetch_object</function> ist
     <function>pg_fetch_array</function> ähnlich, mit einem
     Unterschied: Statt eines Arrays wird ein Objekt zurückgegeben.
     Indirekt heisst das, dass man die Daten nur über die Feldnamen
     und nicht über ihre Offsets ansprechen kann (Zahlen sind nicht
     erlaubte Eigenschaftsnamen).
    </para>
    <para>
     <parameter>result_type</parameter> ist ein optionaler
     Parameter, der angibt, wie der Rückgabewert initialisiert wird. 
     <parameter>result_type</parameter> ist eine Konstante, die die 
     folgenden Werte annehmen kann: PGSQL_ASSOC, PGSQL_NUM, und PGSQL_BOTH.
     <function>pg_fetch_object</function> gibt mit PGSQL_ASSOC ein
     assoziatives Array mit Feldnamen als Schlüssel zurück. 
    </para>
    <para>
     <note>
      <para>
       <parameter>result_type</parameter> wurde in PHP 4.0 eingeführt.
      </para>
     </note>
    </para>
    <para>
     Von der Geschwindigkeit her ist die Funktion mit
     <function>pg_fetch_array</function> identisch und fast so
     schnell wie <function>pg_fetch_row</function> (Der Unterschied
     ist unwesentlich).
    </para>
    <para> 
     Siehe auch <function>pg_query</function>, <function>pg_fetch_array</function>,
     <function>pg_fetch_row</function> und <function>pg_fetch_result</function>.
    </para>
    <para>
     <example>
      <title>PostgreSQL fetch object</title>
      <programlisting role='php'>
<![CDATA[
<?php 
$database = "verlag";
$db_conn = pg_connect ("host=localhost port=5432 dbname=$database");
if (!$db_conn): ?>
    <H1>Konnte keine Verbindung zur PostgreSQL Datenbank <?php echo $database; ?> herstellen.</H1> <?php
    exit;
endif;

$qu = pg_query ($db_conn, "SELECT * FROM verlag ORDER BY autor");
$row = 0; // PostgreSQL braucht einen Zähler, andere DBs evtl. nicht
while ($data = pg_fetch_object ($qu, $row)) {
    echo $data->autor." (";
    echo $data->jahr ."): ";
    echo $data->titel."<BR>";
    $row++;
}
?>
<PRE>
<?php
$fields[] = Array ("autor", "Author");
$fields[] = Array ("jahr",  "  Jahr");
$fields[] = Array ("titel", " Titel");

$row= 0; // PostgreSQL braucht einen Zähler, andere DBs evtl. nicht
while ($data = pg_fetch_object ($qu, $row)) {
    echo "----------\n";
    reset ($fields);
    while (list (,$item) = each ($fields)):
        echo $item[1].": ".$data->$item[0]."\n";
    endwhile;
    $row++;
}
echo "----------\n"; 
?>
</PRE> 
<?php
pg_free_result ($qu);
pg_close ($db_conn);
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      Ab der Version 4.1.0 ist der Parameter <parameter>row</parameter> optional.
     </para>
    </note>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
