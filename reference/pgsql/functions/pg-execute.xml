<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.4 Maintainer: conni Status: ready -->
<refentry id="function.pg-execute">
 <refnamediv>
  <refname>pg_execute</refname>
  <refpurpose>Fordert den Datenankserver auf, eine vorbereitete Anfrage
  mit den angegebenen Parametern auszuführen und wartet auf das
  Ergebnis.</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>pg_execute</methodname>
   <methodparam><type>resource</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>stmtname</parameter></methodparam>
   <methodparam><type>array</type><parameter>params</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>resource</type><methodname>pg_execute</methodname>
   <methodparam><type>string</type><parameter>stmtname</parameter></methodparam>
   <methodparam><type>array</type><parameter>params</parameter></methodparam>
  </methodsynopsis>
  <para>
    Fordert den Datenankserver auf, eine vorbereitete Anfrage mit den angegebenen Parametern auszuführen und wartet auf das Ergebnis.
  </para>
  <para>
    <function>pg_execute</function> ist ähnlich wie <function>pg_query_params</function>,
	mit dem Unterschied, dass das auszuführende Kommando zuvor als
	vorbereitete Abfrage definiert wurde und kein Abfragestring ist.
	Damit werden Abfragen, die wiederholt gebraucht werden, nur ein
	einziges Mal geparst und geplant und nicht jedesmal, wenn sie
	ausgeführt werden. Das Kommando muss zuvor in der aktuellen
	Datenbanksitzung mit <function>pg_prepare</function> vorbereitet
	worden sein. <function>pg_execute</function> wird von PostgreSQL ab
	der Version 7.4 unterstützt und wird in allen früheren
	Versionen fehlschlagen.
  </para>
  <para>
    Die Parameter sind identisch zu denen in <function>pg_query_params</function>, zusätzlich ist der Name des vorbereiteten Kommandos gegeben.
  </para>
 </refsect1>

<refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       PostgreSQL Verbindungskennung. Wenn       <parameter>connection</parameter> fehlt,
	   wird die Standardverbindung angenommen. Dies ist die Verbindung,
	   die zuletzt mit den Funktionen <function>pg_connect</function>
	   oder <function>pg_pconnect</function> geöffnet wurde.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>stmtname</parameter></term>
     <listitem>
      <para>
       Der Name der vorbereiteten Abfrage, die ausgeführt werden soll.
	   Falls "" angegeben wurde, wird die unbenannte Abfrage
	   ausgeführt. Dieser Name muss zuvor mit  <function>pg_prepare</function>,
	   <function>pg_send_prepare</function> oder dem SQL-Kommando
	   <literal>PREPARE</literal> vorbereitet worden sein.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>params</parameter></term>
     <listitem>
      <para>
	    Ein Array, das die Parameter enthält, mit denen die Platzhalter
		$1, $2 usw. im originalen Abfragestring ersetzt werden. Die
		Anzahl der Arrayelemente muss mit der Anzahl der Platzhalter
		übereinstimmen.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
    Bei Erfolg wird eine Ergebniskennung zurückgegeben und bei einem
	Fehler &false;.</para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>pg_execute</function> benutzen:</title>
    <programlisting role="php">
<![CDATA[
<?php
// Zu der Datenbank "mary" verbinden
$dbconn = pg_connect("dbname=mary");

// Eine Abfrage zur Ausführung vorbereiten
$result = pg_prepare($dbconn, "my_query", 'SELECT * FROM shops WHERE name = $1');

// Die vorbereitete Abfrage ausführen. Es ist nicht notwendig,
// den String "Joe's Widgets" zu maskieren
$result = pg_execute($dbconn, "my_query", array("Joe's Widgets"));

// Dieselbe vorbereitete Abfrage nochmal ausführen,
// diesmal mit einem anderen Parameter
$result = pg_execute($dbconn, "my_query", array("Clothes Clothes Clothes"));

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_prepare</function></member>
    <member><function>pg_send_prepare</function></member>
    <member><function>pg_query_params</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
