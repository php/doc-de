<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.7 Maintainer: conni Status: ready -->
  <refentry id='function.pg-fetch-array'>
   <refnamediv>
    <refname>pg_fetch_array</refname>
    <refpurpose>Holt eine Zeile als Array</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>array</type><methodname>pg_fetch_array</methodname>
     <methodparam><type>resource</type><parameter>result</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>row</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>result_type</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>pg_fetch_array</function> gibt ein Array zurück, das die
     gelesene Zeile (Tupel, Datensatz) enthält. Falls keine Zeile mehr
     gelesen werden konnte, wird &false; zurückgegeben. 
    </para>
    <para>
     <function>pg_fetch_array</function> ist eine erweiterte Version
     von <function>pg_fetch_row</function>. Zusätzlich zur
     Speicherung der Daten in einem nummerischen Array (mit den
     Feldindizes) speichert diese Funktion die Daten standardmässig in
     einem assoziativen Array mit den Feldnamen als Indizes. 
    </para>
    <para>
     <parameter>row</parameter> ist die Zeilennummer des
     Datensatzes, der gelesen werden soll. Die Zählung beginnt bei 0.
    </para>
    <para>
     <parameter>result_type</parameter> ist ein optionaler
     Parameter, der angibt, wie der Rückgabewert initialisiert wird. 
     <parameter>result_type</parameter> ist eine Konstante, die die 
     folgenden Werte annehmen kann: <constant>PGSQL_ASSOC</constant>, 
     <constant>PGSQL_NUM</constant>, und <constant>PGSQL_BOTH</constant>.
     <function>pg_fetch_array</function> gibt mit <constant>PGSQL_ASSOC</constant> ein
     assoziatives Array mit den Feldnamen als Schlüssel zurück, mit
     <constant>PGSQL_NUM</constant> wird ein nummerisches Array mit den
     Feldnummern zurückgegeben und mit <constant>PGSQL_BOTH</constant>
     wird ein Array mit beiden Indizes zurückgegeben.
     <constant>PGSQL_BOTH</constant> ist die Standardeinstellung.
     <note>
      <para>
       <parameter>result_type</parameter> wurde in PHP 4.0 eingeführt.
      </para>
     </note>
    </para>
    <para>
     <function>pg_fetch_array</function> ist NICHT wesentlich
     langsamer als <function>pg_fetch_row</function>, ist aber viel einfacher zu benutzen.
    </para>
    <para>
     <example>
      <title>PostgreSQL fetch array</title>
      <programlisting role='php'>
       <![CDATA[
<?php 
$conn = pg_pconnect ("dbname=publisher");
if (!$conn) {
    echo "Ein Fehler ist aufgetreten.\n";
    exit;
}

$result = pg_query ($conn, "SELECT * FROM authors");
if (!$result) {
    echo "Ein Fehler ist aufgetreten.\n";
    exit;
}

$arr = pg_fetch_array ($result, 0, PGSQL_NUM);
echo $arr[0] . " <- array\n";

$arr = pg_fetch_array ($result, 1, PGSQL_ASSOC);
echo $arr["autor"] . " <- array\n";
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Siehe auch <function>pg_fetch_row</function>, 
    <function>pg_fetch_object</function> und
    <function>pg_fetch_result</function>.
    </para>
    <note>
     <para>
      Ab der Version 4.1.0 ist der Parameter <parameter>row</parameter>
      optional. Ein Aufruf von <function>pg_fetch_array</function>
      inkrementiert den internen Datensatzzähler um 1.
     </para>
    </note>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
