<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.11 $ -->
<!-- EN-Revision: 1.13 Maintainer: conni Status: ready -->
<refentry xml:id="function.pg-lo-import" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_lo_import</refname>
  <refpurpose>Importiert ein Large Object aus einer Datei</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>pg_lo_import</methodname>
   <methodparam choice="opt"><type>resource</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>pathname</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>object_id</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>pg_lo_import</function> erzeugt aus einer Datei im Dateisystem als
   Datenquelle ein neues Large Object in der Datenbank.
  </para>
  <para>
   Um die Large Object (lo) Schnittstelle benutzen zu können, müssen
   die Kommandos innerhalb einer Transaktion ausgeführt werden.
  </para>
  &note.sm.uidcheck;
  <note>
   <para>
    Diese Funktion ersetzt die Funktion <function>pg_loimport</function>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       PostgreSQL Verbindungskennung. Wenn <parameter>connection</parameter> nicht
       angegeben ist, wird die zuletzt von <function>pg_connect</function> oder
       <function>pg_pconnect</function> geöffnete Verbindung benutzt.
	  </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>pathname</parameter></term>
     <listitem>
      <para>
       Der vollständige Pfad- und Dateiname der Datei im lokalen Dateisystem
       des Clients, aus der die Daten des Large Objects gelesen werden.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>object_id</parameter></term>
     <listitem>
      <para>
       Wenn es einen Parameter <parameter>object_id</parameter> gibt, wird diese
       Funktion versuchen, ein Large Object mit dieser ID zu erzeugen. Anderenfalls
       wird dem Large Object vom Server eine freie ID zugewiesen. Dieser Parameter
       steht seit PHP 5.3 zur Verfügung und basiert auf Funktionalitäten, die seit
       PostgreSQL 8.1 implementiert sind.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Der <varname>OID</varname> des neu erzeugten Large Objects oder
   &false;, wenn ein Fehler auftrat.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
     <row>
       <entry>5.3.0</entry>
       <entry><para>
        Der optionale Parameter <parameter>object_id</parameter> wurde zugefügt.
       </para></entry>
      </row>
      <row>
       <entry>4.2.0</entry>
       <entry><para>
        Die Syntax dieser Funktion wurde geändert. Früher galt:
        <methodsynopsis>
         <type>int</type><methodname>pg_lo_import</methodname>
         <methodparam><type>string</type><parameter>pathname</parameter></methodparam>
         <methodparam choice="opt"><type>resource</type><parameter>connection</parameter></methodparam>
        </methodsynopsis>
       </para></entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>pg_lo_import</function> Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
   $database = pg_connect("dbname=jacarta");
   pg_query($database, "begin");
   $oid = pg_lo_import($database, '/tmp/lob.dat');
   pg_query($database, "commit");
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_lo_export</function></member>
    <member><function>pg_lo_open</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
