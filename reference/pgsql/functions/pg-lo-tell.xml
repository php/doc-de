<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 332713 Maintainer: conni Status: ready -->
<refentry xml:id='function.pg-lo-tell' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_lo_tell</refname>
  <refpurpose>
   Gibt die aktuelle Lese- oder Schreibposition in einem Large Object zurück
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>pg_lo_tell</methodname>
   <methodparam><type>resource</type><parameter>large_object</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>pg_lo_tell</function> gibt die aktuelle Position (Offset vom
   Anfang des Large Objects aus) des internen Zeigers zurück.
  </para>
  <para>
   Um die Large Object (lo) Schnittstelle benutzen zu können, müssen 
   die Kommandos innerhalb einer Transaktion ausgeführt werden.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>large_object</parameter></term>
     <listitem>
      <para>
       PostgreSQL Large Object Ressource (LOB), die von der Funktion 
       <function>pg_lo_open</function> zurückgegeben wurde.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Die aktuelle Lese- oder Schreibposition in einem  (in Bytes) vom
   Anfang des Large Objects aus. Falls ein Fehler auftritt, ist der
   Rückgabewert negativ.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>pg_lo_tell</function> Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
   $doc_oid = 189762345;
   $database = pg_connect("dbname=jacarta");
   pg_query($database, "begin");
   $handle = pg_lo_open($database, $doc_oid, "r");
   // Überspringe die ersten 50000 Bytes
   pg_lo_seek($handle, 50000, PGSQL_SEEK_SET);
   // Test, wieviele Bytes übersprungen wurden
   $offset = pg_lo_tell($handle);
   echo "Die aktuelle Position ist: $offset";
   pg_query($database, "commit");
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Die aktuelle Position ist: 50000
]]>
    </screen>
   </example> 
  </para>
 </refsect1>
 
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.6.0</entry>
       <entry>
        Unterstützung für 64bit große Objekte von PostgreSQL 9.3 wurde
        hinzugefügt. Sowohl Client als auch Server müssen PostgreSQL 9.3
        unterstützen, und PHP muss ein 64bit Build sein, um 64bit große Objekte
        verwenden zu können.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_lo_seek</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
