<?xml version='1.0'?>
<!-- splitted from ./de/functions/pgsql.xml, last change in rev 1.9 -->
<!-- last change to 'pg-lo-read' in en/ tree in rev 1.74 -->
<!-- EN-Revision: 1.2 Maintainer: conni Status: ready -->
<!-- OLD-Revision: 1.78/EN.1.74 -->
  <refentry id='function.pg-lo-read'>
   <refnamediv>
    <refname>pg_lo_read</refname>
    <refpurpose>Liest ein Large Object</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>string</type><methodname>pg_lo_read</methodname>
      <methodparam><type>resource</type><parameter>large_object</parameter></methodparam>
      <methodparam><type>int</type><parameter>len</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>pg_lo_read</function> liest höchstens
     <parameter>len</parameter> Bytes eines grossen Objektes und gibt
     dies als String zurück. Das Argument <parameter>large_object</parameter>
     bezeichnet einen gültigen Handler für ein Large Object und
     <parameter>len</parameter> gibt die maximal erlaubte Grösse 
     des Segmentes des Large Objects an. Bei einem Fehler wird &false;
     zurückgegeben.
    </para>
    <para>
     Um die Large Object (lo) Schnittstelle benutzen zu können,
     müssen die Kommandos innerhalb einer Transaktion ausgeführt
     werden. 
    </para>
    <note>
     <para>
      Diese Funktion ersetzt die Funktion <literal>pg_loread()</literal>.
     </para>
    </note>
    <para>
     Siehe auch <function>pg_lo_read_all</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
