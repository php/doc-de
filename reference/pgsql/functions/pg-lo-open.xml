<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.7 Maintainer: conni Status: ready -->
<refentry id="function.pg-lo-open">
 <refnamediv>
  <refname>pg_lo_open</refname>
  <refpurpose>Öffnet ein Large Object</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>pg_lo_open</methodname>
   <methodparam><type>resource</type><parameter>connection</parameter></methodparam>
   <methodparam><type>int</type><parameter>oid</parameter></methodparam>
   <methodparam><type>string</type><parameter>mode</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>pg_lo_open</function> öffnet ein Large Object in einer Datenbank und
    gibt einen Handler (eine Ressource) zurück, über den das Large Object
    modifiziert werden kann.
  </para>
  <warning>
   <para>
    Bevor Sie die Datenbankverbindung schließen, müssen Sie das Large 
    Object wieder schließen.
   </para>
  </warning>
  <para>
   Um die Large Object (lo) Schnittstelle benutzen zu können, müssen die 
   Kommandos innerhalb einer Transaktion ausgeführt werden.
  </para>
  <note>
   <para>
    Diese Funktion ersetzt die Funktion <function>pg_loopen</function>.
   </para>
  </note>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       PostgreSQL Verbindungkennung. Falls <parameter>connection</parameter>
       nicht angegeben wurde, wird die zuletzt mit <function>pg_connect</function>
       oder <function>pg_pconnect</function> geöffnete Verbindung benutzt.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>oid</parameter></term>
     <listitem>
      <para>
       Der <varname>OID</varname> des Large Objects in der Datenbank.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       Dies kann entweder "r" für nur lesen, "w" für nur schreiben oder "rw" 
       für lesen und Schreiben sein.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Eine Large Object Ressource oder &false;, falls ein Fehler auftrat.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>pg_lo_open</function> Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
   $database = pg_connect("dbname=jacarta");
   pg_query($database, "begin");
   $oid = pg_lo_create($database);
   echo "$oid\n";
   $handle = pg_lo_open($database, $oid, "w");
   echo "$handle\n";
   pg_lo_write($handle, "Daten des Large Objects");
   pg_lo_close($handle);
   pg_query($database, "commit");
?>
]]>
    </programlisting>
   </example> 
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_lo_close</function></member>
    <member><function>pg_lo_create</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->