<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343888 Maintainer: conni Status: ready -->
<refentry xml:id="function.pg-send-execute" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pg_send_execute</refname>
  <refpurpose>
    Sendet eine Aufforderung an den Server, eine vorbereitete Abfrage mit den
    übergebenen Parametern auszuführen, ohne auf die Ergebnisse zu warten
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>pg_send_execute</methodname>
   <methodparam><type>resource</type><parameter>connection</parameter></methodparam>
   <methodparam><type>string</type><parameter>stmtname</parameter></methodparam>
   <methodparam><type>array</type><parameter>params</parameter></methodparam>
  </methodsynopsis>
  <para>
    Sendet eine Aufforderung an den Server, eine vorbereitete Anfrage mit
    den übergebenen Parametern auszuführen, ohne auf die Ergebnisse zu
    warten.
  </para>
  <para>
    Dies ist ähnlich, wie die Funktion <function>pg_send_query_params</function>,
    nur dass das auszuführende Kommando eine zuvor benannte vorbereitete
    Abfrage ist und kein Abfragestring. Die Parameter der Funktion werden
    genauso verarbeitet, wie bei der Funktion  <function>pg_execute</function>
    beschrieben  und genau wie diese kann <function>pg_send_execute</function>
    nicht mit PostgreSQL Versionen vor 7.4 benutzet werden.
  </para>
 </refsect1>

<refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>connection</parameter></term>
     <listitem>
      <para>
       PostgreSQL Verbindungkennung. Falls <parameter>connection</parameter>
       nicht angegeben wurde, wird die zuletzt mit <function>pg_connect</function>
       oder <function>pg_pconnect</function> geöffnete Verbindung benutzt.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>stmtname</parameter></term>
     <listitem>
      <para>
       Der Name der auszuführenden vorbereiteten Abfrage. Falls "" angegeben wird,
       wird eine unbenannte Abfrage ausgeführt. Der Name muss zuvor mit <function>pg_prepare</function>,
       <function>pg_send_prepare</function> oder dem SQL-Kommando <literal>PREPARE</literal> definiert worden sein.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>params</parameter></term>
     <listitem>
      <para>
        Ein Array mit Parameterwerten, mit denen die Platzhalter $1, $2
        usw. in der ursprünglichen vorbereiteten Abfrage ersetzt werden.
        Die Anzahl der Elemente dieses Arrays muss mit der Anzahl der
        Platzhalter übereinstimmen.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt bei Erfolg &true; zurück oder &false;, falls ein Fehler auftrat.
   Verwenden Sie <function>pg_get_result</function>, um das Abfrageergebnis
   zu erhalten.
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>pg_send_execute</function> benutzen:</title>
    <programlisting role="php">
<![CDATA[
<?php
  $dbconn = pg_connect("dbname=publisher") or die("Konnte nicht verbinden");

  // Abfrage vorbereiten
  if (!pg_connection_busy($dbconn)) {
    pg_send_prepare($dbconn, "my_query", 'SELECT * FROM shops WHERE name = $1');
    $res1 = pg_get_result($dbconn);
  }

  // Die vorbereitete Abfrage ausführen. Beachten Sie, dass es
  // nicht nötig ist, den String "Joe's Widgets" zu maskieren 
  if (!pg_connection_busy($dbconn)) {
    pg_send_execute($dbconn, "my_query", array("Joe's Widgets"));
    $res2 = pg_get_result($dbconn);
  }
  
  // Dieselbe vorbereitete Abfrage, diesmal mit einem anderen Parameter.
  if (!pg_connection_busy($dbconn)) {
    pg_send_execute($dbconn, "my_query", array("Clothes Clothes Clothes"));
    $res3 = pg_get_result($dbconn);
  }
  
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pg_prepare</function></member>
    <member><function>pg_send_prepare</function></member>
    <member><function>pg_execute</function></member>    
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
