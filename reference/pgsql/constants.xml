<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: conni Status: ready -->
<appendix xml:id="pgsql.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &extension.constants;

 <variablelist>
  <varlistentry>
   <term>
    <constant>PGSQL_ASSOC</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
      Wird an die Funktion <function>pg_fetch_array</function>
   übergeben. Gibt ein assoziatives Array zurück, mit den Feldnamen
   als Indizes und den entsprechenden Werten.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_NUM</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
      Wird an die Funktion <function>pg_fetch_array</function>
   übergeben. Gibt ein numerisches Array zurück, mit den Feldnummern
   als Indizes und den entsprechenden Werten.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_BOTH</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
      Wird an die Funktion <function>pg_fetch_array</function> übergeben.
      Gibt ein Array zurück, das sowohl assoziativ (mit den Feldnamen)
      als auch numerisch (mit den Feldnummern) indiziert ist, und den
      entsprechenden Werten.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_CONNECT_FORCE_NEW</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
      Wird an die Funktion <function>pg_connect</function> übergeben, um
   eine neue Verbindung zu erzwingen, anstatt eine identische,
   bereits geöffnete Verbindung wieder zu benutzen.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_CONNECTION_BAD</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
      Wird von der Funktion <function>pg_connection_status</function>
   zurückgegeben und  zeigt an, dass der Status der
   Datenbankverbindung ungültig ist.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_CONNECTION_OK</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
      Wird von der Funktion <function>pg_connection_status</function>
   zurückgegeben und zeigt an, dass der Status der
   Datenbankverbindung gültig ist.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_SEEK_SET</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird an die Funktion <function>pg_lo_seek</function> übergeben.
  Das Objekt wird von Beginn an durchsucht.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_SEEK_CUR</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird an die Funktion <function>pg_lo_seek</function> übergeben.
  Das Objekt wird ab der aktuellen Position durchsucht.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_SEEK_END</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird an die Funktion <function>pg_lo_seek</function> übergeben.
  Das Objekt wird, ausgehend vom Ende, durchsucht.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_EMPTY_QUERY</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird von der Funktion <function>pg_result_status</function>
  zurückgegeben, wenn der an den Server gesendete String leer war.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_COMMAND_OK</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird von der Funktion <function>pg_result_status</function>
  zurückgegeben. Ein Kommando wurde erfolgreich ausgeführt, aber es
  wurden keine Daten zurückgegeben.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_TUPLES_OK</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird von der Funktion <function>pg_result_status</function>
  zurückgegeben. Ein Kommando wurde erfolgreich ausgeführt und es
  wurden Daten (wie etwa ein <literal>SELECT</literal> oder
  <literal>SHOW</literal>) zurückgegeben.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_COPY_OUT</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird von der Funktion <function>pg_result_status</function>
  zurückgegeben. Ein Datentransfer vom Server wurde gestartet.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_COPY_IN</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird von der Funktion <function>pg_result_status</function>
  zurückgegeben. Ein Datentransfer zum Server wurde gestartet.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_BAD_RESPONSE</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird von der Funktion <function>pg_result_status</function>
  zurückgegeben. Die Serverantwort wurde nicht verstanden.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_NONFATAL_ERROR</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird von der Funktion <function>pg_result_status</function>
  zurückgegeben. Ein nicht-fataler Fehler (eine Notiz oder Warnung)
  ist aufgetreten.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_FATAL_ERROR</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird von der Funktion <function>pg_result_status</function>
  zurückgegeben. Ein fataler Fehler ist aufgetreten.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_TRANSACTION_IDLE</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird von der Funktion <function>pg_transaction_status</function>
  zurückgegeben. Die Verbindung wird momentan nicht benutzt, es
  findet aktuell keine Transaktion statt.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_TRANSACTION_ACTIVE</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird von der Funktion <function>pg_transaction_status</function>
  zurückgegeben. Die Verbindung wird momentan benutzt. Es wird eine
  Abfrage  ausgeführt, die noch nicht beendet ist.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_TRANSACTION_INTRANS</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird von der Funktion <function>pg_transaction_status</function>
  zurückgegeben. Die Verbindung wird von einer Transaktion benutzt,
  ist aber momentan nicht aktiv.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_TRANSACTION_INERROR</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird von der Funktion <function>pg_transaction_status</function>
  zurückgegeben. Die Verbindung wurde von einer abgebrochenen
  Transaktion benutzt und ist momentan nicht aktiv.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_TRANSACTION_UNKNOWN</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird von der Funktion <function>pg_transaction_status</function>
  zurückgegeben. Die Verbindung ist ungültig.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_DIAG_SEVERITY</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird an die Funktion <function>pg_result_error_field</function>
  übergeben.
     Gibt den Schweregrad des Fehlers zurück. Die Feldinhalte sind <literal>ERROR</literal>,
     <literal>FATAL</literal> oder <literal>PANIC</literal>
  (in einer Fehlermeldung) oder <literal>WARNING</literal>,
  <literal>NOTICE</literal>, <literal>DEBUG</literal>,
     <literal>INFO</literal> oder <literal>LOG</literal>
  (in einer Notice-Meldung) oder eine lokalisierte Übersetzung davon.
  Dieses Feld ist immer verfügbar.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_DIAG_SQLSTATE</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird an die Funktion <function>pg_result_error_field</function>
  übergeben. Gibt den SQLSTATE-Code des Fehlers zurück. Der
  SQLSTATE-Code identifiziert den Typ des aufgetretenen Fehlers.
  Dieser kann von Anwendungen ausgewertet werden, um entsprechende
  Operationen auszuführen (beispielsweise Fehlerbehandlungsroutinen),
  als Reaktion auf einen bestimmten Datenbankfehler. dieses Feld kann
  nicht lokalisiert werden und ist immer verfügbar.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_DIAG_MESSAGE_PRIMARY</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird an die Funktion <function>pg_result_error_field</function>
  übergeben. Dies ist die primäre, für Menschen lesbare Fehlermeldung
  (normalerweise in einer Zeile) und ist immer verfügbar.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_DIAG_MESSAGE_DETAIL</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird an die Funktion <function>pg_result_error_field</function>
  übergeben. Detail: eine optionale untergeordnete Fehlermeldung, in
  der das Problem genauer beschrieben wird. Diese Meldung kann
  mehrere Zeilen lang sein.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_DIAG_MESSAGE_HINT</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird an die Funktion <function>pg_result_error_field</function>
  übergeben. Hint: ein optionaler Hinweis, wie mit dem Problem
  umzugehen ist. Dies wurde eingeführt, um (möglicherweise
  unpassende) Lösungen zur Verfügung zu stellen, anstatt harte
  Fakten, wie bei Details. Diese Meldung kann mehrere Zeilen lang
  sein.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_DIAG_STATEMENT_POSITION</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird an die Funktion <function>pg_result_error_field</function>
  übergeben. Dies ist ein String, der eine dezimale Integerzahl
  enthält, die die Cursorposition des originalen SQL-Strings angibt,
  an der ein Fehler auftrat. Das erste Zeichen hat die Position 1 und
  zur Bestimmung der Positionen werden Zeichen zugrundegelegt und
  nicht Bytes.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_DIAG_INTERNAL_POSITION</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird an die Funktion <function>pg_result_error_field</function>
  übergeben. Per Definition ist das dasselbe wie das Feld
  <constant>PG_DIAG_STATEMENT_POSITION</constant>, es wird aber
  benutzt, wenn die Cursorposition auf ein intern generiertes
  Kommando verweist und nicht auf eines, das vom Benutzer eingegeben
  wurde. Das Feld <constant>PG_DIAG_INTERNAL_QUERY</constant> wird
  immer gesetzt, wenn dieses Feld gesetzt ist.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_DIAG_INTERNAL_QUERY</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird an die Funktion <function>pg_result_error_field</function>
  übergeben. Dies ist der Text eines fehlgeschlagenen, intern
  generierten Kommandos. Das kann beispielsweise eine SQL-Abfrage
  sein, die von einer PL/pgSQL-Funktion gesendet wurde.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_DIAG_CONTEXT</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird an die Funktion <function>pg_result_error_field</function>
  übergeben. Dies gibt einen Hinweis auf den Kontext, in dem ein
  Fehler auftrat. Gegenwärtig sind Zurückverfolgungen des
  Aufrufstacks von Funktionen aktivierter prozeduraler Sprachen darin
  enthalten, sowie intern generierte Abfragen. Die Ablaufverfolgung
  enthält einen Eintrag pro Zeile, die neuesten Einträge zuerst.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_DIAG_SOURCE_FILE</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird an die Funktion <function>pg_result_error_field</function>
  übergeben. Dies ist der Name der Datei im PostgreSQL-Quellcode, bei
  der der Fehler gemeldet wurde.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_DIAG_SOURCE_LINE</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird an die Funktion <function>pg_result_error_field</function>
  übergeben. Die Zeilennummer in der Datei im PostgreSQL-Quellcode,
  bei der der Fehler gemeldet wurde.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_DIAG_SOURCE_FUNCTION</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird an die Funktion <function>pg_result_error_field</function>
  übergeben. Der Name der Funktion im PostgreSQL-Quellcode, bei der
  der Fehler gemeldet wurde.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry>
   <term>
    <constant>PGSQL_ERRORS_TERSE</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird an die Funktion <function>pg_set_error_verbosity</function>
  übergeben. Damit wird festgelegt, dass Fehlermeldungen die Felder
  severity, primary text und position enthalten. Normalerweise passt
  das alles in eine Zeile.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_ERRORS_DEFAULT</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird an die Funktion <function>pg_set_error_verbosity</function>
  übergeben. Die Standardeinstellung gibt Meldungen mit den oben
  beschriebenen Inhalten zurück, zuzüglich aller Details, Hinweise
  und Kontext-Informationen. (Dies kann mehrere Zeilen umfassen.)
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_ERRORS_VERBOSE</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird an die Funktion <function>pg_set_error_verbosity</function>
  übergeben. In diesem Modus werden alle verfügbaren Felder
  zurückgegeben.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry>
   <term>
    <constant>PGSQL_STATUS_LONG</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird an die Funktion <function>pg_result_status</function>
  übergeben. Zeigt an, dass ein numerischer Ergebniscode gewünscht
  ist.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_STATUS_STRING</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird an die Funktion <function>pg_result_status</function>
  übergeben. Zeigt an, dass eine textuelles Ergebnis gewünscht ist.
    </simpara>
   </listitem>
  </varlistentry>

  <varlistentry>
   <term>
    <constant>PGSQL_CONV_IGNORE_DEFAULT</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird an die Funktion <function>pg_convert</function> übergeben.
  Während der Konversion werden Standardwerte in der Tabelle
  ignoriert.
    </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_CONV_FORCE_NULL</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird an die Funktion <function>pg_convert</function> übergeben.
     Anstelle eines leeren Strings <type>string</type> wird der SQL
  Nullwert <literal>NULL</literal> benutzt.
 </simpara>
   </listitem>
  </varlistentry>
  <varlistentry>
   <term>
    <constant>PGSQL_CONV_IGNORE_DEFAULT</constant>
    (<type>integer</type>)
   </term>
   <listitem>
    <simpara>
     Wird an die Funktion <function>pg_convert</function> übergeben.
     Die Konversion von &null; in SQL <literal>NOT NULL</literal>-Spalten wird ignoriert.
    </simpara>
   </listitem>
  </varlistentry>

 </variablelist>
</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
