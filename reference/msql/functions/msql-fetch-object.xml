<?xml version='1.0' encoding='utf-8' ?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: conni Status: ready -->
<refentry xml:id="function.msql-fetch-object" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>msql_fetch_object</refname>
  <refpurpose>Holt eine Zeile als Objekt</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>object</type><methodname>msql_fetch_object</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>msql_fetch_object</function> ist ähnlich wie
   <function>msql_fetch_array</function>, mit einem Unterschied -
   anstelle eines Arrays wird ein Objekt zurückgegeben. Indirekt bdeutet
   das, dass man auf die Daten nur über die Feldnamen zugreifen kann,
   und nicht über ihre Feldindizes. (Ziffern sind unzulässige Namen für
   Eigenschaften.)
  </para>
  <para>
   Von der Geschwindigkeit her ist die Funktion identisch zu
   <function>msql_fetch_array</function>, und fast so schnell wie
   <function>msql_fetch_row</function> (der Unterschied ist unerheblich).
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &msql.result.description;
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein Objekt zurück, dessen Eigenschaften mit den Spalten der
   gelesenen Zeile korrespondieren oder &false;, falls keine Zeilen mehr
   gelesen werden können.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>msql_fetch_object</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$con = msql_connect();
if (!$con) {
    die('Verbindungsaufbau fehlgeschlagen: ' . msql_error());
}

if (!msql_select_db('test', $con)) {
    die('Fehler beim Auswählen der Datenbank: ' . msql_error());
}

$result = msql_query('SELECT id, name FROM people', $con);
if (!$result) {
    die('Konnte die Abfrage nicht ausführen: ' . msql_error());
}

while ($row = msql_fetch_object($result, MSQL_ASSOC)) {
    echo $row->id . ': ' . $row->name . "\n";
}

msql_free_result($result);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.3.11 und 5.0.4 </entry>
       <entry>
        Ein Fehler beim Auslesen von Spalten, die &null; enthielten, wurde
      behoben. Solche Spalten waren nicht im Ergebnisarray enthalten.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>msql_fetch_array</function></member>
    <member><function>msql_fetch_row</function></member>
    <member><function>msql_data_seek</function></member>
    <member><function>msql_result</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
