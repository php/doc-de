<?xml version='1.0' encoding='iso-8859-1' ?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.6 Maintainer: conni Status: ready -->
<refentry xml:id="function.msql-pconnect" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>msql_pconnect</refname>
  <refpurpose>Öffnet eine persistente mSQL Verbindung</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>msql_pconnect</methodname>
   <methodparam choice="opt"><type>string</type><parameter>hostname</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>username</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>password</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>msql_pconnect</function> verhält sich sehr ähnlich wie
   <function>msql_connect</function>, mit zwei grossen Unterschieden.
  </para>
  <para>
   Erstens, wenn die Verbindung aufgebaut wird, prüft die Funktion
   zuerst, ob eine geöffnete persistente Verbindung zu demselben Host
   besteht. Wird eine Verbindung gefunden, wird deren Verbindungskennung
   zurückgegeben anstatt eine neue Verbindung aufzubauen.
  </para>
  <para>
   Zweitens, die Verbindung zum mSQL-Server wird nicht geschlossen, wenn
   die Ausführung des Skripts beendet ist. Stattdessen bleibt die
   Verbindung für den späteren Gebrauch offen.
   (<function>msql_close</function> schliesst keine Verbindungen, die
   mit <function>msql_pconnect</function> erzeugt wurden).
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>hostname</parameter></term>
     <listitem>
      <para>
       Der Hostname kann auch eine Portnummer enthalten, z. B.
	   <literal>hostname,port</literal>.
      </para>
      <para>
       Falls nichts angegeben wurde, wird die Verbindung über einen
	   Unix-Domain-Socket aufgebaut, die effizienter ist, als eine
	   Verbindung über einen lokalen TCP-Socket. 
      </para>
      <note>
       <simpara>
        Obwohl diese Funktion einen Doppelpunkt (<literal>:</literal>) als
		Trennzeichen zwischen Host und port akzeptiert, ist die bevorzugte Schreibweise mit einem Komma (<literal>,</literal>). 
       </simpara>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>username</parameter></term>
     <listitem>
      <para>
       Der mSQL Benutzername.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>password</parameter></term>
     <listitem>
      <para>
       Das mSQL Passwort für <parameter>username</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Bei Erfolg wird eine positive mSQL-Verbindungskennung zurückgegeben 
   oder &false;, falls ein Fehler auftrat.
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>msql_connect</function></member>
    <member><function>msql_close</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
