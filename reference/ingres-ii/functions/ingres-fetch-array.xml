<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./de/functions/ingres_ii.xml, last change in rev 1.1 -->
<!-- last change to 'ingres-fetch-array' in en/ tree in rev 1.1 -->
<!-- EN-Revision: 1.2 Maintainer: conni Status: ready -->
<!-- OLD-Revision: 1.10/EN.1.1 -->
  <refentry id="function.ingres-fetch-array">
   <refnamediv>
    <refname>ingres_fetch_array</refname>
    <refpurpose>
     Liest eine Zeile der Ergebnismenge in ein Array ein
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>array</type><methodname>ingres_fetch_array</methodname>
      <methodparam choice="opt"><type>int</type><parameter>result_type</parameter></methodparam>
      <methodparam choice="opt"><type>resource</type><parameter>link</parameter></methodparam>
     </methodsynopsis>
    &warn.experimental.func;
    <para>
     <function>ingres_fetch_array</function> Gibt ein Array zurück, das
     die die entsprechende Zeile der Ergebnismenge enthält oder &false;
     falls das die Ergebnismenge keine Zeilen mehr enthält.
    </para>
    <para>
     Diese Funktion ist eine erweiterte Version der Funktion
     <function>ingres_fetch_row</function>. Zusätzlich zur Speicherung
     der Daten unter numerischen Indizes  werden die Daten auch unter
     assoziativen Indizes im Ergebnisarray gespeichert, in dem die
     Feldnamen als Schlüssel benutzt werden.
    </para>
    <para>
     Falls eine oder mehrere Spalten der Ergebnismenge dieselben
     Feldnamen haben, bekommt die letzte Spalte die Priorität. Um auf
     die anderen Spalten zuzugreifen, müssen sie entweder den
     numerischen Index der Spalte benutzen oder Aliase für die Spalten
     machen.
     <informalexample>
      <programlisting>
ingres_query(select t1.f1 as foo t2.f1 as bar from t1, t2);
$result = ingres_fetch_array();
$foo = $result["foo"];
$bar = $result["bar"];
      </programlisting>
     </informalexample>
    </para>
    <para>
     <parameter>result_type</parameter> kann INGRES_NUM für ein
     numerisches Array sein oder INGRES_ASSOC für ein assoziatives
     Array, oder INGRES_BOTH (Standard).
    </para>
    <para>
     Von der Geschwindigkeit her ist diese Funktion identisch zu
     <function>ingres_fetch_object</function>, und fast so schnell wie
     <function>ingres_fetch_row</function> (der Unterschied ist zu
     vernachlässigen).
    </para>
    <para>
     <example>
      <title><function>ingres_fetch_array</function> Beispiel</title>
      <programlisting role="php">
&lt;?php
ingres_connect ($database, $user, $password);

ingres_query ("select * from table");
while ($row = ingres_fetch_array()) {
    echo $row["user_id"];  # benutzt ein assoziatives Array
    echo $row["fullname"];
    echo $row[1];          # benutzt ein numerisches Array
    echo $row[2];
}
?>
      </programlisting>
     </example>
    </para>
    <para>
     See also
     <function>ingres_query</function>,
     <function>ingres_num_fields</function>,
     <function>ingres_field_name</function>,
     <function>ingres_fetch_object</function> und
     <function>ingres_fetch_row</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
