<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.1 Maintainer: conni Status: ready -->
<refentry xml:id="function.ingres-prepare" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ingres_prepare</refname>
  <refpurpose>Bereitet eine Abfrage zur späteren Ausführung vor</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>ingres_prepare</methodname>
   <methodparam><type>resource</type><parameter>link</parameter></methodparam>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
  </methodsynopsis>
  <para>
   Bereitet eine Abfrage zur Ausführung mit <function>ingres_execute</function> vor.
  </para>
  <para>
   Die Abfrage wird Teil der aktuell geöffneten Transaktion. Falls es aktuell
   keine offene Transaktion gibt, wird mit <function>ingres_query</function>
   eine geöffnet. Geschlossen wird sie entweder mit <function>ingres_commit</function>,
   wobei die gemachten Änderungen in die Datenbank geschrieben werden, oder
   mit <function>ingres_rollback</function>, wobei die Änderungen verworfen
   werden. Wenn das Skript zuende ist, wird jede geöffnete Transaktion zurückgesetzt
   (indem die <function>ingres_rollback</function> aufgerufen wird). Sie können
   vor dem Öffnen einer neuen Transaktion <function>ingres_autocommit</function>
   ausführen, danach werden alle Änderungen sofort nach der Ausführung einer
   SQL-Abfrage committet.
  </para>

  <note>
   <title>Verwandte Konfigurationen</title>
   <para>
    Siehe auch die Direktiven <link linkend="ini.ingres.describe">ingres.describe</link>,
    <link linkend="ini.ingres.scrollable">ingres.scrollable</link> und
    <link linkend="ini.ingres.utf8">ingres.utf8</link> der
    <link linkend="ingres.configuration">Laufzeit-Konfiguration</link>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>link</parameter></term>
     <listitem>
      <para>
       Die Verbindungskennung
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       Eine gültige SQL-Abfrage (siehe im <emphasis>SQL reference
       guide</emphasis> der Ingres-Dokumentation).
       Bei der Funktion <function>ingres_query</function> finden Sie bei
       dem Parameter <link linkend="function.ingres-query.query">query</link>
       eine Liste der SQL-Kommandos, die nicht mit <function>ingres_prepare</function>
       ausgeführt werden können.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>ingres_prepare</function> gibt eine Ergebniskennung zurück,
   die in der Funktion <function>ingres_execute</function> verwendet wird,
   um die Abfrage auszuführen. Ob dabei ein Fehler auftrat, kann mit
   <function>ingres_errno</function>, <function>ingres_error</function> oder
   <function>ingres_errsqlstate</function> ermittelt werden.
  </para>
 </refsect1>

<!--
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>A simple select using <function>ingres_query</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$link = ingres_connect("demodb");

$result = ingres_query($link, "select * from user_profile");
while ($row = ingres_fetch_row($result)) {
    echo $row[1];
    echo $row[2];
}
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Passing query parameters to <function>ingres_query</function></title>
    <programlisting role="php">
<![CDATA[
<?php
$link = ingres_connect("demodb");

$params[] = "Emma";
$query = "select * from user_profile where up_first = ?"
$result = ingres_query($link, $query, $params);
while ($row = ingres_fetch_row($result)) {
    echo $row[1];
    echo $row[2];
}
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Inserting a BLOB with parameter types</title>
    <programlisting role="php">
<![CDATA[
<?php
$link = ingres_connect("demodb");

//Open a photo
$fh = fopen("photo.jpg","r");
$blob_data = stream_get_contents($fh);
fclose($fh);

//Prepare parameters
$params[] = $blob_data;
$params[] = 1201;

//Define parameter types
$param_types = "Bi";

$query = "update user_profile set up_image = ? where up_id = ?";
$result = ingres_query($link, $query , $params, $param_types);

if (ingres_errno())
{
    echo ingres_errno() . "-" . ingres_error() . "\n";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 -->

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ingres_unbuffered_query</function></member>
    <member><function>ingres_fetch_array</function></member>
    <member><function>ingres_fetch_object</function></member>
    <member><function>ingres_fetch_row</function></member>
    <member><function>ingres_commit</function></member>
    <member><function>ingres_rollback</function></member>
    <member><function>ingres_autocommit</function></member>
    <member><function>ingres_set_environment</function></member>
    <member><function>ingres_errno</function></member>
    <member><function>ingres_error</function></member>
   </simplelist>
  </para>
 </refsect1>


</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
