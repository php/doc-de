<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.29 Maintainer: wiesemann Status: ready -->
  <refentry id="function.mail">
   <refnamediv>
    <refname>mail</refname>
    <refpurpose>Sende Mail</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>bool</type><methodname>mail</methodname>
      <methodparam><type>string</type><parameter>to</parameter></methodparam>
      <methodparam><type>string</type><parameter>subject</parameter></methodparam>
      <methodparam><type>string</type><parameter>message</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>additional_headers</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>additional_parameters</parameter></methodparam>
     </methodsynopsis>
    <simpara>
      <function>mail</function> veschickt die Nachricht in
      <parameter>message</parameter> an den Empfänger in
      <parameter>to</parameter>. Mehrere Empfänger können angegeben werden,
      indem ein Komma zwischen die Adressen in
      <parameter>to</parameter> gesetzt wird.
      E-Mails mit angehängten Dateien und speziellen Inhaltstypen können mit
      dieser Funktion gesendet werden. Dies wird durch MIME-Kodierung ermöglicht.
      Für weitere Informationen siehe diesen <ulink
      url="&url.email.mime.zend;">Zend-Artikel</ulink> oder die <ulink
      url="&url.pear.package;Mail_Mime">PEAR Mime-Klassen</ulink>.
     </simpara>     
     <simpara>
     Die folgenden RFCS könnten auch hilfreich sein:
     <ulink url="&url.rfc;1896">RFC 1896</ulink>,
     <ulink url="&url.rfc;2045">RFC 2045</ulink>,
     <ulink url="&url.rfc;2046">RFC 2046</ulink>,
     <ulink url="&url.rfc;2047">RFC 2047</ulink>,
     <ulink url="&url.rfc;2048">RFC 2048</ulink> und
     <ulink url="&url.rfc;2049">RFC 2049</ulink>.
    </simpara>
    <para>
     <function>mail</function> gibt &true; zurück, wenn die Mail erfolgreich
     für den Versand akzeptiert wurde, sonst &false;.
    </para>
    <warning>
     <para>
      Die Windows-Implementierung der <function>mail</function>-Funktion
      unterscheidet sich stark von der Unix-Implemtierung. Zum einen benutzt
      sie keine lokales Programm, um die Mails zu erstellen, sondern sie
      arbeitet auf Sockets. D.h., dass ein <literal>MTA</literal> benötigt
      wird, der auf einem Netzwerk-Socket lauscht (entweder auf dem eigenen
      oder einem entfernten Rechner). Zum anderen werden die
      benutzerdefinierten Header wie <literal>From:</literal>,
      <literal>Cc:</literal>, <literal>Bcc:</literal> und
      <literal>Date:</literal> <emphasis role="strong">nicht</emphasis>
      direkt durch den <literal>MTA</literal> interpretiert, sondern zunächst
      von PHP geparst. PHP &lt; 4.3
      unterstützte nur den <literal>Cc:</literal>-Header (und berücksichtigte
      die Groß-/Kleinschreibung). PHP &gt;= 4.3
      unterstützt alle genannten Header und berücksichtigt nicht mehr die
      Groß-/Kleinschreibung.
     </para>
    </warning>
    <para>
     <example>
      <title>Verschicken von Mail.</title>
      <programlisting role="php">
<![CDATA[
<?php
mail("joecool@example.com", "Betreff", "Zeile 1\nZeile 2\nZeile 3");
?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     Wenn ein vierter String-Parameter übergeben wird, dann wird dieser
     an das Ende des Mail-Headers gehängt. Mehrfache Header werden
     durch einen Zeilenumbruch getrennt.
    </simpara>
    <note>
     <para>
     Sie müssen die Header mit <literal>\r\n</literal> trennen, auch wenn
     einige Unix-MTAs automatisch <literal>\n</literal> durch
     <literal>\r\n</literal> ersetzen (was zu doppeltem
     <literal>\r</literal> führt, wenn <literal>\r\n</literal>
     verwendet wird).
     </para>
    </note>
    <para>
     <example>
      <title>Verschicke Mail mit zusätzlichen Headern.</title>
      <programlisting role="php">
<![CDATA[
<?php
mail("nobody@example.com", "Betreff", $message,
     "From: webmaster@{$_SERVER['SERVER_NAME']}\r\n" .
     "Reply-To: webmaster@{$_SERVER['SERVER_NAME']}\r\n" .
     "X-Mailer: PHP/" . phpversion());
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Der Parameter <parameter>additional_parameters</parameter> kann benutzt
     werden, um zusätzliche Parameter an das Programm zu übergeben, das
     für den Mail-Versand über die Option <literal>sendmail_path</literal>
     konfiguriert wurde. Zum Beispiel kann dies genutzt werden, um die
     Envelope-Absenderadresse anzugeben, wenn sendmail benutzt wird
     (Option <literal>-f</literal>). Eventuell müssen Sie den Benutzer,
     unter dem Ihr Webserver läuft, als sendmail-Option übergeben, um zu
     verhindern, dass Ihrer Mail ein 'X-Warning'-Header angehängt wird,
     wenn Sie die Envelope-Absenderadresse auf diese Art setzen.
     <example>
      <title>Verschicke Mail mit zusätzlichen Headern und einem zusätzlichen Kommandozeilen-Parameter.</title>
      <programlisting role="php">
<![CDATA[
<?php
mail("nobody@example.com", "Betreff", $message,
     "From: webmaster@{$_SERVER['SERVER_NAME']}", "-fwebmaster@{$_SERVER['SERVER_NAME']}");
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      Der fünfte Parameter wurde in PHP 4.0.5 hinzugefügt. Seit PHP 4.2.3 ist
      dieser Parameter im <link linkend="ini.safe-mode">safe_mode</link>
      deaktiviert; <function>mail</function> gibt eine Warnung aus und gibt
      &false; zurück, wenn Sie den Parameter trotzdem verwenden.
     </para>
    </note>
    <para>
     Sie können einfache String-Zusammensetzungen verwenden, um komplexe
     Mails zu erstellen.
     <example>
      <title>Verschicke komplexe Mail.</title>
      <programlisting role="php">
<![CDATA[
<?php
/* Empfänger */
$to  = "mary@example.com" . ", " ; // beachten Sie das Komma
$to .= "kelly@example.com";

/* Betreff */
$subject = "Geburtstags-Erinnerung für August";

/* Nachricht */
$message = '
<html>
<head>
 <title>Geburtstags-Erinnerung für August</title>
</head>
<body>
<p>Hier sind die Geburtstage im August!</p>
<table>
 <tr>
  <th>Person</th><th>Tag</th><th>Monat</th><th>Jahr</th>
 </tr>
 <tr>
  <td>Joe</td><td>3.</td><td>August</td><td>1970</td>
 </tr>
 <tr>
  <td>Sally</td><td>17.</td><td>August</td><td>1973</td>
 </tr>
</table>
</body>
</html>
';

/* Um eine HTML-Mail zu senden, können Sie den den "Content-type"-Header.
   setzen */
$headers  = "MIME-Version: 1.0\r\n";
$headers .= "Content-type: text/html; charset=iso-8859-1\r\n";

/* zusätzliche Header */
$headers .= "To: Mary <mary@example.com>, Kelly <kelly@example.com>\r\n";
$headers .= "From: Geburtstags-Erinnerung <geburtstag@example.com>\r\n";
$headers .= "Cc: geburtstagsarchiv@example.com\r\n";
$headers .= "Bcc: geburtstagscheck@example.com\r\n";

/* Verschicken der Mail */
mail($to, $subject, $message, $headers);
?>
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
       Achten Sie darauf, dass Sie keine Zeilenumbruch-Zeichen
       in den Parametern <parameter>to</parameter> oder
       <parameter>subject</parameter> verwenden, da sonst Ihre Mail
       eventuell nicht korrekt gesendet werden kann.
     </para>
    </note>
    <note>
     <para>
      Der <parameter>to</parameter>-Parameter sollte nicht in der Form
      &quot;irgendwas &lt;irgendwer@example.com&gt;&quot; sein, da
      dies von PHP möglicherweise nicht korrekt an den MTA übergeben
      werden kann.
     </para>
    </note>
    <para>
     Siehe auch <function>imap_mail</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
