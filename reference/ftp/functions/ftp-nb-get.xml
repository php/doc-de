<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 309282 Maintainer: wiesemann Status: ready -->
<refentry xml:id="function.ftp-nb-get" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ftp_nb_get</refname>
  <refpurpose>Überträgt eine Datei von dem FTP-Server und speichert sie lokal (nicht blockierend)</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>ftp_nb_get</methodname>
   <methodparam><type>resource</type><parameter>ftp_stream</parameter></methodparam>
   <methodparam><type>string</type><parameter>local_file</parameter></methodparam>
   <methodparam><type>string</type><parameter>remote_file</parameter></methodparam>
   <methodparam><type>int</type><parameter>mode</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>resumepos</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>ftp_nb_get</function> retrieves a remote file from the FTP server,
   and saves it into a local file.
  </para>
  <para>
   Der Unterscheid zwischen dieser Funktion und <function>ftp_get</function>
   ist, dass diese Funktion die Datei asynchron überträgt, so dass Ihr
   Programm noch andere Operationen ausführen kann während die Datei
   heruntergeladen wird.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>ftp_stream</parameter></term>
     <listitem>
      <para>
       Der Verbindungshandler der FTP-Verbindung.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>local_file</parameter></term>
     <listitem>
      <para>
       Der Pfad zur lokalen Datei (wird überschrieben falls die Datei
       schon existiert).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>remote_file</parameter></term>
     <listitem>
      <para>
       Der Pfad zur Datei auf dem Server.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       Der Transfer-Modus. Muss entweder <constant>FTP_ASCII</constant>
       oder <constant>FTP_BINARY</constant> sein.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>resumepos</parameter></term>
     <listitem>
      <para>
       Die Position in der entfernten Datei, an der der Download beginnen soll.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt <constant>FTP_FAILED</constant> oder <constant>FTP_FINISHED</constant>
   oder <constant>FTP_MOREDATA</constant> zurück.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>ftp_nb_get</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php

// Download initialisieren
$ret = ftp_nb_get($my_connection, "test", "README", FTP_BINARY);
while ($ret == FTP_MOREDATA) {

   // Irgendwas machen
   echo ".";

   // Download fortsetzen
   $ret = ftp_nb_continue($my_connection);
}
if ($ret != FTP_FINISHED) {
   echo "Es gab einen Fehler bei der Übertragung.";
   exit(1);
}
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>Einen Download mit <function>ftp_nb_get</function> fortsetzen</title>
    <programlisting role="php">
<![CDATA[
<?php

// Initialisieren
$ret = ftp_nb_get($my_connection, "test", "README", FTP_BINARY,
                      filesize("test"));
// ODER: $ret = ftp_nb_get($my_connection, "test", "README", FTP_BINARY,
// FTP_AUTORESUME);
while ($ret == FTP_MOREDATA) {

   // Irgendwas machen
   echo ".";

   // Download fortsetzen
   $ret = ftp_nb_continue($my_connection);
}
if ($ret != FTP_FINISHED) {
   echo "Es gab einen Fehler bei der Übertragung.";
   exit(1);
}
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>
     Einen Download mit Hilfe von <function>ftp_nb_get</function>
     an Position 100 fortsetzen und in eine neue Datei schreiben
    </title>
    <programlisting role="php">
<![CDATA[
<?php

// Autoseek deaktivieren
ftp_set_option($my_connection, FTP_AUTOSEEK, false);

// Initialisieren
$ret = ftp_nb_get($my_connection, "newfile", "README", FTP_BINARY, 100);
while ($ret == FTP_MOREDATA) {

   /* ... */

   // Download fortsetzen
   $ret = ftp_nb_continue($my_connection);
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   In dem obigen Beispiel ist <filename>newfile</filename> 100 Bytes
   kleiner als <filename>README</filename> auf dem FTP-Server, weil
   wir erst beim Offset 100 angefangen haben zu lesen. Hätten wir
   <constant>FTP_AUTOSEEK</constant> nicht deaktiviert, so bestünden
   die ersten 100 Bytes von <filename>newfile</filename> aus
   <literal>'\0'</literal>.
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ftp_nb_fget</function></member>
    <member><function>ftp_nb_continue</function></member>
    <member><function>ftp_fget</function></member>
    <member><function>ftp_get</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
