<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.7 Maintainer: samesch Status: ready -->
 <reference id="ref.cpdf">
  <title>ClibPDF Funktionen</title>
  <titleabbrev>ClibPDF</titleabbrev>

  <partintro>

   <section id="cpdf.intro">
    &reftitle.intro;
    <para>
     Mit der ClibPDF können Sie PDF-Dokumente mit PHP erstellen.
     Funktionalität und API der ClibPDF sind der <link
     linkend="ref.pdf">PDFlib</link> ähnlich. Diese Dokumentation
     sollten Sie zusammen mit dem ClibPDF-Handbuch lesen, weil
     letzteres diese Bibliothek viel ausführlicher erklärt.
    </para>
    <para>
     Die Namen vieler Funktionen in der ClibPDF, im PHP-Modul und in
     der <link linkend="ref.pdf">PDFlib</link> sind gleich. Außer
     <function>cpdf_open</function> nehmen alle Funktionen die
     Bezeichnung des Dokuments als ihren ersten Parameter.
    </para>
    <para>
     Diese Bezeichnung wird gegenwärtig nicht intern verwendet, weil
     ClibPDF die gleichzeitige Erzeugung mehrerer PDF-Dokumente nicht
     unterstützt. Da das Ergebnis nicht vorhersehbar ist, sollten Sie
     es am besten nicht einmal testen. Die Folgen, die das in einer
     multi-threaded Umgebung hätte, kann ich nicht abschätzen. Laut
     ClibPDF-Autor wird sich das in einer der nächsten Versionen
     ändern (als dieses geschrieben wurde, war Version 1.10 aktuell).
     Verwenden Sie das pdflib-Modul, wenn Sie diese Funktionalität
     benötigen.
    </para>
    <para>
     Eine nette Eigenschaft der ClibPDF (und der <link
     linkend="ref.pdf">PDFlib</link>) ist die Möglichkeit, das
     PDF-Dokument vollständig im Speicher zu erzeugen, ohne temporäre
     Dateien zu verwenden. Sie bietet auch die Möglichkeit,
     Koordinaten in einer vordefinierten Längeneinheit zu übergeben.
     Dies ist eine praktische Fähigkeit, die bei Verwendung der <link
     linkend="ref.pdf">PDFlib</link> aber auch mit
     <function>pdf_translate</function> simuliert werden kann.
    </para>
    <para>
     Eine weitere nette Eigenschaft von ClibPDF ist die Tatsache, dass
     jede Seite jederzeit geändert werden kann, selbst wenn schon eine
     neue Seite geöffnet wurde. Die Funktion
     <function>cpdf_set_current_page</function> erlaubt es, die
     aktuelle Seite zu verlassen und mit den Änderungen einer anderen
     Seite fortzufahren.
    </para>
    <para>
     Die meisten Funktionen sind ziemlich einfach zu benutzen. Der
     schwierigste Teil ist wahrscheinlich die Erzeugung eines sehr
     einfachen PDF-Dokuments überhaupt. Das folgende Beispiel sollte
     für Sie eine gute Starthilfe sein. Es erzeugt ein Dokument mit
     einer Seite. Die Seite enthält den Umriss des Textes
     "Times-Roman" in 30-Punkt-Schrift. Der Text ist unterstrichen.
    </para>
   </section>

   <section id="cpdf.requirements">
    &reftitle.required;
    <para>
     Um die ClibPDF-Funktionen benutzen zu können, müssen Sie das
     ClibPDF-Paket installieren. Es ist zum Herunterladen erhältlich
     von <ulink url="&url.fastio;">FastIO</ulink>, aber für deren
     kommerzielle Verwendung ist es erforderlich, dass Sie eine Lizenz
     erwerben. Für PHP wird cpdflib &gt;= 2 benötigt.
    </para>
   </section>

   &reference.cpdf.configure;

   <section id="cpdf.configuration">
    &reftitle.runtime;
    &no.config;
   </section>

   &reference.cpdf.constants;

   <section id="cpdf.examples">
    &reftitle.examples;
    <example>
     <title>Ein einfaches ClibPDF-Beispiel</title>
     <programlisting>
<![CDATA[
<?php
$cpdf = cpdf_open(0);
cpdf_page_init($cpdf, 1, 0, 595, 842, 1.0);
cpdf_add_outline($cpdf, 0, 0, 0, 1, "Seite 1");
cpdf_begin_text($cpdf);
cpdf_set_font($cpdf, "Times-Roman", 30, "WinAnsiEncoding");
cpdf_set_text_rendering($cpdf, 1);
cpdf_text($cpdf, "Times Roman outlined", 50, 750);
cpdf_end_text($cpdf);	
cpdf_moveto($cpdf, 50, 740);
cpdf_lineto($cpdf, 330, 740);
cpdf_stroke($cpdf);
cpdf_finalize($cpdf);
Header("Content-type: application/pdf");
cpdf_output_buffer($cpdf);
cpdf_close($cpdf);
?>
]]>
     </programlisting>
    </example>
    <para>
     Die pdflib-Distribution enthält ein komplexeres Beispiel, das
     eine Reihe von Seiten mit einer Analoguhr erzeugt. Hier ist
     dieses Beispiel, das unter Verwendung der ClibPDF-Erweiterung in
     PHP konvertiert wurde:
    </para>
    <example>
     <title>pdfclock-Beispiel der pdflib 2.0 Distribution</title>
     <programlisting>
<![CDATA[
<?php
$radius = 200;
$margin = 20;
$pagecount = 40;

$pdf = cpdf_open(0);
cpdf_set_creator($pdf, "pdf_clock.php3");
cpdf_set_title($pdf, "Analog Clock");
  
while($pagecount-- > 0) {
  cpdf_page_init($pdf, $pagecount+1, 0, 2 * ($radius + $margin), 2 * ($radius + $margin), 1.0);
  
  cpdf_set_page_animation($pdf, 4, 0.5, 0, 0, 0);  /* wipe */
  
  cpdf_translate($pdf, $radius + $margin, $radius + $margin);
  cpdf_save($pdf);
  cpdf_setrgbcolor($pdf, 0.0, 0.0, 1.0);
  
  /* minute strokes */
  cpdf_setlinewidth($pdf, 2.0);
  for ($alpha = 0; $alpha < 360; $alpha += 6)
    {
    cpdf_rotate($pdf, 6.0);
    cpdf_moveto($pdf, $radius, 0.0);
    cpdf_lineto($pdf, $radius-$margin/3, 0.0);
    cpdf_stroke($pdf);
    }
  
  cpdf_restore($pdf);
  cpdf_save($pdf);
 
  /* 5 minute strokes */
  cpdf_setlinewidth($pdf, 3.0);
  for ($alpha = 0; $alpha < 360; $alpha += 30)
  {
    cpdf_rotate($pdf, 30.0);
    cpdf_moveto($pdf, $radius, 0.0);
    cpdf_lineto($pdf, $radius-$margin, 0.0);
    cpdf_stroke($pdf);
  }

  $ltime = getdate();

  /* draw hour hand */
  cpdf_save($pdf);
  cpdf_rotate($pdf, -(($ltime['minutes']/60.0) + $ltime['hours'] - 3.0) * 30.0);
  cpdf_moveto($pdf, -$radius/10, -$radius/20);
  cpdf_lineto($pdf, $radius/2, 0.0);
  cpdf_lineto($pdf, -$radius/10, $radius/20);
  cpdf_closepath($pdf);
  cpdf_fill($pdf);
  cpdf_restore($pdf);

  /* draw minute hand */
  cpdf_save($pdf);
  cpdf_rotate($pdf, -(($ltime['seconds']/60.0) + $ltime['minutes'] - 15.0) * 6.0);
  cpdf_moveto($pdf, -$radius/10, -$radius/20);
  cpdf_lineto($pdf, $radius * 0.8, 0.0);
  cpdf_lineto($pdf, -$radius/10, $radius/20);
  cpdf_closepath($pdf);
  cpdf_fill($pdf);
  cpdf_restore($pdf);

  /* draw second hand */
  cpdf_setrgbcolor($pdf, 1.0, 0.0, 0.0);
  cpdf_setlinewidth($pdf, 2);
  cpdf_save($pdf);
  cpdf_rotate($pdf, -(($ltime['seconds'] - 15.0) * 6.0));
  cpdf_moveto($pdf, -$radius/5, 0.0);
  cpdf_lineto($pdf, $radius, 0.0);
  cpdf_stroke($pdf);
  cpdf_restore($pdf);

  /* draw little circle at center */
  cpdf_circle($pdf, 0, 0, $radius/30);
  cpdf_fill($pdf);

  cpdf_restore($pdf);

  cpdf_finalize_page($pdf, $pagecount+1);
}

cpdf_finalize($pdf);
Header("Content-type: application/pdf");
cpdf_output_buffer($pdf);
cpdf_close($pdf);
?>
]]>
     </programlisting>
    </example>
   </section>

   <section id="cpdf.seealso">
    &reftitle.seealso;
    <para>
     Siehe auch die Dokumentation der <link
     linkend="ref.pdf">PDFlib</link>-Erweiterung.
    </para>
   </section>

  </partintro>

&reference.cpdf.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

