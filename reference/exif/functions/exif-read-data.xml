<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.12 Maintainer: oliver Status: ready -->
<!-- splitted from ./en/functions/image.xml, last change in rev 1.78 -->
<refentry xml:id="function.exif-read-data" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>exif_read_data</refname>
  <refpurpose>Liest die <acronym>EXIF</acronym>-Header von <acronym>JPEG</acronym> oder <acronym>TIFF</acronym> aus.</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>exif_read_data</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>sections</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>arrays</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>thumbnail</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>exif_read_data</function> liest die
   <acronym>EXIF</acronym>-Header aus einer <acronym>JPEG</acronym>- oder
   <acronym>TIFF</acronym>-Bilddatei aus. Auf diese Weise kann man die
   Metadaten auslesen, die mit Digitalkameras erzeugt wurden.
  </para>
  <para>
   Exif-Header kommen normalerweise bei JPEG/TIFF-Bildern vor, die von 
   Digitalkameras gemacht wurden. Leider hat jeder Kamerahersteller eine 
   andere Vorstellung davon, wie man die Bilder beschreibt. Man kann sich 
   also nicht darauf verlassen, das ein bestimmter Exif-Header vorhanden ist.
  </para>
  <para>
   <literal>Height</literal> und <literal>Width</literal> werden genauso wie 
   <function>getimagesize</function> berechnet. Diese Werte dürfen also nicht 
   Teil von irgendwelchen Headern sein, die zurückgegeben werden. Ferner ist 
   <literal>html</literal> ein Höhen/Breiten-Textstring für den Gebrauch in 
   normalem <acronym>HTML</acronym>.
  </para>
  <para>
   Wenn ein Exif-Header ein Copyrightvermerk beinhaltet, kann dieser selbst 
   aus zwei Werten bestehen. Da die Lösung im Exif 2.10 Standard nicht 
   konsistent ist, liefert der COMPUTED-Bereich die beiden Einträge 
   <literal>Copyright.Photographer</literal> und <literal>Copyright.Editor</literal>, 
   während der IFD0-Bereich aus einem Byte-Array besteht, der die beiden Werte 
   duch ein NULL-Zeichen trennt. Wenn der Datentyp falsch ist, ist nur der 
   erste Eintrag vorhanden (normales Verhalten von Exif). COMPUTED beinhaltet 
   auch ein <literal>Copyright</literal>-Eintrag. Dieser entspricht entweder 
   dem originalen Copyright-String oder er besteht aus einer kommaseparierten 
   Liste von Foto- und Herausgeber-Copyright.
  </para>
  <para>
   Der Tag UserComment besitzt das gleiche Problem, wie das Copyright-Tag. Er 
   kann zwei Werte speichern. Als erstes die benutze Kodierung und als zweites 
   den Wert selbst. Wenn dem so ist, enthält der IFD-Bereich die Kodierung oder 
   ein Byte-Array. Der COMPUTED-Bereich speichert die beiden Einträge 
   <literal>UserCommentEncoding</literal> und <literal>UserComment</literal>. 
   Der Eintrag <literal>UserComment</literal> ist in beiden Fällen verfügbar. 
   Er sollte also dem Eintrag im IFD0-Bereich vorgezogen werden.
  </para>
  <para>
   <function>exif_read_data</function> validiert auch EXIF-Datentags entsprechend 
   der EXIF-Spezifikationen (<link xlink:href="&url.exifspec;">&url.exifspec;</link>, 
   Seite 20).
  </para>
  <note>
   <para>
    Windows ME/XP können beide beim Anschließen einer Kamera die Exif-Header 
    verwerfen. Mehr Informationen dazu sind unter 
    <link xlink:href="&url.winexif;">&url.winexif;</link> zu finden.
   </para>
  </note>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Der Name der zu lesenden Bilddatei. Dieser darf keine 
       <acronym>URL</acronym> sein.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sections</parameter></term>
     <listitem>
      <para>
       Ist eine kommaseparierte List von Bereichen, die in der Datei vorhanden 
       sein muss, um das Rückgabe-<type>array</type> zu erzeugen. Wenn keine 
       der geforderten Bereiche gefunden werden kann, wird &false; zurückgegeben.
       <informaltable>
        <tgroup cols="2">
         <tbody>
          <row>
           <entry>FILE</entry>
           <entry>FileName, FileSize, FileDateTime, SectionsFound</entry>
          </row>
          <row>
           <entry>COMPUTED</entry>
           <entry>
            html, Width, Height, IsColor und andere, wenn vorhanden. Height und 
            Width werden genauso wie <function>getimagesize</function> berechnet. 
            Diese Werte dürfen also nicht Teil von irgendwelchen Headern sein, 
            die zurückgegeben werden. Ferner ist html ein Höhen/Breiten-Textstring 
            für den Gebrauch in normalem <acronym>HTML</acronym>.
           </entry>
          </row>
          <row>
           <entry>ANY_TAG</entry>
           <entry>Irgendwelche Informationen, die ein Tag besitzen, wie z.B. IFD0, EXIF, ...</entry>
          </row>
          <row>
           <entry>IFD0</entry>
           <entry>
            Alle IFD0-Daten mit Tag. In normalen Bilddateien beinhalten diese Bildgröße usw.
           </entry>
          </row>
          <row>
           <entry>THUMBNAIL</entry>
           <entry>
            Eine Datei sollte ein Miniaturbild enthalten, wenn es einen zweiten 
            IFD besitzt. Alle Informationen mit Tags über das eingebettete 
            Miniaturbild werden in diesem Bereich gespeichert.
           </entry>
          </row>
          <row>
           <entry>COMMENT</entry>
           <entry>Kommentarheader des JPEG-Bildes.</entry>
          </row>
          <row>
           <entry>EXIF</entry>
           <entry>
            Der EXIF-Bereich ist ein Unterbereich von IFD0. Er enthält 
            detailliertere Information über das Bild. Die meisten dieser 
            Einträge beziehen sich auf die Digitalkamera.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>arrays</parameter></term>
      <listitem>
      <para>
       Definiert ob jeder Bereich ein Array wird oder nicht. Die 
       <parameter>sections</parameter> <literal>COMPUTED</literal>,
       <literal>THUMBNAIL</literal> und <literal>COMMENT</literal> werden 
       immer zu Arrays, da die Namen der Werte mit denen anderer Bereiche 
       kollidieren können.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>thumbnail</parameter></term>
     <listitem>
      <para>
       Bei &true; wird das Miniaturbild ausgelesen, ansonsten nur die Daten 
       der Tags.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>    
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein assoziatives <type>array</type> zurück, bei dem der Arrayindex den
   Headernamen entspricht und der Arraywert die Werte enthält, die mit diesen
   Headern in Verbindung stehen. Wenn keine Daten zurückgeliefert werde können, 
   liefert <function>exif_read_data</function> &false;.
  </para>
 </refsect1>
 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.3.0</entry>
       <entry>
        Kann alle eingebetteten <acronym>IFD</acronym>-Daten inklusive Arrays 
        (werden auch als solche zurückgegeben) lesen. Sowohl die Größe des 
        eingebetteten Miniaturbildes wird im Unterbereich von 
        <literal>THUMBNAIL</literal> zurückgegeben als auch Miniaturbilder im 
        <acronym>TIFF</acronym>-Format. Es gibt auch keine Längenbeschränkung 
        mehr für die Rückgabewerte (solange das Speicherlimit nicht erreicht 
        wird).
       </entry>
      </row>
      <row>
       <entry>4.3.0</entry>
       <entry>
        Wenn PHP <link linkend="ref.mbstring">mbstring</link> unterstützt, können 
        die Benutzerkommentare automatisch umkodiert werden. Benutzerkommentare 
        in Unicode oder JIS werden automatisch in den entsprechenden exif-Initwert 
        der &php.ini; umkodiert.
       </entry>
      </row>
      <row>
       <entry>4.3.0</entry>
       <entry>
        Wenn das Bild irgendeinen IFD0-Wert hat, enthält der Bereich COMPUTED 
        einen Eintrag ByteOrderMotorola, welcher auf 0 für little-endian (intel) 
        und 1 für big-endian (motorola) Bytefolge gesetzt ist. Bei einem 
        falschen Datentyp, enthalten COMPUTED und UserComment auch nicht mehr 
        nur den ersten Copyrighteintrag.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>exif_read_data</function> Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
echo "test1.jpg:<br />\n";
$exif = exif_read_data('tests/test1.jpg', 'IFD0');
echo $exif===false ? "Keine Headerdaten gefunden.<br />\n" : "Bild beinhaltet Header<br />\n";

$exif = exif_read_data('tests/test2.jpg', 0, true);
echo "test2.jpg:<br />\n";
foreach ($exif as $key => $section) {
    foreach ($section as $name => $val) {
        echo "$key.$name: $val<br />\n";
    }
}
?>
]]>
    </programlisting>
    <para>
     Der erste Aufruf schlägt fehl, da das Bild keine Headerinformationen hat.
    </para>
    &example.outputs.similar;
    <screen role="php">
<![CDATA[
test1.jpg:
Keine Headerdaten gefunden.
test2.jpg:
FILE.FileName: test2.jpg
FILE.FileDateTime: 1017666176
FILE.FileSize: 1240
FILE.FileType: 2
FILE.SectionsFound: ANY_TAG, IFD0, THUMBNAIL, COMMENT
COMPUTED.html: width="1" height="1"
COMPUTED.Height: 1
COMPUTED.Width: 1
COMPUTED.IsColor: 1
COMPUTED.ByteOrderMotorola: 1
COMPUTED.UserComment: Exif test image.
COMPUTED.UserCommentEncoding: ASCII
COMPUTED.Copyright: Photo (c) M.Boerger, Edited by M.Boerger.
COMPUTED.Copyright.Photographer: Photo (c) M.Boerger
COMPUTED.Copyright.Editor: Edited by M.Boerger.
IFD0.Copyright: Photo (c) M.Boerger
IFD0.UserComment: ASCII
THUMBNAIL.JPEGInterchangeFormat: 134
THUMBNAIL.JPEGInterchangeFormatLength: 523
COMMENT.0: Comment #1.
COMMENT.1: Comment #2.
COMMENT.2: Comment #3end
THUMBNAIL.JPEGInterchangeFormat: 134
THUMBNAIL.Thumbnail.Height: 1
THUMBNAIL.Thumbnail.Height: 1
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>exif_thumbnail</function></member>
    <member><function>getimagesize</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
