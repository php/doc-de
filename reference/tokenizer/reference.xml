<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.21 Maintainer: timo Status: ready -->
<!-- $Revision: 1.3 $ -->
<!-- Purpose: basic.other -->
<!-- Membership: core -->

 <reference xml:id="ref.tokenizer" xmlns="http://docbook.org/ns/docbook">
  <title>Tokenizer Funktionen</title>
  <titleabbrev>Tokenizer</titleabbrev>

  <partintro>
   <section xml:id="tokenizer.intro">
    &reftitle.intro;
    <para>
     Die Tokenizer-Funktionen bieten eine Schnittstelle zum in PHP
     integrierten PHP-Tokenizer der Zend-Engine. Mit Hilfe dieser
     Funktionen ist es möglich ein eigenes Werkzeug zur PHP-Quelltextanalyse
     oder -modifikation zu entwickeln. Der Umgang mit der Sprachspezifikation
     auf lexikalischer Ebene wird nicht benötigt.
    </para>
    <para>
     Siehe auch <link linkend="tokens">Anhang zu Tokens</link>.
    </para>
   </section>

   <section xml:id="tokenizer.requirements">
    &reftitle.required; 
    &no.requirement; 
   </section> 

   &reference.tokenizer.configure;

   &reference.tokenizer.constants;

   <section xml:id="tokenizer.examples">
    &reftitle.examples;
    <para>
     Folgend ein einfaches Beispiel, dass den Tokenizer verwendet
     um eine PHP-Datei einzulesen, alle Kommentare zu entfernen
     und den reinen Quelltext auszugeben.
    </para>
    <example>
     <title>Kommentar mit Hilfe des Tokenizers entfernen</title>
     <programlisting role="php">
<![CDATA[
<?php
/*
 * T_ML_COMMENT steht in PHP 5 nicht zur Verfügung.
 * Die folgenden drei Zeilen definieren die Konstante
 * um Abwärtskompatibilität zu gewährleisten.
 *
 * Die nächsten zwei Zeilen definieren die nur in PHP 5
 * verfügbare Konstante T_DOC_COMMENT, die für PHP 4
 * mit T_ML_COMMENT maskiert wird.
 */
if (!defined('T_ML_COMMENT')) {
    define('T_ML_COMMENT', T_COMMENT);
} else {
    define('T_DOC_COMMENT', T_ML_COMMENT);
}

$source = file_get_contents('example.php');
$tokens = token_get_all($source);

foreach ($tokens as $token) {
    if (is_string($token)) {
        // einfaches 1-Zeichen Token
        echo $token;
    } else {
        // Token Array
        list($id, $text) = $token;
 
        switch ($id) { 
            case T_COMMENT: 
            case T_ML_COMMENT: // wir haben diese
            case T_DOC_COMMENT: // und diese Konstante definiert
                // Kommentare ignorieren
                break;

            default:
                // alle anderen -> unverändert beibehalten
                echo $text;
                break;
        }
    }
}
?>
]]>
     </programlisting>
    </example>    
   </section>


  </partintro>

&reference.tokenizer.entities.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

