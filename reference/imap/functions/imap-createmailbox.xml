<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- splitted from ./de/functions/imap.xml, last change in rev 1.2 -->
<!-- last change to 'imap-createmailbox' in en/ tree in rev 1.2 -->
  <refentry id="function.imap-createmailbox">
   <refnamediv>
    <refname>imap_createmailbox</refname>
    <refpurpose>Erzeugt ein neues Postfach</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>int</type><methodname>imap_createmailbox</methodname>
      <methodparam><type>int</type><parameter>imap_stream</parameter></methodparam>
      <methodparam><type>string</type><parameter>mbox</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>imap_createmailbox</function> legt ein über den Parameter
     <parameter>mbox</parameter> spezifiziertes neues Postfach an.
    </para>
    <para>
     Liefert &true; bei Erfolg und &false; bei Fehlern.
    </para>
    <para>
     Siehe auch <function>imap_renamemailbox</function> and
     <function>imap_deletemailbox</function>
     sowie <function>imap_open</function> für das Format des
     Parameters <parameter>mbox</parameter>.
    </para>
    <para>
     <example>
      <title><function>imap_createmailbox</function> Beispiel</title>
      <programlisting>
$mbox = imap_open ("{your.imap.host}", "username", "password", OP_HALFOPEN)
     || die ("can't connect: ".imap_last_error());

$name1 = "phpnewbox";
$name2 = imap_utf7_encode ("phpnewböx");

$newname = $name1;

echo "Newname will be '$name1'&lt;br>\n";

# we will now create a new mailbox "phptestbox" in your inbox folder,
# check its status after creation and finaly remove it to restore
# your inbox to its initial state

if (@imap_createmailbox ($mbox,imap_utf7_encode ("{your.imap.host}INBOX.$newname"))) {
    $status = @imap_status($mbox,"{your.imap.host}INBOX.$newname",SA_ALL);
    if($status) {
        print("your new mailbox '$name1' has the following status:&lt;br>\n");
        print("Messages:   ". $status->messages   )."&lt;br>\n";
        print("Recent:     ". $status->recent     )."&lt;br>\n";
        print("Unseen:     ". $status->unseen     )."&lt;br>\n";
        print("UIDnext:    ". $status->uidnext    )."&lt;br>\n";
        print("UIDvalidity:". $status->uidvalidity)."&lt;br>\n";

        if (imap_renamemailbox ($mbox,"{your.imap.host}INBOX.$newname", "{your.imap.host}INBOX.$name2")) {
            echo "renamed new mailbox from '$name1' to '$name2'&lt;br>\n";
            $newname=$name2;
        } else {
            print "imap_renamemailbox on new mailbox failed: ".imap_last_error ()."&lt;br>\n";
        }
    } else {
            print "imap_status on new mailbox failed: ".imap_last_error()."&lt;br>\n";
    }
    if (@imap_deletemailbox($mbox,"{your.imap.host}INBOX.$newname")) {
        print "new mailbox removed to restore initial state&lt;br>\n";
    } else {
        print  "imap_deletemailbox on new mailbox failed: ".implode ("&lt;br>\n", imap_errors())."&lt;br>\n";
    }

} else {

    print "could not create new mailbox: ".implode ("&lt;br>\n",imap_errors())."&lt;br>\n";
}

imap_close($mbox);
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
