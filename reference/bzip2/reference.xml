<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.2 Maintainer: nohn Status: ready -->
<!-- $Revision: 1.3 $ -->
 <reference id="ref.bzip2">
  <title>Bzip2 Komprimierungsfunktionen</title>
  <titleabbrev>Bzip2</titleabbrev>
  <partintro>
   <para>
    Die bzip2-Funktionen werden benutzt, um transparent bzip2
    (.bz2)-komprimierte Dateien lesen und schreiben zu können.
   </para>
   
   <section id="bzip2.requirements">
    <title>Voraussetzungen</title>
    <para>
     Dieses Module nutzt die Funktionen der <ulink
     url="&url.bzip2;">bzip2</ulink>-Bibliothek von Julian Seward.
    </para>
   </section>
   
   <section id="bzip2.installation">
    <title>Installation</title>
    <para>
     Die Bzip2-Unterstützung in PHP ist nicht standardmäßig aktiviert. Es ist
     erforderlich, die <link
     linkend="install.configure.with-bzip2">--with-bz2</link>-Option beim
     compilieren von PHP zu aktivieren. Dazu ist die bzip2/libbzip2 version
     &gt;= 1.0.x. nötig.
    </para>
   </section>

   <section id="bzip2.configuration">
    <title>Konfiguration</title>
     &no.config;
   </section>

   <section id="bzip2.resources">
    <title>Ressource-Typen</title>
    <para>
     Dieses Erweitertung definierte einen Resource-Typen: Einen
     Dateizeiger, der die Datei idenitfiziert, mit der gearbeitet werden
     soll.
    </para>
   </section>
   
   <section id="bzip2.constants">
    <title>Vordefinierte Konstanten</title>
     &no.constants;
   </section>
     
   <section id="bzip2.examples">
    <title>Ein kleines Code-Beispiel</title>
    <para>
     Dieses Beispiel öffnet eine tempräre Datei und schreibt einen Teststring
     in diese, dann gibt es den Inhalt der Datei aus.
    </para>
    <example>
     <title>Ein kleines <function>bzip2</function> Beispiel</title>
     <programlisting role="php">
<![CDATA[
&lt;?php

$filename = "/tmp/testfile.bz2";
$str = "This is a test string.\n";

// open file for writing
$bz = bzopen($filename, "w");

// write string to file
bzwrite($bz, $str);

// close file
bzclose($bz);

// open file for reading
$bz = bzopen($filename, "r");

// read 10 characters
print bzread($bz, 10);

// output until end of the file (or the next 1024 char) and close it.  
print bzread($bz);

bzclose($bz);

?>
]]>
     </programlisting>
    </example>
   </section>
  </partintro>

&reference.bzip2.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

