<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./de/functions/http.xml, last change in rev 1.10 -->
<!-- last change to 'header' in en/ tree in rev 1.2 -->
<!-- EN-Revision: 1.2 Maintainer: tschuer Status: ready -->
<!-- OLD-Revision: 1.13/EN.1.2 -->
  <refentry id="function.header">
   <refnamediv>
    <refname>header</refname>
    <refpurpose>Sendet einen HTTP-Header</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
     <methodsynopsis>
      <type>int</type><methodname>header</methodname>
      <methodparam><type>string</type><parameter>string</parameter></methodparam>
     </methodsynopsis>
    <para>
     Die <function>header</function>-Funktion wird zu Beginn einer
     <acronym>HTML</acronym>-Datei benutzt um
     <acronym>HTTP</acronym>-Anfangsinformationen zu senden. Siehe
     <ulink url="&spec.http1.1;">HTTP 1.1 Spezifikationen</ulink> für
     weitere Informationen.  <emphasis>Hinweis:</emphasis> Beachten
     sie, dass die <function>header</function>-Funktion aufgerufen
     werden muss, bevor irgendeine Ausgabe durch normale HTML-Tags
     oder PHP erzeugt wird.  Es ist ein häufig anzutreffender Fehler,
     per <function>include</function> Programm-Code einzubinden (bzw.
     per auto_prepend) oder Leerzeichen oder -zeilen vor dem Code
     stehen zu haben, die bereits Ausgaben bewirken (auch wenn diese
     leer sind) bevor <function>header</function> aufgerufen wird.
    </para>
    <para>
     Es gibt zwei Spezialfälle von Header-Aufrufen. Der Erste ist der
     &quot;Location&quot;-Header. Es wird nicht nur der Header an den 
     Browser geschickt, der Apache erhält auch noch den Status-Code
     REDIRECT. Aus Sicht des Skript-Schreibers ist das nicht wichtig,
     aber für alle, die die Internas von Apache verstehen wollen, ist
     dies von Belang.
     <informalexample>
      <programlisting role="php">
<![CDATA[
header ("Location: http://www.example.com");  // Umleitung des Browsers
exit;  // Sicher stellen, das nicht trotz Umleitung nachfolgender Code ausgeführt wird. 
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Der zweite Spezialfall ist ein Header der mit der Zeichenfolge
     &quot;HTTP/&quot; beginnt (Groß-/Kleinschreibung ist egal). Falls
     sie z.B. die Dokument-Fehler-Anweisung 404 des Apache auf ein
     PHP-Skript zeigen lassen, ist es gut, wenn dieses Skript einen
     404-Fehler erzeugt. In diesem Skript sollten sie also zuerst
     stehen haben:
     <informalexample>
      <programlisting role="php">
<![CDATA[
header ("HTTP/1.0 404 Not Found");
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     PHP-Skripte erzeugen oft dynamisches HTML, das weder vom Browser noch
     von irgendeinem Proxy zwischen Web-Server und Client-Browser gepuffert
     ("gecached") werden soll bzw. darf. Bei vielen Proxies und Browsern
     kann das Cachen unterbunden werden und zwar mit:
     <informalexample>
      <programlisting role="php">
<![CDATA[
header ("Expires: Mon, 26 Jul 1997 05:00:00 GMT");    // Datum der
Vergangenheit
header ("Last-Modified: " . gmdate ("D, d M Y H:i:s") . " GMT"); 
                                                      // immer geändert
header ("Cache-Control: no-cache, must-revalidate");  // HTTP/1.1
header ("Pragma: no-cache");                          // HTTP/1.0
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Siehe auch: <function>headers_sent</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
