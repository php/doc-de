<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./de/functions/http.xml, last change in rev 1.2 -->
<!-- last change to 'setcookie' in en/ tree in rev 1.2 -->
<!-- EN-Revision: 1.1 Maintainer: tschuer Status: ready -->
<!-- OLD-Revision: 1.13/EN.1.2 -->
  <refentry id="function.setcookie">
   <refnamediv>
    <refname>setcookie</refname>
    <refpurpose>Sendet ein Cookie</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
     <methodsynopsis>
      <type>int</type><methodname>setcookie</methodname>
      <methodparam><type>string</type><parameter>name</parameter></methodparam>
      <methodparam><type>string</type><parameter>value</parameter></methodparam>
      <methodparam><type>int</type><parameter>expire</parameter></methodparam>
      <methodparam><type>string</type><parameter>path</parameter></methodparam>
      <methodparam><type>string</type><parameter>domain</parameter></methodparam>
      <methodparam><type>int</type><parameter>secure</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>value</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>expire</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>path</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>domain</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>secure</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>setcookie</function> definiert ein mit den
     Header-Informationen zu übertragendes Cookie. Cookies müssen
     <emphasis>vor</emphasis> irgendwelchen anderen Headern gesendet
     werden (dies ist eine Einschränkung der Cookies, nicht von PHP).
     Sie müssen deshalb solche Funktionsaufrufe vor irgendwelchen
     <literal>&lt;html></literal>- oder
     <literal>&lt;head></literal>-Tags im Skript einsetzen.
    </para>
    <para>
     Alle Argumente - ausser <parameter>name</parameter> - sind
     optional. Ist nur der Name angegeben wird das Cookie mit diesem
     Namen auf dem Client gelöscht. Sie können beliebige Argumente
     auch durch einen Leerstring (<emphasis>&quot;&quot;</emphasis>)
     ersetzen, um diese Argumente zu übergehen.
     Der <parameter>expire</parameter>-Parameter und das
     <parameter>secure</parameter>-Argument sind Integer-Werte und
     können nicht mit einem Leerstring übersprungen werden. Setzen
     sie statt dessen &null; (<emphasis>0</emphasis>). Der
     <parameter>expire</parameter>-Parameter ist ein normaler
     UNIX-Zeitwert als Integer-Zahl, wie er von der
     <function>time</function> oder
     <function>mktime</function>-Funktion zurück gegeben wird. Das
     <parameter>secure</parameter>-Argument bedeutet, dass das Cookie
     nur über eine sichere HTTP-Verbindung geschickt werden soll.
    </para>
    <para>  
     Anwendungsbereiche:
    </para>
    <itemizedlist>
     <listitem>
      <simpara>
       Cookies werden nicht sichtbar, bevor nicht eine Seite geladen
       wird, in der das Cookie sichtbar sein soll.  
      </simpara>
     </listitem> 
     <listitem>
      <simpara>
       Cookies müssen mit den selben Parametern gelöscht werden, mit
       denen sie gesetzt wurden.
      </simpara>
     </listitem>
    </itemizedlist>
    <simpara>
     In PHP3 werden mehrfache Aufrufe von <function>setcookie</function>
     im selben Skript in umgekehrter Reihenfolge abgearbeitet. Sollten
     sie also ein Cookie löschen wollen bevor sie ein anderes setzen,
     sollten sie das Setzen vor dem Löschen vornehmen. In PHP4 werden
     mehrfache Aufrufe von <function>setcookie</function> in der 
     Reihenfolge ihres Aufrufs behandelt.
    </simpara>
    <para>
     Einige Beispiele, wie Cookies gesetzt / gesendet werden:
     <example>
      <title><function>setcookie</function>-Beispiele:</title>
      <programlisting role="php">
<![CDATA[
setcookie ("TestCookie", "Test Value");
setcookie ("TestCookie", $value, time()+3600);  /* verfällt in 1 Stunde */
setcookie ("TestCookie", $value, time()+3600, "/~rasmus/", ".utoronto.ca",1);
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Beispiele, wie die vorhergehenden Cookies wieder gelöscht werden:
     <example>
      <title><function>setcookie</function>-Beispiele:</title>
      <programlisting role="php">
<![CDATA[
setcookie ("TestCookie");
// Setzen des Ablauf-Zeitpunktes auf 1 Stunde vorher
setcookie ("TestCookie", "", time() - 3600);
setcookie ("TestCookie", "", time() - 3600, "/~rasmus/", ".utoronto.ca",1);
]]>
      </programlisting>
     </example>
     Beim Löschen eines Cookies sollten sie sicher stellen, dass die
     Verfallszeit in der Vergangenheit liegt, damit ihr Browser
     &quot;zufrieden&quot; ist.
    </para>
    <para>
     Beachten sie, dass der Wertebereich des Cookies automatisch
     URL-konform codiert (urlencoded) wird, sobald sie das Cookie
     senden, und wenn es gelesen wird, wird es automatisch URL-konform
     decodiert und einer Variablen zugewiesen, die den selben Namen
     wie das Cookie trägt. Um die Inhalte unserer Test-Cookies zu
     sehen, brauchen sie nur eines der folgenden Beispiel zu benutzen:
     <informalexample>
      <programlisting role="php">
<![CDATA[
echo $TestCookie;
echo $HTTP_COOKIE_VARS["TestCookie"];
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Sie können auch ein Array an Cookies setzen, in dem sie die
     Array-Schreibweise benutzen. Dadurch werden so viele Cookies
     gesetzt, wie ihr Array Elemente hat. Sobald das Cookie aber von
     ihrem Skript gelesen wird, werden alle Werte in ein einziges
     Array mit dem Cookie-Namen eingelesen: 
     <informalexample>
      <programlisting role="php">
<![CDATA[
setcookie ("cookie[three]", "cookiethree");
setcookie ("cookie[two]", "cookietwo");
setcookie ("cookie[one]", "cookieone");
if (isset ($cookie)) {
    while (list ($name, $value) = each ($cookie)) {
        echo "$name == $value<br>\n";
    }
}
]]>
      </programlisting>
     </informalexample>
    </para>
    <para>
     Weitere Informationen zu Cookies und deren Spezifikationen
     erhalten sie bei Netscape unter <ulink
     url="&spec.cookies;">&spec.cookies;</ulink>.
    </para>
    <simpara>
     Microsofts Internet-Explorer 4 mit Servive-Pack 1 geht nicht
     korrekt mit Cookies um, die den Pfad-Parameter beinhalten.
    </simpara>
    <simpara>
     Netscape Communicator 4.05 und Microsoft Internet Explorer 3.x
     scheinen mit Cookies Probleme zu haben, wenn die Argumente für
     Pfad und Zeit nicht angegeben sind.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
