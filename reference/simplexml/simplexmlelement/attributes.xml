<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343899 Maintainer: sammywg Status: ready -->

<refentry xml:id="simplexmlelement.attributes" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SimpleXMLElement::attributes</refname>
  <refpurpose>Identifiziert die Attribute eines Elements</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type>SimpleXMLElement</type><methodname>SimpleXMLElement::attributes</methodname>
   <methodparam choice="opt"><type>string</type><parameter>ns</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>is_prefix</parameter><initializer>&false;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Die Funktion liefert die Attribute und Werte, die innerhalb eines XML-Tags
   definiert wurden.
  </para>
  &simplexml.iteration;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>ns</parameter></term>
     <listitem>
      <para>
       Ein optionaler Namespace für das abgefragte Attribut.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>is_prefix</parameter></term>
     <listitem>
      <para>
       Standardmäßig auf &false; gesetzt.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein <classname>SimpleXMLElement</classname> Objekt zurück, das
   durchlaufen werden kann, um die Attribute des Elements zu erhalten.
  </para>
  <para>
   Gibt &null; zurück, wenn auf einem <classname>SimpleXMLElement</classname>
   Objekt aufgerufen, das bereits ein Attribut anstatt eines Elements darstellt.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Einen XML-String auswerten</title>
    <programlisting role="php">
<![CDATA[
<?php
$string = <<<XML
<a>
 <foo name="one" game="lonely">1</foo>
</a>
XML;

$xml = simplexml_load_string($string);
foreach($xml->foo[0]->attributes() as $a => $b) {
    echo $a,'="',$b,"\"\n";
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
name="one"
game="lonely"
]]>
   </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="simplexml.examples-basic"/></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
