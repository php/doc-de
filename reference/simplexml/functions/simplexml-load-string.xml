<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.15 Maintainer: sammywg Status: ready -->
<refentry xml:id='function.simplexml-load-string' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>simplexml_load_string</refname>
  <refpurpose>
   Übersetzt einen XML-String in ein Objekt
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>object</type><methodname>simplexml_load_string</methodname>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>class_name</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>ns</parameter></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>is_prefix</parameter></methodparam>
  </methodsynopsis>
  <para>
   Die Funktion erwartet einen wohlgeformten (well-formed) XML-String und gibt
   ihn als Objekt zurück.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Ein wohlgeformter XML-String.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>class_name</parameter></term>
     <listitem>
      <para>
       Sie können den optionalen Parameter <parameter>class_name</parameter>
       verwenden, wenn <function>simple_load_string</function> ein Objekt der
       spezifischen Klasse zurückgeben soll. Die gewählte Klasse sollte von der
       Klasse <type>SimpleXMLElement</type> abgeleitet sein.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Seit PHP 5.1.0 und Libxml 2.6.0 können Sie zusätzlich den Parameter
       <parameter>options</parameter> verwenden, um <link
       linkend="libxml.constants">weitere Libxml-Parameter</link> anzugeben.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ns</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>is_prefix</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein <type>Objekt</type> der Klasse
   <type>SimpleXMLElement</type> zurück, dessen Eigenschaften die Daten
   beinhalten, wie sie im XML-Dokument abgebildet sind. Tritt ein Fehler auf,
   wird &false; zurück gegeben.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Einen XML-String auswerten</title>
    <programlisting role="php">
<![CDATA[
<?php
$string = <<<XML
<?xml version='1.0'?>
<document>
 <title>Zweiundvierz...?</title>
 <from>Joe</from>
 <to>Jane</to>
 <body>
  Ich kenne die Antwort -- aber was ist die Frage?
 </body>
</document>
XML;

$xml = simplexml_load_string($string);

var_dump($xml);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
SimpleXMLElement Object
(
  [title] => Zweiundvierz...?
  [from] => Joe
  [to] => Jane
  [body] =>
   Ich kenne die Antwort -- aber was ist die Frage?
)
]]>
    </screen>
    <simpara>
     Ab diesem Punkt können Sie <literal>$xml->body</literal> etc. verwenden.
    </simpara>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="function.simplexml-load-file" /></member>
    <member><xref linkend="function.simplexml-element-construct" /></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
