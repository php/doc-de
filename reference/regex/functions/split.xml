<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- splitted from ./de/functions/regex.xml, last change in rev 1.8 -->
<!-- last change to 'split' in en/ tree in rev 1.7 -->
<!-- EN-Revision: 1.2 Maintainer: samesch Status: ready -->
<!-- OLD-Revision: 1.39/EN.1.7 -->
  <refentry id="function.split">
   <refnamediv>
    <refname>split</refname>
    <refpurpose>
     Zerlegt eine Zeichenkette anhand eines regulären Ausdrucks in ein
     Array
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>array</type><methodname>split</methodname>
      <methodparam><type>string</type><parameter>Suchmuster</parameter></methodparam>
      <methodparam><type>string</type><parameter>Zeichenkette</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>Beschränkung</parameter></methodparam>
     </methodsynopsis>
    <note>
     <para>
      Die Funktion <function>preg_split</function>, die eine zu Perl
      kompatible Syntax regulärer Ausdrücke verwendet, ist häufig die
      schnellere Alternative zu <function>split</function>.
     </para>
    </note>
    <para>
     Gibt ein Array mit Zeichenketten zurück, die jeweils eine
     Teilzeichenkette von <parameter>Zeichenkette</parameter> sind und
     durch deren Zerlegung an den durch
     <parameter>Suchmuster</parameter> des regulären Ausdrucks
     bestimmten Stellen entstehen. Wenn
     <parameter>Beschränkung</parameter> gesetzt wurde, enthält das
     zurückgegebene Array höchstens
     <parameter>Beschränkung</parameter> Elemente, von denen das
     letzte den ganzen Rest von <parameter>Zeichenkette</parameter>
     enthält. Bei Auftreten eines Fehlers gibt
     <function>split</function> &false; zurück.
    </para>
    <para>
     Um die ersten vier Felder einer Zeile von
     <filename>/etc/passwd</filename> abzuspalten:
     <example>
      <title><function>split</function> Beispiel</title>
      <programlisting role="php">
<![CDATA[
list($user,$pass,$uid,$gid,$extra)= split (":", $passwd_line, 5);
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <simpara>
      Wenn <parameter>Suchmuster</parameter>
      <replaceable>n</replaceable> mal vorkommt, enhält das
      zurückgegebene Array
      <literal><replaceable>n</replaceable>+1</literal> Elemente.
      Kommt <parameter>Suchmuster</parameter> zum Beispiel überhaupt
      nicht vor, wird ein Array mit nur einem Element zurückgegeben.
      Das gilt natürlich auch, wenn
      <parameter>Zeichenkette</parameter> leer ist.
     </simpara>
    </note>
    <para>
     Um ein Datum zu analysieren, das durch Schrägstriche, Punkte oder
     Bindestriche getrennt ist:
     <example>
      <title><function>split</function> Beispiel</title>
      <programlisting role="php">
<![CDATA[
$datum = "04/30/1973";  // Trennzeichen darf ein Schrägstrich, Punkt
                        // oder Bindestrich sein
list ($monat, $tag, $jahr) = split ('[/.-]', $datum);
echo "Monat: $monat; Tag: $tag; Jahr: $jahr<br>\n";
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Beachten Sie, dass <parameter>Suchmuster</parameter> Groß- und
     Kleinschreibung berücksichtigt.
    </para>
    <para>
     Beachten Sie: wenn Sie die Fähigkeiten regulärer Ausdrücke nicht
     benötigen, ist die Verwendung von <function>explode</function>
     schneller, weil diese Funktion nicht unter der Last der Engine
     für reguläre Ausdrücke steht.
    </para>
    <para>
     Wenn Sie nach einer Möglichkeit suchen, das Verhalten von Perls
     <command>@chars = split('', $str)</command> nachzuahmen, schauen
     Sie sich bitte die Beispiele für <function>preg_split</function>
     an.
    </para>
    <para>
     Bitte beachten Sie, dass <parameter>Suchmuster</parameter> ein
     regulärer Ausdruck ist. Wenn Sie eine Zerlegung an Zeichen
     vornehmen, die in regulären Ausdrücken als besondere Zeichen
     betrachtet werden, müssen Sie diese entsprechend
     kennzeichnen. Wenn Sie der Ansicht sind,
     <function>split</function> (oder, bei diesem Thema, eine andere
     Regex-Funktion) verhalte sich seltsam, lesen Sie bitte die Datei
     <filename>regex.7</filename>, die sich im
     <filename class="directory">regex/</filename> Unterverzeichnis ihrer
     PHP-Distribution befindet. Da sie im manpage-Fomat vorliegt,
     sollten Sie einen Befehl der Art <command>man
     /usr/local/src/regex/regex.7</command> verwenden, um sie zu
     lesen.
    </para>
    <para>
     Siehe auch: <function>preg_split</function>,
     <function>spliti</function>, <function>explode</function>,
     <function>implode</function>, <function>chunk_split</function>
     und <function>wordwrap</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
