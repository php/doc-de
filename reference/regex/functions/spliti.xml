<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 308253 Maintainer: samesch Status: ready -->
<refentry xml:id="function.spliti" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>spliti</refname>
  <refpurpose>Zerlegt eine Zeichenkette anhand eines regulären Ausdrucks ohne Berücksichtigung von Groß-/Kleinschreibung in ein Array</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>spliti</methodname>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>limit</parameter><initializer>-1</initializer></methodparam>
  </methodsynopsis>
  <para>
   Zerlegt <parameter>string</parameter> anhand eines regulären Ausdrucks in
   ein Array.
  </para>
  <para>
   Diese Funktion entspricht <function>split</function> mit dem Unterschied,
   dass sie übereinstimmende Buchstaben nicht nach Groß- und Kleinschreibung
   unterscheidet.
  </para>
  &warn.deprecated.function-5-3-0.removed-6-0-0;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>pattern</parameter></term>
     <listitem>
      <para>
       Regulärer Ausdruck ohne Berücksichtigung der Groß- und Kleinschreibung
      </para>
      <para>
       Wenn Sie eine Zerlegung an Zeichen vornehmen, die in regulären
       Ausdrücken als besondere Zeichen betrachtet werden, müssen Sie diese
       entsprechend kennzeichnen. Wenn Sie der Ansicht sind,
       <function>spliti</function> (oder, bei diesem Thema, eine andere
       Regex-Funktion) verhalte sich seltsam, lesen Sie bitte die Datei
       <filename>regex.7</filename>, die sich im <filename
       class="directory">regex/</filename> Unterverzeichnis ihrer
       PHP-Distribution befindet. Da sie im manpage-Fomat vorliegt, sollten
       Sie einen Befehl der Art <command>man
       /usr/local/src/regex/regex.7</command> verwenden, um sie zu lesen.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       Die zu durchsuchende Zeichenkette
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>limit</parameter></term>
     <listitem>
      <para>
       Wenn <parameter>limit</parameter> gesetzt wurde, enthält das
       zurückgegebene Array höchstens <parameter>limit</parameter> Elemente,
       von denen das letzte den ganzen Rest von <parameter>string</parameter>
       enthält.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein Array mit Zeichenketten zurück, die jeweils eine Teilzeichenkette
   von <parameter>string</parameter> sind. Diese Teilzeichenketten entstehen
   durch Zerlegung von <parameter>string</parameter> an den durch den
   regulären Ausdruck <parameter>pattern</parameter> bestimmten Stellen ohne
   Berücksichtigung der Groß- und Kleinschreibung.
  </para>
  <para>
   Wenn <parameter>pattern</parameter> <replaceable>n</replaceable> mal
   vorkommt, enhält das zurückgegebene Array
   <literal><replaceable>n</replaceable>+1</literal> Elemente. Kommt
   <parameter>pattern</parameter> zum Beispiel überhaupt nicht vor, wird ein
   Array mit nur einem Element zurückgegeben. Das gilt natürlich auch, wenn
   <parameter>string</parameter> leer ist. Bei Auftreten eines Fehlers gibt
   <function>spliti</function> &false; zurück.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Dieses Beispiel verwendet 'a' als Trennzeichen um eine Zeichenkette zu
   zerlegen:
   <example>
    <title><function>spliti</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$zeichenkette = "aBBBaCCCADDDaEEEaGGGA";
$stuecke = spliti ("a", $zeichenkette, 5);
print_r($stuecke);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
  [0] =>
  [1] => BBB
  [2] => CCC
  [3] => DDD
  [4] => EEEaGGGA
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.regex.deprecated;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>preg_split</function></member>
    <member><function>split</function></member>
    <member><function>explode</function></member>
    <member><function>implode</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
