<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./de/functions/regex.xml, last change in rev 1.2 -->
<!-- last change to 'ereg-replace' in en/ tree in rev 1.2 -->
<!-- EN-Revision: 1.2 Maintainer: samesch Status: ready -->
<!-- OLD-Revision: 1.39/EN.1.2 -->
  <refentry id="function.ereg-replace">
   <refnamediv>
    <refname>ereg_replace</refname>
    <refpurpose>Ersetzt einen regulären Ausdruck</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>string</type><methodname>ereg_replace</methodname>
      <methodparam><type>string</type><parameter>Suchmuster</parameter></methodparam>
      <methodparam><type>string</type><parameter>Ersatz</parameter></methodparam>
      <methodparam><type>string</type><parameter>Zeichenkette</parameter></methodparam>
     </methodsynopsis>
    <note>
     <para>
      Die Funktion <function>preg_replace</function>, die eine zu Perl
      kompatible Syntax regulärer Ausdrücke verwendet, ist häufig die
      schnellere Alternative zu <function>ereg_replace</function>.
     </para>
    </note>
    <simpara>
     Diese Funktion durchsucht <parameter>Zeichenkette</parameter>
     nach Übereinstimmungen mit <parameter>Suchmuster</parameter> und
     ersetzt dann den übereinstimmenden Text durch
     <parameter>Ersatz</parameter>.
    </simpara>
    <simpara>
     Zurückgegeben wird die geänderte Zeichenkette, was auch bedeuten
     könnte, dass die ursprüngliche Zeichenkette zurückgegeben wird,
     wenn es keine zu ersetzenden Übereinstimmungen gibt.
    </simpara>
    <simpara>
     Wenn <parameter>Suchmuster</parameter> eingeklammerte
     Teilzeichenketten enthält, darf <parameter>Ersatz</parameter>
     Teilzeichenketten der Form
     <literal>\\<replaceable>Ziffer</replaceable></literal> enthalten,
     die dann durch die Ziffer'ste Teilzeichenkette ersetzt werden.
     <literal>\\0</literal> erzeugt den gesamten Inhalt der
     durchsuchten Zeichenkette. Bis zu neun Teilzeichenketten dürfen
     verwendet werden.  Klammern dürfen geschachtelt werden und werden
     in diesem Fall anhand der öffnenden Klammern gezählt.
    </simpara>  
    <simpara>
     Wenn in <parameter>Zeichenkette</parameter> keine
     Übereinstimmungen gefunden werden, wird
     <parameter>Zeichenkette</parameter> unverändert zurückgegeben.
    </simpara>
    <para>
     Der folgende Code-Schnipsel gibt zum Beispiel dreimal "Das war
     ein Test" aus:
     <example>
      <title><function>ereg_replace</function> Beispiel</title>
      <programlisting>
<![CDATA[
$string = "Das ist ein Test";
echo ereg_replace (" ist", " war", $string);
echo ereg_replace ("( )ist", "\\1war", $string);
echo ereg_replace ("(( )ist)", "\\2war", $string);
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Folgendes ist zu beachten: Wenn Sie als
     <parameter>Ersatz</parameter> einen ganzzahligen Wert verwenden,
     bekommen sie vielleicht nicht das erwartete Ergebnis. Das liegt
     daran, dass <function>ereg_replace</function> die Zahl als
     Ordinalwert eines Zeichens betrachtet und dieses verwendet. Zum
     Beispiel:
     <example>
      <title><function>ereg_replace</function> Beispiel</title>
      <programlisting>
<![CDATA[
<?php
/* Dieses funktioniert nicht wie erwartet. */
$zahl = 4;
$zeichenkette = "Diese Zeichenkette hat vier Wörter.";
$zeichenkette = ereg_replace('vier', $zahl, $zeichenkette);
echo $zeichenkette;   /* Ausgabe: 'Diese Zeichenkette hat   Wörter.' */

/* Dieses funktioniert. */
$zahl = '4';
$zeichenkette = "Diese Zeichenkette hat vier Wörter.";
$zeichenkette = ereg_replace('vier', $zahl, $zeichenkette);
echo $zeichenkette;   /* Output: 'Diese Zeichenkette hat 4 Wörter.' */
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Ersetzen von URLs durch Links</title>
      <programlisting role="php">
<![CDATA[
$text = ereg_replace("[[:alpha:]]+://[^<>[:space:]]+[[:alnum:]/]",
                     "<a href=\"\\0\">\\0</a>", $text);
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     Siehe auch: <function>ereg</function>,
     <function>eregi</function>, <function>eregi_replace</function>,
     <function>str_replace</function> und
     <function>preg_match</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
