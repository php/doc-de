<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 329092 Maintainer: samesch Status: ready -->
<refentry xml:id="function.ereg" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ereg</refname>
  <refpurpose>Sucht Übereinstimmungen mit einem regulären Ausdruck</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>ereg</methodname>
   <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">regs</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Sucht in <parameter>string</parameter> unter Berücksichtigung der Groß- und
   Kleinschreibung nach Übereinstimmungen mit dem regulären Ausdruck, der in
   <parameter>pattern</parameter> angegeben wurde.
  </simpara>
  &warn.deprecated.function-5-3-0.removed-6-0-0;
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>pattern</parameter></term>
     <listitem>
      <para>
       Regulärer Ausdruck mit Berücksichtigung der Groß- und Kleinschreibung
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       Die zu durchsuchende Zeichenkette
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>regs</parameter></term>
     <listitem>
      <para>
       Wenn Übereinstimmungen mit eingeklammerten Teilzeichenketten von
       <parameter>pattern</parameter> gefunden werden und die Funktion mit dem
       dritten Argument <parameter>regs</parameter> aufgerufen wurde, werden
       die Übereinstimmungen in den Elementen des Arrays
       <parameter>regs</parameter> gespeichert.
      </para>
      <para>
       <varname>$regs[1]</varname> enthält die Teilzeichenkette der ersten
       Klammer, <varname>$regs[2]</varname> die Teilzeichenkette der zweiten
       usw. <varname>$regs[0]</varname> enthält bei Übereinstimmung mit
       <parameter>string</parameter> eine Kopie der kompletten Zeichenkette
       <parameter>string</parameter>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt die Länge der übereinstimmenden Zeichenkette zurück, falls in
   <parameter>string</parameter> eine Übereinstimmung mit
   <parameter>pattern</parameter> gefunden wurde oder &false;, wenn keine
   Übereinstimmung gefunden wurde oder wenn ein Fehler aufgetreten ist.
  </para>
  <para>
   Falls der optionale Parameter <parameter>regs</parameter> nicht übergeben
   wurde oder die Länge der übereinstimmenden Zeichenkette 0 ist, gibt diese
   Funktion 1 zurück.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.1.0</entry>
       <entry>
        Bis (und inklusive) PHP 4.1.0 wird <varname>$regs</varname> mit genau
        zehn Elementen gefüllt, auch wenn es tatsächlich mehr oder weniger
        Übereinstimmungen mit den eingeklammerten Teilzeichenketten gibt. Dies
        wirkt sich aber nicht auf <function>ereg</function>s Fähigkeit aus,
        mehr übereinstimmende Teilzeichenketten zu finden. Falls keine
        Übereinstimmungen gefunden werden, wird <literal>$regs</literal> nicht
        von <function>ereg</function> verändert.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>ereg</function>-Beispiel</title>
    <para>
     Das folgende Code-Schnipsel mimmt ein Datum im ISO-Format (JJJJ-MM-TT)
     und gibt es im Format TT.MM.JJJJ aus:
    </para>
    <programlisting role="php">
<![CDATA[
<?php
if (ereg ("([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})", $date, $regs)) {
    echo "$regs[3].$regs[2].$regs[1]";
} else {
    echo "Ungültiges Datumsformat: $date";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.regex.deprecated;
  <tip>
   <para>
    <function>ereg</function> ist ab PHP 5.3.0 veraltet. Verwenden Sie
    stattdessen <function>preg_match</function>.
   </para>
  </tip>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>eregi</function></member>
    <member><function>ereg_replace</function></member>
    <member><function>eregi_replace</function></member>
    <member><function>preg_match</function></member>
    <member><function>strpos</function></member>
    <member><function>strstr</function></member>
    <member><function>quotemeta</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
