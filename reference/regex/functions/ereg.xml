<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.12 $ -->
<!-- splitted from ./de/functions/regex.xml, last change in rev 1.2 -->
<!-- last change to 'ereg' in en/ tree in rev 1.2 -->
<!-- EN-Revision: 1.13 Maintainer: samesch Status: ready -->
<!-- OLD-Revision: 1.39/EN.1.2 -->
<refentry xml:id="function.ereg" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ereg</refname>
  <refpurpose>Sucht Übereinstimmungen mit einem regulären Ausdruck</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Beschreibung</title>
  <methodsynopsis>
   <type>int</type><methodname>ereg</methodname>
   <methodparam><type>string</type><parameter>Suchmuster</parameter></methodparam>
   <methodparam><type>string</type><parameter>Zeichenkette</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">regs</parameter></methodparam>
  </methodsynopsis>
  <note>
   <para>
    Die Funktion <function>preg_match</function>, die eine zu Perl kompatible
    Syntax regulärer Ausdrücke verwendet, ist häufig die schnellere
    Alternative zu <function>ereg</function>.
   </para>
  </note>
  <simpara>
   Sucht in <parameter>Zeichenkette</parameter> unter Berücksichtigung der
   Groß- und Kleinschreibung nach Übereinstimmungen mit dem regulären
   Ausdruck, der in <parameter>Suchmuster</parameter> angegeben wurde.
  </simpara>
  <simpara>
   Wenn Übereinstimmungen mit eingeklammerten Teilzeichenketten von
   <parameter>Suchmuster</parameter> gefunden werden und die Funktion mit dem
   dritten Argument <parameter>regs</parameter> aufgerufen wurde, werden die
   Übereinstimmungen in den Elementen des Arrays <parameter>regs</parameter>
   gespeichert. $regs[1] enthält dann die Teilzeichenkette der ersten Klammer,
   $regs[2] die Teilzeichenkette der zweiten usw. $regs[0] enthält bei
   Übereinstimmung mit <parameter>Zeichenkette</parameter> eine Kopie der
   kompletten <parameter>Zeichenkette</parameter>.
  </simpara>
  <note>
   <simpara>
    Bis (und inklusive) PHP 4.1.0 wird <literal>$regs</literal> mit genau zehn
    Elementen gefüllt, auch wenn es tatsächlich mehr oder weniger
    Übereinstimmungen mit den eingeklammerten Teilzeichenketten gibt. Dies
    wirkt sich aber nicht auf <function>ereg</function>s Fähigkeit aus, mehr
    übereinstimmende Teilzeichenketten zu finden. Falls keine
    Übereinstimmungen gefunden werden, wird <literal>$regs</literal> nicht von
    <function>ereg</function> verändert.
   </simpara>
  </note>
  <simpara>
   Gibt die Länge der übereinstimmenden Zeichenkette zurück, falls in
   <parameter>Zeichenkette</parameter> eine Übereinstimmung mit
   <parameter>Suchmuster</parameter> gefunden wurde oder &false;, wenn keine
   Übereinstimmung gefunden wurde oder wenn ein Fehler aufgetreten ist. Falls
   der optionale Parameter <parameter>regs</parameter> nicht übergeben wurde
   oder die Länge der übereinstimmenden Zeichenkette 0 ist, gibt diese
   Funktion 1 zurück.
  </simpara>
  <para>
   Der folgende Code-Schnipsel mimmt ein Datum im ISO-Format (JJJJ-MM-TT) und
   gibt es im Format TT.MM.JJJJ aus:
  </para>
  <para>
   <example>
    <title><function>ereg</function> Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
if (ereg ("([0-9]{4})-([0-9]{1,2})-([0-9]{1,2})", $date, $regs)) {
    echo "$regs[3].$regs[2].$regs[1]";
} else {
    echo "Ungültiges Datumsformat: $date";
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   Siehe auch <function>eregi</function>, <function>ereg_replace</function>,
   <function>eregi_replace</function>, <function>preg_match</function>,
   <function>strpos</function> und <function>strstr</function>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
