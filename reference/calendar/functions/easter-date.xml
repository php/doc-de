<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 344981 Maintainer: hholzgra Status: ready -->

  <refentry xml:id="function.easter-date" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>easter_date</refname>
    <refpurpose>
     Zeitpunkt des Osterfestes (0 Uhr) als Unix-Timestamp
    </refpurpose>
   </refnamediv>

   <refsect1 role="description">
    &reftitle.description;
     <methodsynopsis>
      <type>int</type><methodname>easter_date</methodname>
      <methodparam choice="opt"><type>int</type><parameter>year</parameter><initializer>date("Y")</initializer></methodparam>
     </methodsynopsis>
    <para>
     Diese Funktion liefert den Unix-Timestamp (in Sekunden seit 1970)
     zurück, der dem Begin des Ostersonntag im durch
     <parameter>year</parameter> spezifizierten Jahr entspricht.  
    </para>
    <warning> 
     <para>
      Diese Funktion erzeugt eine Warnung, wenn das Jahr außerhalb des Bereichs
      für Unix-Zeitstempel liegt (d.h. typischer Weise vor 1970 oder nach 2037
      auf 32-bit-Systemen).
     </para>
    </warning>
    <para>
     Das Datum des Osterfestes wurde im Jahre 325 auf dem Konzil von
     Nicaea auf den ersten Sonntag nach Frühlingsvollmond, also dem
     Vollmond während oder direkt nach der Tagundnachtgleiche am
     21. März, festgelegt.  Der hier genutzte Algorithmus wurde um das Jahr 532
     von Dionysius Exiguus eingeführt. Bis zum Jahr 1752 wird nach dem
     Julianischen Kalender ein einfacher 19jähriger Zyklus für die
     Bestimmung der Mondphasen benutzt. Im September 1752 übernahmen
     dann auch Britannien und seine Kolonien den von Clavius und
     Lilius vorgeschlagenen und im Oktober 1582 von Papst Gregor dem
     XIII.  eingeführten Gregorianischen Kalender. Hierdurch wurden
     zwei Korrekturfaktoren eingeführt, um den Zyklus genauer
     abzubilden.
    </para>
   </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>year</parameter></term>
     <listitem>
      <para>
       Das Jahr als Zahl zwischen 1970 und 2037. Wenn nicht angegeben, wird das
       aktuelle Jahr gemäß der lokalen Zeit verwendet.
      </para>
     </listitem>
    </varlistentry>  
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Das Osterdatum als Unix Timestamp.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>easter_date</function> Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php

echo date("M-d-Y", easter_date(1999));        // Apr-04-1999
echo date("M-d-Y", easter_date(2000));        // Apr-23-2000
echo date("M-d-Y", easter_date(2001));        // Apr-15-2001

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    <function>easter_date</function> verlässt sich auf die Zeitfunktionen der C Bibliothek
    des Systems anstatt die internen Datums- und Zeitfunktionen von PHP zu verwenden.
    Infolgedessen verwendet <function>easter_date</function> die <literal>TZ</literal>
    Umgebungsvariable um die Zeitzone zu bestimmen, in der sie arbeiten soll,
    anstatt PHPs <link linkend="ini.date.timezone">default time zone</link> zu
    verwenden, was unerwartetes Verhalten zur Folge haben kann, wenn diese
    Funktion in Verbindung mit anderen Datumsfunktionen in PHP verwendet wird.
   </para>
   <para>
    Als Workaround kann <function>easter_days</function> mit
    <classname>DateTime</classname> und <classname>DateInterval</classname>
    verwendet werden, um den Beginn von Ostern in Ihrer PHP Zeitzone wie folgt zu berechnen:
   </para>
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
function get_easter_datetime($year) {
    $base = new DateTime("$year-03-21");
    $days = easter_days($year);

    return $base->add(new DateInterval("P{$days}D"));
}

foreach (range(2012, 2015) as $year) {
    printf("Ostern %d ist am %s\n",
           $year,
           get_easter_datetime($year)->format('j.n.'));
}
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Ostern 2012 ist am 8.4.
Ostern 2013 ist am 31.3.
Ostern 2014 ist am 20.4.
Ostern 2015 ist am 5.4.
]]>
    </screen>
   </informalexample>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     <function>easter_days</function> zur Berechnung des Osterdatums
     vor 1970 oder nach 2037
    </member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
