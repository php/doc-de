<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.10 $ -->
<!-- EN-Revision: 1.11 Maintainer: hholzgra Status: ready -->
  <refentry xml:id="function.ob-end-flush" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>ob_end_flush</refname>
    <refpurpose>
     Leert (schickt/sendet) den Ausgabe-Puffer und deaktiviert die
     Ausgabe-Pufferung
    </refpurpose>
   </refnamediv>
   <refsect1 role="description">
    &reftitle.description;
     <methodsynopsis>
      <type>bool</type><methodname>ob_end_flush</methodname>
      <void/>
     </methodsynopsis>
    <para>
     Der Inhalt des Ausgabepuffers (sofern vorhanden) wird abgeschickt
     und der Ausgabepuffer (aber nur dieser) wird deaktiviert. Falls sie mit dem
     Puffer-Inhalt weiter arbeiten möchten, müssen sie diesen erst per
     <function>ob_get_contents</function> zwischen speichern bevor sie
     <function>ob_end_flush</function> aufrufen, da dadurch der Puffer
     geleert wird.
    </para>
    <para>
     Die Funktion gibt &true; zurück wenn ein Ausgabepuffer entfernt
     wurde, &false; wenn kein aktiver Puffer vorhanden war oder der 
     aktuelle Puffer nicht deaktiviert werden konnte (dies ist bei
     speziellen Puffern möglich).
    </para>
    <para>
     Diese Funktion ähnelt <function>ob_get_flush</function>, liefert
     aber nur den Erfolgsstatus statt des aktuellen Pufferinhalts 
     zurück.
    </para>
   </refsect1>
         
   <refsect1 role="errors">
    &reftitle.errors;
    <para>
     If the function fails it generates an <constant>E_NOTICE</constant>.
    </para>
   </refsect1>
         
   <refsect1 role="changelog">
     &reftitle.changelog;
     <para>
      <informaltable>
       <tgroup cols="2">
        <thead>
         <row>
          <entry>&Version;</entry>
          <entry>&Description;</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry>4.2.0</entry>
          <entry>
           Die Funktion gibt nun den Erfolgsstatus als <type>bool</type> zurück.
          </entry>
         </row>
        </tbody>
       </tgroup>
      </informaltable>
     </para>
    </refsect1>

    <refsect1 role="examples">
 	 &reftitle.examples;
     <para>
     <example>
      <title><function>ob_end_clean</function> Beispiel</title>
      <para>
       Das folgende Beispiel zeigt einen einfachen Weg um alle aktiven
       Ausgabepuffer zu leeren und zu entfernen:
      </para>
      <programlisting role="php">
<![CDATA[
<?php
  while (@ob_end_flush());
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>

   <refsect1 role="seealso">
    &reftitle.seealso;
    <para>
     Siehe auch <function>ob_start</function>,
     <function>ob_get_contents</function>,
     <function>ob_get_flush</function>,
     <function>ob_flush</function> und
     <function>ob_end_clean</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
