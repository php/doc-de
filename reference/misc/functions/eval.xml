<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: hholzgra Status: ready -->
<refentry xml:id="function.eval" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>eval</refname>
  <refpurpose>Wertet eine Zeichenkette als PHP-Code aus</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>eval</methodname>
   <methodparam><type>string</type><parameter>code_str</parameter></methodparam>
  </methodsynopsis>
  <para>
   Wertet die in <parameter>code_str</parameter> enthaltene Zeichenkette als
   PHP-Code aus. Abgesehen von anderen Zwecken kann dies nützlich sein, um
   Code für eine spätere Ausführung im Textfeld einer Datenbank zu speichern.
  </para>
  <para>
   Beim Gebrauch von <function>eval</function> gilt es einige Faktoren zu
   beachten. Die übergebene Zeichenkette muss gültigen PHP-Code enthalten,
   einschließlich solcher Dinge wie Anweisungen mit einem Semikolon
   abzuschließen, damit der Parser nicht in der Zeile nach dem
   <function>eval</function> abbricht, und des richtigen Setzens des
   Escape-Zeichens in <parameter>code_str</parameter>. Um HTML-Ausgabe und
   PHP-Code zu mischen, können Sie zum Verlassen des PHP-Codes das schließende
   PHP-Tag verwenden.
  </para>
  <para>
   Beachten Sie, dass die innerhalb von <function>eval</function>
   vorgenommenen Variablen-Zuweisungen nach Abarbeitung auch im Hauptskript
   ihre Gültigkeit behalten.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>code_str</parameter></term>
     <listitem>
      <para>
       Die Code-Zeichenkette, die ausgewertet werden soll.
       <parameter>code_str</parameter> darf keine <link
       linkend="language.basic-syntax.phpmode">öffnenden PHP-Tags</link>
       enthalten.
      </para>
      <para>
       Eine <literal>return</literal>-Anweisung beendet die Auswertung der
       Zeichenkette sofort.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>eval</function> gibt &null; zurück, außer wenn im
   ausgewerteten Code <literal>return</literal> aufgerufen wird, dann aber
   wird der an <literal>return</literal> übergebene Wert zurückgegeben. Falls
   im ausgewerteten Code ein Parse Error auftritt, gibt
   <function>eval</function> &false; zurück und der weitere Code wird normal
   ausgeführt. Es ist in <function>eval</function> nicht möglich, einen Parse
   Error mittels <function>set_error_handler</function> abzufangen.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>eval</function> Beispiel (einfache Texteinfügung)</title>
    <programlisting role="php">
<![CDATA[
<?php
$string = 'Bierglas';
$name = 'Binding-Lager';
$str = 'Das ist mein $string, voll mit $name.';
echo $str . "\n";
eval ("\$str = \"$str\";");
echo $str . "\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Das ist mein $string, voll mit $name.
Das ist mein Bierglas, voll mit Binding-Lager.
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;

  &note.language-construct;

  &tip.ob-capture;
  <note>
   <para>
    Im Fall eines schweren Fehlers im augewerteten Code wird das komplette
    Skript beendet.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>call_user_func</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
