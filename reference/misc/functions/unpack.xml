<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 309256 Maintainer: sammywg Status: ready -->
<refentry xml:id="function.unpack" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>unpack</refname>
  <refpurpose>Entpackt die Daten eines Binär-Strings</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>unpack</methodname>
   <methodparam><type>string</type><parameter>format</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
  </methodsynopsis>
  <para>
   Überträgt die Daten eines Binär-Strings in ein Array unter Berücksichtigung
   des <parameter>format</parameter>-Parameters.
  </para>
  <para>
   Die entpackten Daten werden in einem assoziativen Array abgebildet. Hierzu
   müssen die verschiedenen Format-Codes benannt und mit "/" getrennt werden.
   Wenn ein sich wiederholendes Argument existiert, werden die Array-Schlüssel
   durchnummeriert, indem ihnen eine Zahl angehängt wird.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>format</parameter></term>
     <listitem>
      <para>
       Die Format-Codes werden unter <function>pack</function> näher erläutert.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Die gepackten Daten.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein assoziatives Array zurück, dass die entpackten Elemente als
   Binärzeichenkette enthält.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>unpack</function> Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$binarydata = "\x04\x00\xa0\x00";
$array = unpack("cchars/nint", $binarydata);
?>
]]>
    </programlisting>
    <para>
     Das Ergebnis Array enthält die Einträge "chars" mit dem wert
     <literal>4</literal> und "int" mit <literal>160</literal>.
    </para>
   </example>
  </para>

  <para>
   <example>
    <title><function>unpack</function> Beispiel mit Wiederholer</title>
    <programlisting role="php">
<![CDATA[
<?php
$binarydata = "\x04\x00\xa0\x00";
$array = unpack("c2chars/nint", $binarydata);
?>
]]>
     </programlisting>
     <para>
      Das Ergebnis Array wird die Einträge "chars1", "chars2" and "int"
      enthalten.
     </para>
    </example>
   </para>
  </refsect1>


 <refsect1 role="notes">
  &reftitle.notes;
  <caution>
   <para>
    Beachten Sie, dass PHP Integer-Werte intern mit Vorzeichen
    speichert. Wenn Sie einen großen vorzeichenlosen Longwert
    entpacken und er von der selben Größe ist, die PHP für dessen
    Speicherung verwendet, wird das Ergebnis ein negativer Wert sein
    (auch wenn Sie dieses als vorzeichenlos zu entpacken angegeben
    haben).
   </para>
  </caution>
  <caution>
   <para>
    Beachten Sie, dass für nicht benannte Elemente ein leerer String verwendet
    wird. Werden mehrere Elemente nicht bennant, werden die entsprechenden
    Elemente überschrieben, da die verwendeten Schlüssel identisch sind:
   </para>
   <para>
    <example>
     <title><function>unpack</function> Beispiel mit unbenannten Schlüsseln</title>
     <programlisting role="php">
<![CDATA[
<?php
$binarydata = "\x32\x42\x00\xa0";
$array = unpack("c2/n", $binarydata);
var_dump($array);
?>
]]>
     </programlisting>
     <para>
      Das Ergebnis Array wird die Elemente "1" mit dem Wert <literal>160</literal>
      und "2" mit <literal>66</literal> enthalten. Der erste Wert vom Symbol
      <literal>c</literal> wurde mit dem Wert vom Symbol <literal>n</literal>
      überschrieben.
     </para>
    </example>
   </para>
  </caution>
 </refsect1>
 

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pack</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
