<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 344003 Maintainer: sammywg Status: ready -->
<refentry xml:id="function.unpack" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>unpack</refname>
  <refpurpose>Entpackt die Daten eines Binär-Strings</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>unpack</methodname>
   <methodparam><type>string</type><parameter>format</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>offset</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Überträgt die Daten eines Binär-Strings in ein Array unter Berücksichtigung
   des <parameter>format</parameter>-Parameters.
  </para>
  <para>
   Die entpackten Daten werden in einem assoziativen Array abgebildet. Hierzu
   müssen die verschiedenen Format-Codes benannt und mit "/" getrennt werden.
   Wenn ein sich wiederholendes Argument existiert, werden die Array-Schlüssel
   durchnummeriert, indem ihnen eine Zahl angehängt wird.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>format</parameter></term>
     <listitem>
      <para>
       Die Format-Codes werden unter <function>pack</function> näher erläutert.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Die gepackten Daten.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Der Offset, an dem das Entpacken beginnt.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein assoziatives Array zurück, dass die entpackten Elemente als
   Binärzeichenkette enthält.
  </para>
 </refsect1>

 <refsect1 role="changelog"><!-- {{{ -->
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>7.2.0</entry>
       <entry>
        <type>float</type> und <type>double</type> Typen unterstützen sowohl Big
        Endian als auch Little Endian.
       </entry>
      </row>
      <row>
       <entry>7.1.0</entry>
       <entry>
        Das optionale <parameter>offset</parameter> wurde hinzugefügt.
       </entry>
      </row>
      <row>
       <entry>5.5.0</entry>
       <entry>
        <para>
         Änderungen wurden durchgeführt, um diese Funktion in Übereinstimmung
         mit Perl zu bringen:
        </para>
        <para>
         Der "a" Code erhält nun abschließende NULL Bytes.
        </para>
        <para>
         Der "A" Code entfernt nun alle abschließenden ASCII Whitespaces
         (Leerzeichen, Tabs, Zeilenvorschübe, Wagenrückläufe und NULL Bytes).
        </para>
        <para>
         Der "Z" Code wurde für mit NULL aufgefüllte Zeichenketten hinzugefügt,
         und entfernt abschließende NULL Bytes.
        </para>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1><!-- }}} -->

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>unpack</function> Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$binarydata = "\x04\x00\xa0\x00";
$array = unpack("cchars/nint", $binarydata);
print_r($array);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Array
(
    [chars] => 4
    [int] => 160
)
]]>
    </screen>
   </example>
  </para>

  <para>
   <example>
    <title><function>unpack</function> Beispiel mit Wiederholer</title>
    <programlisting role="php">
<![CDATA[
<?php
$binarydata = "\x04\x00\xa0\x00";
$array = unpack("c2chars/nint", $binarydata);
print_r($array);
?>
]]>
     </programlisting>
     &example.outputs;
     <screen>
<![CDATA[
Array
(
    [chars1] => 4
    [chars2] => 0
    [int] => 40960
)
]]>
     </screen>
    </example>
   </para>
  </refsect1>


 <refsect1 role="notes">
  &reftitle.notes;
  <caution>
   <para>
    Beachten Sie, dass PHP Integer-Werte intern mit Vorzeichen
    speichert. Wenn Sie einen großen vorzeichenlosen Longwert
    entpacken und er von der selben Größe ist, die PHP für dessen
    Speicherung verwendet, wird das Ergebnis ein negativer Wert sein
    (auch wenn Sie dieses als vorzeichenlos zu entpacken angegeben
    haben).
   </para>
  </caution>
  <caution>
   <para>
    Wird ein Element nicht benannt, dann werden numerische Indizes beginnend mit
    <literal>1</literal> verwendet. Es ist zu berücksichtigen, dass im Falle
    mehrerer unbenannter Elemente ein Teil der Daten überschrieben wird, da die
    Nummerierung für jedes Element wieder bei <literal>1</literal> beginnt.
   </para>
   <para>
    <example>
     <title><function>unpack</function> Beispiel mit unbenannten Schlüsseln</title>
     <programlisting role="php">
<![CDATA[
<?php
$binarydata = "\x32\x42\x00\xa0";
$array = unpack("c2/n", $binarydata);
var_dump($array);
?>
]]>
     </programlisting>
     &example.outputs;
     <screen>
<![CDATA[
array(2) {
  [1]=>
  int(160)
  [2]=>
  int(66)
}
]]>
     </screen>
     <para>
      Es ist zu beachten, dass der erste Wert vom Symbol
      <literal>c</literal> mit dem Wert vom Symbol <literal>n</literal>
      überschrieben wurde.
     </para>
    </example>
   </para>
  </caution>
 </refsect1>
 

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pack</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
