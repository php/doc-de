<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: sammywg Status: ready -->
<refentry xml:id="function.unpack" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>unpack</refname>
  <refpurpose>Entpackt die Daten eines Binär-Strings</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>unpack</methodname>
   <methodparam><type>string</type><parameter>format</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
  </methodsynopsis>
  <para>
   Überträgt die Daten eines Binär-Strings in ein Array unter Berücksichtigung
   des <parameter>format</parameter>-Parameters.
  </para>
  <para>
   <function>unpack</function> funktioniert etwas anders als man
   es von Perl her kennt, da sich die zurückgegebenen Daten in
   einem assoziativen Array befinden. Dies erreichen Sie nur, wenn
   Sie die verschiedenen Format-Codes benennen und sie mit
   einem "/" voneinander trennen.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>format</parameter></term>
     <listitem>
      <para>
       Die Format-Codes werden unter <function>pack</function> näher erläutert.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>data</parameter></term>
     <listitem>
      <para>
       Die gepackten Daten.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein assoziatives Array zurück, dass die entpackten Elemente als
   Binärzeichenkette enthält.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>unpack</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$array = unpack("c2chars/nint", $binarydata);
?>
]]>
    </programlisting>
    <para>
     Das resultierende Array wird die Einräge "chars1", "chars2" und
     "int" enthalten.
    </para>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <caution>
   <para>
    Beachten Sie, dass PHP Integer-Werte intern mit Vorzeichen
    speichert. Wenn Sie einen großen vorzeichenlosen Longwert
    entpacken und er von der selben Größe ist, die PHP für dessen
    Speicherung verwendet, wird das Ergebnis ein negativer Wert sein
    (auch wenn Sie dieses als vorzeichenlos zu entpacken angegeben
    haben).
   </para>
  </caution>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pack</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
