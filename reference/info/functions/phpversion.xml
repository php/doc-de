<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 30509282589c6fdee1bce55f3271caf464b5cd75 Maintainer: hholzgra Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: 4e6f0774f03131cbeeb8c21019a690bf97fd22b6 Reviewer: samesch -->
<!-- Credits: reinders -->
<refentry xml:id="function.phpversion" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>phpversion</refname>
  <refpurpose>Liefert die aktuelle PHP-Version</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>phpversion</methodname>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>extension</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Gibt die Versionsnummer der gerade laufenden PHP-Version oder der
   angegebenen Erweiterung als Zeichenkette zurück.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>extension</parameter></term>
     <listitem>
      <para>
       Der optionale Name einer Erweiterung.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt die Versionsnummer der gerade laufenden PHP-Version als
   <type>&string;</type> zurück. Wenn ein <type>&string;</type>-Argument für
   den Parameter <parameter>extension</parameter> angegeben wurde, wird die
   Versionsnummer dieser Erweiterung zurückgegeben, oder &false;, falls die
   Erweiterung nicht geladen ist oder keine Versionsinformationen enthält.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <informaltable>
   <tgroup cols="2">
    <thead>
     <row>
      <entry>&Version;</entry>
      <entry>&Description;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>extension</parameter> ist nun nullable (akzeptiert den
       &null;-Wert).
      </entry>
     </row>
    </tbody>
   </tgroup>
  </informaltable>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>phpversion</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php

// gibt z. B. 'Die aktuelle PHP-Version ist 8.3.12' aus
echo 'Die aktuelle PHP Version ist ' . phpversion();

// Gibt z. B. '1.22.3' aus oder nichts, falls die Erweiterung nicht aktiviert ist
echo phpversion('zip');

?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><constant>PHP_VERSION_ID</constant>-Beispiel und -Verwendung</title>
    <programlisting role="php">
<![CDATA[
<?php

/**
 * PHP_VERSION_ID ist als Zahl definiert; je höher diese ist,
 * desto neuer ist die PHP-Version. Es ist wie oben angegeben definiert:
 *
 * $version_id = $major_version * 10000 + $minor_version * 100 + $release_version;
 *
 * Nun kann PHP_VERSION_ID verwendet werden, um zu prüfen, ob diese PHP-Version
 * bestimmte Features unterstützt, ohne jedesmal version_compare() verwenden zu
 * müssen, um zu prüfen, ob die aktuelle PHP-Version bestimmte Features nicht
 * unterstützt.
 *
 * Beispielsweise können wir so die PHP_*_VERSION-Konstanten definieren,
 * die in Versionen vor 5.2.7 nicht verfügbar waren.
 */

if (PHP_VERSION_ID < 50207) {
    define('PHP_MAJOR_VERSION',   $version[0]);
    define('PHP_MINOR_VERSION',   $version[1]);
    define('PHP_RELEASE_VERSION', $version[2]);

    // und so weiter, ...
}

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Diese Information ist ebenfalls in der vordefinierten Konstante
    <constant>PHP_VERSION</constant> verfügbar. Weitere Versionsinformationen
    sind durch die Verwendung der
    <constant>PHP_<replaceable>*</replaceable>_VERSION</constant>-Konstanten
    verfügbar.
   </para>
  </note>
  <note>
   <para>
    Manche Erweiterungen definieren zwar ihre eigene Versionsnummer, aber die
    meisten der integrierten Erweiterungen verwenden die PHP-Version als
    Versionsnummer.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link linkend="reserved.constants.core">PHP_VERSION-Konstanten</link></member>
    <member><function>version_compare</function></member>
    <member><function>phpinfo</function></member>
    <member><function>phpcredits</function></member>
    <member><function>zend_version</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
