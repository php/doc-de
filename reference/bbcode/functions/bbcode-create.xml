<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 331434 Maintainer: patrickeigensatz Status: ready -->

<refentry xml:id="function.bbcode-create" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>bbcode_create</refname>
  <refpurpose>Erstellt eine BBCode Ressource</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>bbcode_create</methodname>
   <methodparam choice="opt"><type>array</type><parameter>bbcode_initial_tags</parameter><initializer>NULL</initializer></methodparam>
  </methodsynopsis>
  <para>
   Diese Funktion gibt eine neue BBCode Ressource zurück, die benötigt wird,
   um BBCode Strings zu parsen.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>bbcode_initial_tags</parameter></term>
     <listitem>
      <para>
       Ein assoziatives Array, das die die Tag-Namen und Parameter enthält,
       die benötigt werden, um den BBCode richtig parsen zu können.
       Die folgenden Schlüssel/Wert Paare werden unterstützt: 
        <itemizedlist>
         <listitem>
          <simpara>
           <varname remap="structfield">flags</varname> optional - ein Bitmaske,
           das auf den BBCODE_FLAGS_* Konstanten basiert.
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           <varname remap="structfield">type</varname> erforderlich - eine Ganzzahl,
           das den Typ eines Tag angibt. Die BBCODE_TYPE_* Konstanten sind zu verwenden.
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           <varname remap="structfield">open_tag</varname> erforderlich - der HTML
           Code für den öffnenden Tag.
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           <varname remap="structfield">close_tag</varname> erforderlich - der HTML
           Code für den schliessenden Tag.
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           <varname remap="structfield">default_arg</varname> optional - 
           verwende diesen Wert als Standardargument, wenn keines angegeben wird
           und tag_type OPTARG enspricht.
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           <varname remap="structfield">content_handling</varname> optional - 
           Gibt den Callback an, der benutzt wird um den Inhalt zu verändern.
           Die objektorientierte Schreibweise wird erst seit 0.10.1 unterstützt.
           Die Signatur des Callbacks ist string name<literal>(string $content, string $argument)</literal>.
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           <varname remap="structfield">param_handling</varname> optional - 
           Gibt den Callback an, der benutzt wird um das Argument zu verändern.
           Die objektorientierte Schreibweise wird erst seit 0.10.1 unterstützt.
           Die Signatur des Callbacks ist string name<literal>(string $content, string $argument)</literal>
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           <varname remap="structfield">childs</varname> optional - Eine Liste von
           erlaubten untergeordneten Tags.
           Die Liste ist durch Kommas getrennt. Wenn die Liste mit ! beginnt,
           gilt sie als die Liste mit verbotenen untergeordneten Tags.
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           <varname remap="structfield">parent</varname> optional - 
           Eine Liste von erlaubten übergeordneten Tags. Die Liste ist durch Kommas
           getrennt.
          </simpara>
         </listitem>
        </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt eine BBCode_Container Ressource zurück.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>bbcode_create</function> Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$arrayBBCode=array(
    ''=>         array('type'=>BBCODE_TYPE_ROOT,  'childs'=>'!i'),
    'i'=>        array('type'=>BBCODE_TYPE_NOARG, 'open_tag'=>'<i>',
                    'close_tag'=>'</i>', 'childs'=>'b'),
    'url'=>      array('type'=>BBCODE_TYPE_OPTARG,
                    'open_tag'=>'<a href="{PARAM}">', 'close_tag'=>'</a>',
                    'default_arg'=>'{CONTENT}',
                    'childs'=>'b,i'),
    'img'=>      array('type'=>BBCODE_TYPE_NOARG,
                    'open_tag'=>'<img src="', 'close_tag'=>'" />',
                    'childs'=>''),
    'b'=>        array('type'=>BBCODE_TYPE_NOARG, 'open_tag'=>'<b>',
                    'close_tag'=>'</b>'),
);
$text=<<<EOF
[b]Fetter Text[/b]
[i]Kursiver Text[/i]
[url]http://www.php.net/[/url]
[url=http://pecl.php.net/][b]Inhaltstext[/b][/url]
[img]http://static.php.net/www.php.net/images/php.gif[/img]
[url=http://www.php.net/]
[img]http://static.php.net/www.php.net/images/php.gif[/img]
[/url]
EOF;
$BBHandler=bbcode_create($arrayBBCode);
echo bbcode_parse($BBHandler,$text);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
<b>Fetter Text</b>
[i]Kursiver Text[/i]
<a href="http://www.php.net/">http://www.php.net/</a>
<a href="http://pecl.php.net/"><b>Inhaltstext</b></a>
<img src="http://static.php.net/www.php.net/images/php.gif" />
<a href="http://www.php.net/">
[img]http://static.php.net/www.php.net/images/php.gif[/img]
</a>
]]>
    </screen>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
