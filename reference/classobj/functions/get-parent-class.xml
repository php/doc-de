<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.10 Maintainer: samesch Status: ready -->
<refentry id="function.get-parent-class">
 <refnamediv>
  <refname>get_parent_class</refname>
  <refpurpose>Gibt den Namen der Elternklasse eines Objektes zurück</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>get_parent_class</methodname>
   <methodparam choice="opt"><type>mixed</type><parameter>Objekt</parameter></methodparam>
  </methodsynopsis>
  <para>
   Gibt den Namen der Elternklasse eines Objekts oder einer Klasse zurück.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>Objekt</parameter></term>
     <listitem>
      <para>
       Das untersuchte Objekt oder der untersuchte Klassenname.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt den Namen der Elternklasse der Klasse zurück, von der
   <parameter>Objekt</parameter> eine Instanz oder der Name ist.
  </para>
  <para>
   Falls die Funktion außerhalb eines Objekts ohne Parameter aufgerufen wird,
   gibt sie &false; zurück.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>Vor 5.1.0</entry>
       <entry>
        Falls die Funktion außerhalb eines Objekts ohne Parameter aufgerufen
        wird, gibt sie &null; zurück mit einer Warnung.
       </entry>
      </row>
      <row>
       <entry>Ab 5.0.0</entry>
       <entry>
        Der Parameter <parameter>Objekt</parameter> ist optional, falls die
        Funktion von einer Methode eines Objekts aufgerufen wird.
       </entry>
      </row>
      <row>
       <entry>Ab 4.0.5</entry>
       <entry>
        Falls <parameter>Objekt</parameter> eine Zeichenkette ist, gibt diese
        Funktion den Namen der Elternklasse der Klasse mit diesem Namen
        zurück.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Die Verwendung von <function>get_parent_class</function></title>
    <programlisting role="php">
<![CDATA[
<?php

class vater {
  function vater()
  {
  // implementiert etwas Logik
  }
}

class kind extends vater {
  function kind()
  {
    echo "Ich bin das Kind von " , get_parent_class($this) , "\n";
  }
}

class kind2 extends vater {
  function kind2()
  {
    echo "Ich bin ebenfalls das Kind von " , get_parent_class('kind2') , "\n";
  }
}

$foo = new kind();
$bar = new kind2();

?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Ich bin das Kind von vater
Ich bin ebenfalls das Kind von vater
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>get_class</function></member>
    <member><function>is_subclass_of</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
