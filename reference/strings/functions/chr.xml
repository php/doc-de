<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 345229 Maintainer: sammywg Status: ready -->

<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="function.chr">
 <refnamediv>
  <refname>chr</refname>
  <refpurpose>Erzeuge eine Ein-Byte-Zeichenkette aus einer Zahl</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>chr</methodname>
   <methodparam><type>int</type><parameter>bytevalue</parameter></methodparam>
  </methodsynopsis>
  <para>
   Gibt einen Ein-Zeichen-String zur√ºck, der das angegebene Zeichen enth√§lt, wobei
   <parameter>bytevalue</parameter> als vorzeichenlose Ganzzahl interpretiert wird.
  </para>
  <para>
   Dies kann verwendet werden, um einen Ein-Zeichen-String in einer
   Ein-Byte-Kodierung wie ASCII, ISO-8859 oder Windows 1252 zu erzeugen, indem
   die Position des gew√ºnschten Zeichens in der Kodierungszuordnungstabelle
   √ºbergeben wird. Allerdings ist zu beachten, dass diese Funktion die
   Zeichenkettenkodierung ignoriert, und insbesondere kein Unicode Code-Point
   √ºbergeben werden kann, um eine Zeichenkette in einer Multi-Byte-Kodierung wie
   UTF-8 oder UTF-16 zu erzeugen.
  </para>
  <para>
   Die Funktion erg√§nzt <function>ord</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>bytevalue</parameter></term>
     <listitem>
      <para>
       Ein Integer zwischen 0 und 255.
      </para>
      <para>
       Werte au√üerhalb des g√ºltigen Bereichs (0..255) werden bitweise mit 255
       und-verkn√ºpft, was gleichwertig zu folgendem Algorithmus ist:
       <programlisting role="php">
<![CDATA[
while ($bytevalue < 0) {
    $bytevalue += 256;
}
$bytevalue %= 256;
]]>
       </programlisting>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Ein Ein-Zeichen-String, der das angegebene Byte enth√§lt.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>chr</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
// Es wird angenommen, dass die Zeichenkette als ASCII oder ASCII-kompatible Kodierung verwendet wird
$str = "Dieser String endet mit einem Escape-Zeichen: ";
$str .= chr(27); /* f√ºgt das Escape-Zeichen an das Ende von $str an */

/* Die h√§ufig praktischere L√∂sung: */

$str = sprintf("Dieser String endet mit einem Escape-Zeichen: %c", 27);
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>√úberlauf-Verhalten</title>
    <programlisting role="php">
<![CDATA[
<?php
echo chr(-159), chr(833), PHP_EOL;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
aA
]]>
    </screen>
   </example>
  </para>
  <para> 
   <example>
    <title>Erstellen eines UTF-8-String aus einzelnen Bytes</title>
    <programlisting role="php">
<![CDATA[
<?php
declare(encoding='UTF-8');
$str = chr(240) . chr(159) . chr(144) . chr(152);
echo $str;
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
üêò
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sprintf</function> mit der Formatierungsanweisung <literal>%c</literal></member>
    <member><function>ord</function></member>
    <member>Eine <link xlink:href="&url.asciitable;">ASCII-Tabelle</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
