<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 283839 Maintainer: sammywg Status: ready -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.strtr" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>strtr</refname>
  <refpurpose>Tauscht bestimmte Zeichen aus</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>strtr</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
   <methodparam><type>string</type><parameter>from</parameter></methodparam>
   <methodparam><type>string</type><parameter>to</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>string</type><methodname>strtr</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
   <methodparam><type>array</type><parameter>replace_pairs</parameter></methodparam>
  </methodsynopsis>
  <para>
   Diese Funktion gibt eine Kopie von <parameter>str</parameter> zurück, in der
   alle Vorkommen jedes Zeichens von <parameter>from</parameter> in das
   korrespondierende Zeichen in <parameter>to</parameter> umgewandelt wurden.
  </para>
  <para>
   Haben <parameter>from</parameter> und <parameter>to</parameter> eine
   unterschiedliche Länge, werden die überzähligen Zeichen im jeweils
   längeren Parameter ignoriert.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>str</parameter></term>
     <listitem>
      <para>
       Der <type>String</type>, in dem die Ersetzungen vorgenommen werden sollen.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>from</parameter></term>
     <listitem>
      <para>
       Der <type>String</type>, der gegen <parameter>to</parameter> ausgetauscht
       werden soll.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>to</parameter></term>
     <listitem>
      <para>
       Der <type>String</type>, der <parameter>from</parameter> ersetzen soll.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replace_pairs</parameter></term>
     <listitem>
      <para>
       Der <parameter>replace_pairs</parameter>-Parameter kann als Alternative
       für die Parameter <parameter>to</parameter> und
       <parameter>from</parameter> verwendet werden. In diesem Fall muss ein
       <type>array</type> in der Form <literal>array('von' => 'nach',
       ...)</literal> übergeben werden.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Die Funktion gibt eine Kopie von <parameter>str</parameter> zurück, in der
   alle Vorkommen eines Zeichens in <parameter>from</parameter> gegen ihr
   entsprechendes Pendant in <parameter>to</parameter> ausgetauscht wurden.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.0.0</entry>
       <entry>
        Die optionalen Parameter <parameter>to</parameter> und
        <parameter>from</parameter> wurden eingeführt.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>strtr</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$addr = strtr($addr, "äåö", "aao");
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <function>strtr</function> kann auch mit nur zwei Argumenten
   aufgerufen werden. Wenn der Aufruf mit zwei Argumenten durchgeführt
   wird, verhält sich die Funktion anders: <parameter>from</parameter>
   muss nun ein Array sein, das string -> string-Paare enthält, die
   im Originalstring ersetzt werden sollen. <function>strtr</function>
   tauscht dabei zuerst die längsten möglichen Treffer aus und verändert
   bereits durchgeführte Ersetzungen *NICHT*.
  </para>
  <example>
   <title><function>strtr</function>-Beispiel mit zwei Argumenten</title>
    <programlisting role="php">
<![CDATA[
<?php
$trans = array("hallo" => "hi", "hi" => "hallo");
echo strtr("hi ihr, ich sagte hallo", $trans);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
hallo ihr, ich sagte hi
]]>
    </screen>
  </example>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>preg_replace</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
