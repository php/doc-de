<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.9 $ -->
<!-- EN-Revision: 1.15 Maintainer: sammywg Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.substr">
 <refnamediv>
  <refname>substr</refname>
  <refpurpose>Gibt einen Teil eines Strings zurück</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>substr</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam><type>int</type><parameter>start</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
  </methodsynopsis>
  <para>
   Gibt den Teil von <parameter>string</parameter> zurück, der durch die
   Parameter <parameter>start</parameter> und <parameter>length</parameter>
   definiert wurde.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       Die Eingabezeichenkette.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>start</parameter></term>
     <listitem>
      <para>
       Wenn <parameter>start</parameter> nicht negativ ist, beginnt der
       zurückgegebene String an der <parameter>start</parameter>-Position von
       <parameter>string</parameter>, angefangen bei <literal>0</literal>
       (Null). So ist z.B. im String '<literal>abcdef</literal>' das Zeichen
       an der Position <literal>0</literal> gleich '<literal>a</literal>',
       das Zeichen an der Position <literal>2</literal> ist
       '<literal>c</literal>' usw.
      </para>
      <para>
       Ist <parameter>start</parameter> negativ, beginnt der zurückgegebene
       String bei dem in <parameter>start</parameter> festgelegten Zeichen
       vom Ende von <parameter>string</parameter> aus betrachtet.
      </para>
      <para>
       <example>
        <title>Negativen <parameter>start</parameter>-Wert verwenden</title>
        <programlisting role="php">
<![CDATA[
<?php
$rest = substr("abcdef", -1);    // gibt "f" zurück
$rest = substr("abcdef", -2);    // gibt "ef" zurück
$rest = substr("abcdef", -3, 1); // gibt "d" zurück
?>
]]>
        </programlisting>
       </example>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Ist <parameter>length</parameter> angegeben und positiv, enthält der
       zurückgegebene String höchstens <parameter>length</parameter> Zeichen
       ab <parameter>start</parameter> (abhängig von der Länge von
       <parameter>string</parameter>). Ist <parameter>string</parameter>
       kürzer als oder gleich <parameter>start</parameter> Zeichen, wird &false;
       zurückgegeben.
      </para>
      <para>
       Ist <parameter>length</parameter> angegeben und negativ, werden
       genau so viele Zeichen vom Ende von <parameter>string</parameter>
       abgeschnitten (nachdem die Startposition ermittelt wurde, sollte
       <parameter>start</parameter> negativ sein). Gibt
       <parameter>start</parameter> eine Position hinter dem abzuschneidenden
       Teil an, wird ein leerer String zurückgegeben.
      </para>
      <example>
       <title>Negativen <parameter>length</parameter>-Wert verwenden</title>
       <programlisting role="php">
<![CDATA[
<?php
$rest = substr("abcdef", 0, -1);  // gibt "abcde" zurück
$rest = substr("abcdef", 2, -1);  // gibt "cde" zurück
$rest = substr("abcdef", 4, -4);  // gibt "" zurück
$rest = substr("abcdef", -3, -1); // gibt "de" zurück
?>
]]>
       </programlisting>
      </example>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt den extrahierten Teil der Zeichenkette zurück.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Generelle Verwendung von <function>substr</function></title>
    <programlisting role="php">
<![CDATA[
<?php
echo substr('abcdef', 1);     // bcdef
echo substr('abcdef', 1, 3);  // bcd
echo substr('abcdef', 0, 4);  // abcd
echo substr('abcdef', 0, 8);  // abcdef
echo substr('abcdef', -1, 1); // f

// Auf ein einzelnes Zeichen eines Strings kann auch mittels
// geschweifter Klammern zugegriffen werden
$string = 'abcdef';
echo $string{0};                 // a
echo $string{3};                 // d
echo $string{strlen($string)-1}; // f

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strrchr</function></member>
    <member><function>substr_replace</function></member>
    <member><function>preg_match</function></member>
    <member><function>trim</function></member>
    <member><function>mb_substr</function></member>
    <member><function>wordwrap</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
