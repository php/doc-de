<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./de/functions/strings.xml, last change in rev 1.2 -->
<!-- last change to 'substr' in en/ tree in rev 1.2 -->
<!-- EN-Revision: 1.1 Maintainer: tschuer Status: ready -->
<!-- OLD-Revision: 1.58/EN.1.2 -->
  <refentry id="function.substr">
   <refnamediv>
    <refname>substr</refname>
    <refpurpose>Gibt einen Teilstring zurück</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
     <methodsynopsis>
      <type>string</type><methodname>substr</methodname>
      <methodparam><type>string</type><parameter>string</parameter></methodparam>
      <methodparam><type>int</type><parameter>start</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>substr</function> gibt den Teil von 
     <parameter>string</parameter> zurück, der durch die 
     <parameter>start</parameter> und <parameter>length</parameter>
     Parameter definiert wurde.
    </para>
    <para>
     Wenn <parameter>start</parameter> positiv ist, beginnt der zurück
     gegebene String an der <parameter>start</parameter>-Position von
     <parameter>string</parameter>, angefangen bei &null;. So ist z.B. im
     String '<literal>abcdef</literal>' das Zeichen an der Position
     <literal>0</literal> gleich '<literal>a</literal>', das Zeichen an
     der Position <literal>2</literal> ist '<literal>c</literal>' usw.
    </para>  
    <para>
     Beispiele:
     <informalexample>
      <programlisting role="php">
$rest = substr ("abcdef", 1);    // gibt "bcdef" zurück
$rest = substr ("abcdef", 1, 3); // gibt "bcd" zurück
      </programlisting>
     </informalexample>
    </para>
    <para>
     Ist <parameter>start</parameter> negativ, gibt er den Beginn-Wert
     ab Ende des Strings an (also rückwärts gezählt).
    </para>  
    <para>
     Beispiele:
     <informalexample>
      <programlisting role="php">
$rest = substr ("abcdef", -1);     // gibt "f" zurück
$rest = substr ("abcdef", -2);     // gibt "ef" zurück
$rest = substr ("abcdef", -3,  1); // gibt "d" zurück
$rest = substr ("abcdef",  1, -1); // gibt "bcde" zurück
$rest = substr ("abcdef",  4, -4); // gibt "" zurück (nichts)
$rest = substr ("abcdef",  7,  1); // gibt "" zurück (nichts)
$rest = substr ("abcdef",  7, -4); // gibt "" zurück (nichts)
$rest = substr ("abcdef",  4,  4); // gibt "ef" zurück
$rest = substr ("abcdef", -2,  4); // gibt "ef" zurück
$rest = substr ("abcdef", -5, -4); // gibt "b" zurück
      </programlisting>
     </informalexample>
    </para>
    <para>
     Siehe auch <function>strrchr</function> und
     <function>ereg</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
