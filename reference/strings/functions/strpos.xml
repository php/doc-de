<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.11 Maintainer: sammywg Status: ready -->
<!-- splitted from ./de/functions/strings.xml, last change in rev 1.5 -->
  <refentry id="function.strpos">
   <refnamediv>
    <refname>strpos</refname>
    <refpurpose>
     Sucht das erste Vorkommen des Suchstrings
    </refpurpose>
   </refnamediv>
   <refsect1 role="description">
    &reftitle.description;
     <methodsynopsis>
      <type>int</type><methodname>strpos</methodname>
      <methodparam><type>string</type><parameter>haystack</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>needle</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>offset</parameter></methodparam>
     </methodsynopsis>
    <para>
     Gibt die numerische Position des ersten Vorkommens von
     <parameter>needle</parameter> innerhalb der Zeichenkette
     <parameter>haystack</parameter> zurück. Anders als
     <function>strrpos</function> akzeptiert diese Funktion eine komplette
     Zeichenkette als <parameter>needle</parameter>-Parameter und verwendet
     den gesamten String zur Suche.
    </para>
    <para>
     Wurde <parameter>needle</parameter> nicht gefunden, gibt
     <function>strpos</function> den <type>boolean</type>-Wert &false; zurück.
    </para>

    &return.falseproblem;
    &note.bin-safe;
    <para>
     <example>
      <title><function>strpos</function>-Beispiel:</title>
	    <programlisting role="php">
<![CDATA[
<?php
$meinString = 'abc';
$findMich   = 'a';
$pos = strpos($meinString, $findMich);

// Beachten Sie die Verwendung von ===. Ein einfacher Vergleich (==) liefert
// nicht das erwartete Ergebnis, da die Position von 'a' die nullte Stelle
// (also das erste Zeichen) ist
if ($pos === false) {
    echo "Der Stringg '$findMich' wurde nicht im String '$meinString' gefunden";
} else {
    echo "Der Stringg '$findMich' wurde im String '$meinString' gefunden";
    echo " und steht an Stelle $pos";
}

// Wir koennen nach einem Zeichen suchen und dabei alles vor dem Offset ignorieren
$newstring = 'abcdef abcdef';
$pos = strpos($newstring, 'a', 1); // $pos = 7, nicht 0
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Ist <parameter>needle</parameter> kein String, wird der Parameter in einen
     Integerwert konvertiert, der dem Ordinalwert des Zeichens entspricht.
    </para>
    <para>
     Der optionale Parameter <parameter>offset</parameter> ermöglicht
     es Ihnen, die Startposition für die Suche innerhalb von
     <parameter>haystack</parameter> anzugeben. Die zurück gegebene
     Positions-Angabe ist dann relativ zum Anfang von
     <parameter>haystack</parameter>.
    </para>
    <para>
     Siehe auch
     <function>strrpos</function>,
     <function>stripos</function>,
     <function>strripos</function>,
     <function>strrchr</function>,
     <function>substr</function>,
     <function>stristr</function> und
     <function>strstr</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
