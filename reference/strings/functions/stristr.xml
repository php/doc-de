<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.13 $ -->
<!-- EN-Revision: 1.17 Maintainer: sammywg Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.stristr">
 <refnamediv>
  <refname>stristr</refname>
  <refpurpose>Wie <function>strstr</function>, aber ohne Rücksicht auf Groß- bzw.
     Kleinschreibung</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>stristr</methodname>
   <methodparam><type>string</type><parameter>haystack</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>needle</parameter></methodparam>
   <methodparam><type>bool</type><parameter>before_needle</parameter></methodparam>
  </methodsynopsis>
  <para>
   Gibt den String <parameter>haystack</parameter> ab dem ersten Vorkommen
   von <parameter>needle</parameter> bis zum Ende zurück.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>haystack</parameter></term>
     <listitem>
      <para>
       Die Zeichenkette, in der gesucht werden soll.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>needle</parameter></term>
     <listitem>
      <para>
       Ist <parameter>needle</parameter> kein String, wird der Parameter in einen
       Integerwert konvertiert, der dem Ordinalwert des Zeichens entspricht.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>before_needle</parameter></term>
     <listitem>
      <para>
       Wenn der Wert auf &true; gesetzt ist (Standardwert ist &false;), gibt
       <function>stristr</function> den Teil von <parameter>haystack</parameter>
       vor dem ersten Auftreten von <parameter>needle</parameter> zurück.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <para>
   <parameter>needle</parameter> und <parameter>haystack</parameter>
   werden ohne Rücksicht auf Groß- oder Kleinschreibung untersucht.
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt den gefundenen Teilstring zurück. Wenn <parameter>needle</parameter>
   nicht gefunden wurde, gibt die Funktion &false; zurück.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>6.0.0</entry>
       <entry>
        Der Parameter <parameter>before_needle</parameter> wurde hinzugefügt.
      </entry>
      </row>
      <row>
       <entry>4.3.0</entry>
       <entry>
        <function>stristr</function> ist jetzt Binary safe.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>stristr</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
  $email = 'USER@EXAMPLE.com';
  echo stristr($email, 'e');       // Ausgabe: ER@EXAMPLE.com
  echo stristr($email, 'e', true); // Ausgabe: US
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Prüfen, ob ein String gefunden wurde oder nicht</title>
    <programlisting role="php">
<![CDATA[
<?php
  $string = 'Hallo Welt!';
  if(stristr($string, 'Erde') === FALSE) {
    echo '"Erde" nicht gefunden';
  }
// Ausgabe: "Erde" nicht gefunden
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Verwendung eines Wertes, der kein String ist</title>
    <programlisting role="php">
<![CDATA[
<?php
  $string = 'APFEL';
  echo stristr($string, 97); // 97 = kleines a
// Ausgabe: APFEL
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>strstr</function></member>
    <member><function>strrchr</function></member>
    <member><function>substr</function></member>
    <member><function>preg_match</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
