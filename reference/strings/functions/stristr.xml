<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.10 $ -->
<!-- EN-Revision: 1.10 Maintainer: sammywg Status: ready -->
  <refentry xml:id="function.stristr" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>stristr</refname>
    <refpurpose>
     Wie <function>strstr</function>, aber ohne Rücksicht auf Groß- bzw.
     Kleinschreibung
    </refpurpose>
   </refnamediv>
   <refsect1 role="description">
    &reftitle.description;
     <methodsynopsis>
      <type>string</type><methodname>stristr</methodname>
      <methodparam><type>string</type><parameter>haystack</parameter></methodparam>
      <methodparam><type>string</type><parameter>needle</parameter></methodparam>
     </methodsynopsis>
    <para>
     Gibt den String <parameter>haystack</parameter> ab dem ersten Vorkommen
     von <parameter>needle</parameter> bis zum Ende zurück.
     <parameter>needle</parameter> und <parameter>haystack</parameter>
     werden dabei ohne Rücksicht auf Groß- oder Kleinschreibung untersucht.
    </para>
    <para>
     Wird <parameter>needle</parameter> nicht gefunden, gibt die Funktion
     &false; zurück.
    </para>
    <para>
     Ist <parameter>needle</parameter> kein String, wird der Parameter in einen
     Integerwert konvertiert, der dem Ordinalwert des Zeichens entspricht.
    </para>
    <para>
     <example>
      <title><function>stristr</function>-Beispiel</title>
      <programlisting role="php">
<![CDATA[
<?php
  $email = 'USER@EXAMPLE.com';
  echo stristr($email, 'e');
// Ausgabe: ER@EXAMPLE.com
?>
]]>
      </programlisting>
     </example>
    </para>

    <para>
     <example>
      <title>Prüfen, ob ein String gefunden wurde oder nicht</title>
      <programlisting role="php">
<![CDATA[
<?php
  $string = 'Hallo Welt!';
  if(stristr($string, 'Erde') === FALSE) {
    echo '"Erde" nicht gefunden';
  }
// Ausgabe: "Erde" nicht gefunden
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Verwendung eines Wertes, der kein String ist</title>
      <programlisting role="php">
<![CDATA[
<?php
  $string = 'APFEL';
  echo stristr($string, 97); // 97 = kleines a
// Ausgabe: APFEL
?>
]]>
      </programlisting>
     </example>
    </para>

    &note.bin-safe;

    <para>
     Siehe auch
     <function>strstr</function>,
     <function>strrchr</function>,
     <function>substr</function> und
     <function>preg_match</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
