<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.3 Maintainer: sammywg Status: working -->
<!-- splitted from ./de/functions/strings.xml, last change in rev 1.2 -->
  <refentry id="function.addslashes">
   <refnamediv>
    <refname>addslashes</refname>
    <refpurpose>Stellt bestimmten Zeichen eines Strings ein "\" voran</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>string</type><methodname>addslashes</methodname>
      <methodparam><type>string</type><parameter>str</parameter></methodparam>
     </methodsynopsis>
    <para>
     Gibt einen String (Zeichenkette) zurück, in dem bestimmten
     Zeichen ein Backslash "\" voran gestellt wurde. Diese Funktion
     ist z.B. für Datenbankabfragen wichtig. Die behandelten Zeichen
     sind das einfache und der doppelte Anführungszeichen
     (<literal>'</literal> und <literal>"</literal>), der Backslash 
     selbst (<literal>\</literal>) sowie NUL (das Null-Byte).
    </para>
    <para>
     Ein Beispiel für die Verwendung von <function>addslashes</function>
     ist das Schreiben von Daten in eine Datenbank. Möchte man zum Beispiel
     einen Namen wie <literal>O'reilly</literal> in ein Datenbankfeld schreiben, 
     muss er escaped sein. Die meisten Datenbanken verwenden dafür einen
     Backslash (<literal>\</literal>), das bedeutet, der String wird in 
     der Form <literal>O\'reilly</literal> erwartet. Dies ist ausschließlich
     für das Einfügen von Daten in eine Datenbank notwendig, der extra
     <literal>\</literal> wird nicht wirklich eingefügt.
     Hat der php.ini-Parameter <link linkend="ini.magic-quotes-sybase">
     magic_quotes_sybase</link> den Wert <literal>on</literal>, wird
     ein <literal>'</literal> anstelle des Backslashes mit einem
     weiteren <literal>'</literal> escaped.
    </para>
    <para>
     Die PHP-Direktive <link linkend="ini.magic-quotes-gpc">
     magic_quotes_gpc</link> hat standardmäßig den Wert 
     <literal>on</literal>, so dass grundsätzlich die Funktion
     <function>addslashes</function> auf alle GET-, POST- und COOKIE-Daten
     angewendet wird. Verwenden Sie daher die Funktion
     <function>addslashes</function> nicht, wenn Strings bereits durch
     <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link> escaped
     wurden, ansonsten erhalten Sie doppeltes Escaping. Um herauszufinden,
     ob der Parameter aktiviert ist, verwenden Sie am Einfachsten die
     Funktion <function>get_magic_quotes_gpc</function>.
    </para>
    <para>
     <example>
      <title>Ein <function>addslashes</function> Beispiel</title>
      <programlisting role="php">
<![CDATA[
<?php
$str = "Ist dein Name wirklich O'reilly?";

// Ausgabe: Ist dein Name wirklich O\'reilly?
echo addslashes($str);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Siehe auch <function>stripslashes</function>, 
     <function>htmlspecialchars</function>,
     <function>quotemeta</function> und 
     <function>get_magic_quotes_gpc</function>.
    </para>
   </refsect1>
  </refentry>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
