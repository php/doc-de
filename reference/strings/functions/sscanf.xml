<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./de/functions/strings.xml, last change in rev 1.2 -->
<!-- last change to 'sscanf' in en/ tree in rev 1.33 -->
<!-- EN-Revision: 1.1 Maintainer: tschuer Status: ready -->
<!-- OLD-Revision: 1.58/EN.1.33 -->
  <refentry id="function.sscanf">
   <refnamediv>
    <refname>sscanf</refname>
    <refpurpose>
     Übertragt die Eingaben eines Strings in ein angegebenes Format
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
     <methodsynopsis>
      <type>mixed</type><methodname>sscanf</methodname>
      <methodparam><type>string</type><parameter>str</parameter></methodparam>
      <methodparam><type>string</type><parameter>format</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>var1</parameter></methodparam>
     </methodsynopsis>
    <para>
     Die Funktion <function>sscanf</function> ist die Eingabe analog zu
     <function>printf</function>. <function>sscanf</function> liest den
     <parameter>str</parameter>-String und interpretiert ihn Anlehnung 
     an die angegebenen <parameter>format</parameter> Parameter. Werden
     nur 2 Parameter angegeben, werden die analysierten Werte als Array
     zurück gegeben.
     <example>
      <title><function>sscanf</function>-Beispiel:</title>
      <programlisting role="php">
// Ermittlung der Serien-Nr.
$serial = sscanf("SN/2350001","SN/%d");
// und des Herstellungsdatums
$mandate = "Januar 01 2000";
list($monat, $tag, $jahr) = sscanf($mandate,"%s %d %d");
echo "Das Teil $serial wurde hergestellt am: $jahr-".substr($monat,0,3)."-$tag\n";
      </programlisting>
     </example>
     Werden optionale Parameter übergeben, gibt die Funktion die Anzahl
     der ermittelten Werte zurück. Die optionalen Parameter müssen
     refenziert übergeben werden.
     <example>
      <title>
       <function>sscanf</function> - Gebrauch optionaler Parameter
      </title>
      <programlisting role="php">
// Ermittlung der Autoren-Info und Erzeugung eines DocBook-Eintrages
$auth = "24\tLewis Carroll";
$n = sscanf($auth,"%d\t%s %s", &amp;$id, &amp;$first, &amp;$last);
echo "&lt;author id='$id'&gt;
      &lt;firstname&gt;$first&lt;/firstname&gt;
      &lt;surname&gt;$last&lt;/surname&gt;
      &lt;/author&gt;\n";
      </programlisting>
     </example>
    </para>
    <para>
     Siehe auch: <function>fscanf</function>,
     <function>printf</function> und <function>sprintf</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
