<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 288721 Maintainer: sammywg Status: ready -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.number-format" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>number_format</refname>
  <refpurpose>Formatiert eine Zahl mit Tausender-Gruppierung</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>number_format</methodname>
   <methodparam><type>float</type><parameter>number</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>decimals</parameter></methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>string</type><methodname>number_format</methodname>
   <methodparam><type>float</type><parameter>number</parameter></methodparam>
   <methodparam><type>int</type><parameter>decimals</parameter></methodparam>
   <methodparam><type>string</type><parameter>dec_point</parameter></methodparam>
   <methodparam><type>string</type><parameter>thousands_sep</parameter></methodparam>
  </methodsynopsis>
  <para>
   Die Funktion akzeptiert entweder einen, zwei oder vier Parameter
   (nicht jedoch drei):
  </para>
  <para>
   Wird nur ein Parameter übergeben, wird <parameter>number</parameter>
   ohne Nachkommastellen, aber mit einem Komma (",") zur Gruppierung der
   Tausenderstellen formatiert.
  </para>
  <para>
   Wurden zwei Parameter übergeben, wird <parameter>number</parameter> als
   Zahl mit <parameter>decimals</parameter> Nachkommastellen mit einem Punkt
   (".") als Trennzeichen sowie einem Komma (",") zur Gruppierung der
   Tausenderstellen formatiert.
  </para>
  <para>
   Wenn alle vier Parameter übergeben wurden, wird <parameter>number</parameter>
   als Zahl formatiert, die <parameter>decimals</parameter> Nachkommastellen
   hat, die mittels <parameter>dec_point</parameter> anstelle des Punktes (".")
   von der Zahl getrennt werden, und deren Tausenderstellen mittels
   <parameter>thousands_sep</parameter> anstelle des Kommas (",") gruppiert
   werden.
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Eine formatierte Version von <parameter>number</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>number</parameter></term>
     <listitem>
      <para>
       Die zu formatierende Zahl.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>decimals</parameter></term>
     <listitem>
      <para>
       Sets the number of decimal points.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>dec_point</parameter></term>
     <listitem>
      <para>
       Bestimmt das Trennzeichen für die Nachkommastellen.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>thousands_sep</parameter></term>
     <listitem>
      <para>
       Bestimmt das Tausendertrennzeichen.
      </para>
      <para>
       Nur das erste Zeichen von <parameter>thousands_sep</parameter> wird
       verwendet. Wenn Sie beispielsweise <literal>bar</literal> für
       <parameter>thousands_sep</parameter> auf die Zahl <literal>1000</literal>
       anwenden, gibt Ihnen <function>number_format</function>
       <literal>1b000</literal> zurück.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>number_format</function>-Beispiel</title>
    <para>
     Beispielsweise notiert man in Frankreich normalerweise zwei
     Dezimalstellen mit einem Komma (',') als Trennzeichen sowie ein
     Leerzeichen (' ') zur Gruppierung der Tausender. Das kann durch folgende
     Zeile erreicht werden:
    </para>
    <programlisting role="php">
<![CDATA[
<?php

$number = 1234.56;

// Englische Notation (Standard)
$english_format_number = number_format($number);
// 1,235

// Franzoesische Notation
$nombre_format_francais = number_format($number, 2, ',', ' ');
// 1 234,56

$number = 1234.5678;

// Englische Notation ohne Tausendergruppierung
$english_format_number = number_format($number, 2, '.', '');
// 1234.57

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>money_format</function></member>
    <member><function>sprintf</function></member>
    <member><function>printf</function></member>
    <member><function>sscanf</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
