<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./de/functions/strings.xml, last change in rev 1.23 -->
<!-- last change to 'strnatcmp' in en/ tree in rev 1.38 -->
<!-- EN-Revision: 1.1 Maintainer: tschuer Status: ready -->
<!-- OLD-Revision: 1.58/EN.1.38 -->
  <refentry id="function.strnatcmp">
   <refnamediv>
    <refname>strnatcmp</refname>
    <refpurpose>
     String-Vergleich unter Verwendung einer "natürlichen Ordnung"
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
     <methodsynopsis>
      <type>int</type><methodname>strnatcmp</methodname>
      <methodparam><type>string</type><parameter>str1</parameter></methodparam>
      <methodparam><type>string</type><parameter>str2</parameter></methodparam>
     </methodsynopsis>
    <para>
     Diese Funktion implemetiert einen Vergleich, der alphanumerische
     Zeichen "menschlich" einordnet (auch "natürliche Ordnung"
     genannt). Der Unterschied zwischen dieser und der regulären
     String-Sortierung eines Computer (unter Verwendung von
     <function>strcmp</function>) wird in dem folgenden Beispiel
     gezeigt:
     <informalexample>
      <programlisting>
$arr1 = $arr2 = array ("img12.png","img10.png","img2.png","img1.png");
echo "Normaler String-Vergleich\n";
usort($arr1,"strcmp");
print_r($arr1);
echo "\nVergleich mittels natürlicher Ordnung\n";
usort($arr2,"strnatcmp");
print_r($arr2);
      </programlisting>
     </informalexample>
     Der o.a. Code erzeugt die folgende Ausgabe:
     <informalexample>
      <programlisting>
Normaler String-Vergleich
Array
(
    [0] =&gt; img1.png
    [1] =&gt; img10.png
    [2] =&gt; img12.png
    [3] =&gt; img2.png
)

Vergleich mittels natürlicher Ordnung
Array
(
    [0] =&gt; img1.png
    [1] =&gt; img2.png
    [2] =&gt; img10.png
    [3] =&gt; img12.png
)
      </programlisting>
     </informalexample>
     Für weitere Infos siehe Martin Pool's <ulink
     url="&url.strnatcmp;">Natural Order String Comparison</ulink>
     Seite.
    </para>
    <simpara>
     Ähnlich anderen String-Vergleichs-Funktionen gibt diese &lt; 0
     zurück, wenn <parameter>str1</parameter> kleiner ist als
     <parameter>str2</parameter> bzw. &gt; 0, wenn
     <parameter>str1</parameter> größer ist als
     <parameter>str2</parameter> oder 0, wenn sie gleich sind.
    </simpara>
    <simpara>
     Dieser Vergleich unterscheidet Groß- und Kleinschreibung.
    </simpara>
    <simpara>
     Siehe auch <function>ereg</function>,
     <function>strcasecmp</function>, <function>substr</function>,
     <function>stristr</function>, <function>strcmp</function>,
     <function>strncmp</function>, <function>strnatcasecmp</function>,
     <function>strstr</function>, <function>natsort</function> und
     <function>natcasesort</function> .
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
