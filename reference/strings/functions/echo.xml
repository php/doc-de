<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.5 Maintainer: tom Status: ready -->
<!-- CREDITS: tschuer -->
  <refentry id="function.echo">
   <refnamediv>
    <refname>echo</refname>
    <refpurpose>Gibt einen oder mehrere Strings aus</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <methodname>echo</methodname>
      <methodparam><type>string</type><parameter>arg1</parameter></methodparam>
      <methodparam choice="opt"><type>string</type><parameter>argn...</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     Gibt alle als Parameter angegebenen Strings aus.
    </simpara>
    <para>
     <function>echo</function> ist keine Funktion, sondern ein
     Sprach-Konstrukt. Deshalb brauchen Sie keine Klammern zu
     verwenden. Wenn Sie echo mehr als einen Parameter übergeben
     wollen, dürfen Sie diese nicht mit Klammern umgeben. Es ist
     nicht möglich, <function>echo</function> in einem <link
     linkend="functions.variable-functions">Variablen-Funktionen</link>
     Kontext zu nutzen.
     <example>
      <title><function>echo</function> examples</title>
      <programlisting role="php">
<![CDATA[
<?php
echo "Hallo Welt";

echo "Dies umfasst
mehrere Zeilen. Die Zeilenumbrüche werden
ebenfalls ausgegeben.";

echo "Dies umfasst\nmehrere Zeilen. Die Zeilenumbrüche werden\nebenfalls ausgegeben.";

echo "Escape Zeichen werden \"so realisiert\".";

// Sie können Variablen innerhalb eines echo Statements verwenden
$foo = "foobar";
$bar = "barbaz";

echo "foo ist $foo"; // foo ist foobar

// Einfache Anführungszeichen geben den Variablennamen aus, nicht den Inhalt
echo 'foo is $foo'; // foo is $foo

// Wenn Sie nicht auch andere Zeichen ausgeben,
// können Sie auch nur Variablen verwenden
echo $foo;          // foobar
echo $foo,$bar;     // foobarbarbaz

echo <<<END
Dies verwendet die "here document" Syntax, um mehrere
Zeilen mit $variablen Interpolation auszugeben. Beachten Sie,
dass das sich das here document Endezeichen in einer Zeile
mit nur einem Strichpunkt ohne extra Leerzeichen befinden muss!
END;

// echo ist keine Funktion, weshalb der folgende Code ungültig ist.
($some_var) ? echo('true'): echo('false');

// Aber folgende Beispiele funktionieren:
($some_var) ? print('true'): print('false'); // print ist eine Funktion
echo $some_var ? 'true': 'false'; // Das Statement herumgedreht
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <function>echo</function> kann auch in einer Kurzform verwendet werden,
     indem Sie unmittelbar nach dem öffnenden Tag ein Gleichheitszeichen
     setzen.
     <informalexample>
      <programlisting role="php">
<![CDATA[
I have <?=$foo?> foo.
]]>
      </programlisting>
     </informalexample>
    </para>
    <note>
     <para>
      Diese Kurzform funktioniert nur, wenn die Konfigurationsoption
      <link linkend="ini.short-open-tag">short_open_tag</link> aktiviert ist.
     </para>
    </note>
    <simpara>
     Siehe auch
     <function>print</function>,
     <function>printf</function> und
     <function>flush</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
