<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 8cdc6621f9826d04abc3e50438c010804d7e8683 Maintainer: sammywg Status: ready -->
<refentry xml:id="function.strip-tags" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>strip_tags</refname>
  <refpurpose>Entfernt HTML- und PHP-Tags aus einem String</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>strip_tags</methodname>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>array</type><type>string</type><type>null</type></type><parameter>allowed_tags</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   Diese Funktion versucht, einen String zurückzugeben, der die um alle
   NULL-Bytes, HTML- und PHP-Tags reduzierte Version von
   <parameter>string</parameter> darstellt. Sie verwendet die gleiche Engine
   zum Entfernen der Tags wie <function>fgetss</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       Die Eingabezeichenkette.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>allowed_tags</parameter></term>
     <listitem>
      <para>
       Sie können den optionalen zweiten Parameter verwenden, um die Tags
       anzugeben, die nicht entfernt werden sollen. Diese werden entweder als
       &string;, oder von PHP 7.4.0 an, als &array; angegeben. Dem Beispiel
       weiter unten kann das Format dieses Parameters entnommen werden.
      </para>
      <note>
       <para>
        HTML-Kommentare und PHP-Tags werden ebenfalls entfernt. Dieses
        Verhalten ist hartkodiert und kann nicht mittels
        <parameter>allowed_tags</parameter> verändert werden.
       </para>
      </note>
      <note>
       <para>
        Da selbstschließende XHTML-Tags ignoriert werden, sollten nur
        nicht-selbstschließende Tags in <parameter>allowed_tags</parameter>
        verwendet werden. Um beispielsweise sowohl
        <literal>&lt;br;&gt;</literal> als auch <literal>&lt;br/&gt;</literal>
        zu erlauben, sollte folgendes verwendet werden:
       </para>
       <informalexample>
        <programlisting role="php">
<![CDATA[
<?php
strip_tags($input, '<br>');
?>
]]>
        </programlisting>
       </informalexample>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt die reduzierte Zeichenkette zurück.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
     <row>
      <entry>8.0.0</entry>
      <entry>
       <parameter>allowed_tags</parameter> ist jetzt ein Nullable-Typ.
      </entry>
     </row>
      <row>
       <entry>7.4.0</entry>
       <entry>
        Der <parameter>allowed_tags</parameter>-Parameter akzeptiert nun
        alternativ ein &array;.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>strip_tags</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$text = '<p>Test-Absatz.</p><!-- Kommentar --> <a href="#fragment">Anderer Text</a>';
echo strip_tags($text);
echo "\n";

// <p> und <a> zulassen
echo strip_tags($text, '<p><a>');

// von PHP 7.4.0 an kann die vorherige Zeile wie folgt geschrieben werden:
// echo strip_tags($text, ['p', 'a']);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
Test-Absatz. Anderer Text
<p>Test-Absatz.</p> <a href="#fragment">Anderer Text</a>
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <warning>
   <para>
    Diese Funktion sollte nicht verwendet werden, um zu versuchen XSS-Attacken
    zu verhindern. Statt dessen sind geeignetere Funktionen wie
    <function>htmlspecialchars</function> oder andere Mittel, abhängig vom
    Ausgabekontext, zu verwenden.
   </para>
  </warning>
  <warning>
   <para>
    Da <function>strip_tags</function> HTML nicht wirklich validiert, kann es
    passieren, dass bei unvollständigen oder unkorrekten Tags mehr Text/Daten
    gelöscht werden als erwartet.
   </para>
  </warning>
  <warning>
   <para>
    Diese Funktion modifiziert keine Attribute bei Tags, die via
    <parameter>allowed_tags</parameter> erlaubt wurden. Dies betrifft auch
    <literal>style</literal>- und <literal>onmouseover</literal>-Attribute,
    die ein böswilliger User verwenden kann, um einen Text zu posten, der
    von anderen Usern gesehen werden soll.
   </para>
  </warning>
  <note>
   <para>
    Tagnamen im Eingabe-HTML, die länger als 1023 Bytes sind, werden
    behandelt, als ob sie ungültig seien, unabhängig vom
    <parameter>allowed_tags</parameter>-Parameter.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>htmlspecialchars</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
