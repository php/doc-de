<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.9 Maintainer: sammywg Status: working -->
<!-- CREDITS: tschuer -->
<refentry xml:id="function.substr-count" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>substr_count</refname>
  <refpurpose>
   Ermittelt, wie oft eine Zeichenkette in einem String vorkommt
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>substr_count</methodname>
   <methodparam><type>string</type><parameter>haystack</parameter></methodparam>
   <methodparam><type>string</type><parameter>needle</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>offset</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
  </methodsynopsis>
  <para>
   Die Funktion <function>substr_count</function> ermittelt, wie oft
   <parameter>needle</parameter> in dem String <parameter>haystack</parameter> 
   vorkommt, und gibt die Anzahl der Vorkommen zurück. Beachten Sie, dass der
   Parameter <parameter>needle</parameter> case sensitive ist.
  </para>
  <note>
   <para>
    Die Funktion zählt einander überlappende Substrings nicht mit. Beachten Sie das
    untenstehende Beispiel!
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>haystack</parameter></term>
     <listitem>
      <para>
       Der String, in dem gesucht werden soll
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>needle</parameter></term>
     <listitem>
      <para>
       Der Substring, nach dem gesucht werden soll
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>offset</parameter></term>
     <listitem>
      <para>
       Die Zeichenposition, an der die Zählung begonnen werden soll
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Die maximale Länge nach dem angegebenen Offset, in der nach
       dem Substring gesucht werden soll. Es wird eine Warnung ausgegeben,
       wenn Offset plus Länge größer als die Länge von 
       <parameter>haystack</parameter> sind.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Die Funktion gibt einen Wert vom Typ <type>integer</type> zurück.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.1.0</entry>
       <entry>
        Hinzufügen der Parameter <parameter>offset</parameter> und
        <parameter>length</parameter>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ein <function>substr_count</function> Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$text = 'Dies ist ein Test';
echo strlen($text); // 17

echo substr_count($text, 'es'); // 2

// wird der String auf 's ist ein Test' reduziert,
// lautet das ausgegebene Ergebnis 1
echo substr_count($text, 'es', 3);

// wird der String auf 's i' reduziert,
// lautet das Ergebnis 0
echo substr_count($text, 'es', 3, 3);

// generiert eine Warnung, da 5+13 > 17
echo substr_count($text, 'es', 5, 13);


// gibt 1 aus, da überlappende Substrings nicht gezählt werden
$text2 = 'gcdgcdgcd';
echo substr_count($text2, 'gcdgcd');
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>count_chars</function></member>
    <member><function>strpos</function></member>
    <member><function>substr</function></member>
    <member><function>strstr</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
