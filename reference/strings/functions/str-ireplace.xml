<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.8 Maintainer: sammywg Status: working -->
<!-- splitted from ./en/functions/strings.xml, last change in rev 1.2 -->
  <refentry id="function.str-ireplace">
   <refnamediv>
    <refname>str_ireplace</refname>
    <refpurpose>
     Groß- und Kleinschreibungsunabhängige Version von
     <function>str_replace</function>.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>mixed</type><methodname>str_ireplace</methodname>
      <methodparam><type>mixed</type><parameter>search</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>replace</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>subject</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter role="reference">count</parameter></methodparam>
     </methodsynopsis>
    <para>
     Die Funktion gibt einen String oder ein Array zurück, in dem alle
     Vorkommen von <parameter>search</parameter> innerhalb von
     <parameter>subject</parameter> unabhängig von deren Groß- oder Kleinschreibung
     gegen den entsprechenden <parameter>replace</parameter>-Wert ausgetauscht
     wurden. Sofern Sie keine speziellen Ersetzungsregeln verwenden, sollten Sie
     diese Funktion grundsätzlich anstelle von <function>eregi_replace</function>
     oder <function>preg_replace</function> mit <literal>i</literal>-Modifier
     verwenden.
    </para>
    <para>
     Ist <parameter>subject</parameter> ein Array, wird die
     Suchen-Ersetzen-Funktionalität auf jedes Element von
     <parameter>subject</parameter> angewendet. Die Funktion gibt
     dann natürlich ein Array zurück.
    </para>
    <para>
     Sind <parameter>search</parameter> und <parameter>replace</parameter>
     Arrays, dann verwendet <function>str_ireplace</function> aus beiden Arrays
     den Wert der aktuellen Zeigerposition, um damit ein Suchen und Ersetzen
     in <parameter>subject</parameter> durchzuführen. Hat
     <parameter>replace</parameter> weniger Werte als <parameter>search</parameter>
     wird ein leerer String als Wert zum Ersetzen verwendet. Isst
     <parameter>search</parameter> ein Array und <parameter>replace</parameter>
     ein String, wird dieser String als Ersetzung für jeden Wert von
     <parameter>search</parameter> verwendet.
    </para>
    <para>
     <example>
      <title><function>str_ireplace</function> Beispiel</title>
      <programlisting role="php">
<![CDATA[
<?php
$bodytag = str_ireplace("%body%", "schwarz", "<body text=%BODY%>");
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Diese Funktion ist binary safe.
    </para>
    <note>
     <simpara>
      Seit PHP 5.0.0 wird die Anzahl der gefundenen und ersetzten
      <parameter>needles</parameter> im Parameter
      <parameter>count</parameter> als Referenz zurückgegeben.
      Der Parameter steht nicht in PHP-Versionen vor 5.0.0 zur Verfügung.
     </simpara>
    </note>
    <para>
     Siehe auch:
     <function>str_replace</function>,
     <function>preg_replace</function> und
     <function>strtr</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
