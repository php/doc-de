<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343888 Maintainer: sammywg Status: ready -->

<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.str-ireplace">
 <refnamediv>
  <refname>str_ireplace</refname>
  <refpurpose>Groß- und kleinschreibungsunabhängige Version von
     <function>str_replace</function></refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>mixed</type><methodname>str_ireplace</methodname>
   <methodparam><type>mixed</type><parameter>search</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>replace</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>subject</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">count</parameter></methodparam>
  </methodsynopsis>
  <para>
   Die Funktion gibt einen String oder ein Array zurück, in dem alle
   Vorkommen von <parameter>search</parameter> innerhalb von
   <parameter>subject</parameter> unabhängig von deren Groß- oder Kleinschreibung
   gegen den entsprechenden <parameter>replace</parameter>-Wert ausgetauscht
   wurden. Sofern Sie keine speziellen Ersetzungsregeln verwenden, sollten Sie
   diese Funktion grundsätzlich anstelle von <function>preg_replace</function>
   mit <literal>i</literal>-Modifier verwenden.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   Wenn der <parameter>search</parameter> und <parameter>replace</parameter>
   Arrays sind, nimmt <function>str_ireplace</function> einen Wert von jedem
   Array und sucht/ersetzt mit diesen im <parameter>subject</parameter>.
   Wenn <parameter>replace</parameter> weniger Werte als
   <parameter>search</parameter> besitzt, wird eine leere Zeichenkette für die
   verbleibenden Ersetzungswerte verwendet.
   Wenn <parameter>search</parameter> ein Array ist und
   <parameter>replace</parameter> eine Zeichenkette, wird dieser
   Ersetzungswert für alle Werte des <parameter>search</parameter> genutzt.
   Die Umkehrung jedoch wäre sinnlos.
  </para>
  <para>
    Wenn <parameter>search</parameter> oder <parameter>replace</parameter>
    Array sind, werden ihre Elemente in aufsteigender Reihenfolge bearbeitet.
  </para>
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>search</parameter></term>
     <listitem>
      <para>
        Der gesuchte Wert, auch <emphasis>Nadel (needle)</emphasis>
        genannt. Ein Array kann genutzt werden, um mehrere Nadeln zu
        bestimmen.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>replace</parameter></term>
     <listitem>
      <para>
        Der Ersetzungswert, der gefundene <parameter>search</parameter>
        Werte ersetzt. Ein Array kann genutzt werden, um mehrere Nadeln zu
        bestimmen.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>subject</parameter></term>
     <listitem>
      <para>
       Die zu durchsuchende und darin ersetzende Zeichenkette oder das Array,
       auch <emphasis>Heuhaufen (haystack)</emphasis> genannt.
      </para>
      <para>
       Ist <parameter>subject</parameter> ein Array, wird die
       Suchen-Ersetzen-Funktionalität auf jedes Element von
       <parameter>subject</parameter> angewendet. Die Funktion gibt
       dann natürlich ein Array zurück.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>count</parameter></term>
     <listitem>
      <para>
        Falls übergeben, wird dies auf die Anzahl der durchgeführten
        Ersetzungen gesetzt.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt eine Zeichenkette oder ein Array mit ersetzten Werten zurück.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>str_ireplace</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$bodytag = str_ireplace("%body%", "schwarz", "<body text=%BODY%>");
echo $bodytag; // <body text=black>
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
  <caution>
   <title>Reihenfolge der Ersetzungen Überraschung</title>
   <para>
     Weil <function>str_ireplace</function> von links nach rechts ersetzt,
     kann sie einen zuvor eingesetzten Wert ersetzen, falls mehrere
     Ersetzungen durchgeführrt werden. Beispiel #2 in der Dokomenation
     von <function>str_replace</function> zeigt, wie dies sie in der Praxis
     betreffen kann.
   </para>
  </caution>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_replace</function></member>
    <member><function>preg_replace</function></member>
    <member><function>strtr</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
