<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.2 Maintainer: nobody Status: ready -->
 <refentry xml:id="class.variant" xmlns="http://docbook.org/ns/docbook">
  <refnamediv>
   <refname>VARIANT</refname>
   <refpurpose>VARIANT Klasse</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
  <synopsis>$vVar = new <classname>VARIANT</classname>($var)</synopsis>
  </refsynopsisdiv>
  <refsect1 xml:id="class.variant.class">
   <title>Beschreibung</title>
   <simpara>
    Ein einfacher Container, um Variablen in VARIANT Strukturen zu verpacken.
   </simpara>
  </refsect1>
  <refsect1 xml:id="class.variant.constructor">
   <title>Methoden</title>
    <methodsynopsis>
     <type>string</type><methodname>VARIANT::VARIANT</methodname>
     <methodparam choice="opt"><type>mixed</type><parameter>value</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>type</parameter></methodparam>
     <methodparam choice="opt"><type>int</type><parameter>codepage</parameter></methodparam>
    </methodsynopsis>
   <para>
    VARIANT Klassen-Konstruktor. Parameter:
    <variablelist>
    <varlistentry><term>value</term>
    <listitem>
     <simpara>
      Anfangswert. Ist er nicht angegeben, wird ein VT_EMPTY Objekt erzeugt.
     </simpara>
    </listitem>
    </varlistentry>
    <varlistentry><term>type</term>
    <listitem>
     <simpara>
      spezifiziert den Typ vom Inhalt des VARIANT Objektes. Mögliche Werte sind
      <constant>VT_UI1</constant>, <constant>VT_UI2</constant>, <constant>VT_UI4</constant>, 
      <constant>VT_I1</constant>, <constant>VT_I2</constant>, <constant>VT_I4</constant>, 
      <constant>VT_R4</constant>, <constant>VT_R8</constant>, <constant>VT_INT</constant>, <constant>VT_UINT</constant>,
      <constant>VT_BOOL</constant>, <constant>VT_ERROR</constant>, <constant>VT_CY</constant>, 
      <constant>VT_DATE</constant>, <constant>VT_BSTR</constant>, <constant>VT_DECIMAL</constant>, 
      <constant>VT_UNKNOWN</constant>, <constant>VT_DISPATCH</constant> und <constant>VT_VARIANT</constant>.
      Diese Werte sind wechselseitig exklusiv, können aber mit <constant>VT_BYREF</constant>
      vereinigt werden, um zu spezifizieren, dass es sich um einen Wert handelt. 
      Wird er weggelassen, wird der Typ von <parameter>value</parameter> verwendet.
      Konsultieren Sie bitte die MSDN Library für weitere Informationen.
     </simpara>
    </listitem>
    </varlistentry>
    <varlistentry><term>codepage</term>
    <listitem>
     <simpara>
      gibt die Codepage an, welche zur Konvertierung der PHP-Strings in
      Unicode-Strings und umgekehrt verwendet wird. Mögliche Werte sind 
      <constant>CP_ACP</constant>, <constant>CP_MACCP</constant>,
      <constant>CP_OEMCP</constant>, <constant>CP_SYMBOL</constant>,
      <constant>CP_THREAD_ACP</constant>, <constant>CP_UTF7</constant>
      und <constant>CP_UTF8</constant>.
     </simpara>
    </listitem>
    </varlistentry>
    </variablelist>
   </para>
  </refsect1>
 </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
