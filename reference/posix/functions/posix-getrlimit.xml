<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.9 $ -->
<!-- EN-Revision: 1.13 Maintainer: samesch Status: ready -->
<refentry xml:id="function.posix-getrlimit" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>posix_getrlimit</refname>
  <refpurpose>Liefert Informationen über Systemressourcen-Limits</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>posix_getrlimit</methodname>
   <void/>
  </methodsynopsis>
  <para>
   <function>posix_getrlimit</function> gibt ein <type>Array</type> mit
   Informationen über die aktuellen weichen und harten Limits der Ressourcen
   zurück.
  </para>
  <para>
   Zu jeder Ressource gehören ein weiches und ein hartes Limit. Das weiche
   Limit ist der Wert, den der Kernel für die entsprechende Ressource geltend
   macht. Das harte Limit fungiert als Obergrenze für das weiche Limit. Ein
   unprivilegierter Prozess kann nur sein weiches Limit auf einen Wert im
   Bereich von 0 bis zum harten Limit setzen und sein hartes Limit unumkehrbar
   absenken.
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein assioziatives <type>Array</type> mit Elementen für jedes
   definierte Limit zurück. Jede Ressource hat ein weiches und ein hartes
   Limit.
   <table>
    <title>Liste möglicher Limits, die zurückgegeben werden</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Name des Limits</entry>
       <entry>Beschreibung des Limits</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>core</entry>
       <entry>
        Die maximale Größe der Core-Datei. 0 bedeutet, dass keine Core-Datei
        angelegt wird. Wenn Core-Dateien diese Größe überschreiten, werden sie
        auf diese Größe abgeschnitten.
       </entry>
      </row>
      <row>
       <entry>totalmem</entry>
       <entry>
        Die maximale Größe des Speichers für den Prozess in Bytes.
       </entry>
      </row>
      <row>
       <entry>virtualmem</entry>
       <entry>
        Die maximale Größe des virtuellen Speichers für den Prozess in Bytes.
       </entry>
      </row>
      <row>
       <entry>data</entry>
       <entry>
        Die maximale Größe des Datensegments für den Prozess in Bytes.
       </entry>
      </row>
      <row>
       <entry>stack</entry>
       <entry>Die maximale Stackgröße des Prozesses in Bytes.</entry>
      </row>
      <row>
       <entry>rss</entry>
       <entry>
        Die maximale Anzahl virtueller Speicherseiten, die im RAM resident
        sind.
       </entry>
      </row>
      <row>
       <entry>maxproc</entry>
       <entry>
        Die maximale Anzahl von Prozessen, die für die reale Benutzer-ID des
        aufrufenden Prozesses erzeugt werden können.
       </entry>
      </row>
      <row>
       <entry>memlock</entry>
       <entry>
        Die maximale Anzahl Bytes, die im RAM blockiert werden können.
       </entry>
      </row>
      <row>
       <entry>cpu</entry>
       <entry>Die Zeit, die ein Prozess die CPU benutzen darf.</entry>
      </row>
      <row>
       <entry>filesize</entry>
       <entry>
        Die maximale Größe des Datensegments für den Prozess in Bytes.
       </entry>
      </row>
      <row>
       <entry>openfiles</entry>
       <entry>
        Einer mehr als die maximale Anzahl offener Dateideskriptoren.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>posix_getrlimit</function> Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php

$limits = posix_getrlimit();

print_r($limits);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <screen>
<![CDATA[
Array
(
    [soft core] => 0
    [hard core] => unlimited
    [soft data] => unlimited
    [hard data] => unlimited
    [soft stack] => 8388608
    [hard stack] => unlimited
    [soft totalmem] => unlimited
    [hard totalmem] => unlimited
    [soft rss] => unlimited
    [hard rss] => unlimited
    [soft maxproc] => unlimited
    [hard maxproc] => unlimited
    [soft memlock] => unlimited
    [hard memlock] => unlimited
    [soft cpu] => unlimited
    [hard cpu] => unlimited
    [soft filesize] => unlimited
    [hard filesize] => unlimited
    [soft openfiles] => 1024
    [hard openfiles] => 1024
)
]]>
    </screen>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Dies ist keine POSIX-Funktion, aber sie ist auf BSD- und System V-Systemen
    gängig. Falls Ihr System diese Funktion nicht unterstützt, wird sie
    während der Übersetzung nicht eingebunden. Ob es die Funktion gibt, kann
    mittels <function>function_exists</function> überprüft werden.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>GETRLIMIT(2)-Manpage</member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
