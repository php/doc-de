<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- splitted from ./de/functions/posix.xml, last change in rev 1.2 -->
<!-- last change to 'posix-mkfifo' in en/ tree in rev 1.2 -->
<!-- EN-Revision: 1.5 Maintainer: samesch Status: ready -->
<!-- OLD-Revision: 1.19/EN.1.2 -->
<refentry id="function.posix-mkfifo">
 <refnamediv>
  <refname>posix_mkfifo</refname>
  <refpurpose>Erzeugt eine "FIFO special"-Datei (named pipe)</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>posix_mkfifo</methodname>
   <methodparam><type>string</type><parameter>Pfadname</parameter></methodparam>
   <methodparam><type>int</type><parameter>Modus</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>posix_mkfifo</function> erzeugt eine spezielle
   <literal>FIFO</literal>-Datei, die im Dateisystem existiert und als
   bidirektionaler Kommunikationsendpunkt für Prozesse agiert.
  </para>
  <para>
   Der zweite Parameter, <parameter>mode</parameter>, muss in oktaler
   Schreibweise angegeben werden (z.B. 0644). Die Zugriffsberechtigungen des
   neu erzeugten <literal>FIFO</literal> hängen auch von der Einstellung der
   aktuellen <function>umask</function> ab. Die Zugriffsberechtigungen der
   erzeugten Datei sind (mode &amp; ~umask).
  </para>
  <para>
   &return.success;
  </para>
  &note.sm.uidcheck.dir;
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
