<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.15 Maintainer: conni Status: ready -->
<reference xml:id="ref.shmop" xmlns="http://docbook.org/ns/docbook">
  <title>Shared Memory Funktionen (Gemeinsamer Speicher)</title>
  <titleabbrev>shmop</titleabbrev>

  <partintro>
   <section xml:id="shmop.intro">
    &reftitle.intro;
   <para>
    Shmop ist eine Sammlung einfach anzuwendender PHP-Funktionen,
    mit denen man mit PHP UNIX shared-memory-Segmente beschreiben,
    auslesen und löschen kann.
   </para>
   <note>
    <simpara>
     Ältere Windows-Versionen vor Windows2000 unterstützen keinen
     gemeinsamen Speicher. Unter Windows können diese Funktionen nur
     benutzt werden, wenn PHP als Modul des Webservers, wie etwa
     Apache oder IIS, läuft. (Mit CLI und CGI können die Funktionen
     nicht verwendet werden.)
    </simpara>
    </note>
    <note>
     <simpara>
      Die Funktionen, die in diesem Kapitel erklärt werden, beginnen
      in PHP 4.0.3 alle mit <literal>shm</literal>, anstelle von 
	  <literal>shmop</literal>.
     </simpara>
    </note>
   </section>

   <section xml:id="shmop.requirements">
    &reftitle.required;
    &no.requirement;
   </section>

   &reference.shmop.configure;

   <section xml:id="shmop.configuration">
    &reftitle.runtime;
    &no.config;
   </section>

   <section xml:id="shmop.resources">
    &reftitle.resources;
    <para>
    </para>
   </section>

   <section xml:id="shmop.constants">
    &reftitle.constants;
    &no.constants;
   </section>

   <section xml:id="shmop.examples">
    &reftitle.examples;
    <para>
     <example>
	  <title>Shared Memory Operationen - Übersicht</title>
      <programlisting role="php">
<![CDATA[
<?php
   
// Erstelle einen 100 Byte grossen gemeinsam genutzten Speicherblock
// mit mit der System_ID if 0xff3
$shm_id = shmop_open(0xff3, "c", 0644, 100);
if (!$shm_id) {
    echo "Konnte kein gemeinsames Speichersegment erstellen\n";
}

// Hole die Grösse des gemeinsamen Speicherblocks
$shm_size = shmop_size($shm_id);
echo "SHM Block mit: ".$shm_size. " Bytes wurde erstellt.\n";

// Teststring in den gemeinsamen Speicher schreiben
$shm_bytes_written = shmop_write($shm_id, "mein gemeinsamer Speicherblock", 0);
if ($shm_bytes_written != strlen("mein gemeinsamer Speicherblock")) {
    echo "Konnte nicht den gesamten String schreiben\n";
}

// Den Teststring wieder auslesen
$my_string = shmop_read($shm_id, 0, $shm_size);
if (!$my_string) {
    echo "Konnte nicht aus dem gemeinsamen Speicher lesen\n";
}
echo "Die Daten im gemeinsamen Speicher waren: ".$my_string."\n";

// Den Speicherblock löschen und das Speichersegment schliessen
if(!shmop_delete($shm_id)) {
    echo "Konnte den gemeinsamen Speicherblock nicht zum Löschen markieren.";
}
shmop_close($shm_id);
   
?>
]]>
      </programlisting>
     </example>
    </para>
   </section>
  </partintro>
 
&reference.shmop.functions;

 </reference> 

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
