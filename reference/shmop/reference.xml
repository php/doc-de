<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<reference id="ref.shmop">
  <title>Shared Memory Funktionen (Gemeinsamer Speicher)</title>
  <titleabbrev>shmop</titleabbrev>

  <partintro>
   <para>
    Shmop ist eine Sammlung einfach anzuwendender PHP-Funktionen,
    mit denen man mit PHP UNIX shared-memory-Segmente beschreiben,
    auslesen und löschen kann. Die Funktionen können mit Windows
    nicht eingesetzt werden, weil Windows keinen gemeinsamen
    Speicher unterstützt.
    Um shmop zu nutzen, müssen Sie PHP mit der Option --enable-shmop kompilieren.
   </para>
   <note>
    <simpara>
     Diese Erweiterung ist <emphasis>EXPERIMENTELL</emphasis>. Das
     Verhalten dieser Erweiterung, einschließlich der Funktionsnamen,
     und alles Andere was hier dokumentiert ist, kann sich in
     zukünftigen PHP-Versionen ohne Ankündigung ändern. Seien
     Sie gewarnt und verwenden Sie diese Erweiterung auf eigenes
     Risiko.
    </simpara>
    <simpara>
     Die Funktionen, die in diesem Kapitel erklärt werden, beginnen
     in PHP 4.0.3 alle mit <literal>shm</literal>, aber ab Version
     PHP 4.0.4 und grösser, wurden diese Namen geändert und beginnen
     nun mit <literal>shmop</literal>.
    </simpara>
   </note>
   <para>
    <example>
     <title>Shared Memory Operationen - Übersicht</title>
     <programlisting role="php">
<![CDATA[
<?php

// Erstelle einen 100 Byte grossen gemeinsam genutzten Speicherblock
// mit mit der System_ID if 0xff3
$shm_id = shmop_open(0xff3, "c", 0644, 100);
if(!$shm_id) {
        echo "Konnte kein gemeinsames Speichersegment erstellen\n";
}

// Hole die Grösse des gemeinsamen Speicherblocks
$shm_size = shmop_size($shm_id);
echo "SHM Block mit: ".$shm_size. " Bytes wurde erstellt.\n";

// Teststring in den gemeinsamen Speicher schreiben
$shm_bytes_written = shmop_write($shm_id, "mein gemeinsamer Speicher", 0);
if($shm_bytes_written != strlen("mein gemeinsamer Speicher")) {
        echo "Konnte nicht den gesamten String schreiben\n";
}

// Den Teststring wieder auslesen
$my_string = shmop_read($shm_id, 0, $shm_size);
if(!$my_string) {
        echo "Konnte nicht aus dem gemeinsamen Speicher lesen\n";
}
echo "Die Daten im gemeinsamen Speicher waren: ".$my_string."\n";

// Den Speicherblock löschen und den gemeinsamen Speicher schliessen
if(!shmop_delete($shm_id)) {
        echo "Konnte den gemeinsamen Speicherblock nicht zum Löschen markieren.";
}
shmop_close($shm_id);

?>
]]>
     </programlisting>
    </example>
   </para>
  </partintro>

&reference.shmop.functions;

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
