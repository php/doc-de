<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision 1.6: Maintainer: conni Status: ready -->
<reference id="ref.shmop">
  <title>Shared Memory Funktionen (Gemeinsamer Speicher)</title>
  <titleabbrev>shmop</titleabbrev>

  <partintro>
   <section id="shmop.intro">
    &reftitle.intro;
   <para>
    Shmop ist eine Sammlung einfach anzuwendender PHP-Funktionen,
    mit denen man mit PHP UNIX shared-memory-Segmente beschreiben,
    auslesen und löschen kann. Die Funktionen können mit Windows
    nicht eingesetzt werden, da Windows keinen gemeinsamen
    Speicher unterstützt.
    Um shmop zu nutzen, müssen Sie PHP mit der Option --enable-shmop kompilieren.
   </para>
   <note>
    <simpara>
     Die Funktionen, die in diesem Kapitel erklärt werden, beginnen
     in PHP 4.0.3 alle mit <literal>shm</literal>, anstelle von 
	 <literal>shmop</literal>.
    </simpara>
    </note>
   </section>

   <section id="shmop.requirements">
    &reftitle.required;
    &no.requirement;
   </section>

   <section id="shmop.installation">
    &reftitle.install;
    <para>
     Um die shmop-Funktionen benutzen zu können, müssen Sie php mit
	 der Option <option role="configure">--enable-shmop</option>
	 kompilieren. 
    </para>
   </section>

   <section id="shmop.configuration">
    &reftitle.runtime;
    &no.config;
   </section>

   <section id="shmop.resources">
    &reftitle.resources;
    <para>
    </para>
   </section>

   <section id="shmop.constants">
    &reftitle.constants;
    &no.constants;
   </section>

   <section id="shmop.examples">
    &reftitle.examples;
    <para>
     <example>
	  <title>Shared Memory Operationen - Übersicht</title>
      <programlisting role="php">
<![CDATA[
<?php
   
// Erstelle einen 100 Byte grossen gemeinsam genutzten Speicherblock
// mit mit der System_ID if 0xff3
$shm_id = shmop_open(0xff3, "c", 0644, 100);
if(!$shm_id) {
    echo "Konnte kein gemeinsames Speichersegment erstellen\n";
}

// Hole die Grösse des gemeinsamen Speicherblocks
$shm_size = shmop_size($shm_id);
echo "SHM Block mit: ".$shm_size. " Bytes wurde erstellt.\n";

// Teststring in den gemeinsamen Speicher schreiben
$shm_bytes_written = shmop_write($shm_id, "mein gemeinsamer Speicherblock", 0);
if($shm_bytes_written != strlen("mein gemeinsamer Speicherblock")) {
    echo "Konnte nicht den gesamten String schreiben\n";
}

// Den Teststring wieder auslesen
$my_string = shmop_read($shm_id, 0, $shm_size);
if(!$my_string) {
    echo "Konnte nicht aus dem gemeinsamen Speicher lesen\n";
}
echo "Die Daten im gemeinsamen Speicher waren: ".$my_string."\n";

// Den Speicherblock löschen und den gemeinsamen Speicher schliessen
if(!shmop_delete($shm_id)) {
    echo "Konnte den gemeinsamen Speicherblock nicht zum Löschen markieren.";
}
shmop_close($shm_id);
   
?>
]]>
      </programlisting>
     </example>
    </para>
   </section>
  </partintro>
 
&reference.shmop.functions;

 </reference> 

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
