<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.2 Maintainer: sammywg Status: working -->
<!-- Purpose: utilspec.nontext -->
<!-- Membership: pecl, external -->
 
<book xml:id="book.pdf" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>PDF</title>
 
 <!-- {{{ preface -->
 <preface xml:id="intro.pdf">
  &reftitle.intro;
  <para>
   PDF-Dateien lassen sich in PHP mithilfe der PDFlib-Bibliothek erzeugen.
   Die PDFlib-Bibliothek stammt ursprünglich von Thomas Merz und wurde
   dann von der <link xlink:href="&url.pdf;">PDFlib GmbH</link> übernommen.
  </para>
  <para>
   Die vorliegende Beschreibung gibt nur eine kurze Übersicht über die 
   in PDFlib verfügbaren Funktionen. Eine ausführliche Behandlung
   der einzelnen Funktionen finden Sie im PDFlib-Referenzhandbuch, das
   in allen PDFlib-Paketen der PDFlib GmbH enthalten ist. Das 
   PDFlib-Referenzhandbuch liefert nicht nur eine detaillierte Übersicht
   über alle Eigenschaften von PDFlib, sondern auch eine stets aktuelle
   Beschreibung aller Funktionen.
  </para>
  <para>
   Zum schnellen Einstieg sollten Sie sich unbedingt die Code-Beispiele
   ansehen, die in jedem PDFlib-Paket enthalten sind. Die Code-Beispiele
   zeigen die elementare Ausgabe von Text, Vektorgrafik und Rasterbildern
   sowie weiterführende Funktionen, z.B. zum PDF-Import (PDI).
  </para>
  <para>
   Alle Funktionen haben in PDFlib und im PHP-Modul identische
   Funktionsnamen und -parameter. Sofern nicht anders konfiguriert, werden
   Längen- und Koordinatenangaben in PostScript-Punkten gemessen. Ein Zoll
   hat normalerweise 72 PostScript-Punkte, dies hängt jedoch von der 
   Auflösung der Ausgabe ab. Eine ausführliche Beschreibung des 
   Koordinatensystems finden Sie im PDFlib-Referenzhandbuch, das in der 
   PDFlib-Distribution enthalten ist.
  </para>
  <para>
   Ab Version 6 bietet PDFlib zusätzlich zum funktionsorientierten API für
   PHP 4 ein ein objektorientiertes API für PHP 5. Die Verwendung
   unterscheidet sich im wesentlichen in folgenden Punkten:
  </para>   
  <para>
   In PHP 4 müssen Sie sich zunächst eine PDF-Ressource besorgen,
   zum Beispiel mit folgenden Funktionsaufruf: 
  </para>   
  <para>
   $p = PDF_new().
  </para>   
  <para>
   Die erhaltene PDF-Ressource verwenden Sie dann als ersten Parameter
   in allen weiteren Funktionsaufrufen, so zum Beipiel in:
  </para>   
  <para>
   PDF_begin_document($p, "", "").
  </para>   
  <para>
   In PHP 5 dagegen wird mit folgendem Funktionsaufruf ein PDFlib-Objekt
   erzeugt: 
  </para>   
  <para>
   $p = new PDFlib().
  </para>   
  <para>
   Dieses Objekt enthält alle PDFlib-API-Funktionen als Methoden,
   zum Beispiel:
  </para>   
  <para>
   $p->begin_document("", "").
  </para>   
  <para>
   Zudem wurden in PHP 5 Exceptions eingeführt. Diese werden von PDFlib
   ab Version 6 ebenfalls unterstützt.
  </para>   
  <para> 
   Weitere Informationen finden Sie in den 
   <link linkend="pdf.examples">Beispielen</link> weiter unten.
  </para>
  <note>
   <para>
    Wenn Sie an weiterer frei verfügbarer Software zur PDF-Erzeugung
    interessiert sind, die keine externe PDF-Bibliothek verwendet, können
    Sie sich <link linkend="faq.using.freepdf">in dieser FAQ</link> informieren.
   </para>
  </note>
 </preface>
 <!-- }}} -->
 
 &reference.pdf.setup;
 &reference.pdf.constants;
 &reference.pdf.examples;
 &reference.pdf.reference;

</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

