<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.1 Maintainer: sammywg Status: working -->

<chapter xml:id="pdf.examples" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
&reftitle.examples;
 <section xml:id="pdf.examples-basic">
    &reftitle.examples;
    <para>
     Die meisten Funktionen sind einfach zu verwenden. Sobald Sie ein
     PDF-Dokument erstellt haben, ist die schwierigste Aufgabe schon
     erledigt. Das folgende Code-Beispiel soll Ihnen den Einstieg erleichtern.
     Es wurde für PHP 4 entwickelt und erstellt eine einseitige Datei namens
     <filename>hello.pdf</filename>. Das Beispiel definiert den Inhalt einiger
     Dokumentinfofelder, lädt die Schrift Helvetica-Bold und gibt den Text
	 "Hello world! (says PHP)" aus.
    </para>
    <para>
     <example>
      <title>Beispiel "Hello World" der PDFlib-Distribution für PHP 4</title>
      <programlisting role="php">
<![CDATA[
<?php
$p = PDF_new();

/*  open new PDF file; insert a file name to create the PDF on disk */
if (PDF_begin_document($p, "", "") == 0) {
    die("Error: " . PDF_get_errmsg($p));
}

PDF_set_info($p, "Creator", "hello.php");
PDF_set_info($p, "Author", "Rainer Schaaf");
PDF_set_info($p, "Title", "Hello world (PHP)!");

PDF_begin_page_ext($p, 595, 842, "");

$font = PDF_load_font($p, "Helvetica-Bold", "winansi", "");

PDF_setfont($p, $font, 24.0);
PDF_set_text_pos($p, 50, 700);
PDF_show($p, "Hello world!");
PDF_continue_text($p, "(says PHP)");
PDF_end_page_ext($p, "");

PDF_end_document($p, "");

$buf = PDF_get_buffer($p);
$len = strlen($buf);

header("Content-type: application/pdf");
header("Content-Length: $len");
header("Content-Disposition: inline; filename=hello.pdf");
print $buf;

PDF_delete($p);
?>
]]>
      </programlisting>
     </example>
    </para>
	   
    <para>
     Das folgende Code-Beispiel ist in der PDFlib-Distribution für PHP 5
     enthalten. Es verwendet die in PHP 5 erstmalig verfügbare Funktionalität
     zur Ausnahmebehandlung und Objektkapselung. Das Beispiel erstellt eine
     einseitige Datei namens <filename>hello.pdf</filename>. Es definiert den
     Inhalt einiger Dokumentinfofelder, lädt die Schrift Helvetica-Bold und
     gibt den Text "Hello world! (says PHP)" aus.
    </para>
    <para>
     <example>
      <title>Beispiel "Hello World" der PDFlib-Distribution für PHP 5</title>
      <programlisting role="php">
<![CDATA[
<?php

try {
    $p = new PDFlib();

    /*  open new PDF file; insert a file name to create the PDF on disk */
    if ($p->begin_document("", "") == 0) {
        die("Error: " . $p->get_errmsg());
    }

    $p->set_info("Creator", "hello.php");
    $p->set_info("Author", "Rainer Schaaf");
    $p->set_info("Title", "Hello world (PHP)!");

    $p->begin_page_ext(595, 842, "");

    $font = $p->load_font("Helvetica-Bold", "winansi", "");

    $p->setfont($font, 24.0);
    $p->set_text_pos(50, 700);
    $p->show("Hello world!");
    $p->continue_text("(says PHP)");
    $p->end_page_ext("");

    $p->end_document("");

    $buf = $p->get_buffer();
    $len = strlen($buf);

    header("Content-type: application/pdf");
    header("Content-Length: $len");
    header("Content-Disposition: inline; filename=hello.pdf");
    print $buf;
}
catch (PDFlibException $e) {
    die("PDFlib exception occurred in hello sample:\n" .
	"[" . $e->get_errnum() . "] " . $e->get_apiname() . ": " .
	$e->get_errmsg() . "\n");
}
catch (Exception $e) {
    die($e);
}
$p = 0;
?>
]]>
      </programlisting>
     </example>
    </para>
 </section>
</chapter>
