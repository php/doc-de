<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: khp Status: ready -->
<refentry xml:id="function.fpassthru" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>fpassthru</refname>
  <refpurpose>
   Gibt alle verbleibenden Daten eines Dateizeigers direkt aus.
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>fpassthru</methodname>
   <methodparam><type>resource</type><parameter>handle</parameter></methodparam>
  </methodsynopsis>
  <para>
   Die Funktion liest alle Daten von der aktuellen Position des Dateizeigers
   bis EOF aus und schreibt die Daten in den Ausgabepuffer.
  </para>
  <para>
   Eventuell müssen Sie <function>rewind</function> aufrufen, um den
   Dateizeiger auf den Beginn der Datei zurückzusetzen, wenn Sie bereits Daten
   in die Datei geschrieben haben.
  </para>
  <para>
   Wenn Sie den Inhalt einer Datei nur nur in den Ausgabepuffer schreiben
   wollen ohne diese ändern bzw. an eine bestimmte Stelle gehen wollen,
   sollten Sie besser <function>readfile</function> benutzen, bei der
   Sie sich den Aufruf von <function>fopen</function> ersparen.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>handle</parameter></term>
     <listitem>
      &fs.validfp.all;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Wenn ein Fehler auftritt, gibt <function>fpassthru</function> &false;
   zurück. Andernfalls gibt <function>fpassthru</function> die Anzahl der
   von <parameter>handle</parameter> gelesenen und zur Ausgabe weitergeleiteten
   Zeichen zurück.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Nutzung von <function>fpassthru</function> mit binären
    Dateien</title>
    <programlisting role="php">
<![CDATA[
<?php

// Öffne Datei im binären Modus
$name = './img/ok.png';
$fp = fopen($name, 'rb');

// Schicke passende Header Einträge
header("Content-Type: image/png");
header("Content-Length: " . filesize($name));

// Gib Bild aus und stoppe Skript
fpassthru($fp);
exit;

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Wenn Sie <function>fpassthru</function> auf eine binäre Datei unter
    Windows anwenden, sollten Sie sicherstellen, dass die Datei
    im Binärmodus geöffnet wurde, indem Sie ein <literal>b</literal> an
    den Mode-Parameter von <function>fopen</function> anhängen.
   </para>
   <para>
    Auch wenn es Ihr System nicht verlangt, sollten Sie den
    <literal>b</literal> Flag bei Binärdateien verwenden, um die
    Portabilität Ihrer Skripte zu erhöhen.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>readfile</function></member>
    <member><function>fopen</function></member>
    <member><function>popen</function></member>
    <member><function>fsockopen</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
