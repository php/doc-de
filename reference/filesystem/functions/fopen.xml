<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: nobody Status: ready -->
  <refentry xml:id="function.fopen" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>fopen</refname>
    <refpurpose>Öffnet eine Datei oder URL</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>resource</type><methodname>fopen</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
      <methodparam><type>string</type><parameter>mode</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>use_include_path</parameter></methodparam>
      <methodparam choice="opt"><type>resource</type><parameter>zcontext</parameter></methodparam>
     </methodsynopsis>
    <simpara>
     <function>fopen</function> bindet eine benannte Resource, welche
     mittels <parameter>filename</parameter> spezifiziert wurde, an einen
     Stream. Hat <parameter>filename</parameter> die Form "schema://..."
     wird angenommen, dass es sich hier um eine URL handelt und PHP sucht
     nach einem Protokollhandler (auch als Wrapper bekannt) für dieses
     Schema. Sind keine Wrapper für dieses Protokoll registriert, gibt
     PHP als Hilfe zum Verfolgen potentieller Probleme in Ihrem Skript
     einen Hinweis aus und setzt dann weiter fort, obwohl
     <parameter>filename</parameter> eine reguläre Datei spezifiziert.
    </simpara>
    <simpara>
     Ist PHP zu dem Schluss gekommen, dass <parameter>filename</parameter>
     eine lokale Datei spezifiziert, wird es versuchen, einen Stream
     an dieser Datei zu öffnen. Die Datei muss für PHP verfügbar sein,
     weshalb Sie sicherstellen müssen, dass die Dateirechte diesen
     Zugriff ermöglichen. Wenn Sie &safemode; oder <link
     linkend="ini.open-basedir">open_basedir</link> aktiviert haben,
     können weitere Einschränkungen zutreffen.
    </simpara>
    <simpara>
     Kam PHP zum Schluss, dass es sich bei <parameter>filename</parameter>
     um ein registriertes Protokoll handelt, und ist dieses Protokoll
     als eine Netzwerk URL registriert, prüft PHP, ob <link
     linkend="ini.allow-url-fopen">allow_url_fopen</link> aktiviert ist.
     Ist es nicht aktiviert, gibt PHP eine Warnung aus, und der
     Aufruf von fopen wird scheitern.
    </simpara>
    <note>
     <simpara>
      Die Liste der unterstützten Wrapper finden Sie unter
      <xref linkend="wrappers"/>.
     </simpara>
    </note>
    <para>
     Der Parameter <parameter>mode</parameter> spezifiziert den von Ihnen
     gewünschten Zugriffstyp auf den Stream und kann die folgenden Werte haben:
     <table>
      <title>
       Liste von möglichen Modi für <function>fopen</function>
       mit <parameter>mode</parameter>
      </title>
      <tgroup cols="2">
       <thead>
        <row>
         <entry><parameter>mode</parameter></entry>
         <entry>Beschreibung</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry><literal>'r'</literal></entry>
         <entry>
          Öffnet die Datei nur zum Lesen und positioniert den
          Dateizeiger auf den Anfang der Datei.
         </entry>
        </row>
        <row>
         <entry><literal>'r+'</literal></entry>
         <entry>
          Öffnet die Datei zum Lesen und Schreiben und setzt den
          Dateizeiger auf den Anfang der Datei.
         </entry>
        </row>
        <row>
         <entry><literal>'w'</literal></entry>
         <entry>
          Öffnet die Datei nur zum Schreiben und setzt den
          Dateizeiger auf den Anfang der Datei sowie die Länge der Datei
          auf 0 Byte. Wenn die Datei nicht existiert wird versucht sie
          anzulegen.
         </entry>
        </row>
        <row>
         <entry><literal>'w+'</literal></entry>
         <entry>
          Öffnet die Datei zum Lesen und Schreiben und setzt den
          Dateizeiger auf den Anfang der Datei sowie die Länge der Datei
          auf 0 Byte. Wenn die Datei nicht existiert, wird versucht sie
          anzulegen.
         </entry>
        </row>
        <row>
         <entry><literal>'a'</literal></entry>
         <entry>
          Öffnet die Datei nur zum Schreiben. Positioniert den
          Dateizeiger auf das Ende der Datei. Wenn die Datei nicht
          existiert, wird versucht sie anzulegen.
         </entry>
        </row>
        <row>
         <entry><literal>'a+'</literal></entry>
         <entry>
          Öffnet die Datei zum Lesen und Schreiben. Positioniert
          den Dateizeiger auf das Ende der Datei. Wenn die Datei nicht
          existiert, wird versucht sie anzulegen.
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <note>
     <para>
      Zusätzlich kann <parameter>mode</parameter> der Buchstabe 'b'
      hinzugefügt werden, der die Behandlung von Binärdateien erlaubt.
      Dies ist nur auf Systemen sinnvoll, welche zwischen Binär- und
      Text-Dateien unterscheiden (z.B. Windows. Ist bei Unix sinnlos).
      Wenn das Feature nicht gebraucht wird, wird es einfach ignoriert.
      Sie sollten den 'b' Flag verwenden, um Ihre Skripte portabler zu
      machen.
     </para>
    </note>
    <para>
     Sie können den optionalen Parameter <parameter>use_include_path</parameter>
     auf '1' oder &true; setzten, wenn Sie die Datei auch im <link
     linkend="ini.include-path">include_path</link> suchen möchten.
    </para>
    <para>
     Der optionale vierte Parameter <parameter>zcontext</parameter> wird
     zur Spezifikation von Einstellungsparametern und Callbacks verwendet.
    </para>
    <simpara>
     Scheitert das Öffnen der Datei, gibt die Funktion &false; zurück.
    </simpara>
    <para>
     <example>
      <title><function>fopen</function> Beispiele</title>
      <programlisting role="php">
<![CDATA[
<?php
$handle = fopen ("/home/rasmus/file.txt", "r");
$handle = fopen ("/home/rasmus/file.gif", "wb");
$handle = fopen ("http://www.example.com/", "r");
$handle = fopen ("ftp://user:password@example.com/somefile.txt", "w");
?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     Wenn Sie Probleme mit dem Lesen oder Schreiben von Dateien haben 
     und PHP als Servermodul benutzen, stellen Sie zunächst
     sicher, dass die Dateien und Verzeichnisse die Sie benutzen
     wollen auch für den Server-Prozess zugänglich sind
     (Rechtevergabe).
    </simpara>
    <para>
     Achten Sie auf Windows-Systemen darauf, dass Sie als
     Verzeichnistrenner normale Schrägstriche '/' benutzen um
     plattformunabhängig programmieren zu können. Sollten Sie dennoch
     Backslashes verwenden, vergessen Sie nicht diese zu escapen '\\'
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
$handle = fopen ("c:\\data\\info.txt", "r");
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <simpara>
     Siehe auch <xref linkend="wrappers"/>,
     <function>fclose</function>,
     <function>fgets</function>, 
     <function>fsockopen</function>,
     <function>file</function>,
     <function>file_exists</function>,
     <function>is_readable</function>,
     <function>socket_set_timeout</function> und
     <function>popen</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
