<?xml version="1.0" encoding="utf8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: wiesemann Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.is-uploaded-file">
 <refnamediv>
  <refname>is_uploaded_file</refname>
  <refpurpose>Prüft, ob die Datei mittels HTTP-POST upgeloadet wurde</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>is_uploaded_file</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
  </methodsynopsis>
  <para>
   Gibt &true; zurück, wenn die Datei <parameter>filename</parameter>
   mittels HTTP-POST upgeloadet wurde. Dies ist hilfreich, um sicherzustellen,
   dass kein böswilliger Nutzer versucht hat, das Skript zu überlisten, indem 
   er es Dateien bearbeiten lässt, die es gar nicht bearbeiten sollte,
   zum Beispiel <filename>/etc/passwd</filename>.
  </para>
  <para>
   Diese Prüfung ist insbesondere dort interessant, wo irgendeine Aktion mit 
   upgeloadeten Dateien deren Inhalt dem Nutzer (oder sogar anderen Nutzern
   auf dem gleichen System) zugänglich machen könnte.
  </para>
  <para>
   Um korrekt arbeiten zu können, benötigt die Funktion
   <function>is_uploaded_file</function> einen Parameter wie
   <varname>$_FILES['userfile']['tmp_name']</varname>. Der Name der upgeloadeten
   Datei auf dem Anwenderrechner <varname>$_FILES['userfile']['name']</varname>
   funktioniert nicht.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Der zu prüfende Dateiname.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>is_uploaded_file</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php

if (is_uploaded_file($_FILES['userfile']['tmp_name'])) {
   echo "Datei ". $_FILES['userfile']['name'] ." erfolgreich upgeloadet.\n";
   echo "Anzeige des Inhalts\n";
   readfile($_FILES['userfile']['tmp_name']);
} else {
   echo "Mögliche Dateiupload-Attacke: ";
   echo "Dateiname '". $_FILES['userfile']['tmp_name'] . "'.";
}

?>]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>move_uploaded_file</function></member>
    <member><varname>$_FILES</varname></member>
    <member>Siehe <link linkend="features.file-upload">Steuerung von Dateiuploads</link>
    für ein einfaches Anwendungsbeispiel.</member>
   </simplelist>
  </para>
 </refsect1>
 
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
