<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 297028 Maintainer: wiesemann Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.file">
 <refnamediv>
  <refname>file</refname>
  <refpurpose>Liest eine komplette Datei in ein Array</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>file</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>resource</type><parameter>context</parameter></methodparam>
  </methodsynopsis>
  <para>
   Liest eine komplette Datei in ein Array
  </para>
  <note>
   <para>
    Sie können <function>file_get_contents</function> benutzen, um den Inhalt
    einer Datei als String zurückgeliefert zu bekommen.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Pfad zur Datei.
      </para>
      &tip.fopen-wrapper;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Der optionale Parameter <parameter>flags</parameter> kann aus einer oder
       mehreren der folgenden Konstanten bestehen:
       <variablelist>
        <varlistentry>
         <term>
          <constant>FILE_USE_INCLUDE_PATH</constant>
         </term>
         <listitem>
          <simpara>
           Suche nach der Datei im <link 
           linkend="ini.include-path">include_path</link>
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>FILE_IGNORE_NEW_LINES</constant>
         </term>
         <listitem>
          <simpara>
           Zeilenende nicht am Ende jedes Array-Elements einfügen
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>FILE_SKIP_EMPTY_LINES</constant>
         </term>
         <listitem>
          <simpara>
           Leere Zeilen überspringen
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>FILE_TEXT</constant>
         </term>
         <listitem>
          <simpara>
           Der Inhalt wird mit dem UTF-8-Encoding zurückgegeben. Sie können ein
           anderes Encoding angeben, indem sie einen eigenen Context erstellen.
           Dieses Flag kann nicht zusammen mit <constant>FILE_BINARY</constant>
           genutzt werden.
          </simpara>
         </listitem>
        </varlistentry>
        <varlistentry>
         <term>
          <constant>FILE_BINARY</constant>
         </term>
         <listitem>
          <simpara>
           Der Inhalt wird als binäre Daten gelesen. Dies ist die
           Standardeinstellung; sie kann nicht zusammen mit
           <constant>FILE_TEXT</constant> genutzt werden.
          </simpara>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>context</parameter></term>
     <listitem>
      <para>
       Eine Context-Ressource, die mit der
       <function>stream_context_create</function>-Funktion
       erstellt wurde.
      </para>
      <para>
       &note.context-support;
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt die Datei in einem Array zurück. Jedes Element des Arrays entspricht
   einer Zeile in der Datei, ohne dass das Zeilenende entfernt wird. Im
   Fehlerfall gibt <function>file</function> &false; zurück.
  </para>
  <note>
   <para>
    Jede Zeile in dem resultierenden Array enthält das Zeilenende,
    außer es wird <constant>FILE_IGNORE_NEW_LINES</constant> verwendet;
    daher müssen Sie <function>trim</function> verwenden, falls
    das Zeilenende nicht vorhanden sein soll.
   </para>
  </note>
  &note.line-endings;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>6.0.0</entry>
       <entry>
        Unterstützung für die <constant>FILE_TEXT</constant>- und 
        <constant>FILE_BINARY</constant>-Flags wurde hinzugefügt.
        <note>
         <para>
          Wegen der <literal>Vorwärtskompatibilität</literal> sind diese
          Konstansten bereits ab PHP 5.2.7 verfügbar.
         </para>
        </note>
       </entry>
      </row>
      <row>
       <entry>5.0.0</entry>
       <entry>
        Der <parameter>context</parameter>-Parameter wurde hinzugefügt.
       </entry>
      </row>
      <row>
       <entry>5.0.0</entry>
       <entry>
        Prior to PHP 5.0.0 the <parameter>flags</parameter> parameter only
        covered <link linkend="ini.include-path">include_path</link> and was
        enabled with 1
       </entry>
      </row>
      <row>
       <entry>4.3.0</entry>
       <entry>
        <function>file</function> wurde binär-sicher.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>file</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
// Liest eine Datei in ein Array. Hier gehen wir über HTTP, um den
// HTML-Quelltext einer URL zu bekommen
$lines = file('http://www.example.com/');

// Durchgehen des Arrays und Anzeigen des HTML-Quelltexts inkl. Zeilennummern
foreach ($lines as $line_num => $line) {
    echo "Line #<b>{$line_num}</b> : " . htmlspecialchars($line) . "<br>\n";
}

// Ein weiteres Beispiel: Einlesen einer Webseite in einen String.
// Siehe auch file_get_contents().
$html = implode ('', file ('http://www.example.com/'));

// Benutzung des optionalen flags-Parameters seit PHP 5
$trimmed = file('somefile.txt', FILE_IGNORE_NEW_LINES | FILE_SKIP_EMPTY_LINES);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &warn.ssl-non-standard;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>readfile</function></member>
    <member><function>fopen</function></member>
    <member><function>fsockopen</function></member>
    <member><function>popen</function></member>
    <member><function>file_get_contents</function></member>
    <member><function>include</function></member>
    <member><function>stream_context_create</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
