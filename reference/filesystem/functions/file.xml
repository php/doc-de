<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./de/functions/filesystem.xml, last change in rev 1.22 -->
<!-- last change to 'file' in en/ tree in rev 1.2 -->
<!-- EN-Revision: 1.2 Maintainer: tom Status: ready -->
<!-- OLD-Revision: 1.142/EN.1.2 -->
  <refentry id="function.file">
   <refnamediv>
    <refname>file</refname>
    <refpurpose>
     Liest eine Datei komplett in einen Array
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>array</type><methodname>file</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>use_include_path</parameter></methodparam>
     </methodsynopsis>
    <para>
     Die Funktion <function>file</function> ist identisch mit
     <function>readfile</function>, außer dass die eingelesene Datei
     als Array zurückgegeben wird. Jedes Feld des Arrays korrespondiert
     mit einer Zeile der Datei. Der Zeilenumbruch bleibt erhalten.
    </para>
    <note>
     <para>
      Jede Zeile in dem resultierenden Array enthält das Zeilenende ('\0'),
      weshalb Sie <function>trim</function> verwenden müssen, falls Sie
      dieses Zeichen nicht vorhanden sein soll.
     </para>
    </note>
    <para>
     Optional kann der zweite Parameter benutzt und auf '1' gesetzt
     werden, wenn in dem <link
     linkend="ini.include-path">include_path</link> ebenfalls nach der
     Datei gesucht werden soll.
    </para>
    <para>
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
// liest eine Webseite in einen Array und gibt das Ergebnis aus
$fcontents = file ('http://www.example.com/');
while (list ($line_num, $line) = each ($fcontents)) {
    echo "<b>Line $line_num:</b>; ", htmlspecialchars ($line), "<br>\n";
}

// liefert eine Webseite in einen String
$fcontents = implode ('', file ('http://www.example.com/'));
?>
]]>
      </programlisting>
     </informalexample>
    </para>
    <note>
     <para>
      Ab PHP 4.3.0 können Sie <function>file_get_contents</function>
      verwenden, um den Inhalt einer Datei als binären String zu bekommen.
     </para>
    </note>
    &note.not-bin-safe;
    &tip.fopen-wrapper;
    <para>
     Siehe auch <function>readfile</function>,
     <function>fopen</function>, <function>fsockopen</function> und 
     <function>popen</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
