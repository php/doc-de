<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 308472 Maintainer: simp Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.fread">
 <refnamediv>
  <refname>fread</refname>
  <refpurpose>Liest Binärdaten aus einer Datei</refpurpose>
 </refnamediv>
 
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>fread</methodname>
   <methodparam><type>resource</type><parameter>handle</parameter></methodparam>
   <methodparam><type>int</type><parameter>length</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>fread</function> liest bis zu 
   <parameter>length</parameter> Bytes vom Dateizeiger
   <parameter>handle</parameter>. Das Lesen wird beendet, sobald
   eine der folgenden Bedingungen eintritt:
   <itemizedlist>
    <listitem>
     <simpara>
      <parameter>length</parameter> Bytes wurden gelesen
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Das Dateiende (EOF, end of file) wurde erreicht
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Ein Paket wird verfügbar oder eine 
      <link linkend="function.socket-set-timeout">Socket-Zeitüberschreitung</link>
      tritt auf (Bei Netzwerk-Streams)
     </simpara>
    </listitem>
    <listitem>
     <simpara>
      Falls dieser Stream beim Lesen gepuffert wird und keine reguläre Datei
      repräsentiert, wird maximal einmal ein Stück bis zur maximalen Chunkgröße
      (normalerweise 8192 Bytes) gelesen. Abhängig von den bisher gepufferten
      Daten können die zurückgelieferten Daten größer als die Chunkgröße sein.
     </simpara>
    </listitem>
   </itemizedlist>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>handle</parameter></term>
     <listitem>
      &fs.file.pointer;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Bis zu <parameter>length</parameter> Bytes lesen.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt die ausgelesene Zeichenkette zurück. &return.falseforfailure;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ein einfaches <function>fread</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
// liest den Inhalt einer Datei in einen String
$filename = "/usr/local/etwas.txt";
$handle = fopen($filename, "r");
$contents = fread($handle, filesize($filename));
fclose($handle);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Ein <function>fread</function>-Beispiel mit einer Binärdatei</title>
    <warning>
     <para>
      Auf Systemen, welche zwischen Binär- und Textdateien (z.B. Windows)
      unterscheiden, muss die Datei mit 'b' im <function>fopen</function>
      Mode-Parameter geöffnet werden.
     </para>
    </warning>
    <programlisting role="php">
<![CDATA[
<?php
$filename = "c:\\files\\somepic.gif";
$handle = fopen($filename, "rb");
$contents = fread($handle, filesize($filename));
fclose($handle);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>fread</function>-Beispiele für entfernte Dateien</title>
    <warning>
     <para>
      Wenn aus etwas gelesen werden soll, was keine normale lokale Datei ist,
      wie etwa Streams von 
      <link linkend="features.remote-files">entfernten Dateien</link> oder von
      <function>popen</function> und <function>fsockopen</function>, so wird
      das Lesen beendet sobald ein Paket verfügbar ist. Das bedeutet, dass man
      die Daten in Stücken sammeln muss. Dies wird im unteren Beispiel
      gezeigt.
     </para>
    </warning>
    <programlisting role="php">
<![CDATA[
<?php
// Für PHP5 und höher
$handle = fopen("http://www.example.com/", "rb");
$contents = stream_get_contents($handle);
fclose($handle);
?>
]]>
    </programlisting>
    <programlisting role="php">
<![CDATA[
<?php
$handle = fopen("http://www.example.com/", "rb");
$contents = '';
while (!feof($handle)) {
  $contents .= fread($handle, 8192);
}
fclose($handle);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

<refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Wenn man nur den Inhalt einer Datei in eine Zeichenkette lesen will,
    so sollte man <function>file_get_contents</function> verwenden, da dies
    eine bessere Performance hat als der obige Code.
   </para>
  </note>
  <note>
   <para>
    Beachten Sie, dass <function>fread</function> an der aktuellen Position
    im Dateizeiger zu lesen beginnt. Verwenden Sie <function>ftell</function>,
    um herauszufinden wo dieser Zeiger steht und die Funktion
    <function>rewind</function>, um den Zeiger zurückzustellen.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>fwrite</function></member>
    <member><function>fopen</function></member>
    <member><function>fsockopen</function></member>
    <member><function>popen</function></member>
    <member><function>fgets</function></member>
    <member><function>fgetss</function></member>
    <member><function>fscanf</function></member>
    <member><function>file</function></member>
    <member><function>fpassthru</function></member>
    <member><function>ftell</function></member>
    <member><function>rewind</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
