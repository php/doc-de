<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 339729 Maintainer: cmb Status: ready -->

<refentry xml:id="function.fwrite" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>fwrite</refname>
  <refpurpose>Binär-sicheres Dateischreiben</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>fwrite</methodname>
   <methodparam><type>resource</type><parameter>handle</parameter></methodparam>
   <methodparam><type>string</type><parameter>string</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   <function>fwrite</function> schreibt den Inhalt der
   Zeichenkette <parameter>string</parameter> in die Datei, auf
   welche der Dateizeiger <parameter>handle</parameter> zeigt.
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>handle</parameter></term>
     <listitem>
      &fs.file.pointer;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>string</parameter></term>
     <listitem>
      <para>
       Die zu schreibende Zeichenkette.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Wenn der <parameter>length</parameter> Parameter angegeben wird, wird das
       Schreiben nach <parameter>length</parameter> Bytes beendet, oder wenn das
       Ende von <parameter>string</parameter> erreicht ist, je nachdem was eher
       eintritt.
      </para>
      <para>
       Sollte der <parameter>length</parameter> Parameter gesetzt sein, so ist zu
       beachten, dass die <link linkend="ini.magic-quotes-runtime">magic_quotes_runtime</link>
       Konfigurations-Option ignoriert wird und somit keine Schrägstriche mehr
       von der Zeichenkette <parameter>string</parameter> entfernt werden.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <simpara>
   <function>fwrite</function> gibt die Anzahl der
   geschriebenen Bytes zurück, oder &false; bei einem Fehler.
  </simpara>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Das Schreiben in einen Netzwerkstream kann enden, bevor die gesamte
    Zeichenkette geschrieben wurde. Der Rückgabewert von
    <function>fwrite</function> kann wie folgt überprüft werden:
    <programlisting role="php">
<![CDATA[
<?php
function fwrite_stream($fp, $string) {
    for ($written = 0; $written < strlen($string); $written += $fwrite) {
        $fwrite = fwrite($fp, substr($string, $written));
        if ($fwrite === false) {
            return $written;
        }
    }
    return $written;
}
?>
]]>
    </programlisting>
   </para>
  </note>

  <note>
   <para>
    Auf Systemen, welche zwischen Binär- und Textdateien (z.B. Windows)
    unterscheiden, muss die Datei mit 'b' im <function>fopen</function>
    Mode-Parameter geöffnet werden.
   </para>
  </note>
  <note>
   <para>
    Wurde <parameter>handle</parameter> mit <function>fopen</function> im
    Anfügemodus geöffnet, ist das Schreiben mit <function>fwrite</function>
    atomar (außer wenn die Länge von <parameter>string</parameter> die
    Blockgröße des Dateisystems auf manchen Systemen überschreitet, und so lange
    sich die Datei in einem lokalen Dateisystem befindet). D.h. es besteht keine
    Notwendigkeit eine Ressource mit <function>flock</function> vor dem Aufruf
    von <function>fwrite</function> zu sperren; alle Daten werden ohne
    Unterbrechung geschrieben.
   </para>
  </note>
  <note>
   <para>
    Wird zweimalig in den Dateizeiger geschrieben, werden die Daten an das
    Ende des Dateiinhalts angehängt:
        <programlisting role="php">
<![CDATA[
<?php
$fp = fopen('data.txt', 'w');
fwrite($fp, '1');
fwrite($fp, '23');
fclose($fp);

// der Inhalt von 'data.txt' ist nun 123 and nicht 23!
?>
]]>
        </programlisting>
   </para>
  </note>
 </refsect1>



 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ein einfaches Beispiel für fwrite</title>
    <programlisting role="php">
<![CDATA[      
<?php
$filename = 'test.txt';
$somecontent = "Füge dies der Datei hinzu\n";

// Sichergehen, dass die Datei existiert und beschreibbar ist.
if (is_writable($filename)) {

    // Wir öffnen $filename im "Anhänge" - Modus.
    // Der Dateizeiger befindet sich am Ende der Datei, und
    // dort wird $somecontent später mit fwrite() geschrieben.
    if (!$handle = fopen($filename, "a")) {
         print "Kann die Datei $filename nicht öffnen";
         exit;
    }

    // Schreibe $somecontent in die geöffnete Datei.
    if (!fwrite($handle, $somecontent)) {
        print "Kann in die Datei $filename nicht schreiben";
        exit;
    }

    print "Fertig, in Datei $filename wurde $somecontent geschrieben";

    fclose($handle);

} else {
    print "Die Datei $filename ist nicht schreibbar";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>fread</function></member>
    <member><function>fopen</function></member>
    <member><function>fsockopen</function></member>
    <member><function>popen</function></member>
    <member><function>file_get_contents</function></member>
    <member><function>pack</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
