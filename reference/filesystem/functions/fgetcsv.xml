<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 344648 Maintainer: simp Status: ready -->
<!-- Credits: khp -->
<refentry xml:id="function.fgetcsv" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>fgetcsv</refname>
  <refpurpose>
   Liest eine Zeile von der Position des Dateizeigers und 
   prüft diese auf Komma-Separierte-Werte (CSV)
  </refpurpose>
 </refnamediv>

<refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>fgetcsv</methodname>
   <methodparam><type>resource</type><parameter>handle</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>length</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>delimiter</parameter><initializer>","</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>enclosure</parameter><initializer>'"'</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>escape</parameter><initializer>"\\"</initializer></methodparam>
  </methodsynopsis>
  <para>
   Die Funktion <function>fgetcsv</function> ist ähnlich der Funktion
   <function>fgets</function>, nur dass <function>fgetcsv</function>
   die eingelesene Zeile auf Felder im <acronym>CSV</acronym> Format
   (kommaseparierte Felder) hin überprüft, und ein Array mit den
   gelesenen Feldern zurückgibt.
  </para>
  <note>
   <para>
    Die Spracheinstellung (locale) wird von dieser Funktion beachtet. Wenn
    <varname>LC_CTYPE</varname> z.B. den Wert <literal>en_US.UTF-8</literal> hat,
    können Dateien in Ein-byte-Kodierung von dieser Funktion falsch gelesen werden.
   </para>
  </note>
 </refsect1>

<refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>handle</parameter></term>
     <listitem>
      <para>
       Ein gültiger Dateizeiger auf eine Datei, die zuvor mit
       <function>fopen</function>, <function>popen</function> oder
       <function>fsockopen</function> geöffnet wurde.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Muss größer als die längste Zeile (in Zeichen), die in der CSV
       Datei vorhanden ist, sein (dies erlaubt die Erkennung abschließender
       Zeilenende Zeichen). Andernfalls wird die Zeile in Blöcke von 
       <parameter>length</parameter> Zeichen aufgeteilt, es sei denn, die
       Aufteilung würde innerhalb einer Feldbegrenzung erfolgen.
      </para>
      <para> 
       Wird dieser
       Paramter ausgelassen (oder in PHP 5.1.0 und später auf 0 gesetzt),
       ist die maximale Zeilenlänge nicht begrenzt, was ein wenig langsamer
       ist.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>delimiter</parameter></term>
     <listitem>
      <para>
       Der optionale Parameter <parameter>delimiter</parameter> setzt das 
       Feld-Trennzeichen (nur ein Zeichen).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>enclosure</parameter></term>
     <listitem>
      <para>
       Der optionale Parameter <parameter>enclosure</parameter> setzt das 
       Feld-Begrenzungs Zeichen (nur ein Zeichen).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>escape</parameter></term>
     <listitem>
      <para>
       Der optionale Parameter <parameter>escape</parameter> setzt das
       Maskierungs-Zeichen (nur ein Zeichen). 
      </para>
      <note>
       <simpara>
        Normalerweise wird ein <parameter>enclosure</parameter> Zeichen in einem
        Feld maskiert, indem es verdoppelt wird; allerdings kann das
        <parameter>escape</parameter> Zeichen alternativ dazu verwendet werden.
        So haben standardmäßig die Werte <literal>""</literal> und
        <literal>\"</literal> die selbe Bedeutung. Außer der Möglichkeit, das
        <parameter>enclosure</parameter> Zeichen durch das
        <parameter>escape</parameter> Zeichen maskieren zu können, hat letzteres
        keine besondere Bedeutung; es ist nicht einmal dazu geeignet, sich
        selbst zu maskieren.
       </simpara>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein numerisch indexiertes Array zurück, das die gelesenen Felder
   enthält.
  </para>
  <note>
   <para>
    Ein leere Zeile in einer CSV Datei wird als ein Array zurückgegeben, das
    ein einzelnes <type>null</type> Feld enthält und wird nicht als Fehler
    behandelt.
   </para>
  </note>
  &note.line-endings;
  <para>
   <function>fgetcsv</function> gibt &null; zurück, wenn ein ungültiger
   <parameter>handle</parameter> übergeben wurde oder &false; bei anderen
   Fehlern einschließlich Dateiende.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.3.0</entry>
       <entry>
        Der <parameter>escape</parameter> Parameter wurde ergänzt
       </entry>
      </row>
      <row>
       <entry>5.1.0</entry>
       <entry>
        Der Parameter <parameter>length</parameter> ist nun optional.
        Standard ist <literal>0</literal>, d.h. keine Längenbeschränkung.
        <!--
        Note to documentors: the length parameter was actually
        made optional in PHP 5.0.4 but didn't behave properly.
        Let's gloss over that here. :)
        -->
       </entry>
      </row>
      <row>
       <entry>4.3.5</entry>
       <entry>
        <function>fgetcsv</function> ist nun "binary safe"
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Lies und gib den gesamten Inhalt einer CSV Datei aus</title>
    <programlisting role="php">
<![CDATA[
<?php
$row = 1;
if (($handle = fopen("test.csv", "r")) !== FALSE) {
    while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
        $num = count($data);
        echo "<p> $num Felder in Zeile $row: <br /></p>\n";
        $row++;
        for ($c=0; $c < $num; $c++) {
            echo $data[$c] . "<br />\n";
        }
    }
    fclose($handle);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_getcsv</function></member>
    <member><function>explode</function></member>
    <member><function>file</function></member>
    <member><function>pack</function></member>
    <member><function>fputcsv</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
