<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: cef78b0fbe0fbe02003699b027ab50200097e949 Maintainer: simp Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: 34e2e3541c52edc9f60a1ad9735b1f769254eb1e Reviewer: samesch -->
<!-- Credits: khp -->
<refentry xml:id="function.fgetcsv" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>fgetcsv</refname>
  <refpurpose>
   Liest eine Zeile von der Position des Dateizeigers und prüft diese auf
   kommaseparierte Werte (CSV)
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>fgetcsv</methodname>
   <methodparam><type>resource</type><parameter>stream</parameter></methodparam>
   <methodparam choice="opt"><type class="union"><type>int</type><type>null</type></type><parameter>length</parameter><initializer>&null;</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>separator</parameter><initializer>","</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>enclosure</parameter><initializer>"\""</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>escape</parameter><initializer>"\\"</initializer></methodparam>
  </methodsynopsis>
  <para>
   Die Funktion <function>fgetcsv</function> ist ähnlich der Funktion
   <function>fgets</function>, nur dass <function>fgetcsv</function> die
   eingelesene Zeile auf Felder im <acronym>CSV</acronym>-Format
   (kommaseparierte Felder) hin überprüft und ein Array mit den gelesenen
   Feldern zurückgibt.
  </para>
  <note>
   <para>
    Die Spracheinstellung (Locale) wird von dieser Funktion beachtet. Wenn
    <constant>LC_CTYPE</constant> &zb; den Wert <literal>en_US.UTF-8</literal>
    hat, könnten Dateien in Ein-Byte-Kodierung von dieser Funktion falsch
    gelesen werden.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>stream</parameter></term>
     <listitem>
      <para>
       Ein gültiger Dateizeiger auf eine Datei, die zuvor mit
       <function>fopen</function>, <function>popen</function> oder
       <function>fsockopen</function> geöffnet wurde.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>length</parameter></term>
     <listitem>
      <para>
       Muss größer als die längste Zeile (in Zeichen) sein, die in der
       CSV-Datei zu finden ist (dies erlaubt die Erkennung abschließender
       Zeilenende-Zeichen). Andernfalls wird die Zeile in Blöcke von
       <parameter>length</parameter> Zeichen aufgeteilt, es sei denn, die
       Aufteilung würde innerhalb einer Feldbegrenzung erfolgen.
      </para>
      <para>
       Wird dieser Paramter ausgelassen (oder in PHP 8.0.0 oder später auf 0
       oder &null; gesetzt), ist die maximale Zeilenlänge nicht begrenzt, was
       ein wenig langsamer ist.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>separator</parameter></term>
     <listitem>
      <para>
       Der optionale Parameter <parameter>separator</parameter> setzt das
       Feld-Trennzeichen (nur ein Single-Byte-Zeichen).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>enclosure</parameter></term>
     <listitem>
      <para>
       Der optionale Parameter <parameter>enclosure</parameter> setzt das
       Feld-Begrenzungszeichen (nur ein Single-Byte-Zeichen).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>escape</parameter></term>
     <listitem>
      <para>
       Der optionale Parameter <parameter>escape</parameter> setzt das
       Maskierungs-Zeichen (höchstens ein Single-Byte-Zeichen). Eine leere
       Zeichenkette (<literal>""</literal>) deaktiviert den proprietären
       Maskierungsmechanismus.
      </para>
      <note>
       <simpara>
        Normalerweise wird ein <parameter>enclosure</parameter>-Zeichen in
        einem Feld maskiert, indem es verdoppelt wird; allerdings kann
        alternativ dazu das <parameter>escape</parameter>-Zeichen verwendet
        werden. So haben die Werte <literal>""</literal> und
        <literal>\"</literal> standardmäßig dieselbe Bedeutung. Abgesehen von
        der Möglichkeit, das <parameter>enclosure</parameter>-Zeichen zu
        maskieren, hat das Zeichen <parameter>escape</parameter> keine
        besondere Bedeutung; es ist nicht einmal dazu geeignet, sich selbst zu
        maskieren.
       </simpara>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  &warning.csv.escape-parameter;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt bei Erfolg ein numerisch indexiertes Array zurück, das die gelesenen
   Felder enthält. &return.falseforfailure;
  </para>
  <note>
   <para>
    Ein leere Zeile in einer CSV-Datei wird als ein Array zurückgegeben, das
    ein einzelnes <type>null</type>-Feld enthält, und wird nicht als Fehler
    behandelt.
   </para>
  </note>
  &note.line-endings;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>length</parameter> ist jetzt nullbar.
       </entry>
      </row>
      <row>
       <entry>7.4.0</entry>
       <entry>
        Der Parameter <parameter>escape</parameter> akzeptiert nun auch eine
        leere Zeichenkette, um den proprietären Maskierungsmechanismus zu
        deaktivieren.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Lesen und Ausgeben des gesamten Inhalts einer CSV-Datei</title>
    <programlisting role="php">
<![CDATA[
<?php
$row = 1;
if (($handle = fopen("test.csv", "r")) !== FALSE) {
    while (($data = fgetcsv($handle, 1000, ",")) !== FALSE) {
        $num = count($data);
        echo "<p> $num Felder in Zeile $row: <br /></p>\n";
        $row++;
        for ($c=0; $c < $num; $c++) {
            echo $data[$c] . "<br />\n";
        }
    }
    fclose($handle);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>str_getcsv</function></member>
    <member><function>explode</function></member>
    <member><function>file</function></member>
    <member><function>pack</function></member>
    <member><function>fputcsv</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
