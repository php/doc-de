<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 306338 Maintainer: khp Status: ready -->
<refentry xml:id="function.fileatime" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>fileatime</refname>
  <refpurpose>
   Liefert Datum und Uhrzeit des letzten Zugriffs auf eine Datei
  </refpurpose>
 </refnamediv>

<refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>fileatime</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
  </methodsynopsis>
  <simpara>
   Liefert Datum und Uhrzeit des letzten Zugriffs auf die übergebene Datei
  </simpara>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Pfad zu der Datei.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt Datum und Uhrzeit des letzten Zugriffs auf eine Datei zurück,
   &return.falseforfailure;.
   Das Datum wird als UNIX-Timestamp zurückgegeben.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>fileatime</function> Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php

// gibt z.B. aus  Letzer Zugriff auf somefile.txt: December 29 2002 22:16:23.

$filename = 'somefile.txt';
if (file_exists($filename)) {
    echo "Letzer Zugriff auf $filename: " . date("F d Y H:i:s.", fileatime($filename));
}

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &fs.emits.warning.on.failure;
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Der atime Wert einer Datei soll sich immer dann ändern, wenn die
    Dateiblöcke einer Datei gelesen werden. Dies kann in Bezug auf Performance
    teuer sein, falls eine Anwendung regelmäßig auf eine sehr große Anzahl an
    Dateien oder Verzeichnissen zugreift.
   </para>
   <para>
    Einige Unix Dateisysteme können so eingebunden werden, dass atime
    Änderungen ausgeschaltet sind, um die Performace solcher Anwendungen zu
    steigern. USENET news spools sind ein bekanntes Beispiel. Auf solchen
    Dateisystemen ist diese Funktion nutzlos.
   </para>
  </note>
  &note.filesystem-time-res;
  &note.clearstatcache;
  &tip.fopen-wrapper.stat;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>filemtime</function></member>
    <member><function>fileinode</function></member>
    <member><function>date</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
