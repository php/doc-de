<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.15 Maintainer: oliver Status: ready -->
  <refentry xml:id="function.oci-bind-by-name" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>oci_bind_by_name</refname>
    <refpurpose>Bindet eine PHP-Variable an einen Oracle Platzhalter</refpurpose>
   </refnamediv>
   
   <refsect1 role="description">
    &reftitle.description;
     <methodsynopsis>
      <type>bool</type><methodname>oci_bind_by_name</methodname>
      <methodparam><type>resource</type><parameter>statement</parameter></methodparam>
      <methodparam><type>string</type><parameter>ph_name</parameter></methodparam>
      <methodparam><type>mixed</type><parameter role="reference">variable</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>maxlength</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>type</parameter></methodparam>
     </methodsynopsis>
    <para>
     Bindet die PHP-Variable <parameter>variable</parameter> an den Oracle-Platzhalter
     <parameter>ph_name</parameter>. Ob dieser zur Ein- oder Ausgabe genutzt 
     wird, wird zur Laufzeit ermittelt und der benötigte Speicherplatz reserviert.
    </para>
   </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>statement</parameter></term>
     <listitem>
      <para>
       Ein OCI-Statement.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>ph_name</parameter></term>
     <listitem>
      <para>
       Ein Platzhalter.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>variable</parameter></term>
     <listitem>
      <para>
       Die PHP-Variable.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>maxlength</parameter></term>
     <listitem>
      <para>
       Setzt die maximale Größe des Binds. Wenn dieser Wert auf -1
       gesetzt wird, nimmt die Funktion die aktuelle Grösse 
       von <parameter>variable</parameter> und setzt diesen Wert als
       maximale Grösse.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>type</parameter></term>
     <listitem>
      <para>
       Wenn ein abstrakter Datentyp wie (LOB/ROWID/BFILE) gebunden werden soll,
       muss zuerst <function>oci_new_descriptor</function> verwendet werden.
       <parameter>length</parameter> gilt nicht für abstrakte Datentypen und 
       sollte dann auf -1 gesetzt sein.
       <parameter>type</parameter> zeigt Oracle, welchen Typ wir binden wollen.
       Mögliche Typen sind: OCI_B_FILE (Binärdatei), OCI_B_CFILE (Textdatei),
       OCI_B_CLOB (Text-LOB), OCI_B_BLOB (Binär-LOB) and OCI_B_ROWID (ROWID).

       values are: 
       <itemizedlist>
        <listitem>
         <para>
          <constant>SQLT_FILE</constant> - für BFILEs (Binärdatei);
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLT_CFILE</constant> - für CFILEs (Textdatei);
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLT_CLOB</constant> - für CLOBs (Text-LOB);
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLT_BLOB</constant> - für BLOBs (Binär-LOB);
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLT_RDD</constant> - für ROWIDs;
         </para>
          </listitem>
        <listitem>
         <para>
          <constant>SQLT_NTY</constant> - für benamte Datentypen;
         </para>
          </listitem>
        <listitem>
         <para>
          <constant>SQLT_INT</constant> - für INTEGERs;
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLT_CHR</constant> - für VARCHARs;
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLT_BIN</constant> - für RAW-Spalten;
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLT_LNG</constant> - für LONG-Spalten;
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLT_LBI</constant> - für LONG-RAW-Spalten;
         </para>
        </listitem>
        <listitem>
         <para>
          <constant>SQLT_RSET</constant> - für Zeiger, die zuvor mit 
            <function>oci_new_cursor</function> generiert wurden.
         </para>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
    <para>
     <example>
      <title><function>oci_bind_by_name</function> Beispiel</title>
      <programlisting role="php">
<![CDATA[
<?php
/* oci_bind_by_name Beispiel thies at thieso dot net (980221)
  fügt 3 Datensätze in emp ein und benutzt ROWID, um die Datensätze 
  direkt nach dem Einfügen zu ändern.
*/

$conn = oci_connect("scott", "tiger");

$stmt = oci_parse($conn, "
                          INSERT INTO 
                                     emp (empno, ename) 
                                              VALUES 
                                     (:empno,:ename) 
                            RETURNING 
                                     ROWID 
                                 INTO 
                                     :rid
                                         ");

$data = array(
              1111 => "Larry", 
              2222 => "Bill", 
              3333 => "Jim"
             );

$rowid = oci_new_descriptor($conn, OCI_D_ROWID);

oci_bind_by_name($stmt, ":empno", $empno, 32);
oci_bind_by_name($stmt, ":ename", $ename, 32);
oci_bind_by_name($stmt, ":rid",   $rowid, -1, OCI_B_ROWID);

$update = oci_parse($conn, "
                            UPDATE
                                  emp 
                               SET 
                                  sal = :sal 
                             WHERE 
                                  ROWID = :rid
                             ");
oci_bind_by_name($update, ":rid", $rowid, -1, OCI_B_ROWID);
oci_bind_by_name($update, ":sal", $sal,   32);

$sal = 10000;

foreach ($data as $empno => $ename) {
    oci_execute($stmt);
    oci_execute($update);
} 

$rowid->free();

oci_free_statement($update);
oci_free_statement($stmt);

$stmt = oci_parse($conn, "
                          SELECT 
                                * 
                            FROM 
                                emp 
                           WHERE 
                                empno 
                              IN 
                                (1111,2222,3333)
                              ");
oci_execute($stmt);
                              
while ($row = oci_fetch_assoc($stmt)) {
    var_dump($row);
}

oci_free_statement($stmt);

/* löscht unseren "Müll" aus der Tabelle emp.... */
$stmt = oci_parse($conn, "
                          DELETE FROM
                                     emp 
                                WHERE 
                                     empno 
                                   IN 
                                     (1111,2222,3333)
                                   ");
oci_execute($stmt);
oci_free_statement($stmt);

oci_close($conn);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Bedenke, das diese Funktion die nachfolgenden Leerzeichen abscheidet, wie 
     das folgende Beispiel zeigt:
    </para>
    <para>
     <example>
      <title><function>oci_bind_by_name</function> Beispiel</title>
      <programlisting role="php">
<![CDATA[
<?php
    $connection = oci_connect('apelsin','kanistra');
    $query = "INSERT INTO test_table VALUES(:id, :text)";

    $statement = oci_parse($query);
    oci_bind_by_name($statement, ":id", 1);
    oci_bind_by_name($statement, ":text", "Leerzeichen folgen     ");
    oci_execute($statement);
    /*
     Dieser Code wird den String 'Leerzeichen folgen' ohne die 
     nachfolgenden Leerzeichen in die DB einfügen.
    */
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title><function>oci_bind_by_name</function> Beispiel</title>
      <programlisting role="php">
<![CDATA[
<?php
    $connection = oci_connect('apelsin','kanistra');
    $query = "INSERT INTO test_table VALUES(:id, 'Leerzeichen folgen      ')";

    $statement = oci_parse($query);
    oci_bind_by_name($statement, ":id", 1);
    oci_execute($statement);
    /*
     Und dieser Code wird 'Leerzeichen folgen      ' hinzufügen und
     dabei die Leerzeichen erhalten.
    */
?>
]]>
      </programlisting>
     </example>
    </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
    <warning>
     <para>
      Benutze <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link> oder
      <function>addslashes</function> und <function>oci_bind_by_name</function>
      nicht gleichzeitig, da kein quotieren nötig ist und jede magisch 
      hinzugefügte Quotieren in die Datenbank geschrieben wird. 
      <function>oci_bind_by_name</function> kann die magisch hinzugefügte nicht 
      von den absichtlich hinzugefügten Quotierung unterscheiden.
     </para> 
    </warning>
    <note>
     <para>
      In der PHP-Versionen vor 5.0.0 muss man <function>ocibindbyname</function> 
      benutzen. Den Namen kann man immer noch nutzen. Er wurde als Alias für 
      <function>oci_bind_by_name</function> für die Abwärtskompatibilität 
      erhalten. Dieses ist allerdings veraltet und wird nicht empfohlen.
     </para>
    </note>
   </refsect1>
   
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

