<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.6 Maintainer: oliver Status: ready -->
  <refentry id="function.oci-error">
   <refnamediv>
    <refname>oci_error</refname>
    <refpurpose>Liefert den letzten Fehler</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>array</type><methodname>oci_error</methodname>
      <methodparam choice="opt"><type>resource</type><parameter>source</parameter></methodparam>
     </methodsynopsis>
    <para>
     Der Parameter ist, bei den meisten Fehlern, der geeignetste 
     Ressourcen-Handler. Bei Verbindungsfehlern mit 
     <function>oci_connect</function>, <function>oci_new_connect</function> 
     oder <function>oci_pconnect</function> sollte kein Parameter mitgegeben 
     werden. Wenn kein Fehler gefunden wurde, liefert 
     <function>oci_error</function> &false; zurück. Ein Fehler wird von 
     <function>oci_error</function> als assoziatives Array zurückgegeben. Das 
     Array besteht aus <literal>code</literal>, das den Oracle-Errorcode 
     enthält, und <literal>message</literal> mit dem Oracle-Fehlertext.
    </para>
    <note>
     <title>Seit PHP 4.3</title>
     <para>
      Im Rückgabe-Array sind nun <literal>offset</literal> und 
      <literal>sqltext</literal> enthalten, die die Fehlerstelle anzeigen und 
      den ursprünglichen SQL-Text, der den Fehler verusacht hat, beinhalten.
     </para>
    </note>
    <para>
     <example>
      <title>Zeigt die Oracle-Fehlermeldung nach einem Verbindungsfehler an</title>
      <programlisting role="php">
<![CDATA[
$conn = @oci_connect("scott", "tiger", "mydb");
if (!$conn) {
  $e = oci_error();   // Bei oci_connect-Fehler ohne Handler
  echo htmlentities($e['message']);
}
]]>
      </programlisting>
     </example> 
    </para>
    <para>
     <example>
      <title>Zeigt die Oracle-Fehlermeldung nach einem Parse-Error an</title>
      <programlisting role="php">
<![CDATA[
$stmt = @oci_parse($conn, "select ' from dual");  // Fehlerhafte Quottierung
if (!$stmt) {
  $e = oci_error($conn);  // Bei oci_parse-Fehler mit Verbindungs-Handler
  echo htmlentities($e['message']);
}
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>
       Zeigt die Oracle-Fehlermeldung und das problematische Statement 
       nach einem Ausführungsfehler
      </title>
      <programlisting role="php">
<![CDATA[
$r = oci_execute($stmt);
if (!$r) {
  $e = oci_error($stmt); // Bei oci_execute-Fehler mit Statement-Handle
  echo htmlentities($e['message']);
  echo "<pre>";
  echo htmlentities($e['sqltext']);
  printf("\n%".($e['offset']+1)."s", "^");
  echo "</pre>";
}     
]]>
      </programlisting>
     </example>
    </para>
    <note>
     <para>
      In der PHP-Versionen vor 5.0.0 muss man <function>ocierror</function> 
      benutzen. Den Namen kann man immer noch nutzen. Er wurde als Alias für 
      <function>oci_error</function> für die Abwärtskompatibilität 
      erhalten. Dieses ist allerdings veraltet und wird nicht empfohlen.
     </para>
    </note>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
