<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: b9e6268918813e27972c644897970b0cdbc6f86e Maintainer: sammywg Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: 8a2141dcc084f72feb4e0ae2feaff3b440e5c59e Reviewer: samesch -->
<section xml:id="oci8.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
 <para>
  <table>
   <title>OCI8-Konfigurationsoptionen</title>
   <tgroup cols="4">
    <thead>
     <row>
      <entry>&Name;</entry>
      <entry>&Default;</entry>
      <entry>&Changeable;</entry>
      <entry>&Changelog;</entry>
     </row>
    </thead>
    <tbody xml:id="oci8.configuration.list">
     <row>
      <entry><link linkend="ini.oci8.connection-class">oci8.connection_class</link></entry>
      <entry>""</entry>
      <entry>PHP_INI_ALL</entry>
      <entry>Verfügbar seit PECL OCI8 1.3.</entry>
     </row>
     <row>
      <entry><link linkend="ini.oci8.default-prefetch">oci8.default_prefetch</link></entry>
      <entry>"100"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Verfügbar seit PECL OCI8 1.1.</entry>
     </row>
     <row>
      <entry><link linkend="ini.oci8.events">oci8.events</link></entry>
      <entry>Off</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Verfügbar seit PECL OCI8 1.3.</entry>
     </row>
     <row>
      <entry><link linkend="ini.oci8.max-persistent">oci8.max_persistent</link></entry>
      <entry>"-1"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Verfügbar seit PECL OCI8 1.1.</entry>
     </row>
     <row>
      <entry><link linkend="ini.oci8.old-oci-close-semantics">oci8.old_oci_close_semantics</link></entry>
      <entry>Off</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Verfügbar seit PECL OCI8 1.1. Ab PHP 8.1.0 veraltet.</entry>
     </row>
     <row>
      <entry><link linkend="ini.oci8.persistent-timeout">oci8.persistent_timeout</link></entry>
      <entry>"-1"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Verfügbar seit PECL OCI8 1.1.</entry>
     </row>
     <row>
      <entry><link linkend="ini.oci8.ping-interval">oci8.ping_interval</link></entry>
      <entry>"60"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Verfügbar seit PECL OCI8 1.1.</entry>
     </row>
     <row>
      <entry><link linkend="ini.oci8.prefetch-lob-size">oci8.prefetch_lob_size</link></entry>
      <entry>"0"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Verfügbar seit PECL OCI8 3.2.</entry>
     </row>
     <row>
      <entry><link linkend="ini.oci8.privileged-connect">oci8.privileged_connect</link></entry>
      <entry>Off</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Verfügbar seit PECL OCI8 1.1.</entry>
     </row>
     <row>
      <entry><link linkend="ini.oci8.statement-cache-size">oci8.statement_cache_size</link></entry>
      <entry>"20"</entry>
      <entry>PHP_INI_SYSTEM</entry>
      <entry>Verfügbar seit PECL OCI8 1.1.</entry>
     </row>
    </tbody>
   </tgroup>
  </table>
 </para>

 &ini.descriptions.title;

 <para>
  <variablelist>
   <varlistentry xml:id="ini.oci8.connection-class">
    <term>
     <parameter>oci8.connection_class</parameter>
     <type>string</type>
    </term>
    <listitem>
     <para>
      Dieser benutzerdefinierte Text sollte immer festgelegt werden, wenn
      Oracle Database Resident Connection Pooling (DRCP) verwendet wird. Er
      ermöglicht die Partitionierung des DRCP-Verbindungspools, sodass
      persistente OCI8-Verbindungen einer Anwendung Datenbanksessions aus
      einem vorherigen PHP-Skript wiederverwenden können, was eine bessere
      Skalierbarkeit ermöglicht. Wenn eine Anwendung einen
      Datenbankpool-Prozess verwendet, der zuvor mit einer anderen
      Verbindungsklasse verwendet wurde, werden die Session-Einstellungen,
      z. B. das standardmäßige Oracle-Datumsformat, zurückgesetzt. Dies
      verhindert eine versehentliche gemeinsame Nutzung von Informationen
      zwischen verschiedenen Anwendungen.
     </para>
     <para>
      Der Wert kann zur Laufzeit vor dem Aufbau der Verbindung mit
      <function>ini_set</function> gesetzt werden.
     </para>
     <para>
      Um DRCP zu verwenden, muss OCI8 gegen Bibliotheken von Oracle
      11<emphasis>g</emphasis> (oder höher) gelinkt sein und die Datenbank
      muss Oracle 11<emphasis>g</emphasis> (oder höher) sein. Der
      DRCP-Verbindungspool muss in der Datenbank aktiviert sein, die
      <literal>oci8.connection_class</literal> muss für alle Webserver, auf
      denen dieselbe Anwendung läuft, auf dieselbe Zeichenkette gesetzt werden
      und die OCI8-Verbindungszeichenkette muss angeben, dass ein Server mit
      einem Pool verwendet werden soll. Die Anwendung sollte persistente
      Verbindungen verwenden.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.oci8.default-prefetch">
    <term>
     <parameter>oci8.default_prefetch</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Diese Option legt die Standard-Anzahl der zusätzlichen Zeilen fest, die
      automatisch abgerufen und zwischengespeichert werden, wenn eine
      Low-Level-Anforderung von Daten aus der Datenbank erfolgt. Das Setzen
      des Wertes <literal>0</literal> deaktiviert das Prefetching.
     </para>
     <para>
      Der Prefetch-Wert ändert nicht die Anzahl der Zeilen, die Funktionen wie
      <function>oci_fetch_array</function> an den Benutzer zurückgeben; das
      Prefetching und Caching von Zeilen wird intern in OCI8 verwaltet.
     </para>
     <para>
      Der Wert kann pro Anweisung mit <function>oci_set_prefetch</function>
      vor der Ausführung der Anweisung gesetzt werden.
     </para>
     <para>
      In PHP 5.3 (PECL OCI8 1.3.4) wurde der Standardwert von
      <literal>10</literal> auf <literal>100</literal> erhöht.
     </para>
     <para>
      In PHP 5.3.2 (PECL OCI8 1.4) wurde der einstellbare Mindestwert von
      <literal>1</literal> auf <literal>0</literal> reduziert, wodurch das
      Prefetching abgeschaltet werden kann.
     </para>
     <para>
      Bei Verwendung von Oracle Database 12<emphasis>c</emphasis> (oder höher)
      kann der von PHP festgelegte Prefetch-Wert von Oracles
      Client-Konfigurationsdatei <literal>oraaccess.xml</literal>
      überschrieben werden. Siehe in der Oracle-Dokumentation für weitere
      Details.
     </para>
     <note>
      <simpara>
       Ein größerer Prefetch kann zu einer verbesserten Leistung führen,
       allerdings auf Kosten eines erhöhten Speicherverbrauchs. Bei Abfragen,
       die große Datenmengen zurückgeben, kann der Leistungsvorteil deutlich
       sein.
      </simpara>
     </note>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.oci8.events">
    <term>
     <parameter>oci8.events</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Wenn diese Option aktiv ist (<literal>On</literal>), kann PHP über FAN-
      (Fast Application Notification) Datenbankereignisse benachrichtigt
      werden.
     </para>
     <para>
      Ohne FAN kann es bei einem plötzlichen Ausfall einer Datenbankinstanz
      oder eines Rechnerknotens dazu kommen, dass PHP-Anwendungen beim Warten
      auf eine Datenbankantwort hängen bleiben, bis der TCP-Timeout abgelaufen
      ist. Mit FAN-Ereignissen werden PHP-Anwendungen schnell über Fehler
      informiert, die Datenbankverbindungen betreffen. Die OCI8-Erweiterung
      entfernt unbrauchbare Verbindungen aus dem persistenten
      Verbindungscache.
     </para>
     <para>
      Wenn diese Option verwendet wird (<literal>On</literal>), muss die
      Datenbank auch konfiguriert werden, FAN-Ereignisse zu melden.
     </para>
     <para>
      Die FAN-Unterstützung ist verfügbar, wenn OCI8 gegen Bibliotheken von
      Oracle 10<emphasis>g</emphasis>R2 (oder höher) gelinkt ist und mit einer
      Oracle-Datenbank 10<emphasis>g</emphasis>R2 (oder höher) verbunden ist.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.oci8.max-persistent">
    <term>
     <parameter>oci8.max_persistent</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Die maximale Anzahl persistenter OCI8-Verbindungen pro PHP-Prozess. Wenn
      diese Option auf -1 gesetzt ist, ist die Anzahl der Verbindungen nicht
      limitiert.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.oci8.old-oci-close-semantics">
    <term>
     <parameter>oci8.old_oci_close_semantics</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Diese Option kontrolliert das Verhalten der Funktion
      <function>oci_close</function>. Wenn sie aktiviert wird, zeigt der
      Aufruf von <function>oci_close</function> keine Reaktion; die Verbindung
      wird nicht vor dem Ende des Skripts beendet. Die Funktion existiert nur
      aus Gründen der Abwärtskompatibilität. Wenn Sie in eine Situation
      kommen, in der Sie diese Option aktivieren müssen, sei Ihnen
      <emphasis>dringend empfohlen</emphasis>, stattdessen alle
      <function>oci_close</function>-Aufrufe aus Ihrer Anwendung zu entfernen.
     </para>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.oci8.persistent-timeout">
    <term>
     <parameter>oci8.persistent_timeout</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Die maximale Dauer (in Sekunden), über die der angegebene Prozess eine
      ungenutzte persistente Verbindung aufrechterhalten darf. Ist diese
      Option auf -1 gesetzt, werden ungenutzte persistente Verbindungen
      aufrecht erhalten, bis der PHP-Prozess endet oder die Verbindung mittels
      <function>oci_close</function> ausdrücklich geschlossen wird.
     </para>
     <note>
      <simpara>
       In PHP ist das Ablaufen ungenutzter Ressourcen nicht alarmgesteuert. Es
       erfolgt, wenn PHP die Verarbeitung eines Skripts beendet und den
       Zeitstempel der zuletzt verwendeten Ressourcen überprüft. Dies führt zu
       dem Paradoxon, dass ungenutzte Verbindungen nur geschlossen werden
       können, wenn es im PHP-Prozess irgendeine Aktivität gibt (wenn auch
       nicht unbedingt OCI8-bezogen). Wenn es mehr als einen PHP-Prozess gibt,
       muss jeder Prozess einzeln aktiviert werden, um den Ablauf der seiner
       ungenutzten Ressourcen auszulösen. Die Einführung von Database Resident
       Connection Pooling (DRCP) in Oracle 11<emphasis>g</emphasis> behebt die
       Speicher- und Ressourcenprobleme, die
       <literal>oci8.max_persistent</literal> und
       <literal>oci8.persistent_timeout</literal> zuvor versuchten, zu
       beheben.
      </simpara>
     </note>
     <note>
      <simpara>
       In PHP 5.3 (PECL OCI8 1.3) können persistente Verbindungen mit
       <function>oci_close</function> geschlossen werden.
      </simpara>
     </note>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.oci8.ping-interval">
    <term>
     <parameter>oci8.ping_interval</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Die Dauer (in Sekunden), die vergehen muss, bevor ein Ping während eines
      <function>oci_pconnect</function> abgeschickt wird. Ein Ping stellt
      sicher, dass die Datenbankverbindung gültig ist. Wenn dies auf 0 gesetzt
      ist, werden persistente Verbindungen bei jeder Verwendung von
      <function>oci_pconnect</function> gepingt. Um Pings völlig zu
      deaktivieren, muss die Option auf -1 gesetzt werden.
     </para>
     <note>
      <simpara>
       Das Deaktivieren von Pings lässt <function>oci_pconnect</function> mit
       höchster Effizienz arbeiten, kann aber dazu führen, dass PHP
       unbrauchbare Verbindungen nicht bemerkt, die z. B. entstehen können,
       wenn das Netzwerk unterbrochen wird oder der Oracle-Server bei
       bestehender Verbindung heruntergefahren wird. Konsultieren Sie die
       Dokumentation zu <function>oci_pconnect</function>, um weitere
       Informationen zu erhalten.
      </simpara>
     </note>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.oci8.prefetch-lob-size">
    <term>
     <parameter>oci8.prefetch_lob_size</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Dies ist ein Optimierungsparameter, der die interne Pufferung von
      LOB-Daten betrifft. Wenn dieser Wert erhöht wird, kann dies die Leistung
      beim Abrufen von kleineren LOBs verbessern, indem die Anzahl der Umläufe
      (Roundtrips) zwischen PHP und der Datenbank reduziert wird. Die
      Speichernutzung wird sich ändern.
     </para>
     <para>
      Der Wert betrifft LOBs, die als Instanzen von OCILob zurückgegeben
      werden und auch solche die unter Verwendung von
      <constant>OCI_RETURN_LOBS</constant> zurückgegeben werden.
     </para>
     <para>
      Der Wert kann bei jeder Anweisung mittels
      <function>oci_set_prefetch_lob</function> vor der Ausführung der
      Anweisung festgelegt werden.
     </para>
     <note>
      <simpara>
       Zu verwenden mit Oracle Database 12.2 oder höher.
      </simpara>
     </note>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.oci8.privileged-connect">
    <term>
     <parameter>oci8.privileged_connect</parameter>
     <type>bool</type>
    </term>
    <listitem>
     <para>
      Diese Option aktiviert privilegierte Verbindungen unter Verwendung
      externer Berechtigungen (<constant>OCI_SYSOPER</constant> oder
      <constant>OCI_SYSDBA</constant>).
     </para>
     <note>
      <simpara>
       Wenn diese Option auf <literal>On</literal> gesetzt ist, können
       Webserver-Skripte, die über die entsprechenden Systembenutzerrechte
       verfügen, eine Verbindung zur Datenbank mit diesen Rechten herstellen,
       ohne ein Passwort für die Datenbank angeben zu müssen. Dies kann ein
       Sicherheitsrisiko darstellen.
      </simpara>
     </note>
    </listitem>
   </varlistentry>
   <varlistentry xml:id="ini.oci8.statement-cache-size">
    <term>
     <parameter>oci8.statement_cache_size</parameter>
     <type>int</type>
    </term>
    <listitem>
     <para>
      Diese Option aktiviert den Anweisungs-Cache und definiert, wie viele
      Anweisungen gecacht werden. Um das Caching zu deaktivieren, muss die
      Option auf 0 gesetzt werden.
     </para>
     <para>
      Durch das Anweisungs-Caching entfällt die Notwendigkeit, den
      Anweisungstext an die Datenbank zu übermitteln, und es müssen auch keine
      Metadaten über die Anweisung zurück an PHP übertragen werden. Dies kann
      die Gesamtleistung des Systems in Anwendungen, die Anweisungen während
      der Lebensdauer einer Verbindung wiederverwenden, deutlich verbessern.
      Einige zusätzliche Datenbank-&quot;Cursor&quot; werden möglicherweise
      unter der Annahme offen gehalten, dass Anweisungen wiederverwendet
      werden.
     </para>
     <para>
      Setzen Sie diesen Wert auf die Größe der aktuellen Menge an Anweisungen,
      die von Ihrer Anwendung verwendet wird. Die Einstellung eines zu kleinen
      Wertes kann dazu führen, dass Anweisungen aus dem Cache entfernt werden,
      bevor sie wiederverwendet werden.
     </para>
     <para>
      Diese Option ist vor allem bei persistenten Verbindungen von Nutzen.
     </para>
     <para>
      Wenn Sie Oracle Database 12<emphasis>c</emphasis> (oder höher)
      verwenden, kann dieser Wert von Oracles Client-Datei
      <literal>oraaccess.xml</literal> überschrieben und automatisch
      eingestellt werden. Siehe die Oracle-Dokumentation für weitere Details.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
