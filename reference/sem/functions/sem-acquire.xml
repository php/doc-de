<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343899 Maintainer: hholzgra Status: ready -->

<refentry xml:id="function.sem-acquire" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>sem_acquire</refname>
  <refpurpose>Zugriff auf Semaphor anfordern</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
   <methodsynopsis>
    <type>bool</type><methodname>sem_acquire</methodname>
    <methodparam><type>resource</type><parameter>sem_identifier</parameter></methodparam>
    <methodparam choice="opt"><type>bool</type><parameter>nowait</parameter><initializer>&false;</initializer></methodparam>
   </methodsynopsis>
  <para>
   Standardmäßig blockiert <function>sem_acquire</function> (falls nötig) bis
   ein Zugriff auf den Semaphor möglich ist. Ein Prozess der
   Zugriff auf einen Semaphor anfordert auf den er bereits
   Zugriff hat wird für immer blockieren wenn dieser erneute
   Zugriff die maximalen Zugriffe auf diesen Semaphor 
   überschreiten würde.
   <parameter>sem_identifier</parameter> ist eine von
   <function>sem_get</function> gelieferte Semaphor-Resource.
  </para>
  <para>
   Nach Abarbeitung eines requests werden alle noch vom Prozess
   gehaltenen Semaphore automatisch freigegeben und entsprechende
   Warnungen erzeugt.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>sem_identifier</parameter></term>
     <listitem>
      <para>
       <parameter>sem_identifier</parameter> ist ein von <function>sem_get</function>
       geliefertes Resourcehandle
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>nowait</parameter></term>
     <listitem>
      <para>
       Gibt an, ob der Prozess nicht auf den Zugriff auf den Semaphor warten
       soll. Bei <literal>true</literal> wird der Aufruf unmittelbar
       <literal>false</literal> zurückgeben, wenn der Semaphor nicht sofort
       reserviert werden kann.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.6.1</entry>
       <entry>
        Der <parameter>$nowait</parameter> Parameter wurde hinzugefügt.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sem_get</function></member>
    <member><function>sem_release</function></member>
   </simplelist>
  </para>
 </refsect1>  

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
