<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.25 Maintainer: none Status: ready -->
<!-- Purpose: utilspec.image -->
<!-- Membership: bundled -->
<reference id="ref.image">
 <title>Grafik-Fuktionen</title>
 <titleabbrev>Grafiken</titleabbrev>

 <partintro>
   <section id="image.intro">
    &reftitle.intro;
    <para>
     Mit PHP können Sie nicht nur HTML ausgeben, sondern auch Grafiken in
     vielen Formaten - wie gif, png, jpg, wbmp, und xpm - erzeugen und/oder
     manipulieren. Noch besser, Sie können Grafiken mit PHP direkt als
     Datenstrom ausgeben. Damit das funktioniert, müssen Sie
     PHP mit der GD-Bibliothek zur Grafikbearbeitung kompilieren. GD und PHP
     benötigen, je nachdem mit welchen Grafikformaten Sie arbeiten wollen,
     zusätzliche Bibliotheken.
    </para>
    <para>
     Sie können die Grafikfunktionen in PHP auch verwenden, um die Größe von
     <acronym>JPEG</acronym>, <acronym>GIF</acronym>,
     <acronym>PNG</acronym>, <acronym>SWF</acronym>,
     <acronym>TIFF</acronym> und <acronym>JPEG2000</acronym> Grafiken zu
     bestimmen.
    </para>
    <para>
     <note>
      <simpara>
       Im Abschnitt über die Anforderungen können Sie nachlesen, wie Sie die
       Möglichkeiten zur Grafikbearbeitung erweitern können: lesen, schreiben
       und manipulieren von Grafiken, und auslesen von Metadaten, bei Bildern
       die mit einer Digitalkamera aufgenommen wurden.
      </simpara>
     </note>
    </para>
   </section>

   <section id="image.requirements">
    &reftitle.required;
    <para>
     Mit der <acronym>GD</acronym> Bibliothek (verfügbar unter <ulink
     url="&url.gd;">&url.gd;</ulink>) können Sie auch Grafiken erzeugen und
     manipulieren.
    </para>
    <para>
     Die mittels dieser Funktionen veränderbaren Grafik-Formate hängen davon
     ab, welche Version von <acronym>GD</acronym> Sie installieren und welche
     zusätzlich Biblioitheken <acronym>GD</acronym> benötigt um mit diesen
     Formaten umgehen zu können. <acronym>GD</acronym>-Versionen älter als
     gd-1.6 unterstützen GIF aber kein PNG. Neuere Versionen als gd-1.6 und
     ältere als gd-2.0.28 unterstützen PNG, aber kein GIF. In gd-2.0.28 gibt
     es erstmals wieder Unterstützung für GIF.
     <note>
      <simpara>
       Seit PHP 4.3 ist eine Version der GD-Bibliothek in PHP enthalten.
       Diese gebündelte Version bietet zusätzliche Möglichkeiten, wie z.B.
       alpha blending und sollte der externen Version immer vorgezogen werden
       (der Code wird besser betreut und ist stabiler).
      </simpara>
     </note>
    </para>
    <para>
     Sie können GD erweitern, um mehr Grafikformate zu verwenden.
     <table>
     <title>Unterstützte Grafikformate</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Grafikformat</entry>
         <entry>Download der benötigten Bibliothek</entry>
         <entry>Anmerkungen</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry><literal>gif</literal></entry>
         <entry></entry>
         <entry>
          Wird nur von GD-Versionen älter als gd-1.6 und neuer als gd-2.0.28
          unterstützt. <emphasis>Nur-lesende</emphasis> Unterstützung von GIF
          gibt es ab PHP 4.3.0 und der gebündelten GD-Version.
          <emphasis>Schreibende</emphasis> Unterstützung steht ab den
          Versionen PHP 4.3.9 und PHP 5.0.1 zur Verfügung.
         </entry>
        </row>
        <row>
         <entry><literal>jpeg-6b</literal></entry>
         <entry><ulink url="&url.jpeg;">&url.jpeg;</ulink></entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>png</literal></entry>
         <entry><ulink url="&url.libpng;">&url.libpng;</ulink></entry>
         <entry>
          Nur von GD-Versionen neuer als gd-1.6. unterstützt.
         </entry>
        </row>
        <row>
         <entry><literal>xpm</literal></entry>
         <entry><ulink url="&url.libxpm;">&url.libxpm;</ulink></entry>
         <entry>
          Falls auf Ihrem System eine X-Umgebung installiert ist, steht Ihnen
          diese Bibliothek wahrscheinlich schon zur Verfügung.
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>

    <para>
     Sie können GD erweitern, um unterschiedliche Schriften zu verwenden. Die
     folgenden Schriftbibliotheken werden unterstützt.
     <table>
     <title>Unterstützte Schriftbibliotheken</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Schriftbibliothek</entry>
         <entry>Download</entry>
         <entry>Anmerkungen</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry><literal>FreeType 1.x</literal></entry>
         <entry><ulink url="&url.freetype;">&url.freetype;</ulink></entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>FreeType 2</literal></entry>
         <entry><ulink url="&url.freetype;">&url.freetype;</ulink></entry>
         <entry></entry>
        </row>
        <row>
         <entry><literal>T1lib</literal></entry>
         <entry><ulink url="&url.t1lib;">&url.t1lib;</ulink>)</entry>
         <entry>
          Unterstützung für Type 1 Schriften.
         </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>

    <para>
     Falls Sie PHP mit der Option
     <option role="configure">--enable-exif</option> konfiguriert und
     übersetzt haben, können Sie Informationen im Kopfbereich von
     <acronym>JPEG</acronym> und <acronym>TIFF</acronym> Grafiken verarbeiten.
     Wie schon weiter oben erwähnt, eröffnet Ihnen diese Option die
     Möglichkeit Metadaten von Bildern zu verarbeiten, die mit Digitalkameras
     erzeugt wurden. Diese Funktionen benötigen nicht die
     <acronym>GD</acronym>-Bibliothek.
    </para>
   </section>

   &reference.image.configure;

   &reference.image.ini;

   <section id="image.resources">
    &reftitle.resources;
    &no.resource;
   </section>

   &reference.image.constants;

   <section id="image.examples">
    &reftitle.examples;
    <para>
     <example>
      <title>PNG erzeugen mit PHP</title>
      <programlisting role="php">
<![CDATA[
<?php

header("Content-type: image/png");
$string = $_GET['text'];
$im     = imagecreatefrompng("images/button1.png");
$orange = imagecolorallocate($im, 220, 210, 60);
$px     = (imagesx($im) - 7.5 * strlen($string)) / 2;
imagestring($im, 3, $px, 9, $string, $orange);
imagepng($im);
imagedestroy($im);

?>
]]>
      </programlisting>
     </example>
     Dieses Beispiel würde von einer Seite über einen Link wie
     &lt;img src=&quot;button.php?text=text&quot;&gt; aufgerufen.
     Das oben aufgezeigte Beispielskript button.php nimmt den Text &quot;text&quot;
     entgegen und legt diesen über ein vorhandenes Bild, in diesem Fall
     &quot;images/button1.png&quot; und gibt die resultierende Grafik aus.
     Diese Vorgehensweise ist sehr zweckmäßig, wenn Sie vermeiden wollen, dass
     Sie immer wieder neue Button-Grafiken erstellen müssen, falls Sie die
     Beschriftung eines Buttons ändern wollen. Mit der vorgestellten Methode
     werden Ihr Buttons, samt Beschriftung, dynamisch generiert.
    </para>
   </section>
 </partintro>

&reference.image.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

