<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 344605 Maintainer: nobody Status: ready -->

<refentry xml:id="function.imagettftext" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>imagettftext</refname>
  <refpurpose>Schreibe Text ins Bild unter Verwendung von True-Type-Schriftarten</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>imagettftext</methodname>
   <methodparam><type>resource</type><parameter>image</parameter></methodparam>
   <methodparam><type>float</type><parameter>size</parameter></methodparam>
   <methodparam><type>float</type><parameter>angle</parameter></methodparam>
   <methodparam><type>int</type><parameter>x</parameter></methodparam>
   <methodparam><type>int</type><parameter>y</parameter></methodparam>
   <methodparam><type>int</type><parameter>color</parameter></methodparam>
   <methodparam><type>string</type><parameter>fontfile</parameter></methodparam>
   <methodparam><type>string</type><parameter>text</parameter></methodparam>
  </methodsynopsis>
  <para>
   Schreibt den angegebenen <parameter>text</parameter> ins Bild unter
   Verwendung von True-Type-Schriftarten.
  </para>
  <note>
   <para>
    <function>imagefttext</function> ist eine erweiterte Variante von
    <function>imagettftext</function>, die zusätzlich den
    <parameter>extrainfo</parameter> Parameter unterstützt.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &gd.image.description;
    <varlistentry>
     <term><parameter>size</parameter></term>
     <listitem>
      <para>&gd.font.size;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>angle</parameter></term>
     <listitem>
      <para>
       Der Winkel in Grad, wobei 0 Grad von links nach rechts zu lesenden Text
       ergeben. Höhere Werte repräsentieren Rotation entgegen dem Uhrzeigersinn.
       Zum Beispiel resultiert ein Wert von 90 in von unten nach oben zu
       lesendem Text.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>x</parameter></term>
     <listitem>
      <para>
       Die per <parameter>x</parameter> und <parameter>y</parameter>
       angegebenen Koordinaten definieren den Startpunkt des ersten Zeichens (in
       etwa die linke untere Ecke). Das ist anders als bei der
       <function>ImageString</function>-Funktion, bei der x und y die obere
       rechte Ecke des ersten Zeichens darstellen. Zum Beispiel ist oben links
       0, 0.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>y</parameter></term>
     <listitem>
      <para>
       Die y-Koordinate. Diese legt die Position der Grundlinie der Schriftart
       fest, nicht den untersten Rand des Zeichens.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>color</parameter></term>
     <listitem>
      <para>
       Der Farbindex. Die Verwendung des negativen Indexwerts schaltet das
       Antialiasing ab. Siehe <function>imagecolorallocate</function>.
      </para>
     </listitem>
    </varlistentry>
    &gd.ttf.fontfile;
    <varlistentry>
     <term><parameter>text</parameter></term>
     <listitem>
      <para>
       Die UTF8 kodierte Text-Zeichenkette.
      </para>
      <para>
       Kann dezimale numerische Zeichen-Entity-Referenzen (in der Form
       &amp;#8364;) enthalten, um Zeichen außerhalb des ASCII-Bereiches zu
       referenzieren. Das hexadizimale Format (wie &amp;#xA9;) wird ebenfalls
       unterstützt. UTF-8 kodierte Zeichenkette können direkt übergeben werden. 
      </para>
      <para>
       Benannte Zeichen-Entity-Referenzen, wie &amp;copy;, werden nicht
       unterstützt. <function>html_entity_decode</function> kann verwendet
       werden, um diese Zeichen-Entity-Referenzen nach UTF-8 zu konvertieren. 
      </para>
      <para>
       Wird ein Zeichen in der Zeichenkette verwendet, das von der Schriftart
       nicht untersützt wird, wird es durch ein hohles Rechteck ersetzt.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein Array mit 8 Elementen zurück, die die vier Punkte des umgebenden
   Rechtecks des Textes repräsentieren. Die Reihenfolge der Punkte ist unten
   links, unten rechts, oben rechts und oben links. Die Punkt sind relativ zum
   Text, unabhängig vom Winkel, so dass "obere linke Ecke" bedeutet "in der
   oberen linken Ecke, wenn der Text horizontal gesehen wird". Im Fehlerfall
   wird &false; zurückgegeben.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.2.0</entry>
       <entry>
        Es ist nun erlaubt hexadezimale numerische Zeichen-Entity-Referenzen in
        <parameter>text</parameter> anzugeben.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>imagettftext</function> Beispiel</title>
    <para>
     Dieses Beispielskript erzeugt ein weißes 400x30 Pixel großes PNG mit dem
     Text "Testing..." in schwarz (mit grauem Schatten) in der Schriftart Arial.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
// Setze Content-Type
header('Content-Type: image/png');

// Erzeuge das Bild
$im = imagecreatetruecolor(400, 30);

// Erzeuge einige Farben
$white = imagecolorallocate($im, 255, 255, 255);
$grey = imagecolorallocate($im, 128, 128, 128);
$black = imagecolorallocate($im, 0, 0, 0);
imagefilledrectangle($im, 0, 0, 399, 29, $white);

// Der zu zeichnende Text
$text = 'Testing...';
// Bei Bedarf ist der Pfad anzupassen
$font = 'arial.ttf';

// Füge etwas Schatten zum Text hinzu
imagettftext($im, 20, 0, 11, 21, $grey, $font, $text);

// Füge den Text hinzu
imagettftext($im, 20, 0, 10, 20, $black, $font, $text);

// Die Verwendung von imagepng() ergibt bessere Textqualität als imagejpeg()
imagepng($im);
imagedestroy($im);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Ausgabe des Beispiels : imagettftext()</alt>
     <imageobject>
      <imagedata fileref="en/reference/image/figures/imagettftext.png"/>
     </imageobject>
    </mediaobject>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.freetype;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>imagettfbbox</function></member>
    <member><function>imagefttext</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
