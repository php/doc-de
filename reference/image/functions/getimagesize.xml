<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./de/functions/image.xml, last change in rev 1.2 -->
<!-- last change to 'getimagesize' in en/ tree in rev 1.36 -->
<!-- EN-Revision: 0.0 Maintainer: tschuer Status: ready -->
<!-- OLD-Revision: 1.26/EN.1.36 -->
  <refentry id="function.getimagesize">
   <refnamediv>
    <refname>GetImageSize</refname>
    <refpurpose>
     Ermittelt die Ausmaße einer GIF-, JPEG-, PNG- oder 
     SWF-Grafik-Datei
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
     <methodsynopsis>
      <type>array</type><methodname>getimagesize</methodname>
      <methodparam><type>string</type><parameter>filename</parameter></methodparam>
      <methodparam choice="opt"><type>array</type><parameter>imageinfo</parameter></methodparam>
     </methodsynopsis>
    <para>
     Mit <function>GetImageSize</function> ermitteln Sie die Daten
     jeder <acronym>GIF</acronym>-, <acronym>JPG</acronym>-,
     <acronym>PNG</acronym> oder <acronym>SWF</acronym>-Datei. Es
     werden die Ausmaße in Abhängigkeit vom Grafik-Typ sowie die Höhe
     und Breite als <emphasis>ein</emphasis> String
     zurückgegeben. Dieser kann innerhalb eines regulären
     <acronym>HTML</acronym> <sgmltag>IMG</sgmltag>-Tags verwendet
     werden.
    </para>
    <para>
     Es wird ein Array aus 4 Elementen zurück gegeben. Im Array-Index
     0 steht die Breite. Index 1 enthält die Höhe, 2 ein Flag je nach
     Grafik-Typ (1 = GIF, 2 = JPG, 3 = PNG, SWF = 4) und Index 3 die
     richtige Zeichenkette im Format "height=xxx width=xxx" zur
     Verwendung im IMG-Tag von HTML.
     <example>
      <title>Grafik-Ausmaße ermitteln per GetImageSize:</title>
      <programlisting role="php">
&lt;?php $size = GetImageSize ("img/flag.jpg"); ?>
&lt;IMG SRC="img/flag.jpg" &lt;?php echo $size[3]; ?>
      </programlisting>
     </example>
    </para>
    <para>
     Mit dem optionalen <parameter>imageinfo</parameter>-Parameter
     können Sie weitere Informationen der Grafik-Datei auslesen.
     Z.Zt. unterstützt dies die verschiedenen <acronym>JPG</acronym>
     APP-Markierungen per assoziativem Array. Einige Programme nutzen
     diese Markierungen, um Text in diese Grafiken einzubinden.
     Gebräuchlich ist die Einbettung von <acronym>IPTC</acronym>
     <ulink url="&url.iptc;">&url.iptc;</ulink> Informationen in die
     APP13-Marke. Sie können <function>iptcparse</function> benutzen,
     um die binäre APP13-Marke in ein lesbares Format zu übertragen.
     <example>
      <title>GetImageSize mit IPTC-Informationen</title>
      <programlisting>
&lt;?php 
    $size = GetImageSize ("testimg.jpg",&amp;$info);
    if (isset ($info["APP13"])) {
        $iptc = iptcparse ($info["APP13"]);
        var_dump ($iptc);
    }
?>
      </programlisting>
     </example>
     <note>
      <simpara>
       Dieser Befehl funktioniert auch ohne GD-Bibliothek.
      </simpara>
     </note>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
