<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- splitted from ./de/functions/image.xml, last change in rev 1.2 -->
<!-- last change to 'getimagesize' in en/ tree in rev 1.36 -->
<!-- EN-Revision: 288721 Maintainer: jaenecke Status: ready -->
<!-- OLD-Revision: 1.26/EN.1.36 -->
<refentry xmlns:xlink="http://www.w3.org/1999/xlink" xmlns="http://docbook.org/ns/docbook" xml:id="function.getimagesize">
 <refnamediv>
  <refname>getimagesize</refname>
  <refpurpose>Ermittelt die Größe einer Grafik</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>getimagesize</methodname>
   <methodparam><type>string</type><parameter>filename</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">imageinfo</parameter></methodparam>
  </methodsynopsis>
  <para>
   Die Funktion <function>getimagesize</function> ermittelt die Dimensionen der  
   übergebenen Grafik-Datei. 
   Es werden die Ausmaße in Abhängigkeit vom Grafik-Typ sowie die Höhe und Breite
   als <emphasis>ein</emphasis> String zurückgegeben. Dieser kann innerhalb eines 
   regulären <acronym>HTML</acronym> <tag>IMG</tag>-Tags verwendet werden. 
   Ausserdem wird der entsprechende <acronym>HTTP</acronym> Content-Type 
   zurückgegeben.
  </para>
  <para>
   <function>getimagesize</function> kann im Parameter <parameter>imageinfo</parameter>
   weitere Informationen liefern.
  </para>
  <note>
   <simpara>
    Beachten Sie daß JPC und JP2 aus Komponenten mit verschiedener Farbtiefe bestehen
    können. In diesem Fall entspricht der Wert für "bits" dem höchsten gefundenen
    Wert.
    Des weiteren können JP2-Dateien mehrere JPEG 2000 Codestreams enthalten. In 
    diesem Fall wird <function>getimagesize</function> Werte entsprechend des
    ersten gefundenen Codestreams zurückgeben.
   </simpara>
  </note>
  <note>
   <simpara>
    Informationen über Icons werden für das Icon mit der höchsten Bitrate
    ermittelt.
   </simpara>
  </note>
 </refsect1>
 
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>filename</parameter></term>
     <listitem>
      <para>
       Die zu überprüfende Datei. Dabei kann es sich um eine lokale Datei oder, 
       eine entsprechende Konfiguration vorausgesetzt, um eine entfernte Datei
       handeln die über einen unterstützen Stream gelesen wird. 
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>imageinfo</parameter></term>
     <listitem>
      <para>
       Dieser optionale Parameter erlaubt es, erweiterte Informationen aus der
       Datei zu ermitteln. Momentan werden die verschiedenen <acronym>JPG</acronym>
       APP Markierungen als assoziatives Array zurückgegeben. Diese Markierungen 
       werden von einigen Programmen verwendet um Textinformationen in Grafiken
       zu speichern.
       Gebräuchlich ist die Einbettung von <acronym>IPTC</acronym>
       <link xlink:href="&url.iptc;">&url.iptc;</link> Informationen in die
       APP13-Markierung. Sie können <function>iptcparse</function> benutzen,
       um die binäre APP13-Markierung in ein lesbares Format zu übertragen.
       </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein Array mit fünf Elementen zurück.
  </para>
  <para>
   Index 0 und 1 enthalten Breite respektive Höhe der Grafik.
  </para>
  <note>
   <para>
    Einige Formate enthalten keine oder mehrere Grafiken. In diesen Fällen ist 
    <function>getimagesize</function> möglicherweise nicht in der Lage, die
    Dimensionen zu ermitteln; der Rückgabewert für Breite und Höhe in ist in
    diesen Fällen 0.
   </para>
  </note>
  <para>
   Index 2 ist eine der <literal>IMAGETYPE_XXX</literal>-Konstanten entsprechend 
   des Typs der Grafik.
  </para>
  <para>
   Index 3 ist eine Zeichenkette mit dem Attributen Breite und Höhe in der Form
   <literal>height="yyy" width="xxx"</literal> zur Verwendung in einem IMG-Tag.
  </para>
  <para>
   <literal>mime</literal> entspricht dem MIME-Type der Grafik. Diese Information
   kann zur Auslieferung von Grafiken mit dem entsprechenden HTTP 
   <literal>Content-type</literal>-Header dienen.
   <example>
    <title>getimagesize() und MIME-Type</title>
    <programlisting role="php">
<![CDATA[
<?php
$size = getimagesize($filename);
$fp = fopen($filename, "rb");
if ($size && $fp) {
    header("Content-type: {$size['mime']}");g
    fpassthru($fp);
    exit;
} else {
    // Fehler
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <literal>channels</literal> hat für RGB-Grafiken den Wert 3, für CMYK den
   Wert 4.
   <literal>bits</literal> entspricht der Anzahl der Bits pro Farbe. Allerdings
   kann diese Angabe für einige Formate irreführend sein. <acronym>GIF</acronym>
   nutzt immer drei Kanäle pro Pixel, aber die Anzahl der Bits pro Pixel kann 
   für ein animiertes <acronym>GIF</acronym> mit einer globalen Farbtabelle
   nicht errechnet werden.
  </para>
  <para>
   Gibt im Falle eines Fehlers &false; zurück.
  </para>
 </refsect1>
 
 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Wenn ein Zugriff auf die mit <parameter>filename</parameter> angegebene
   Grafik nicht möglich ist oder es sich um keine valide Grafik handelt wird ein
   Fehler vom Typ <constant>E_WARNING</constant> generiert.
   Bei einem Lesefehler wird ein Fehler vom Typ <constant>E_NOTICE</constant>
   erzeugt.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.3.0</entry>
       <entry>
        Unterstützung für Icons
       </entry>
      </row>
      <row>
       <entry>5.2.3</entry>
       <entry>
        Lesefehler erzeugen eine <constant>E_NOTICE</constant> statt einer
        <constant>E_WARNING</constant>.
       </entry>
      </row>
      <row>
       <entry>4.3.2</entry>
       <entry>
        Unterstützung für <acronym>JPC</acronym>, <acronym>JP2</acronym>,
        <acronym>JPX</acronym>, <acronym>JB2</acronym>, <acronym>XBM</acronym>
        und <acronym>WBMP</acronym> wurde hinzugefügt.
       </entry>
      </row>
      <row>
       <entry>4.3.2</entry>
       <entry>
        Der Parameter <parameter>imageinfo</parameter> unterstützt JPEG2000
       </entry>
      </row>
      <row>
       <entry>4.3.0</entry>
       <entry>
        <literal>bits</literal> und <literal>channels</literal> sind auch für 
        andere Grafik-Formate verfügbar
       </entry>
      </row>
      <row>
       <entry>4.3.0</entry>
       <entry>
        <literal>mime</literal> wurde hinzugefügt.
       </entry>
      </row>
      <row>
       <entry>4.3.0</entry>
       <entry>
        Unterstützung für <acronym>SWC</acronym> wurde hinzugefügt.
       </entry>
      </row>
      <row>
       <entry>4.2.0</entry>
       <entry>
        Unterstützung für <acronym>TIFF</acronym> wurde hinzugefügt.
       </entry>
      </row>
      <row>
       <entry>4.0.6</entry>
       <entry>
        Support for <acronym>BMP</acronym> and <acronym>PSD</acronym> was
        added.
       </entry>
      </row>
      <row>
       <entry>4.0.5</entry>
       <entry>
        Unterstützung für URLs wurde hinzugefügt.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>
 
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>getimagesize (Datei)</title>
    <programlisting role="php">
<![CDATA[
<?php
list($width, $height, $type, $attr) = getimagesize("img/flag.jpg");
echo "<img src=\"img/flag.jpg\" $attr alt=\"getimagesize() example\" />";
?>
]]>
    </programlisting>
   </example>
   <example>
    <title>getimagesize (URL)</title>
    <programlisting role="php">
<![CDATA[
<?php
$size = getimagesize("http://www.example.com/gifs/logo.gif");

// Sonderzeichen im Dateinamen müssen entsprechend kodiert werden
$size = getimagesize("http://www.example.com/gifs/lo%20go.gif");

?>
]]>
    </programlisting>
   </example>
   <example>
    <title>getimagesize() gibt IPTC zurück</title>
    <programlisting role="php">
<![CDATA[
<?php
$size = getimagesize("testimg.jpg", $info);
if (isset($info["APP13"])) {
    $iptc = iptcparse($info["APP13"]);
    var_dump($iptc);
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="notes">
  &reftitle.notes;
  &note.gd.notrequired;
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>image_type_to_mime_type</function></member>
    <member><function>exif_imagetype</function></member>
    <member><function>exif_read_data</function></member>
    <member><function>exif_thumbnail</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
