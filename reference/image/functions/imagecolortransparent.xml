<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 325917 Maintainer: nobody Status: ready -->

<refentry xml:id="function.imagecolortransparent" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>imagecolortransparent</refname>
  <refpurpose>Definiert eine Farbe als transparent</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>imagecolortransparent</methodname>
   <methodparam><type>resource</type><parameter>image</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>color</parameter></methodparam>
  </methodsynopsis>
  <para>
   Setzt die transparente Farbe des angegebenen <parameter>image</parameter>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &gd.image.description;
    <varlistentry>
     <term><parameter>color</parameter></term>
     <listitem>
      <para>
       Eine Farbkennung, die mit <function>imagecolorallocate</function>
       erzeugt wurde.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Die Kennung der neuen (oder der aktuellen, falls keine Farbe angegeben wurde)
   transparenten Farbe wird zurückgegeben. Wird <parameter>color</parameter>
   nicht angegeben, und das Bild hat keine transparente Farbe, ist die
   zurückgegebene Kennung -1.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>imagecolortransparent</function> Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
// Erzeuge ein 55x30 Bild
$im = imagecreatetruecolor(55, 30);
$red = imagecolorallocate($im, 255, 0, 0);
$black = imagecolorallocate($im, 0, 0, 0);

// Mache den Hintergrund transparent
imagecolortransparent($im, $black);

// Zeichne ein rotes Rechteck
imagefilledrectangle($im, 4, 4, 50, 25, $red);

// Speichere das Bild
imagepng($im, './imagecolortransparent.png');
imagedestroy($im);
?>
]]>
    </programlisting>
    &example.outputs.similar;
    <mediaobject>
     <alt>Ausgabe des Beispiels : imagecolortransparent()</alt>
     <imageobject>
      <imagedata fileref="en/reference/image/figures/imagecolortransparent.png"/>
     </imageobject>
    </mediaobject>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Transparenz wird nur mit <function>imagecopymerge</function>
    und Echtfarbbildern kopiert, aber nicht mit
    <function>imagecopy</function> oder Palettenbildern.
   </para>
  </note>
  <note>
   <para>
    Die transparente Farbe ist eine Eigenschaft des Bildes, nicht der Farbe.
    Sobald eine Farbe als transparente Farbe definiert wurde, werden alle
    Bereiche eines Bildes mit dieser Farbe, die zuvor gezeichnet wurden,
    transparent sein.
   </para>
  </note>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
