<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 344605 Maintainer: nobody Status: ready -->

<refentry xml:id="function.imagettfbbox" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>imagettfbbox</refname>
  <refpurpose>
   Ermittle das umgebende Rechteck eines Textes unter Verwendung von True-Type
   Schriftarten
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>imagettfbbox</methodname>
   <methodparam><type>float</type><parameter>size</parameter></methodparam>
   <methodparam><type>float</type><parameter>angle</parameter></methodparam>
   <methodparam><type>string</type><parameter>fontfile</parameter></methodparam>
   <methodparam><type>string</type><parameter>text</parameter></methodparam>
  </methodsynopsis>
  <para>
   Diese Funktion errechnet die Größe des Bereichs für eine
   True-Type-Textausgabe.
  </para>
  <note>
   <para>
    <function>imageftbbox</function> ist eine erweiterte Variante von
    <function>imagettfbbox</function>, die zusätzlich den
    <parameter>extrainfo</parameter> Parameter unterstützt.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>size</parameter></term>
     <listitem>
      <para>&gd.font.size;</para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>angle</parameter></term>
     <listitem>
      <para>
       Der Winkel in Grad in dem <parameter>text</parameter> vermessen wird.
      </para>
     </listitem>
    </varlistentry>
    &gd.ttf.fontfile;
    <varlistentry>
     <term><parameter>text</parameter></term>
     <listitem>
      <para>
       Die zu vermessende Zeichenkette.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>imagettfbbox</function> gibt im Erfolgsfall ein Array mit 8
   Elementen zurück, die die vier Punkte des umgebenden Rechtecks des Texts
   repräsentieren, und &false; im Fehlerfall.
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Schlüssel</entry>
       <entry>Wert</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>0</entry>
       <entry>untere linke Ecke, x-Koordinate</entry>
      </row>
      <row>
       <entry>1</entry>
       <entry>untere linke Ecke, y-Koordinate</entry>
      </row>
      <row>
       <entry>2</entry>
       <entry>untere rechte Ecke, x-Koordinate</entry>
      </row>
      <row>
       <entry>3</entry>
       <entry>untere rechte Ecke, y-Koordinate</entry>
      </row>
      <row>
       <entry>4</entry>
       <entry>obere rechte Ecke, x-Koordinate</entry>
      </row>
      <row>
       <entry>5</entry>
       <entry>obere rechte Ecke, y-Koordinate</entry>
      </row>
      <row>
       <entry>6</entry>
       <entry>obere linke Ecke, x-Koordinate</entry>
      </row>
      <row>
       <entry>7</entry>
       <entry>obere linke Ecke, y-Koordinate</entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
  <para>
   Die Punkt sind relativ zum <emphasis>Text</emphasis>, unabhängig vom
   <parameter>angle</parameter>, so dass "obere linke Ecke" bedeutet "in der
   oberen linken Ecke, wenn der Text horizontal gesehen wird".
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>imagettfbbox</function> Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
// Erzeuge ein 300x150 Bild
$im = imagecreatetruecolor(300, 150);
$black = imagecolorallocate($im, 0, 0, 0);
$white = imagecolorallocate($im, 255, 255, 255);

// Weißer Hintergrund
imagefilledrectangle($im, 0, 0, 299, 299, $white);

// Pfad der Schriftartdatei
$font = './arial.ttf';

// Zunächst ermitteln wir das umgebende Rechteck für den ersten Text
$bbox = imagettfbbox(10, 45, $font, 'Powered by PHP ' . phpversion());

// Dies sind die x- und y-Koordinaten
$x = $bbox[0] + (imagesx($im) / 2) - ($bbox[4] / 2) - 25;
$y = $bbox[1] + (imagesy($im) / 2) - ($bbox[5] / 2) - 5;

// Schreibe
imagettftext($im, 10, 45, $x, $y, $black, $font, 'Powered by PHP ' . phpversion());

// Ermittle das umgebende Rechteck für den zweiten Text
$bbox = imagettfbbox(10, 45, $font, 'and Zend Engine ' . zend_version());

// Berechne die Koordinaten, so dass es neben dem ersten Text ist
$x = $bbox[0] + (imagesx($im) / 2) - ($bbox[4] / 2) + 10;
$y = $bbox[1] + (imagesy($im) / 2) - ($bbox[5] / 2) - 5;

// Schreibe
imagettftext($im, 10, 45, $x, $y, $black, $font, 'and Zend Engine ' . zend_version());

// Ausgabe an den Browser
header('Content-Type: image/png');

imagepng($im);
imagedestroy($im);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.freetype;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>imagettftext</function></member>
    <member><function>imageftbbox</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
