<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.9 Maintainer: lapistano Status: ready -->
<refentry xml:id="function.sqlite-fetch-all" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>sqlite_fetch_all</refname>
  <refname>SQLiteResult->fetchAll</refname>
  <refname>SQLiteUnbuffered->fetchAll</refname>
  <refpurpose>
   Holt sich alle Reihen eines Abfrageergebnisses und liefert sie als Array im 
   Array zurück
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>array</type><methodname>sqlite_fetch_all</methodname>
   <methodparam><type>resource</type><parameter>result</parameter></methodparam>
   <methodparam choice="opt">
    <type>int</type><parameter>result_type</parameter>
    <initializer>SQLITE_BOTH</initializer>
   </methodparam>
   <methodparam choice="opt">
    <type>bool</type><parameter>decode_binary</parameter>
    <initializer>true</initializer>
   </methodparam>
  </methodsynopsis>
  <para>Objektorientierter Stil (Methode):</para>
  <classsynopsis>
   <ooclass><classname>SQLiteResult</classname></ooclass>
   <methodsynopsis>
    <type>array</type><methodname>fetchAll</methodname>
    <methodparam choice="opt">
    <type>int</type><parameter>result_type</parameter>
    <initializer>SQLITE_BOTH</initializer>
   </methodparam>
   <methodparam choice="opt">
    <type>bool</type><parameter>decode_binary</parameter>
    <initializer>true</initializer>
   </methodparam>
   </methodsynopsis>
  </classsynopsis>
  <classsynopsis>
   <ooclass><classname>SQLiteUnbuffered</classname></ooclass>
   <methodsynopsis>
    <type>array</type><methodname>fetchAll</methodname>
    <methodparam choice="opt">
    <type>int</type><parameter>result_type</parameter>
    <initializer>SQLITE_BOTH</initializer>
   </methodparam>
   <methodparam choice="opt">
    <type>bool</type><parameter>decode_binary</parameter>
    <initializer>true</initializer>
   </methodparam>
   </methodsynopsis>
  </classsynopsis>
  <para>
   <function>sqlite_fetch_all</function> liefert ein Array des gesamten 
   Abfrageergebnisses von der Ressource <parameter>result</parameter> zurück. 
   Es ähnelt dem Aufruf von <function>sqlite_query</function> (oder 
   <function>sqlite_unbuffered_query</function>) und danach 
   <function>sqlite_fetch_array</function>-Aufrufen für jede einzelne Reihe des 
   Abfrageergebnisses.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>result</parameter></term>
     <listitem>
      <para>
       Die Ressource des SQLite-Ergebnisses. Der Parameter wird bei der 
       objektorientierten Notation nicht benötigt.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>result_type</parameter></term>
     <listitem>
      &sqlite.result-type;
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>decode_binary</parameter></term>
     <listitem>
      &sqlite.decode-bin;
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Liefert ein Array mit den übrigen Reihen des Abfrageergebnisses. Wenn es 
   direkt nach <function>sqlite_query</function> aufgerufen wird, werden alle 
   Reihen zurückgegeben. Wenn es nach <function>sqlite_fetch_array</function> 
   aufgerufen wird, wird der Rest zurückgegeben. Wenn es keine Reihen in einem 
   Abfrageergebnis mehr gibt, liefert es ein leeres Array.
  </para>
  &sqlite.case-fold;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Prozedurales Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$dbhandle = sqlite_open('sqlitedb');
$query = sqlite_query($dbhandle, 'SELECT name, email FROM benutzer LIMIT 25');
$result = sqlite_fetch_all($query, SQLITE_ASSOC);
foreach ($result as $entry) {
    echo 'Name: ' . $entry['name'] . '  E-Mail: ' . $entry['email'];
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Objektorientiertes Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$dbhandle = new SQLiteDatabase('sqlitedb');

$query = $dbhandle->query('SELECT name, email FROM benutzer LIMIT 25'); // gepuffertes Abfrageergebnis
$query = $dbhandle->unbufferedQuery('SELECT name, email FROM benutzer LIMIT 25'); // ungepuffertes Abfrageergebnis

$result = $query->fetchAll(SQLITE_ASSOC);
foreach ($result as $entry) {
    echo 'Name: ' . $entry['name'] . '  E-Mail: ' . $entry['email'];
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sqlite_fetch_array</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
 -->
