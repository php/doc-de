<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.11 Maintainer: lapistano Status: ready -->
<refentry xml:id="function.sqlite-exec" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>sqlite_exec</refname>
  <refname>SQLiteDatabase->exec</refname>
  <refpurpose>
   Führt eine ergebnislose Abfrage in einer definierten Datenbank aus
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>sqlite_exec</methodname>
   <methodparam>
    <type>resource</type><parameter>dbhandle</parameter>
   </methodparam>
   <methodparam>
    <type>string</type><parameter>query</parameter>
   </methodparam>
   <methodparam choice="opt">
    <type>string</type><parameter role="reference">error_msg</parameter>
   </methodparam>
  </methodsynopsis>
  <methodsynopsis>
   <type>bool</type><methodname>sqlite_exec</methodname>
   <methodparam><type>string</type><parameter>query</parameter></methodparam>
   <methodparam>
    <type>resource</type><parameter>dbhandle</parameter>
   </methodparam>
  </methodsynopsis>
  <para>Objektorientierter Stil (Methode):</para>
  <classsynopsis>
   <ooclass><classname>SQLiteDatabase</classname></ooclass>
   <methodsynopsis>
    <type>bool</type><methodname>queryExec</methodname>
    <methodparam><type>string</type><parameter>query</parameter></methodparam>
    <methodparam choice="opt">
     <type>string</type><parameter role="reference">error_msg</parameter>
    </methodparam>
   </methodsynopsis>
  </classsynopsis>
  <para>
   Führt eine SQL-Anweisung, die durch <parameter>query</parameter> gesetzt 
   wurde, mit dem Datenbank-Handle (definiert durch den Parameter 
   <parameter>dbhandle</parameter>) aus.
  </para>
  <warning>
   <simpara>
    SQLite <emphasis>kann</emphasis> mehrere, durch Semikolon getrennte 
    Anweisungen ausführen. Dadurch kann man eine Reihe von Anweisungen aus 
    einer Datei oder einem eingebetteten Skript laden und ausführen.
   </simpara>
  </warning>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>dbhandle</parameter></term>
     <listitem>
      <para>
       Die Ressource der SQLite-Datenbank, die bei prozeduraler Benutzung von 
       <function>sqlite_open</function> zurückgegeben wurden. Der Parameter 
       wird bei der objektorientierten Notation nicht benötigt.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>query</parameter></term>
     <listitem>
      <para>
       Die auszuführende Anweisung.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>error_msg</parameter></term>
     <listitem>
      <para>
       Die angegebene Variable wird bei einem Fehler gefüllt. Das ist 
       insbesondere deswegen wichtig, weil SQL-Syntaxfehler nicht durch die 
       Funktion <function>sqlite_last_error</function> abgerufen werden können.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  &sqlite.param-compat;
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Die Funktion liefert ein boolsches Ergebnis; &true; bei Erfolg, ansonsten 
   &false;. Wenn man eine Abfrage ausführen möchte, die Zeilen zurück liefern 
   soll, sollte man bei <function>sqlite_query</function> gucken.
  </para>
  &sqlite.case-fold;
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.1.0</entry>
       <entry>
        Parameter <parameter>error_msg</parameter> wurde hinzugefügt
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>


 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Prozedurales Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$dbhandle = sqlite_open('mysqlitedb');
$query = sqlite_exec($dbhandle, "UPDATE benutzer SET email='jDoe@example.com' WHERE benutzername='jDoe'", $error);
if (!$query) {
    exit("Fehler in der Abfrage: '$error'");
} else {
    echo 'Anzahl geänderter Zeilen: ', sqlite_changes($dbhandle);
}
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Objektorientiertes Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$dbhandle = new SQLiteDatabase('mysqlitedb');
$query = $dbhandle->queryExec("UPDATE benutzer SET email='jDoe@example.com' WHERE benutzername='jDoe'", $error);
if (!$query) {
    exit("Fehler in der Abfrage: '$error'");
} else {
    echo 'Anzahl geänderter Zeilen: ', $dbhandle->changes();
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>sqlite_query</function></member>
    <member><function>sqlite_unbuffered_query</function></member>
    <member><function>sqlite_array_query</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
 Local variables:
 mode: sgml
 sgml-omittag:t
 sgml-shorttag:t
 sgml-minimize-attributes:nil
 sgml-always-quote-attributes:t
 sgml-indent-step:1
 sgml-indent-data:t
 sgml-parent-document:nil
 sgml-default-dtd-file:"../../manual.ced"
 sgml-exposed-tags:nil
 sgml-local-catalogs:nil
 sgml-local-ecat-files:nil
 End:
 vim600: syn=xml fen fdm=syntax fdl=2 si
 vim: et tw=78 syn=sgml
 vi: ts=1 sw=1
 -->
