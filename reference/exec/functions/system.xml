<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- splitted from ./de/functions/exec.xml, last change in rev 1.2 -->
<!-- last change to 'system' in en/ tree in rev 1.24 -->
<!-- EN-Revision: 0.0 Maintainer: drews Status: ready -->
<!-- OLD-Revision: 1.18/EN.1.24 -->
  <refentry id="function.system">
   <refnamediv>
    <refname>system</refname>
    <refpurpose>
     Führt ein externes Programm aus und zeigt dessen Ausgabe an.
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>string</type><methodname>system</methodname>
      <methodparam><type>string</type><parameter>befehl</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>return_var</parameter></methodparam>
     </methodsynopsis>
    <para>
     Die Funktion <function>system</function> ähnelt der C Version der
     Funktion sehr, indem es einen übergebenen
     <parameter>Befehl</parameter> ausführt und dessen Ausgabe
     anzeigt. Wir als zweiter Parameter der Funktion eine Variable
     übergeben, so wird der Rückgabestatus des Befehls in diese
     geschrieben.
    </para>
    <para>
     Beachten Sie, dass wenn Sie Benutzereingaben an diese Funktion
     übergeben, diese mit <function>escapeshellcmd</function>
     behandelt, um sicherzustellen, dass niemand mit willkürlichen
     Befehlen Ihrem System Schaden zufügen kann.
    </para>
    <para>
     Beachten Sie auch, dass wenn Sie ein Programm mit dieser Funktion
     starten und Sie es im Hintergrund laufen lassen möchten, Sie
     sicherstellen müssen, dass die Ausgabe des Programms in eine
     Datei oder anderenen Ausgabestream umgeleitet wird. Andernfalls
     wird PHP solange laufen, bis das Programm beendet ist.
    </para>
    <para>
     Die <function>system</function> Funktionsaufrufe versuchen
     übrigens automatisch nach jeder Ausgabezeile den Ausgabebuffer
     des Webservers zu flushen, wenn PHP als Servermodul läuft.
    </para>
    <para>
     Gibt die letzte Zeile der Befehlsausgabe bei Erfolg, andernfalls
     &false; zurück.
    </para>
    <para>
     Wenn Sie auf die direkte Rückgabe/ Ausgabe eines Befehls
     angewiesen sind, dann benutzen Sie stattdessen die Funktion
     <function>passthru</function>.
    </para>
    <para>
     Siehe auch: <function>exec</function>,
     <function>passthru</function>, <function>popen</function>,
     <function>escapeshellcmd</function> und den <link
     linkend="language.operators.execution">Backtick Operator</link>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
