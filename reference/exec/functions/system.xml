<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.15 Maintainer: sammywg Status: ready -->
<refentry xml:id="function.system" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>system</refname>
  <refpurpose>Führt ein externes Programm aus und zeigt dessen Ausgabe an</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>system</methodname>
   <methodparam><type>string</type><parameter>command</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">return_var</parameter></methodparam>
  </methodsynopsis>
  <para>
   Die Funktion <function>system</function> ähnelt der C Version der
   Funktion sehr, indem es einen übergebenen
   <parameter>Befehl</parameter> ausführt und dessen Ausgabe
   anzeigt.
  </para>
  <para>
   Wird ein <function>system</function>-Funktionsaufruf durchgeführt, versucht
   die Funktion automatisch, nach jeder Ausgabezeile den Ausgabepuffer zu
   flushen, sofern PHP als Servermodul läuft.
  </para>
  <para>
   Wenn Sie einen Befehl ausführen wollen und die erzeugten Daten ohne Behinderung
   direkt zurückgeben wollen, verwenden Sie stattdessen die Funktion
   <function>passthru</function>.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>command</parameter></term>
     <listitem>
      <para>
       Das auszuführende Kommando.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>return_var</parameter></term>
     <listitem>
      <para>
       Ist das <parameter>return_var</parameter>-Argument angegeben, wird der
       Rückgabewert des ausgeführten Befehls in diese Variable geschrieben.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt bei Erfolg die letzte Zeile der Ausgabe des Befehls zurück, im Fehlerfall
   hingegen &false;.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>system</function> example</title>
    <programlisting role="php">
<![CDATA[
<?php
echo '<pre>';

// Gibt das gesamte Ergebnis des Shellkommandos "ls" aus und hält als
// Rückgabewert die letzte Zeile dieser Ausgabe in $last_line. Der
// Rückgabewert des Shellkommandos wird in $retval gespeichert.
$last_line = system('ls', $retval);

// Ausgeben zusätzlicher Informationen
echo '
</pre>
<hr />Letzte Zeile der Ausgabe: ' . $last_line . '
<hr />Rückgabewert: ' . $retval;
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &warn.escapeshell;
  &note.exec-bg;
  &note.exec-path;
  &warn.sm.exec;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>exec</function></member>
    <member><function>passthru</function></member>
    <member><function>popen</function></member>
    <member><function>escapeshellcmd</function></member>
    <member><function>pcntl_exec</function></member>
    <member><link linkend="language.operators.execution">Backtick-Operator</link></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
