<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.4 Maintainer: betz Status: ready -->

  <refentry id="function.date">
   <refnamediv>
    <refname>date</refname>
    <refpurpose>Formatiert ein(e) angegebene(s) Zeit/Datum</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung:</title>
     <methodsynopsis>
      <type>string</type><methodname>date</methodname>
      <methodparam><type>string</type><parameter>Format</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>Timestamp</parameter></methodparam>
     </methodsynopsis>
    <para>
     Gibt einen formatierten String anhand eines vorzugebenden Musters
     zurück. Dabei wird entweder der angegebene
     <parameter>Timestamp</parameter> oder die gegenwärtige lokale
     Zeit berücksichtigt, wenn kein Timestamp angegegeben wird.
    </para>
    <note>
     <para>
      Der gültige Bereich eines Timestamp liegt typischerweise zwischen
      Fri, 13 Dec 1901 20:45:54 GMT und Tue, 19 Jan 2038 03:14:07 GMT.
      (Das entspricht den minimalen und maximalen Werten für einen 
      vorzeichenbehafteten 32-Bit Integer). Auf Windows-Betribssytemen
      liegt ist dieser Bereich beschränkt auf 01-01-1970 bis 19-01-2038.
      </para>
      <para>
       Um einen Timestamp aus aus einem Datums-String zu erzeugen, können Sie
       die Funktion <function>strtotime</function> benutzen. Zusätzlich bieten
       einige Datenbanken Funktionen, um Ihre Datumsfromate in Timestamps
       umzuwandeln (wie z.B. die MySQL-Funktion UNIX_TIMESTAMP).
      </para>
     </note>
    <para>
     Die folgenden Zeichen werden bei der Formatierung erkannt:
     <itemizedlist>
      <listitem>
       <simpara>
        a - "am" oder "pm"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        A - "AM" oder "PM"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        B - Swatch-Internet-Zeit
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        d - Tag des Monats, 2-stellig mit führender Null: "01" bis "31"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        D - Tag der Woche als 3 Buchstaben, z.B. "Fri"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        F - Monat als ganzes Wort, z.B "January"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        g - Stunde im 12-Stunden-Format, ohne führende Null: "1" bis "12"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        G - Stunde im 24-Stunden-Format, ohne führende Null: "0" bis "23"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        h - Stunde im 12-Stunden-Format: "01" bis "12"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        H - Stunde im 24-Stunden-Format: "00" bis "23"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        i - Minuten: "00" bis "59"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        I (großes 'i') - "1" bei Sommerzeit, sonst "0"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        j - Tag des Monats ohne führende Null: "1" bis "31"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        l - (kleines 'L') ausgeschriebener Tag der Woche, z.B. "Friday"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        L - boolscher Wert für Schaltjahre: "0" oder "1"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        m - Monat: "01" to "12"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        M - Monat als 3 Buchstaben, z.B. "Jan"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        n - Monat ohne führende Null: "1" bis "12"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        O - Zeitdifferenz zur Greenwich Zeit in Stunden (z.B. +0200)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        r - Nach RFC 822 formattiertes Datum; z.B.:
        "Sun, 7 Oct 2001 14:56:02 +0200" (seit PHP 4.0.4)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        s - Sekunden: "00" bis "59"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        S - Anhang der englischen Aufzählung, 2 Buchstaben; z.B.:"
        "st", "nd", "rd" oder "th"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        t - Anzahl der Tage des angegebenen Monats: "28" bis "31"
       </simpara>
      </listitem>
     <listitem>
       <simpara>
       T - Zeitzoneneinstellung des Rechners, z.B. "EST" oder "MDT"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        U - Sekunden seit Beginn der UNIX-Epoche (January 1 1970 00:00:00 GMT)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        w - Wochentag numersich, beginnend mit "0" (Sonntag) bis "6" (Samstag)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        W - ISO-8601 Wochennummer des Jahres (Woche beginnt mit Montag)
        (seit PHP 4.1.0)
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        y - Jahr als zweistellige Zahl, z.B. "99"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Y - Jahr als vierstellige Zahl, z.B. "1999"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        z - Tag des Jahres: "0" bis "365"
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Z - Offset der Zeitzone gegen GTM ("-43200" bis "43200") in
        Sekunden. Der Offset für Zeitzone West nach UTC ist immer negativ
        und für Zeitzone Ost nach UTC immer positiv.
       </simpara>
      </listitem>
     </itemizedlist>
     Nicht erkannte Zeichen werden unverändert ausgegeben. Das
     "Z"-Format gibt beim Gebrauch von <function>gmdate</function> immer
     "0" zurück.
    </para>
    <para>
     <example>
      <title><function>date</function> Beispiel</title>
      <programlisting role="php">
<![CDATA[
print (date("l dS of F Y h:i:s A"));
print ("July 1, 2000 is on a " . date ("l", mktime(0,0,0,7,1,2000)));
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Möchten Sie verhindern, dass ein erkanntes Zeichen im Formatstring
     ersetzt wird, sollten Sie dieses Zeichen mit einem vorangestellten
     Backslash escapen. Ist das Zeichen mit dem Backslash bereits eine
     spezielle Zeichenfolge, müssen Sie diesen Backslash ebenso escapen.
     <example>
      <title>Escaping von Zeichen in <function>date</function></title>
      <programlisting role="php">
<![CDATA[
echo date("l \\t\h\e jS"); // gibt etwas ähnliches aus wie 'Saturday the 8th'
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Es ist möglich, <function>date</function> und
     <function>mktime</function> gleichzeitig zu verwenden, um
     Datumsangaben der Zukunft/Vergangenheit herauszufinden.
     <example>
      <title>
       <function>date</function> und <function>mktime</function>
       Beispiele
      </title>
      <programlisting role="php">
<![CDATA[
$morgen        = mktime(0, 0, 0, date ("m") , date ("d")+1, date("Y"));
$letztermonat  = mktime(0, 0, 0, date("m")-1,date("d"), date("Y"));
$naechstesjahr = mktime(0, 0, 0, date("m"), date("d"), date("Y")+1);
]]>
      </programlisting>
     </example>
     <note>
      <para>
       Dieses Vorgehen kann zu verlässlicheren Ergebnissen führen, als simples
       Addieren oder Subtrahieren der Anzahl von Sekunden in Tagen oder Monaten
       zu einem Timestamp, da Sommer- und Winterzeit berücksichtigt werden.
     </para>
     </note>
    </para>
    <para>
     Es folgen einige Beispiele zur <function>date</function> Formatierung.
     Beachten Sie, dass Sie alle anderen Zeichen escapen sollten, da alle
     Zeichen, die im Augenblick eine spezielle Beduetung haben unerwünschte
     Resultate liefern. Bei allen weiteren Zeichen kann es durchaus möglich
     sein, dass diesen in zukünftigen PHP-Versionen eine Bedeutung zukommt.
     Beim escapen sollten Sie darauf achten einfache Anführungszeichen zu
     benutzen, damit Zeichenfolgen wie zum Beispiel \n zu keinem
     Zeilenumbruch führen.
     <example>
      <title>
       <function>date</function> Formatierungen
      </title>
      <programlisting role="php">
<![CDATA[
/* Today is March 10th, 2001, 5:16:18 pm */
$today = date("F j, Y, g:i a");                 // March 10, 2001, 5:16 pm
$today = date("m.d.y");                         // 03.10.01
$today = date("j, n, Y");                       // 10, 3, 2001
$today = date("Ymd");                           // 20010310
$today = date('h-i-s, j-m-y, it is w Day z ');  // 05-16-17, 10-03-01, 1631 1618 6 Fripm01
$today = date('\i\t \i\s \t\h\e jS \d\a\y.');   // It is the 10th day.
$today = date("D M j G:i:s T Y");               // Sat Mar 10 15:16:08 MST 2001
$today = date('H:m:s \m \i\s\ \m\o\n\t\h');     // 17:03:17 m is month
$today = date("H:i:s");                         // 17:16:17
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Um Datumsangaben in anderen Sprach-/Zeitzonen-Formaten
     auszugeben, sollten sie die Funktionen
     <function>setlocale</function> und <function>strftime</function>
     nutzen.
    </para>
    <para>
     Siehe auch: <function>getlastmod</function>,
                 <function>gmdate</function>,
                 <function>mktime</function>,
                 <function>strftime</function>
                 und <function>time</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
