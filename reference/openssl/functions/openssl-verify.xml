<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.7 $ -->
<!-- EN-Revision: 1.7 Maintainer: jaenecke Status: ready -->
  <refentry id="function.openssl-verify">
   <refnamediv>
    <refname>openssl_verify</refname>
    <refpurpose>Überprüft eine Unterschrift</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>int</type><methodname>openssl_verify</methodname>
      <methodparam><type>string</type><parameter>data</parameter></methodparam>
      <methodparam><type>string</type><parameter>signature</parameter></methodparam>
      <methodparam><type>mixed</type><parameter>pub_key_id</parameter></methodparam>
	  <methodparam choice="opt"><type>int</type><parameter>signature_alg</parameter></methodparam>
     </methodsynopsis>
    <para>
     Rückgabewerte: Bei korrekter Unterschrift wird 1 zurückgegeben,
     ist die Unterschrift nicht korrekt wird 0 zurückgegeben. Tritt ein 
     Fehler auf wird -1 zurückgegeben.
    </para>
    <para>
     Die Funktion <function>openssl_verify</function> überprüft
     die Korrektheit der Unterschrift <parameter>signature</parameter>
     für die angegebenen Daten <parameter>data</parameter> mit Hilfe des
     öffentlichen Schlüssels <parameter>pub_key_id</parameter>. Das muss der
     passende öffentliche zum privaten Schlüssel sein, der für die
     Unterschrift benutzt wurde.
    </para>
	<note>
     <para>
      Der optionale vierte Parameter <parameter>signature_alg</parameter> wurde in
      Version 5.2.0 hinzugefügt und hat den Default-Wert <constant>OPENSSL_ALGO_SHA1</constant>. 
	  Weitergehende Informationen enthält die Liste der <link linkend="openssl.signature-algos">Signature-Algorithmen</link>.
     </para>
    </note>
    <para>
     <example>
      <title><function>openssl_verify</function> Beispiel</title>
      <programlisting role="php">
<![CDATA[
<?php
// Annahme: $data und $signature enthalten die Daten und die Unterschrift

// holen des öffentlichen Schlüssels aus dem Zertifikat und vorbereiten
$fp = fopen("/src/openssl-0.9.6/demos/sign/cert.pem", "r");
$cert = fread($fp, 8192);
fclose($fp);
$pubkeyid = openssl_get_publickey($cert);

// feststellen, ob die Unterschrift ok ist oder nicht 
$ok = openssl_verify($data, $signature, $pubkeyid);
if ($ok == 1) {
    echo "gut";
} elseif ($ok == 0) {
    echo "schlecht";
} else {
    echo "Mist, Fehler beim Überprüfen der Signatur";
}

// Löschen des Schlüssels aus dem Speicher
openssl_free_key($pubkeyid);
?>
]]>
      </programlisting>
     </example>
    </para>
    <simpara>
     Siehe auch <function>openssl_sign</function>.
    </simpara>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
