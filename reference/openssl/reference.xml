<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.10 $ -->
<!-- EN-Revision: 1.11 Maintainer: jaenecke Status: ready -->

 <reference xml:id="ref.openssl" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>OpenSSL Funktionen</title>
  <titleabbrev>OpenSSL</titleabbrev>
  <partintro>
   <section xml:id="openssl.intro">
   &reftitle.intro;
    <para>
     Dieses Modul nutzt die Funktionen von
     <link xlink:href="&url.openssl;">OpenSSL</link> zur Erzeugung und
     Überprüfung von Signaturen und zum versiegeln (verschlüsseln) und
     öffnen (entschlüsseln) von Daten. OpenSSL bietet viele Möglichkeiten die
     dieses Modul zum jetzigen Zeitpunkt nicht unterstützt. Einige dieser
     Möglichkeiten werden vielleicht in zukünftigen Versionen zur Verfügung
     stehen.
    </para>
  </section>

   <section xml:id="openssl.requirements">
    &reftitle.required;
    <para>
     Bevor Sie die Openssl-Funktionen nutzen können, müssen Sie das
     <link xlink:href="&url.openssl;">OpenSSL</link> Paket installieren.
     PHP zwischen 4.0.5 und 4.3.1 funktionieren mit  OpenSSL &gt;= 0.9.5.
     Andere Versionen (PHP &lt;=4.0.4pl1 and &gt;= 4.3.2) setzen OpenSSL &gt;=
     0.9.6 voraus.
    </para>
    <warning>
     <para>
      Es wird dringnd empfohlen die aktuellste OpenSSL Version zu verwenden,
      anderenfalls könnte Ihr Webserver anfällig für Attacken sein.
     </para>
    </warning>
   </section>

   &reference.openssl.configure;

   <section xml:id="openssl.configuration">
    &reftitle.runtime;
    &no.config;
   </section>


   <section xml:id="openssl.resources">
    &reftitle.resources;
    <para>
    </para>
   </section>

  <section xml:id="openssl.certparams">
  <title>Schlüssel/Zertifikat Parameter</title>
  <para>
   Ziemlich viele der OpenSSL Funktionen benötigen einen Schlüssel-
   oder einen Zertifikatparameter. PHP 4.0.5 und frühere Versionen
   müssen eine Schlüssel- oder Zertifikats<type>resource</type> nutzen, die von
   einer der openssl_get_xxx Funktionen zurückgegeben wird. Spätere
   Versionen können eine der folgenden Methoden benutzen:
   <itemizedlist>
    <listitem>
     <para>
      Zertifikate
      <orderedlist>
       <listitem>
        <simpara>
         Eine X.509 Resource die von openssl_x509_read zurückgegeben wird.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Eine Zeichenkette mit dem Format
         <filename>file://pfad/zu/cert.pem</filename>; die angegebene
         Datei muss ein PEM verschlüsseltes Zertifikat enthalten.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Eine Zeichenkette die den Inhalt eines Zertifikats enthält, PEM
         verschlüsselt.
        </simpara>
       </listitem>
      </orderedlist>
     </para>
    </listitem>

    <listitem>
     <para>
      Öffentliche/Private Schlüssel
      <orderedlist>
       <listitem>
        <simpara>
         Eine Schlüsselresource die von
         <function>openssl_get_publickey</function> oder
         <function>openssl_get_privatekey</function> zurückgegeben wird.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Nur für öffentliche Schlüssel: eine X.509 Resource.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Eine Zeichenkette mit dem Format
         <filename>file://pfad/zu/datei.pem</filename> - die angegebene Datei
         muss ein PEM verschlüsseltes Zertifikat/privaten Schlüssel enthalten
         (kann auch beides enthalten).
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Eine Zeichenkette die den Inhalt eines Zertifikats/Schlüssels
         enthält, PEM verschlüsselt.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Für private Schlüssel können Sie auch die Syntax
         <emphasis>array($key, $passphrase)</emphasis> verwenden. $key
         repräsentiert einen Schlüssel, den Sie entweder mit der Notation
         file:// oder dem textlichen Inhalt wie oben angeben. $passphrase ist
         eine Zeichenfolge, die die Passphrase für den privaten Schlüssel enthält.
        </simpara>
       </listitem>
      </orderedlist>
     </para>
    </listitem>
   </itemizedlist>
  </para>
  </section>

   <section xml:id="openssl.cert.verification">
   <title>Zertifikat Nachweis</title>
    <para>
     Wenn Sie eine Funktion aufrufen, die eine Signatur/ein Zertifikat
     überprüft, ist der Parameter <emphasis>cainfo</emphasis> ein Array, das
     Datei- und Verzeichnisnamen enthält, die auf vertrauenswürdige CA Dateien
     verweisen. Falls Sie ein Verzeichnis angeben, muss dies ein korrekt
     geformtes gehashdes Verzeichnis sein, in der Art, wie es der Befehl
     <command>openssl</command> verwenden würde.
    </para>
   </section>

   &reference.openssl.constants;

  </partintro>

&reference.openssl.functions;

</reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
