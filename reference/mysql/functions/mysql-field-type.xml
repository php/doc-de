<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.10 $ -->
<!-- EN-Revision: 1.8 Maintainer: nobody Status: ready -->

  <refentry xml:id="function.mysql-field-type" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
   <refnamediv>
    <refname>mysql_field_type</refname>
    <refpurpose>
     Liefert den Typ eines Feldes in einem Ergebnis
    </refpurpose>
   </refnamediv>
   <refsect1 role="description">
    &reftitle.description;
     <methodsynopsis>
      <type>string</type><methodname>mysql_field_type</methodname>
      <methodparam><type>resource</type><parameter>Ergebnis</parameter></methodparam>
      <methodparam><type>int</type><parameter>Feldoffset</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>mysql_field_type</function> ist ähnlich zu
     <function>mysql_field_name</function>. Die Argumente sind
     identisch, aber stattdessen wird der Typ des Feldes zurückgegeben.
     Dieser kann "int", "real", "string", "blob", oder ein anderer Typ sein.
     Eine ausführliche Beschreibung aller Typen finden Sie in der
     <link xlink:href="&url.mysql.docs;">MySQL Dokumentation</link>.
     <example>
      <title><function>mysql_field_type</function> Beispiel</title>
      <programlisting role="php">
<![CDATA[
<?php
mysql_connect("localhost", "mysql_username", "mysql_password");
mysql_select_db("mysql");
$result = mysql_query("SELECT * FROM func");
$fields = mysql_num_fields($result);
$rows   = mysql_num_rows($result);
$table = mysql_field_table($result, 0);
echo "Die Tabelle '".$table."'hat ".$fields." Felder und ".$rows." Datensätze:\n";
echo "Die Tabelle hat folgende Felder:\n";
for ($i=0; $i < $fields; $i++) {
    $type  = mysql_field_type($result, $i);
    $name  = mysql_field_name($result, $i);
    $len   = mysql_field_len($result, $i);
    $flags = mysql_field_flags($result, $i);
    echo $type." ".$name." ".$len." ".$flags."\n";
}
mysql_free_result($result);
mysql_close();
?>
]]>
      </programlisting>
      <para>
       Das oben angeführte Beispiel führt zu dieser Ausgabe:
      </para>
      <screen>
<![CDATA[
Die Tabelle 'func' hat 4 Felder und 1 Datensätze
Die Tabelle hat folgende Felder:
string name 64 not_null primary_key binary
int ret 1 not_null
string dl 128 not_null
string type 9 not_null enum
]]>
      </screen>
     </example>
    </para>
    <para>
     Für Abwärtskompatibilität kann <function>mysql_fieldtype</function>
     verwendet werden. Diese Funktion ist jedoch veraltet.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
