<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 328734 Maintainer: simp Status: ready -->
<!-- Credits: hholzgra -->

<refentry xml:id="function.mysql-connect" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysql_connect</refname>
  <refpurpose>Öffnet eine Verbindung zu einem MySQL-Server</refpurpose>
 </refnamediv>

 <refsynopsisdiv>
  <warning>
   &mysql.alternative.note;
   <simplelist role="alternatives">
    <member><function>mysqli_connect</function></member>
    <member><methodname>PDO::__construct</methodname></member>
   </simplelist>
  </warning>
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>mysql_connect</methodname>
   <methodparam choice="opt"><type>string</type><parameter>server</parameter><initializer>ini_get("mysql.default_host")</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>username</parameter><initializer>ini_get("mysql.default_user")</initializer></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>password</parameter><initializer>ini_get("mysql.default_password")</initializer></methodparam>
   <methodparam choice="opt"><type>bool</type><parameter>new_link</parameter><initializer>false</initializer></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>client_flags</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Öffnet eine neue Verbindung (oder nutzt bestehende) zu einem mySQL Server.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>server</parameter></term>
     <listitem>
      <para>
       Der MySQL Server. Er kann zudem eine Portnummer enthalten, z.B.
       &quot;hostname:port&quot; oder den Pfad zu einem lokalen Socket z.B.
       &quot;:/pfad/zum/socket&quot; für Zugriffe auf dem lokalen Rechner (localhost).
      </para>
      <para>
       Wenn die PHP Direktive <link linkend="ini.mysql.default-host">
       mysql.default_host</link> nicht definiert ist (Standard), ist der
       Vorgabewert 'localhost:3306'. Bei &sqlsafemode; wird dieser Paramter
       ignoriert und der Wert 'localhost:3306' immer genutzt.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>username</parameter></term>
     <listitem>
      <para>
       Der Nutzername. Der Standardwert ist
       durch <link linkend="ini.mysql.default-user">mysql.default_user</link>
       definiert. Bei &sqlsafemode; wird dieser Parameter ignoriert und der
       Name des Nutzers, dem der Prozess gehört, genutzt.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>password</parameter></term>
     <listitem>
      <para>
       Dass Passwort. Der Standardwert ist durch
       <link linkend="ini.mysql.default-password">mysql.default_password</link>
       definiert. Bei &sqlsafemode; wird dieser Parameter ignoriert und ein
       leeres Passwort genutzt.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>new_link</parameter></term>
     <listitem>
      <para>
       Für den Fall, dass ein zweiter Aufruf von
       <function>mysql_connect</function> mit den gleichen Argumenten
       erfolgt, wird keine neue Verbindung aufgebaut, sondern die
       Verbindungs-Kennung der schon bestehenden Verbindung zurückgeliefert.
       Der Parameter <parameter>new_link</parameter> beeinflusst dieses
       Verhalten und <function>mysql_connect</function> öffnet immer eine neue
       Verbindung, sogar dann, wenn <function>mysql_connect</function> zu einem
       früheren Zeitpunkt mit den gleichen Parametern aufgerufen wurde.
       Bei &sqlsafemode; wird dieser Parametern ignoriert.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>client_flags</parameter></term>
     <listitem>
      <para>
       Der Parameter <parameter>client_flags</parameter> kann eine Kombination
       der folgenden Konstanten sein:
       128 (erlaube <literal>LOAD DATA LOCAL</literal> Nutzung),
       <constant>MYSQL_CLIENT_SSL</constant>,
       <constant>MYSQL_CLIENT_COMPRESS</constant>,
       <constant>MYSQL_CLIENT_IGNORE_SPACE</constant> oder
       <constant>MYSQL_CLIENT_INTERACTIVE</constant>.
       Lesen sie den Abschnitt über <xref linkend="mysql.client-flags" /> für
       weitergehende Informationen.
       Bei &sqlsafemode; wird dieser Parameter ignoriert.
      </para>
     </listitem>
    </varlistentry> 
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt eine MySQL Verbindungs-Kennung im Erfolgsfall zurück oder
   &return.falseforfailure;.
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.5.0</entry>
       <entry>
        Die Funktion erzeugt einen Fehler der Stufe
        <constant>E_DEPRECATED</constant>.
       </entry>
      </row>
      <row>
       <entry>4.3.0</entry>
       <entry>
        Der <parameter>client_flags</parameter> Parameter wurde hinzugefügt.
       </entry>
      </row>
      <row>
       <entry>4.2.0</entry>
       <entry>
        Der <parameter>new_link</parameter> Parameter wurde hinzugefügt.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>mysql_connect</function> Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Verbindung schlug fehl: ' . mysql_error());
}
echo 'Erfolgreich verbunden';
mysql_close($link);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>mysql_connect</function> Beispiel unter Nutzung
    der <literal>hostname:port</literal> Syntax</title>
    <programlisting role="php">
<![CDATA[
<?php
// Verbing zu example.com auf Port 3307
$link = mysql_connect('example.com:3307', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Verbindung schlug fehl: ' . mysql_error());
}
echo 'Erfolgreich verbunden';
mysql_close($link);

// Verbindung zu localhost auf port 3307
$link = mysql_connect('127.0.0.1:3307', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Verbindung schlug fehl: ' . mysql_error());
}
echo 'Erfolgreich verbunden';
mysql_close($link);
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title><function>mysql_connect</function> Beispiel unter Nutzung der
    &quot;:/path/to/socket&quot; Syntax</title>
    <programlisting role="php">
<![CDATA[
<?php
// Verbing zu localhost und Socket z.B. /tmp/mysql.sock

// Variante 1: localhost weglassen
$link = mysql_connect(':/tmp/mysql', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Verbindung schlug fehl: ' . mysql_error());
}
echo 'Erfolgreich verbunden';
mysql_close($link);


// Variante 2: mit localhost
$link = mysql_connect('localhost:/tmp/mysql.sock', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Verbindung schlug fehl: ' . mysql_error());
}
echo 'Erfolgreich verbunden';
mysql_close($link);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Immer wenn sie &quot;localhost&quot; oder &quot;localhost:port&quot; als Server angeben, wird
    die MySQL Client Bibliothek dies überschreiben und versuchen, sich zu
    einem lokalen Socket (named pipe unter Windows) zu verbinden. Wenn sie
    TCP/IP nutzen möchten, nutzen sie &quot;127.0.0.1&quot; anstatt &quot;localhost&quot;. Wenn
    die MySQL Client Bibliothek versucht, sich zu dem falschen lokalen Socket
    zu verbunden, sollten sie den korrekten Pfad als
    <xref linkend="ini.mysql.default-host" /> in ihrer PHP Konfiguration
    setzen und das Server Feld leer lassen.
   </para>
  </note>
  <note>
   <para>
    Die Verbindung zum Server wird, sobald die Ausführung des Skripts endet,
    geschlossen, außer sie wurde zuvor exlizit durch den Aufruf von
    <function>mysql_close</function> geschlossen.
   </para>
  </note>
  <note>
   <para>
    Sie können die Fehlermeldungen bei Fehlern durch Voranstellen von
    einem <link linkend="language.operators.errorcontrol">@</link> an den
    Funktions Namen unterdrücken.
   </para>
  </note>
  <note>
   <para>
    Error "Can't create TCP/IP socket (10106)" deutet meist daruf hin, dass die <link
    linkend="ini.variables-order">variables_order</link> Konfigurations
    Anweisung nicht das <literal>E</literal> Zeichen enthält. Wird unter
    Windows die Umgebung nicht kopiert, ist die <literal>SYSTEMROOT</literal>
    Umgebungs Variable nicht verfügbar und PHP wird Sccwierigkeiten haben,
    Winsock zu laden.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysql_pconnect</function></member>
    <member><function>mysql_close</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
