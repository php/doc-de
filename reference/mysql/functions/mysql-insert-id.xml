<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 328734 Maintainer: simp Status: ready -->
<!-- Credits: hholzgra -->

<refentry xml:id="function.mysql-insert-id" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysql_insert_id</refname>
  <refpurpose>
   Liefert die ID, die in der vorherigen Abfrage erzeugt wurde
  </refpurpose>
 </refnamediv>
 
 <refsynopsisdiv>
  <warning>
   &mysql.alternative.note;
   <simplelist role="alternatives">
    <member><function>mysqli_insert_id</function></member>
    <member><methodname>PDO::lastInsertId</methodname></member>
   </simplelist>
  </warning>
 </refsynopsisdiv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>mysql_insert_id</methodname>
   <methodparam choice="opt"><type>resource</type><parameter>link_identifier</parameter><initializer>NULL</initializer></methodparam>
  </methodsynopsis>
  <para>
   Liefert die ID, die für eine AUTO_INCREMENT Spalte durch die vorherige
   Abfrage (meist INSERT) erzeugt wurde.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysql.linkid.description;
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Die ID, die für eine AUTO_INCREMENT Spalte durch die vorherige
   Abfrage bei Erfolg, <literal>0</literal> falls die vorherige Abfrage keinen
   AUTO_INCREMENT Wert erzeugt hatte oder &false; falls keine MySQL verbindung
   existierte.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>mysql_insert_id</function> Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Keine Verbindung möglich: ' . mysql_error());
}
mysql_select_db('mydb');

mysql_query("INSERT INTO mytable (product) values ('kossu')");
printf("Letzer eingefügter Datensatz hat id %d\n", mysql_insert_id());
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <caution>
   <para>
    <function>mysql_insert_id</function> konvertiert den Typ der Rückgabe
    der nativen MySQL C API Funktion <literal>mysql_insert_id()</literal> in
    den Typ <literal>long</literal> (als <type>int</type> in PHP bezeichnet).
    Falls Ihre AUTO_INCREMENT Spalte vom Typ BIGINT (64 Bit) ist, ist der Wert den
    <function>mysql_insert_id</function> liefert, nicht korrekt.
    Verwenden Sie in diesem Fall stattdessen die MySQL interne SQL Funktion
    <literal>LAST_INSERT_ID()</literal> in einer SQL-Abfrage. Für
    weitergehende Informationen bezüglich PHPs maximaler Integer Werte, lesen
    sie bitte <link linkend="language.types.integer">integer</link>
    Dokumenation.
   </para>
  </caution>
  <note>
   <para>
    Da <function>mysql_insert_id</function> mit der zuletzt ausgeführten
    Abfrage arbeite, stellen sie sicher, dass
    sie <function>mysql_insert_id</function> direkt nach der Abfrage, die den
    Wert erzeugt aufrufen.
   </para>
  </note>
  <note>
   <para>
    Der Wert der MySQL SQL Funktion <literal>LAST_INSERT_ID()</literal>
    liefert immer den zuletzt erzeugten AUTO_INCREMENT Wert. Dieser wird
    zwischen Abfragen nicht zurückgesetzt.
  </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysql_query</function></member>
    <member><function>mysql_info</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
