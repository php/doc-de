<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.8 $ -->
<!-- EN-Revision: 1.7 Maintainer: nobody Status: ready -->

  <refentry xml:id="function.mysql-result" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>mysql_result</refname>
    <refpurpose>Liefert Ergebnis</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>mixed</type><methodname>mysql_result</methodname>
      <methodparam><type>resource</type><parameter>Ergebnis-Kennung</parameter></methodparam>
      <methodparam><type>int</type><parameter>Datensatz</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>Feld</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>mysql_result</function> liefert den Inhalt eines Felds
     aus einem Anfrageergebnis. Das Argument <parameter>Feld</parameter>
     kann der Feldname, der Feldoffset ein Bezeichner in der Form
     'Tabellenname.Feldname.' sein. Wenn das Feld einen Alias besitzt
     ('select foo as bar from...') muss der Alias anstatt des Feldnamens
     verwendet werden.
    </para>
    <para>
     Wenn auf Anfrageergebnisse mit vielen Datensätzen zugegriffen werden soll,
     sollten Sie Funktionen, die auf ganze Datensätze zugreifen,in Betracht
     ziehen (siehe unten). Diese Funktionen liefern bei einem einzigen Aufruf
     den Inhalt mehrerer Felder und sind aus diesem Grund SEHR viel schneller als
     <function>mysql_result</function>. Beachten Sie auch, dass die Angabe
     eines numerischen Offsets für ein Feld sehr viel schneller ist als die
     Angabe eines Feldnamens oder tabellenname.feldname.
    </para>
    <para>
     Aufrufe von <function>mysql_result</function> sollten nicht mit Aufrufen
     anderer Funktionen verschachtelt werden, die auch auf das Ergebnis zugreifen.
    </para>
    <para>
     <example>
      <title><function>mysql_result</function> example</title>
      <programlisting role="php">
<![CDATA[
<?php
$link = mysql_connect("localhost", "mysql_user", "mysql_password")
    or die(": " . mysql_error());

$result = mysql_query("SELECT name FROM work.employee")
    or die(":" . mysql_error());

echo mysql_result($result, 2); // 

mysql_close($link);
?>
]]>
<![CDATA[
<?php
$link = mysql_connect('localhost', 'mysql_user', 'mysql_password');
if (!$link) {
    die('Keine Verbindung möglich: ' . mysql_error());
}
$result = mysql_query('SELECT name FROM work.employee');
if (!$result) {
    die('Abfrage fehlgeschlagen:' . mysql_error());
}
echo mysql_result($result, 2); // gibt den Namen des dritten Angestellten aus

mysql_close($link);
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Empfohlende, leistungsfähigere Alternativen:
     <function>mysql_fetch_row</function>,
     <function>mysql_fetch_array</function>,
     <function>mysql_fetch_assoc</function> und
     <function>mysql_fetch_object</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
