<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: hholzgra Status: ready -->

  <refentry xml:id="function.mysql-query" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>mysql_query</refname>
    <refpurpose>Sendet eine Anfrage an MySQL</refpurpose>
   </refnamediv>
   <refsect1 role="description">
    &reftitle.description;
     <methodsynopsis>
      <type>resource</type><methodname>mysql_query</methodname>
      <methodparam><type>string</type><parameter>Anfrage</parameter></methodparam>
      <methodparam choice="opt"><type>resource</type><parameter>Verbindungs-Kennung</parameter>
      </methodparam>
     </methodsynopsis>
    <para> 
     <function>mysql_query</function> sendet eine Anfrage an die zur
     Zeit aktiven Datenbank, die mit der angegebenen
     <parameter>Verbindungs-Kennung</parameter> assoziiert wird.
     Wird die <parameter>Verbindungs-Kennung</parameter> nicht angegeben,
     wird die zuletzt geöffnete Verbindung angenommen. Wenn keine offene
     Verbindung besteht, wird versucht eine Verbindung aufzubauen, wie beim
     Aufruf von <function>mysql_connect</function> ohne Argumente und diese
     wird dann benutzt. Das Ergebnis der Anfrage wird gepuffert.
    </para>
    <note>
     <para>
      Die Anfrage sollte nicht mit einem Semikolon enden.
     </para>
    </note>
    <para>
     Nur für SELECT, EXPLAIN, SHOW oder DESCRIBE Anweisungen liefert
     <function>mysql_query</function> 
     eine Ressourcen-Kennung oder &false;, falls die Anfrage nicht korrekt 
     ausgeführt wurde. Für alle anderen SQL Anweisungen ist der Rückgabewert
     von <function>mysql_query</function> im Erfolgsfall &true;, im Fehlerfall
     &false;. Ein Rückgabewert ungleich &false; bedeutet, dass die Anfrage
     gültig war und vom Server ausgeführt werden konnte. Das alleine sagt
     jedoch überhaupt nichts über die Anzahl veränderter oder gelieferter 
     Datensätze aus. Es ist durchaus möglich, dass eine Anfrage erfolgreich
     war, ohne einen einzigen Datensatz zur verändern oder zu liefern.
    </para>
    <para>
     Die folgende Anfrage ist syntaktisch falsch, deshalb liefert
     <function>mysql_query</function> &false; zurück:
     <example>
      <title><function>mysql_query</function> Beispiel</title>
      <programlisting role="php">
<![CDATA[
<?php
$result = mysql_query('SELECT * WHERE 1=1');
if (!$result) {
    die('Ungültige Abfrage: ' . mysql_error());
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     Die folgende Anfrage ist semantisch falsch, wenn
     <literal>my_col</literal> kein Feld in der Tabelle
     <literal>my_tbl</literal> ist. Deshalb schlägt
     <function>mysql_query</function> fehl und liefert &false;:
     <example>
      <title><function>mysql_query</function></title>
      <programlisting role="php">
<![CDATA[
<?php
$result = mysql_query('SELECT my_col FROM my_tbl');
if (!$result) {
    die('Ungültige Abfrage: ' . mysql_error());
}
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <function>mysql_query</function> schlägt ebenso fehl und liefert
     &false;, wenn Sie keine Berechtigung zum Zugriff auf die verwiesene(n)
     Tabelle(n) haben.
    </para>
    <para>
     Angenommen eine Anfrage ist erfolgreich, dann können Sie für eine
     SELECT Anweisung mit <function>mysql_num_rows</function> die Anzahl der
     gelieferten Datensätze herausfinden. Falls Sie DELETE, INSERT, REPLACE,
     oder UPDATE benutzt haben, können Sie die Anzahl der betroffenen Datensätze
     mit <function>mysql_affected_rows</function> feststellen.
    </para>
    <para>
     Nur bei SELECT, EXPLAIN, SHOW oder DESCRIBE Anweisungen liefert 
     <function>mysql_query</function> eine neue Ergebnis-Kennung, die Sie 
     an die Funktion <function>mysql_fetch_array</function> und andere
     Funktionen, die mit Ergebnistabellen umgehen können, übergeben können.
     Sind sie mit der Bearbeitung Ihrer Ergebnisse fertig, können Sie die 
     belegten Resourcen durch den Aufruf von
     <function>mysql_free_result</function> freigeben.
     Ist die Ausführung des Skripts abgeschlossen, wird der belegte Speicher
     automatisch freigegeben.
    </para>
    <para>
     Siehe auch:
     <function>mysql_num_rows</function>
     <function>mysql_affected_rows</function>,
     <function>mysql_unbuffered_query</function>,
     <function>mysql_free_result</function>,
     <function>mysql_fetch_array</function>,
     <function>mysql_fetch_row</function>,
     <function>mysql_fetch_assoc</function>,
     <function>mysql_result</function>,
     <function>mysql_select_db</function> und
     <function>mysql_connect</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
