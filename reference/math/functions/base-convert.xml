<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 -->
<!-- EN-Revision: 1.11 Maintainer: hholzgra Status: ready -->
<refentry xml:id="function.base-convert" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>base_convert</refname>
  <refpurpose>Konvertiert einen numerischen Wert zwischen verschiedenen Zahlensystemen</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
   <methodsynopsis>
    <type>string</type><methodname>base_convert</methodname>
    <methodparam><type>string</type><parameter>number</parameter></methodparam>
    <methodparam><type>int</type><parameter>frombase</parameter></methodparam>
    <methodparam><type>int</type><parameter>tobase</parameter></methodparam>
   </methodsynopsis>
  <para>
   <function>base_convert</function> wandelt einen im Zahlensystem
   zur Basis <parameter>frombase</parameter> codierten numerischen
   String <parameter>number</parameter> in die entsprechende Representation 
   zur Basis <parameter>tobase</parameter> um. 
   Sowohl <parameter>formbase</parameter> als auch 
   <parameter>tobase</parameter> dürfen Werte zwischen 2 und 36 (inklusive)
   einnehmen. In Zahlensystemen mit einer Basis größer als Zehn werden die
   Ziffern größer als neun durch die Buchstaben a bis z representiert.
   A steht dabei für die 'Ziffer' 10, b für 11 und so weiter bis z für 36.
  </para>
  <warning>
   <simpara>
    <function>base_convert</function> kann bei großen Werten auf Grund von
    Eigenschaften der zu Grunde liegenden internen "float" und "double"
    Datentypen. Sehen Sie hierzu bitte den Abschnitt  
    <link linkend="language.types.float">Fließkommazahlen</link>
    in diesem Handbuch für genauere Informationen zu diesem Thema.
   </simpara>
  </warning>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>number</parameter></term>
     <listitem>
      <para>
       Die zu konvertierende numerische Zeichenkette
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>frombase</parameter></term>
     <listitem>
      <para>
       Die Basis zu der <parameter>number</parameter> kodiert ist
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>tobase</parameter></term>
     <listitem>
      <para>
       Die Basis zu der <parameter>number</parameter> konvertiert werden soll
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <parameter>number</parameter> konvertiert zur Basis <parameter>tobase</parameter>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>base_convert</function> Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$hexadecimal = 'A37334';
echo base_convert($hexadecimal, 16, 2);
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
101000110111001100110100
]]>
    </screen>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>intval</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
