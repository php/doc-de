<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.4 Maintainer: conni Status: ready -->

  <refentry xml:id="function.socket-write" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>socket_write</refname>
    <refpurpose>Schreibt in den Socket</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>int</type><methodname>socket_write</methodname>
      <methodparam><type>resource</type><parameter>socket</parameter></methodparam>
      <methodparam><type>string</type><parameter>buffer</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>length</parameter></methodparam>
     </methodsynopsis>
    <para>
     Die Funktion <function>socket_write</function> schreibt aus dem
     Puffer <parameter>buffer</parameter> in den Socket
     <parameter>socket</parameter>.
    </para>
    <para>
     Mit dem optionalen Parameter <parameter>length</parameter> kann man
     alternativ eine Anzahl von Bytes angeben, die in den Socket
     geschrieben wrden sollen. Falls diese Anzahl größer ist, als der
     Puffer, wird sie stillschweigend auf die Puffergröße gekürzt.
    </para>
    <para>
     Gibt die Anzahl der erfolgreich in den Socket geschriebenen Bytes
     zurück oder &false;, falls ein Fehler aufgetreten ist. Der Fehlercode
     kann mit der Funktion <function>socket_last_error</function>
     abgefragt werden. Dieser Fehlercode kann an die Funktion
     <function>socket_strerror</function> übergeben werden, um eine
     textuelle Beschreibung des Fehlers zu erhalten.
    </para>
    <note>
     <para>
      <function>socket_write</function> schreibt nicht notwendigerweise
      alle Bytes aus dem angegebenen Puffer. Es ist auch möglich, dass,
      abhängig von den Puffern im Netzwerk usw., nur eine bestimmte
      Datenmenge, sogar auch nur ein Byte, geschrieben wird, obwohl der
      Puffer größer ist. Dies müssen Sie beobachten, nicht dass Sie
      unabsichtlich vergessen, den Rest Ihrer Daten zu senden. 
     </para>
    </note>
    <note>
     <para>
      Es durchaus möglich, dass <function>socket_write</function> 0
      zurückgibt, was bedeutet, dass kein einziges Byte geschrieben wurde.
      Vergewissern Sie sich, dass Sie den <literal>===</literal> Operator
      benutzen, um im Falle eines Fehlers auf &false; zu testen.  
     </para>
    </note>
    <para>
     See also 
     <function>socket_accept</function>,
     <function>socket_bind</function>,
     <function>socket_connect</function>,
     <function>socket_listen</function>,
     <function>socket_read</function> und
     <function>socket_strerror</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
