<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.3 Maintainer: conni Status: ready -->
  <refentry id="function.socket-accept">
   <refnamediv>
    <refname>socket_accept</refname>
    <refpurpose>Akzeptiert eine Verbindung an einem Socket</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>int</type><methodname>socket_accept</methodname>
      <methodparam><type>resource</type><parameter>socket</parameter></methodparam>
     </methodsynopsis>
    &warn.experimental.func;
    <para>
     Nachdem der Socket <parameter>socket</parameter>  mit der
     <function>socket_create</function> erzeugt wurde, mit
     <function>socket_bind</function> mit einem Namen verknuepft wurde
     und mit <function>socket_listen</function> angewiesen wurde, nach
	 hereinkommenden Verbindungsanforderungen zu horchen, wird der
     Socket mit dieser Funktion angewiesen, diese
     Verbindungsanforderungen zuzulassen. Wenn ein Verbindungsaufbau
	 erfolgreich war, wird ein neuer Socket-Deskriptor zurückgegeben,
	 welcher zur Kommunikation benutzt werden kann. Wenn es mehrere
	 Verbindungsanforderungen an diesem Socket gibt, werden diese in
	 eine Warteschlange gestellt und die erste Verbindungsanforderung
	 wird bedient. Falls es keine wartenden Verbindungsanforderungen
	 gibt, blockiert die Funktion <function>socket_accept</function>
	 so lange, bis eine Verbindungsanforderung kommt. Falls
	 <parameter>socket</parameter> mit der Funktion  
	 <function>socket_set_blocking</function> oder mit
	 <function>socket_set_nonblock</function> auf 'nicht blockieren'
	 gesetzt wurde, wird &false; zurückgegeben.
    </para>
    <para>
     Der Socket-Deskriptor, der von <function>socket_accept</function>
     zurückgegeben wird, soll nicht dazu benutzt werden, um neue
     Verbindungsanforderungen zu benutzen. Der ursprüngliche wartende
	 Socket <parameter>socket</parameter> bleibt geöffnet und kann
	 wiederbenutzt werden.
    </para>
    <para>
     Gibt bei Erfolg einen neuen Socket-Deskriptor zurück oder &false;,
	 falls ein Fehler auftritt. Der aktuelle Fehlercode kann mit der
	 Funktion <function>socket_last_error</function> ermittelt werden. 
	 Dieser Fehlercode kann an die Funktion <function>strerror</function>
	 übergeben werden, um eine textuelle Beschreibung des Fehlers zu erhalten.
    </para>
    <para>
     Siehe auch:
     <function>socket_bind</function>,
     <function>socket_connect</function>,
     <function>socket_listen</function>,
     <function>socket_create</function> und
     <function>socket_strerror</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
