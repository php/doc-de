<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: 283836 Maintainer: conni Status: ready -->
<refentry xmlns="http://docbook.org/ns/docbook" xml:id="function.socket-recvfrom">
 <refnamediv>
  <refname>socket_recvfrom</refname>
  <refpurpose>Empfängt Daten von einem Socket, egal, ob verbindungsorientiert oder nicht</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>socket_recvfrom</methodname>
   <methodparam><type>resource</type><parameter>socket</parameter></methodparam>
   <methodparam><type>string</type><parameter role="reference">buf</parameter></methodparam>
   <methodparam><type>int</type><parameter>len</parameter></methodparam>
   <methodparam><type>int</type><parameter>flags</parameter></methodparam>
   <methodparam><type>string</type><parameter role="reference">name</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter role="reference">port</parameter></methodparam>
  </methodsynopsis>
  <para>
   Die Funktion <function>socket_recvfrom</function> empfängt über den Socket 
   <parameter>socket</parameter> <parameter>len</parameter> Bytes von
   <parameter>name</parameter> über den Port <parameter>port</parameter> (falls
   der Socket nicht vom Typ <constant>AF_UNIX</constant> ist) und liest sie in
   den Puffer <parameter>buf</parameter> ein. 
   <function>socket_recvfrom</function> kann dazu verwendet werden, um Daten
   sowohl von verbundenen als auch unverbundenen Sockets zu lesen. Außerdem
   können ein oder mehrere Flags gesetzt werden, um das Verhalten dieser 
   Funktion zu beeinflussen.
  </para>
  <para>
   Die Parameter <parameter>name</parameter> und <parameter>port</parameter> 
   müsssen als Referenz übergeben werden. Wenn der Socket verbindungslos ist, 
   wird <parameter>name</parameter> auf die Internet-Protokolladresse des
   entfernten Host oder auf den Pfad zum UNIX-Socket gesetzt. Ist der Socket 
   verbindungsorientiert, ist <parameter>name</parameter> &null;. Zusätzlich 
   enthält der Parameter <parameter>port</parameter> den Port des entfernten
   Host, falls es sich um einen nicht verbundenen <constant>AF_INET</constant>
   oder <constant>AF_INET6</constant> Socket handelt.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>socket</parameter></term>
     <listitem>
      <para>
       <parameter>socket</parameter> muss ein Socket-Deskriptor sein, der zuvor
       von <function>socket_create</function> erzeugt wurde.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>buf</parameter></term>
     <listitem>
      <para>
       Die empfangenen Daten werden in die Variable <parameter>buf</parameter>
       eingelesen.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>len</parameter></term>
     <listitem>
      <para>
       Bis zu <parameter>len</parameter> Bytes werden vom entfernten Host gelesen. 
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Der Wert von <parameter>flags</parameter> kann eine beliebige Kombination
       der folgenden Flags sein, die mit dem binären OR (<literal>|</literal>) 
       verknüpft werden.
      </para>
      
      <table>
       <title>Mögliche Werte für <parameter>flags</parameter></title>
       <tgroup cols="2">
        <thead>
         <row>
          <entry>Flag</entry>
          <entry>Beschreibung</entry>
         </row>
        </thead>
        <tbody>
         <row>
          <entry><constant>MSG_OOB</constant></entry>
          <entry>
           Verarbeite bandexterne Daten.
          </entry>
         </row>
         <row>
          <entry><constant>MSG_PEEK</constant></entry>
          <entry>
           Lies Daten ab Anfang der Empfangs-Warteschlange, ohne die Daten
           aus der Warteschlange zu löschen.
          </entry>
         </row>
         <row>
          <entry><constant>MSG_WAITALL</constant></entry>
          <entry>
           Blockiere so lange, bis mindestens <parameter>len</parameter> Daten
           gelesen wurden. Wenn jedoch ein Signal empfangen wurde oder der 
           entfernte Host die Verbindung beendet, kann die Funktion auch weniger
           Daten zurückgeben.
          </entry>
         </row>
         <row>
          <entry><constant>MSG_DONTWAIT</constant></entry>
          <entry>
           Wenn dieses Flag gesetzt ist, kehrt die Funktion zurück, auch wenn
           sie normalerweise blockieren würde.
          </entry>
         </row>
        </tbody>
       </tgroup>
      </table>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>name</parameter></term>
     <listitem>
      <para>
       Wenn der Socket vom Typ <constant>AF_UNIX</constant> ist, enthält
       <parameter>name</parameter> den Pfad zu einer Datei. Anderenfalls, bei
       nicht verbundenen Sockets, enthält <parameter>name</parameter> die
       IP-Adresse des entfernten Hosts oder &null;, falls der Socket
       verbindungsorientiert ist.
      </para>
     </listitem>
    </varlistentry>

    <varlistentry>
     <term><parameter>port</parameter></term>
     <listitem>
      <para>
       Dieses Argument gilt nur für Sockets vom Typ <constant>AF_INET</constant> und <constant>AF_INET6</constant> und gibt den entfernten Port an, über den Daten empfangen werden. Falls der Socket verbindungsorientiert ist, ist <parameter>port</parameter> &null;.
      </para>
     </listitem>
    </varlistentry>
    
   </variablelist>
  </para>
 </refsect1>
 
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>socket_recvfrom</function> gibt die Anzahl der empfangenen Bytes
   zurück oder -1, falls ein Fehler auftrat. Der aktuelle Fehlercode kann mit 
   <function>socket_last_error</function> abgefragt werden. Dieser Fehlercode
   kann an die Funktion <function>socket_strerror</function> übergeben werden,
   um eine textuelle Beschreibung des Fehlers zu erhalten.
  </para>
 </refsect1>
                     
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>socket_recvfrom</function> Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
error_reporting(E_ALL | E_STRICT);

$socket = socket_create(AF_INET, SOCK_DGRAM, SOL_UDP);
socket_bind($socket, '127.0.0.1', 1223);

$from = "";
$port = 0;
socket_recvfrom($socket, $buf, 12, 0, $from, $port);

echo "$buf von entfernter Adresse $from über den entfernten Port $port empfangen." . PHP_EOL;
?>
]]>
    </programlisting>
    <para>
     Dieses Beispiel erzeugt einen UDP-Socket über Port 1223 des Hosts 127.0.0.1
     und gibt höchstens 12 Zeichen aus, die von einem entfernten Host empfangen
     wurden. 
    </para>
   </example>
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>4.3.0</entry>
       <entry>
        <function>socket_recvfrom</function> ist ab jetzt binary-safe.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>socket_recv</function></member>
    <member><function>socket_send</function></member>
    <member><function>socket_sendto</function></member>
    <member><function>socket_create</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>      

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
