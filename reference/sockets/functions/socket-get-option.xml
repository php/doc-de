<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.3 $ -->
<!-- EN-Revision: 1.7 Maintainer: conni Status: ready -->
  <refentry xml:id="function.socket-get-option" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>socket_get_option</refname>
    <refpurpose>Holt die Socket-Optionen für einen Socket </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>mixed</type><methodname>socket_get_option</methodname>
      <methodparam><type>resource</type><parameter>socket</parameter></methodparam>
      <methodparam><type>int</type><parameter>level</parameter></methodparam>
      <methodparam><type>int</type><parameter>optname</parameter></methodparam>
     </methodsynopsis>

    <para>
     The <function>socket_get_option</function> gibt den Wert der
     Option zurück, der im Parameter <parameter>optname</parameter>
     für den Socket <parameter>socket</parameter> gesetzt wurde.
     <function>socket_get_option</function> gibt bei einem Fehler &false; zurück.
    </para>
    <para>
     Der Parameter <parameter>level</parameter> enthält die
     Protokollebene, für die die Option gilt. Beispiel: Um Optionen
     auf der Socketebene abzufragen würde <parameter>level</parameter>
     den Wert SQL_SOCKET enthalten. Andere Ebenen, etwa TCP, können
     abgefragt werden, indem man die Protokollnummer dieser Ebene
     angibt. Protokollnummern können mit einem Aufruf von
     <function>getprotobyname</function> ermittelt werden.
    </para>
    <table>
    <title>Mögliche socket-Optionen</title>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>Option</entry>
       <entry>Beschreibung</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>SO_DEBUG</entry>
       <entry>
        Gibt an, ob Debug-Informationen mitgeschrieben wurden. 
       </entry>
      </row>
      <row>
       <entry>SO_ACCEPTCONN</entry>
       <entry>
        Gibt an, ob der Socket auf Verbindungsanforderungen wartet.
       </entry>
      </row>
      <row>
       <entry>SO_BROADCAST</entry>
       <entry>
        Gibt an, ob die Übermittlung von Rundsende-Nachrichten unterstützt wird. 
       </entry>
      </row>
      <row>
       <entry>SO_REUSEADDR</entry>
       <entry>
        Gibt an, ob die lokale Adresse wiederverwendet werden kann. 
       </entry>
      </row>
      <row>
       <entry>SO_KEEPALIVE</entry>
       <entry>
        Gibt an, ob Verbindungen durch periodische Aussendungen von
        Nachrichten aufrecht erhalten werden. Falls der verbundene
        Socket nicht auf diese Nachrichten antworten kann, wird die
        Verbindung unterbrochen und Prozesse, die auf diesen Socket
        schreiben, erhalten ein SIGPIPE Signal. 
       </entry>
      </row>
      <row>
       <entry>SO_LINGER</entry>
       <entry>
        Gibt an, ob der <parameter>socket</parameter> einen
        <function>socket_close</function>-Aufruf verzögert, wenn Daten
        vorhanden sind.
       </entry>
      </row>
      <row>
       <entry>SO_OOBINLINE</entry>
       <entry>
        Gibt an, ob der <parameter>socket</parameter> ob der Socket die Übertragung von out-of-band Daten (Daten mit höherer Priorität) in der normalen Reihenfolge überträgt. 
       </entry>
      </row>
      <row>
       <entry>SO_SNDBUF</entry>
       <entry>
        Gibt Informationen zur Grösse des Sendepuffers zurück.
       </entry>
      </row>
      <row>
       <entry>SO_RCVBUF</entry>
       <entry>
       Gibt Informationen zur Grösse des Empfangspuffers zurück.
       </entry>
      </row>
      <row>
       <entry>SO_ERROR</entry>
       <entry>
        Gibt Informationen zum Fehlerstatus zurück und löscht den Status.
       </entry>
      </row>
      <row>
       <entry>SO_TYPE</entry>
       <entry>
        Gibt den Wert des Parameters <parameter>socket</parameter> zurück.
       </entry>
      </row>
      <row>
       <entry>SO_DONTROUTE</entry>
       <entry>
        Gibt an, ob ausgehende Nachrichten das standardmässige Routing umgehen.
       </entry>
      </row>
      <row>
       <entry>SO_RCVLOWAT</entry>
       <entry>
        Gibt die Mindestanzahl Bytes an, die         <parameter>socket</parameter> 
        bei einer Empfangsoperation erhalten soll. (Der
        Vorgabewert ist 1.)
       </entry>
      </row>
      <row>
       <entry>SO_RCVTIMEO</entry>
       <entry>
        Gibt den Wert für eine Zeitüberschreitung bei
        Empfangsoperationen an.
       </entry>
      </row>
      <row>
       <entry>SO_SNDLOWAT</entry>
       <entry>
        Gibt die Mindestanzahl Bytes an, die         <parameter>socket</parameter> 
        bei einer Ausgabeoperation versenden soll. 
       </entry>
      </row>
      <row>
       <entry>SO_SNDTIMEO</entry>
       <entry>
        Gibt den Wert für eine Zeitüberschreitung bei
        Sendeoperationen an. Eine Ausgabefunktion darf während der
        angegebenen Zeitspanne blockieren, falls die Ablaufsteuerung
        den Versand der Daten verhindert.
       </entry>
      </row>
     </tbody>
    </tgroup>
    </table>
    <note>
     <para>
      Diese Funktion ersetzt <literal>socket_getopt()</literal>, die
      in PHP vor Version 4.3.0 enthalten war.
     </para>
    </note>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
