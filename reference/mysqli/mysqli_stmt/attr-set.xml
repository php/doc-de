<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 63b99082ef83eade08151f8cb528246fded81db9 Maintainer: cmb Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: 1.0 Reviewer: samesch -->
<refentry xml:id="mysqli-stmt.attr-set" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>mysqli_stmt::attr_set</refname>
  <refname>mysqli_stmt_attr_set</refname>
  <refpurpose>
   Verändert das Verhalten einer vorbereiteten Anweisung (prepared statement)
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="mysqli_stmt">
   <modifier>public</modifier> <type>bool</type><methodname>mysqli_stmt::attr_set</methodname>
   <methodparam><type>int</type><parameter>attribute</parameter></methodparam>
   <methodparam><type>int</type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>bool</type><methodname>mysqli_stmt_attr_set</methodname>
   <methodparam><type>mysqli_stmt</type><parameter>statement</parameter></methodparam>
   <methodparam><type>int</type><parameter>attribute</parameter></methodparam>
   <methodparam><type>int</type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <para>
   Wird verwendet, um das Verhalten einer vorbereiteten Anweisung (prepared
   statement) zu verändern. Die Funktion kann mehrmals aufgerufen werden, um
   verschiedene Attribute zu setzen.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.stmt.description;
    <varlistentry>
     <term><parameter>attribute</parameter></term>
     <listitem>
      <para>
       Das Attribut, das gesetzt werden soll. Es kann einen der folgenden
       Werte haben:
       <table xml:id="mysqli-stmt.attr-set.parameters">
        <title>Attribut-Werte</title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>Konstante</entry>
           <entry>Beschreibung</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>MYSQLI_STMT_ATTR_UPDATE_MAX_LENGTH</entry>
           <entry>
            Der Wert &true; veranlasst
            <function>mysqli_stmt_store_result</function>, die
            Meta-Information <literal>MYSQL_FIELD-&gt;max_length</literal> zu
            aktualisieren.
           </entry>
          </row>
          <row>
           <entry>MYSQLI_STMT_ATTR_CURSOR_TYPE</entry>
           <entry>
            Der Typ des Cursors, der für die Anweisung geöffnet wird, wenn
            <function>mysqli_stmt_execute</function> aufgerufen wird.
            <parameter>value</parameter> kann
            <literal>MYSQLI_CURSOR_TYPE_NO_CURSOR</literal> (Voreinstellung)
            oder <literal>MYSQLI_CURSOR_TYPE_READ_ONLY</literal> sein.
           </entry>
          </row>
          <row>
           <entry>MYSQLI_STMT_ATTR_PREFETCH_ROWS</entry>
           <entry>
            Die Anzahl der Datensätze, die auf einmal vom Server abgerufen
            werden, wenn ein Cursor verwendet wird.
            <parameter>value</parameter> kann zwischen 1 und dem Maximalwert
            von unsigned long (einschließlich) liegen. Die Voreinstellung ist
            1.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
      <para>
       Wenn die Option <literal>MYSQLI_STMT_ATTR_CURSOR_TYPE</literal> mit
       <literal>MYSQLI_CURSOR_TYPE_READ_ONLY</literal> verwendet wird, dann
       wird ein Cursor für die Anweisung geöffnet, sobald
       <function>mysqli_stmt_execute</function> aufgerufen wird. Wenn es schon
       einen offenen Cursor von einem vorherigen Aufruf von
       <function>mysqli_stmt_execute</function> gibt, dann wird der Cursor
       geschlossen, bevor der neue geöffnet wird.
       <function>mysqli_stmt_reset</function> schließt ebenfalls alle offenen
       Cursor, bevor die Anweisung für die Wiederausführung vorbereitet wird.
       <function>mysqli_stmt_free_result</function> schließt alle offenen
       Cursor.
      </para>
      <para>
       Wenn ein Cursor für eine Anweisung geöffnet wird, dann ist
       <function>mysqli_stmt_store_result</function> unnötig.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>Der Wert, der dem Attribut zugewiesen werden soll.</para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &mysqli.conditionalexception;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><link xlink:href="&url.mysql.docs.stmt-attr-set;">Connector/MySQL mysql_stmt_attr_set()</link></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
