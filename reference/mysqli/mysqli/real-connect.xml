<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 63b99082ef83eade08151f8cb528246fded81db9 Maintainer: samesch Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="mysqli.real-connect" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli::real_connect</refname>
  <refname>mysqli_real_connect</refname>
  <refpurpose>Baut eine Verbindung zu einem MySQL-Server auf</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="mysqli">
   <modifier>public</modifier> <type>bool</type><methodname>mysqli::real_connect</methodname>
   <methodparam choice="opt"><type>string</type><parameter>host</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>username</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>passwd</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>dbname</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>port</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>socket</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type>bool</type><methodname>mysqli_real_connect</methodname>
   <methodparam><type>mysqli</type><parameter>link</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>host</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>username</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>passwd</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>dbname</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>port</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>socket</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>flags</parameter></methodparam>
  </methodsynopsis>
  <para>
   Baut eine Verbindung zu einer MySQL-Datenbank auf.
  </para>
  <para>
   Diese Funktion unterscheidet sich von der Funktion
   <function>mysqli_connect</function>:
  </para>
  <itemizedlist>
   <listitem>
    <para>
     <function>mysqli_real_connect</function> benötigt ein gültiges Objekt,
     das mit der Funktion <function>mysqli_init</function> erstellt werden
     muss.
    </para>
   </listitem>
   <listitem>
    <para>
     Mit der Funktion <function>mysqli_options</function> können verschiedene
     Optionen für die Verbindung eingestellt werden.
    </para>
   </listitem>
   <listitem>
    <para>
     Es gibt den Parameter <parameter>flags</parameter>.
    </para>
   </listitem>
  </itemizedlist>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &mysqli.link.description;
    <varlistentry>
     <term><parameter>host</parameter></term>
     <listitem>
      <para>
       Kann entweder ein Hostname oder eine IP-Adresse sein. Wenn diesem
       Parameter der Wert &null; oder die Zeichenkette "localhost" übergeben
       wird, wird angenommen, dass es sich um den aktuellen Rechner handelt.
       Wenn möglich, werden Pipes anstelle des TCP/IP-Protokolls verwendet.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>username</parameter></term>
     <listitem>
      <para>
       Der MySQL-Benutzername
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>passwd</parameter></term>
     <listitem>
      <para>
       Falls nicht angegeben oder &null;, versucht der MySQL-Server, den
       Benutzer nur anhand der Benutzerdatensätze zu authentifizieren, die
       kein Passwort haben. Dadurch kann ein Benutzername mit verschiedenen
       Berechtigungen verwendet werden (je nachdem, ob ein Passwort angegeben
       wurde oder nicht).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>dbname</parameter></term>
     <listitem>
      <para>
       Falls angegeben, bestimmt dies die Datenbank, die standardmäßig bei
       Abfragen verwendet werden soll.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>port</parameter></term>
     <listitem>
      <para>
       Gibt die Portnummer an, über die versucht wird, eine Verbindung mit dem
       MySQL-Server herzustellen.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>socket</parameter></term>
     <listitem>
      <para>
       Gibt den Socket oder die benannte Pipe an, der/die verwendet werden soll.
      </para>
      <note>
       <para>
        Mit dem Parameter <parameter>socket</parameter> wird nicht explizit
        festgelegt, welche Art von Verbindung bei der Verbindung mit dem
        MySQL-Server verwendet werden soll. Wie die Verbindung zur
        MySQL-Datenbank hergestellt wird, wird durch den Parameter
        <parameter>host</parameter> bestimmt.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>flags</parameter></term>
     <listitem>
      <para>
       Mit dem Parameter <parameter>flags</parameter> können verschiedene
       Verbindungsoptionen eingestellt werden:
      </para>
      <table xml:id="mysqli.real-connect.flags">
       <title>Unterstützte Flags</title>
       <tgroup cols="2">
       <thead>
        <row>
         <entry>Name</entry>
         <entry>Beschreibung</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry><constant>MYSQLI_CLIENT_COMPRESS</constant></entry>
         <entry>Das Komprimierungsprotokoll verwenden</entry>
        </row>
        <row>
         <entry><constant>MYSQLI_CLIENT_FOUND_ROWS</constant></entry>
         <entry>
          Die Anzahl der übereinstimmenden Zeilen zurückgeben, nicht die
          Anzahl der betroffenen Zeilen
         </entry>
        </row>
        <row>
         <entry><constant>MYSQLI_CLIENT_IGNORE_SPACE</constant></entry>
         <entry>
          Leerzeichen nach Funktionsnamen zulassen; macht alle Funktionsnamen
          zu reservierten Wörtern
         </entry>
        </row>
        <row>
         <entry><constant>MYSQLI_CLIENT_INTERACTIVE</constant></entry>
         <entry>
          <literal>interactive_timeout</literal> Sekunden der Inaktivität
          zulassen, bevor die Verbindung getrennt wird (anstelle von
          <literal>wait_timeout</literal> Sekunden)
         </entry>
        </row>
        <row>
         <entry><constant>MYSQLI_CLIENT_SSL</constant></entry>
         <entry>SSL verwenden (Verschlüsselung)</entry>
        </row>
        <row>
         <entry><constant>MYSQLI_CLIENT_SSL_DONT_VERIFY_SERVER_CERT</constant></entry>
         <entry>
          Wie <constant>MYSQLI_CLIENT_SSL</constant>, deaktiviert aber die
          Überprüfung des übergebenen SSL-Zertifikats; gilt nur für
          Installationen, die den MySQL Native Driver und MySQL 5.6 oder höher
          verwenden.
         </entry>
        </row>
        </tbody>
       </tgroup>
      </table>
      <note>
       <para>
        Aus Sicherheitsgründen wird das Flag
        <constant>MULTI_STATEMENT</constant> von PHP nicht unterstützt. Wenn
        mehrere Abfragen ausgeführt werden sollen, muss die Funktion
        <function>mysqli_multi_query</function> verwendet werden.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &mysqli.conditionalexception;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <example>
   <title><methodname>mysqli::real_connect</methodname>-Beispiel</title>
   <para>&style.oop;</para>
   <programlisting role="php">
<![CDATA[
<?php

$mysqli = mysqli_init();
if (!$mysqli) {
    die('mysqli_init ist fehlgeschlagen');
}

if (!$mysqli->options(MYSQLI_INIT_COMMAND, 'SET AUTOCOMMIT = 0')) {
    die('Setzen von MYSQLI_INIT_COMMAND ist fehlgeschlagen');
}

if (!$mysqli->options(MYSQLI_OPT_CONNECT_TIMEOUT, 5)) {
    die('Setzen von MYSQLI_OPT_CONNECT_TIMEOUT ist fehlgeschlagen');
}

if (!$mysqli->real_connect('localhost', 'my_user', 'my_password', 'my_db')) {
    die('Verbindungsfehler (' . mysqli_connect_errno() . ') '
            . mysqli_connect_error());
}

echo 'Erfolg... ' . $mysqli->host_info . "\n";

$mysqli->close();
?>
]]>
   </programlisting>
   <para>&style.oop;, wenn die Klasse mysqli erweitert wird</para>
   <programlisting role="php">
<![CDATA[
<?php

class foo_mysqli extends mysqli {
    public function __construct($host, $user, $pass, $db) {
        parent::init();

        if (!parent::options(MYSQLI_INIT_COMMAND, 'SET AUTOCOMMIT = 0')) {
            die('Setzen von MYSQLI_INIT_COMMAND ist fehlgeschlagen');
        }

        if (!parent::options(MYSQLI_OPT_CONNECT_TIMEOUT, 5)) {
            die('Setzen von MYSQLI_OPT_CONNECT_TIMEOUT ist fehlgeschlagen');
        }

        if (!parent::real_connect($host, $user, $pass, $db)) {
            die('Verbindungsfehler (' . mysqli_connect_errno() . ') '
                    . mysqli_connect_error());
        }
    }
}

$db = new foo_mysqli('localhost', 'my_user', 'my_password', 'my_db');

echo 'Erfolg... ' . $db->host_info . "\n";

$db->close();
?>
]]>
   </programlisting>
   <para>&style.procedural;</para>
   <programlisting role="php">
<![CDATA[
<?php

$link = mysqli_init();
if (!$link) {
    die('mysqli_init ist fehlgeschlagen');
}

if (!mysqli_options($link, MYSQLI_INIT_COMMAND, 'SET AUTOCOMMIT = 0')) {
    die('Setzen von MYSQLI_INIT_COMMAND ist fehlgeschlagen');
}

if (!mysqli_options($link, MYSQLI_OPT_CONNECT_TIMEOUT, 5)) {
    die('Setzen von MYSQLI_OPT_CONNECT_TIMEOUT ist fehlgeschlagen');
}

if (!mysqli_real_connect($link, 'localhost', 'my_user', 'my_password', 'my_db')) {
    die('Verbindungsfehler (' . mysqli_connect_errno() . ') '
            . mysqli_connect_error());
}

echo 'Erfolg... ' . mysqli_get_host_info($link) . "\n";

mysqli_close($link);
?>
]]>
   </programlisting>
   &examples.outputs;
   <screen>
<![CDATA[
Erfolg... MySQL host info: localhost via TCP/IP
]]>
   </screen>
  </example>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &mysqli.charset.note;
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_connect</function></member>
    <member><function>mysqli_init</function></member>
    <member><function>mysqli_options</function></member>
    <member><function>mysqli_ssl_set</function></member>
    <member><function>mysqli_close</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
