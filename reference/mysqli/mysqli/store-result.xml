<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 63b99082ef83eade08151f8cb528246fded81db9 Maintainer: samesch Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="mysqli.store-result" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>mysqli::store_result</refname>
  <refname>mysqli_store_result</refname>
  <refpurpose>Überträgt die Ergebnismenge der letzten Abfrage</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <para>&style.oop;</para>
  <methodsynopsis role="mysqli">
   <modifier>public</modifier> <type class="union"><type>mysqli_result</type><type>false</type></type><methodname>mysqli::store_result</methodname>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>&style.procedural;</para>
  <methodsynopsis>
   <type class="union"><type>mysqli_result</type><type>false</type></type><methodname>mysqli_store_result</methodname>
   <methodparam><type>mysqli</type><parameter>mysql</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>mode</parameter><initializer>0</initializer></methodparam>
  </methodsynopsis>
  <para>
   Überträgt die Ergebnismenge der letzten Abfrage über die durch
   <parameter>mysql</parameter> angegebene Datenbankverbindung, um sie mit der
   Funktion <function>mysqli_data_seek</function> zu verwenden.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
   &mysqli.link.description;
   <varlistentry>
     <term><parameter>mode</parameter></term>
     <listitem>
      <para>
       Die Option, die gesetzt werden soll. Es kann einer der folgenden Werte
       sein:
       <table xml:id="mysqli.store-result.parameters">
        <title>Gültige Optionen</title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>Name</entry>
           <entry>Beschreibung</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry><constant>MYSQLI_STORE_RESULT_COPY_DATA</constant></entry>
           <entry>
            Kopiert die Ergebnisse aus dem internen mysqlnd-Puffer in die
            abgerufenen PHP-Variablen. Um zu vermeiden, dass im Speicher
            gehaltene Ergebnisse kopiert und dupliziert werden, verwendet
            mysqlnd standardmäßig Referenzen. In bestimmten Fällen, &zb; bei
            Ergebnismengen mit vielen kleinen Zeilen, kann das Kopieren den
            Gesamtspeicherverbrauch verringern, weil die PHP-Variablen, die
            Ergebnisse enthalten, früher freigegeben werden können (nur mit
            mysqlnd verfügbar).
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt ein gepuffertes Ergebnisobjekt zurück oder &false;, wenn ein Fehler
   aufgetreten ist.
  </para>
  <note>
   <para>
    Wenn die Abfrage keine Ergebnismenge zurückgegeben hat (&zb; wenn die
    Abfrage eine INSERT-Anweisung war), gibt die Funktion &false; zurück.
    Diese Funktion gibt auch &false; zurück, wenn die Ergebnismenge nicht
    gelesen werden konnte. Ob ein Fehler aufgetreten ist, kann überprüft
    werden, indem kontrolliert wird, ob <function>mysqli_error</function> eine
    nicht-leere Zeichenkette zurückgibt, ob <function>mysqli_errno</function>
    einen Wert ungleich Null zurückgibt oder ob
    <function>mysqli_field_count</function> einen Wert ungleich Null
    zurückgibt. Ein weiterer möglicher Grund dafür, dass diese Funktion nach
    einem erfolgreichen Aufruf von <function>mysqli_query</function> &false;
    zurückgibt, kann eine zu große Ergebnismenge sein (der dafür benötigte
    Speicher kann nicht zugewiesen werden). Wenn
    <function>mysqli_field_count</function> einen Wert ungleich Null
    zurückgibt, sollte die Anweisung eine nicht-leere Ergebnismenge erzeugt
    haben.
   </para>
  </note>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  &mysqli.conditionalexception;
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Siehe <function>mysqli_multi_query</function>.
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Obwohl es immer sinnvoll ist, den vom Ergebnis einer Abfrage belegten
    Speicher mit der Funktion <function>mysqli_free_result</function>
    freizugeben, ist dies besonders wichtig, wenn große Ergebnismengen mit der
    Funktion <function>mysqli_store_result</function> übertragen werden.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>mysqli_real_query</function></member>
    <member><function>mysqli_use_result</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
