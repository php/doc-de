<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 339132 Maintainer: sammywg Status: ready -->

<section xml:id="mysqli.installation" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">

 &reftitle.install;

 <para>
  Die <literal>mysqli</literal> Extension wurde in PHP 5.0.0 eingeführt; der MySQL
  Native Treiber mit PHP 5.3.0.
 </para>

 <section xml:id="mysqli.installation.linux">

  <title>Installation on Linux</title>

  <para>
   Die üblichen Unix-Distributionen enthalten Binärversionen von PHP, die
   installiert werden können. Obwohl diese Binärversionen typischerweise mit
   Unterstützung für die MySQL Extensions erstellt wurden, müssen möglicherweise
   die Extension-Bibliotheken selbst unter Verwendung eines zusätzlichen Pakets
   installiert werden. Die Paketverwaltung der gewählten Distribution ist auf
   Verfügbarkeit zu prüfen.
  </para>

  <para>
   Beispielsweise installiert unter Ubuntu das <literal>php5-mysql</literal>
   Paket die PHP Extensions ext/mysql, ext/mysqli und pdo_mysql. Unter CentOS
   installiert das <literal>php-mysql</literal> Paket ebenfalls diese drei
   Extensions.
  </para>

  <para>
   Alternativ kann diese Extension auch selbst kompiliert werden. Das
   Kompilieren von PHP aus den Quellen erlaubt die Auswahl der MySQL Extensions,
   die verwendet werden sollen, sowie die Wahl der Client-Bibliothek für jede
   Extension.
  </para>

  <para>
   Der MySQL-Native-Treiber wird empfohlen, da er
   zu einer verbesserten Performance führt und Zugriff auf Funktionen gewährt,
   die bei der Verwendung der MySQL-Client-Bibliothek nicht zur Verfügung stehen.
   Lesen Sie <link linkend="mysqli.overview.mysqlnd">Was versteht man unter
   dem MySQL-Native-Treiber von PHP?</link>, um einen kurzen Überblick über die
   Vorteile des MySQL-Native-Treibers zu erhalten.
  </para>

  <para>
   <literal>/path/to/mysql_config</literal> stellt den Pfad des
   <literal>mysql_config</literal> Programms dar, das mit MySQL Server ausgeliefert wird.
  </para>

  <table>
   <title>MySQLi Kompilierzeit Support-Matrix</title>
   <tgroup cols="5">
    <thead>
     <row>
      <entry>PHP &Version;</entry>
      <entry>&Default;</entry>
      <entry>&ConfigureOptions;: <link linkend="mysqlnd.overview">mysqlnd</link></entry>
      <entry>&ConfigureOptions;: <literal>libmysqlclient</literal></entry>
      <entry>&Changelog;</entry>
     </row>
    </thead>
    <tbody>
     <row>
      <entry>5.4.x</entry>
      <entry>mysqlnd</entry>
      <entry><option role="configure">--with-mysqli</option></entry>
      <entry><option role="configure">--with-mysqli=/path/to/mysql_config</option></entry>
      <entry>mysqlnd ist nun standardmäßig aktiviert</entry>
     </row>
     <row>
      <entry>5.3.x</entry>
      <entry>libmysqlclient</entry>
      <entry><option role="configure">--with-mysqli=mysqlnd</option></entry>
      <entry><option role="configure">--with-mysqli=/path/to/mysql_config</option></entry>
      <entry>mysqlnd wird unterstützt</entry>
     </row>
     <row>
      <entry>5.0.x, 5.1.x, 5.2.x</entry>
      <entry>libmysqlclient</entry>
      <entry>&NotAvailable;</entry>
      <entry><option role="configure">--with-mysqli=/path/to/mysql_config</option></entry>
      <entry>mysqlnd wird nicht unterstützt</entry>
     </row>
    </tbody>
   </tgroup>
  </table>

  <para> 
   Es ist möglich, MySQL-Erweiterungen und Client-Bibliotheken
   frei zu mischen. Zum Beispiel ist es denkbar, dass die MySQL-Erweiterung
   die MySQL-Client-Bibliothek (libmysqlclient) verwendet, während die
   <literal>mysqli</literal>-Erweiterung so konfiguriert ist, dass sie den
   MySQL-Native-Treiber verwendet. Alle Kombinationen von Erweiterungen und
   Client-Bibliotheken sind möglich.
  </para>

 </section>

 <section xml:id="mysqli.installation.windows">

  <title>Installation auf Windows-Systemen</title>

  <para>
   Unter Windows wird PHP in der Regel durch den Binärinstaller installiert.
  </para>

  <section xml:id="mysqli.installation.windows.php53">

   <title>PHP 5.3.0+</title>

   <para>
    Unter Windows gilt für die PHP-Versionen 5.3 und neuer, dass die
    <literal>mysqli</literal>-Erweiterung standardmäßig aktiviert ist, und den MySQL-Native-Treiber
    verwendet. Das bedeutet, dass Sie sich keine Gedanken über die Konfiguration
    des Zugriffs auf die <filename>libmysql.dll</filename> machen brauchen.
   </para>

  </section>

  <section xml:id="mysqli.installation.windows.php52">

   <title>PHP 5.0, 5.1, 5.2</title>

   <para>
    Unter diesen alten, nicht mehr unterstützten PHP-Versionen (die 
    Unterstützung von PHP 5.2 wurde am 6. Januar 2011 eingestellt),
    sind zusätzliche Konfigurationsschritte
    notwendig, um <literal>mysqli</literal> zu aktivieren und die
    Client-Bibliothek anzugeben, die verwendet werden soll.
   </para>

   <para>
    Die <literal>mysqli</literal>-Erweiterung ist standardmäßig
    nicht aktiviert, daher muss die
    <filename>php_mysqli.dll</filename>-DLL in der &php.ini; aktiviert werden.
    Um dies zu tun, müssen Sie die &php.ini;-Datei finden (typischerweise liegt
    diese unter <filename>c:\php</filename>) und überprüfen, dass das
    Kommentarzeichen (ein Semikolon) vom Anfang der Zeile
    <literal>extension=php_mysqli.dll</literal> in der Sektion
    <literal>[PHP_MYSQLI]</literal> entfernt wurde.
   </para>

   <para>
    Wenn Sie die MySQL-Client-Bibliothek mit <literal>mysqli</literal> verwenden
    wollen, stellen Sie sicher, dass PHP auf die Bibliothek zugreifen kann. Die
    MySQL-Client-Bibliothek ist in einer Datei namens
    <filename>libmysql.dll</filename> der PHP-Windowsdistribution enthalten. Um
    sie erfolgreich laden zu können, muss sie innerhalb des Pfades liegen, der
    von der Windows-Umgebungsvariablen <envar>PATH</envar> bestimmt wird. Lesen
    Sie dazu auch den FAQ-Eintrag "<link
    linkend="faq.installation.addtopath">Wie füge ich mein PHP-Verzeichnis der
    PATH-Variablen unter Windows hinzu?</link>", um mehr Informationen darüber zu
    erhalten. Das Kopieren <filename>libmysql.dll</filename> in das
    Windows-Systemverzeichnis (typischerweise
    <filename>c:\Windows\system</filename>) funktioniert ebenfalls, da das
    Systemverzeichnis standardmäßig im <envar>PATH</envar> enthalten ist.
    Allerdings raten wir von dieser Arbeitsweise stark ab.
   </para>

   <para>
    Wie bei der Aktivierung jeder anderen PHP-Extension (wie z.B.
    <filename>php_mysqli.dll</filename>) sollte auch hier die PHP-Direktive
    <link linkend="ini.extension-dir">extension_dir</link> auf das Verzeichnis
    zeigen, in dem die vorhandenen PHP-Extensions liegen. Lesen Sie dazu auch den
    Abschnitt <link linkend="install.windows.legacy.manual">Manual Windows Installation
    Instructions</link>. Ein entsprechender <literal>extension_dir</literal>-Wert
    für PHP 5 ist zum Beispiel <filename>c:\php\ext</filename>.
   </para>

   <note>
    <para>
     Wenn beim Starten des Webservers ein Fehler ähnlich dem folgenden auftritt:
     <literal>"Unable to load dynamic library './php_mysqli.dll'"</literal>,
     wird im Normalfall die <filename>php_mysqli.dll</filename> und/oder die
     <filename>libmysql.dll</filename> nicht vom System gefunden.
    </para>
   </note>

  </section>

 </section>

</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
