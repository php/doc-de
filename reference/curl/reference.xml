<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.18 Maintainer: jaenecke Status: ready -->
 <reference xml:id="ref.curl" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>cURL, Client URL Bibliothek-Funktionen</title>
  <titleabbrev>cURL</titleabbrev>
  <partintro>
   <section xml:id="curl.intro">
    &reftitle.intro;
    <para>
     PHP unterstützt libcurl, eine Bibiothek entwickelt von Daniel Stenberg, 
     die es erlaubt sich mit Servern zu verbinden und über diverse 
     Protokolle zu kommunizieren.
     Libcurl unterstützt zur Zeit folgende Protokolle:
     http, https, ftp, gopher, telnet, dict, file und ldap.
     Libcurl unterstützt des weiteren HTTPS Zertifikate, HTTP
     POST, HTTP PUT, und das hochladen von Dateien unter Benutzung des 
     FTP Protokolls (ist auch unter Nuztung der FTP Erweiterung 
     PHPs' möglich), HTTP Fomular basierende Uploads, Proxies, Cookies, 
     und Benutzer/Passwort Authentifikation.
    </para>
    <para>
     Diese Funktionen wurden in PHP 4.0.2 hinzugefügt.
    </para>
   </section>
   
   <section xml:id="curl.requirements">
    &reftitle.required;
    <para>
     Um cURL Functionen nutzen zu können, muss man das <link 
  xlink:href="&url.curl;">cURL</link> Packet installieren.
     PHP fordert cURL 7.0.2-beta oder neuer. 
     PHP wird nicht mir einer Version älter als 7.0.2-beta laufen
     In PHP 4.2.3, wird cURL in der Version 7.9.0 oder höher vorausgesetzt.  
     Bei PHP 4.3.0, wird die cURL Version 7.9.8 oder höher gebraucht.
     PHP 5.0.0 wird wahrscheinlich eine cURL Version neuer als 7.10.5
     voraussetzen.
    </para>
   </section>
   
   &reference.curl.configure;
   
   <section xml:id="curl.resources">
    &reftitle.resources;
    <para>
     Diese Erweiterung definiert zwei Resource-Typen, ein cUrl-Handle und
     ein cUrl-Multi-Handle.
    </para>
   </section>
   
   <section>
    &reftitle.constants;
    <para>
     Siehe auch <link linkend="curl.constants">Vordefinierte Konstanten</link>
    </para>
   </section>
   
   <section xml:id="curl.examples">
    &reftitle.examples;
    <para>
     Wenn PHP mit cURL-Unterstützung kompiliert und installiert ist, 
     kann mit der Benutzung der cURL-Funktionen begonnen werden.
     Die Idee die hinter den Funktionen steckt, ist dass man mit Hilfe 
     von <function>curl_init</function> eine cURL-Session initialisiert,
     alle für den Transfer nötigen Optionen unter Verwendung von
     <function>curl_setopt</function> setzt und dann die Session mittels
     <function>curl_exec</function> ausführt, um dann schließlich
     <function>curl_close</function> zur Beendigung der Session zu nutzen. 
    </para>
    <para>     
     Folgendes Beispiel nutzt die cURL-Functionen, um die Homepage von
     example.com in eine Datei zu speichern:
     <example>
      <title>Nutzung von PHP's cURL-Modul, um die Homepage von example.com herunterzuladen</title>
      <programlisting role="php">
<![CDATA[
<?php

//Die Session initialisieren
$ch = curl_init("http://www.example.com/");
$fp = fopen("example_homepage.txt", "w");

//Session Optionen setzen
curl_setopt($ch, CURLOPT_FILE, $fp);
curl_setopt($ch, CURLOPT_HEADER, 0);

//Ausführen der Aktionen
curl_exec($ch);

//Session beenden
curl_close($ch);
fclose($fp);
?>
]]>
      </programlisting>
     </example>
    </para>
   </section>
   
  </partintro>

&reference.curl.constants;
   
&reference.curl.entities.functions;

 </reference>
 
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
