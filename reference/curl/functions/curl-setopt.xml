<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 52dbbb3856a16174bfd0a96e6df8c52f236397eb Maintainer: jaenecke Status: ready -->
<refentry xml:id="function.curl-setopt" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>curl_setopt</refname>
  <refpurpose>Setzt eine Option für einen cURL-Transfer</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>bool</type><methodname>curl_setopt</methodname>
   <methodparam><type>CurlHandle</type><parameter>handle</parameter></methodparam>
   <methodparam><type>int</type><parameter>option</parameter></methodparam>
   <methodparam><type>mixed</type><parameter>value</parameter></methodparam>
  </methodsynopsis>
  <para>
   Setzt eine Option für das angegeben cURL-Handle.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    &curl.ch.description;
    <varlistentry>
     <term><parameter>option</parameter></term>
     <listitem>
      <para>
       Die zu setzende <literal>CURLOPT_XXX</literal>-Option
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>value</parameter></term>
     <listitem>
      <para>
       Der Wert, der für <parameter>option</parameter> gesetzt werden soll.
      </para>
      <para>
       <parameter>value</parameter> sollte für die folgenden Werte des
       Parameters <parameter>option</parameter> vom Typ <type>bool</type>
       sein:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry valign="top">Option</entry>
           <entry valign="top">Wert für <parameter>value</parameter></entry>
           <entry valign="top">Anmerkungen</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_AUTOREFERER</constant></entry>
           <entry valign="top">
            &true;, um automatisch den <literal>Referer:</literal> in Anfragen
            zu setzen, die einer Weiterleitung per
            <literal>Location:</literal> folgen
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIESESSION</constant></entry>
           <entry valign="top">
            &true;, um diesen Request als neue "Cookie Session" zu behandeln. Somit
            wird libcurl alle cookies die geladen werden sollen ignorieren, sofern
            es sich um "Session Cookies" einer vorherigen Session handelt.
            Standardmässig lädt und speichert libcurl alle cookies, unabhängig davon,
            ob es "Session Cookies" sind. Bei "Session Cookies" handelt es sich um
            Cookies ohne Ablaufdatum, die nur für die aktuelle Session gültig sind.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CERTINFO</constant></entry>
           <entry valign="top">
            &true;, um die SSL Zertifikatsinformation bei sicheren Übertragungen
            auf <literal>STDERR</literal> auszugeben.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.19.1.
            Erfordert, dass <constant>CURLOPT_VERBOSE</constant> gesetzt ist,
            um eine Wirkung zu haben.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CONNECT_ONLY</constant></entry>
           <entry valign="top">
            &true; weist die Bibliothek an, die gesamte erforderlichen
            Proxy-Authentifizierung und den Verbindungsaufbau durchzuführen,
            aber keine Datenübertragung. Diese Option ist für HTTP, SMTP und
            POP3 implementiert.
           </entry>
           <entry valign="top">
            Hinzugefügt in 7.15.2.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CRLF</constant></entry>
           <entry valign="top">
            &true;, um Unix-Zeilenumbrüche beim Transfer in CRLF-Zeilenumbrüche
            umzuwandeln.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DISALLOW_USERNAME_IN_URL</constant></entry>
           <entry valign="top">
            &true;, um URLs, die einen Benutzernamen enthalten, zu verbieten. Benutzernamen sind per Voreinstellung erlaubt (0).
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.61.0. Verfügbar seit PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_SHUFFLE_ADDRESSES</constant></entry>
           <entry valign="top">
            &true;, um die Reihenfolge aller zurückgegeber Adressen zu mischen, so dass sie in
            zufälliger Reihenfolge verwendet werden, wenn ein Name aufgelöst wird, und mehr als
            eine IP-Adresse zurückgegeben wurde. Dies kann bewirken, dass IPv4 vor IPv6 verwendet
            wird, oder umgekehrt.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.60.0. Verfügbar seit PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HAPROXYPROTOCOL</constant></entry>
           <entry valign="top">
            &true;, um einen HAProxy PROXY-Protokoll v1 Header zu Beginn der Verbindung zu senden.
            Standardmäßig wird dieser Header nicht gesendet.
           </entry>
           <entry valign="top">
            Hinzugefügt in 7.60.0. Verfügbar seit PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_COMPRESSION</constant></entry>
           <entry valign="top">
            &true;, um die eingebaute SSH-Komprimierung zu aktivieren. Dies ist eine Anfrage,
            kein Befehl; der Server kann diese ignorieren.
           </entry>
           <entry valign="top">
            Hinzugefügt in 7.56.0. Verfügbar seit PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_USE_GLOBAL_CACHE</constant></entry>
           <entry valign="top">
            &true;, um den globalen DNS-Cache zu nutzen. Diese Option ist nicht
            thread-safe.
            Sie ist standardmäßig aktiviert, wenn PHP für Singlethread-Verwendung kompiliert wurde
            (CLI, FCGI, Apache2-Prefork, etc.)
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FAILONERROR</constant></entry>
           <entry valign="top">
            &true;, um PHP anzuweisen, bei Fehlern (HTTP-Code ist größer oder
            gleich 400) eine ausführliche Fehlermeldung zu liefern.
            Das Standardverhalten ist, die Seite normal zurückzugeben und den Code zu ignorieren.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_FALSESTART</constant></entry>
           <entry valign="top">
            &true;, um TLS-False-Start zu aktivieren.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.42.0. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FILETIME</constant></entry>
           <entry valign="top">
            &true;, um zu versuchen, das Änderungsdatum des serverseitigen Dokuments
            zu ermitteln. Der Wert kann über die Funktion
            <function>curl_getinfo</function> unter Verwendung des Parameters
            <constant>CURLINFO_FILETIME</constant> ermittelt werden.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FOLLOWLOCATION</constant></entry>
           <entry valign="top">
            &true;, um jedem <literal>"Location: "</literal>-Header zu folgen,
            den der Server als Teil der HTTP-Header zurückgibt. Siehe auch
            <constant>CURLOPT_MAXREDIRS</constant>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FORBID_REUSE</constant></entry>
           <entry valign="top">
            &true;, um die Verbindung nach der Verarbeitung explizit zu schließen,
            so daß sie nicht wiederverwendet werden kann.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FRESH_CONNECT</constant></entry>
           <entry valign="top">
            &true;, um den expliziten Aufbau einer neuen Verbindung zu erzwingen,
            anstatt auf eine gecachte zurückzugreifen.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_USE_EPRT</constant></entry>
           <entry valign="top">
            &true;, um EPRT (und LPRT) für aktive FTP-Downloads zu nutzen. Auf
            &false; setzen, um EPRT und LPRT zu deaktivieren und ausschließlich
            PORT zu nutzen.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_USE_EPSV</constant></entry>
           <entry valign="top">
            &true;, um vor dem Fallback auf PASV zunächst eine EPSV-Anweisung
            für einen FTP-Transfer auszuführen. Auf &false; setzen, um EPSV
            zu deaktivieren.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_CREATE_MISSING_DIRS</constant></entry>
           <entry valign="top">
            &true;, um fehlende Verzeichnisse zu erzeugen, wenn eine FTP-Operation
            auf einen Pfad stößt, der zurzeit nicht existiert.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPAPPEND</constant></entry>
           <entry valign="top">
            &true;, um Daten an die serverseitige Datei anzuhängen anstatt diese
            zu überschreiben.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TCP_NODELAY</constant></entry>
           <entry valign="top">
            &true;, um den Nagle-Algorithmus von TCP zu deaktivieren, der
            verucht, die Anzahl kleiner Pakete im Netzwerk zu reduzieren.
           </entry>
           <entry valign="top">
            Verfügbar für Versionen, die mit libcurl 7.11.2 oder höher
            kompiliert wurden.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPASCII</constant></entry>
           <entry valign="top">
            Ein Alias für <constant>CURLOPT_TRANSFERTEXT</constant>, das bevorzugt
            werden sollte.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPLISTONLY</constant></entry>
           <entry valign="top">
            &true;, um nur die Namen in einem FTP-Verzeichnis aufzulisten.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HEADER</constant></entry>
           <entry valign="top">
            &true;, um den Header in die Ausgabe aufzunehmen.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry><constant>CURLINFO_HEADER_OUT</constant></entry>
           <entry valign="top">
            &true;, um den Request-String des Handles zu verfolgen.
           </entry>
           <entry valign="top">
            Das Prefix <constant>CURLINFO_</constant> ist beabsichtigt.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTP09_ALLOWED </constant></entry>
           <entry valign="top">
            Ob HTTP/0.9 Antworten erlaubt sind. Der Standardwert ist von libcurl 7.66.0 an &false;;
            zuvor war er &true;.
           </entry>
           <entry valign="top">
            Verfügbar seit PHP 7.3.15 bzw. 7.4.3, wenn mit libcurl &gt;= 7.64.0 kompiliert
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPGET</constant></entry>
           <entry valign="top">
            &true;, um die HTTP-Request-Methode auf GET zu setzen. Da dies die
            Standard-Methode ist sollte dies nur nach einem Wechsel der
            Request-Methode notwendig sein.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPPROXYTUNNEL</constant></entry>
           <entry valign="top">
            &true;, um einen vorhandenen Proxy-Tunnel zu nutzen
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTP_CONTENT_DECODING</constant></entry>
           <entry valign="top">
            &false;, um den Original-HTTP-Response-Body zu erhalten.
           </entry>
           <entry valign="top">
            Verfügbar von PHP 5.5.0 an, wenn mit libcurl &gt;= 7.16.2 kompiliert.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_KEEP_SENDING_ON_ERROR</constant></entry>
           <entry valign="top">
            &true;, um den Anfragerumpf weiterhin zu senden, wenn der zurückgegebene HTTP-Code
            gleich oder größer als 300 ist. Standardmäßig würde das Senden beendet, und der Stream
            oder die Verbindung geschlossen. Zweckmäßig für manuelle NTML-Authentifizierung.
            Die meisten Anwendungen benötigen diese Option nicht.
           </entry>
           <entry valign="top">
            Verfügbar von PHP 7.3.0 an, wenn mit libcurl &gt;= 7.51.0 kompiliert.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MUTE</constant></entry>
           <entry valign="top">
            &true;, um jegliche Ausgabe der cURL-Funktionen zu unterbinden
           </entry>
           <entry valign="top">
            Entfernt in cURL 7.15.5 (statt dessen kann CURLOPT_RETURNTRANSFER verwendet werden)
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NETRC</constant></entry>
           <entry valign="top">
            &true;, um die lokale Datei <filename>~/.netrc</filename> nach
            Benutzername/Passwort für die Authorisierung des Zugriffs zu
            durchsuchen.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NOBODY</constant></entry>
           <entry valign="top">
            &true;, um den Body nicht in die Ausgabe aufzunehmen.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NOPROGRESS</constant></entry>
           <entry valign="top"><para>
            &true;, um die Fortschrittsanzeige für den Transfer auszublenden.
            <note>
             <para>
              PHP setzt die Option automatisch auf &true;. Dies sollte
              ausschließlich für die Fehlersuche geändert werden.
             </para>
            </note>
           </para></entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_NOSIGNAL</constant></entry>
           <entry valign="top">
            &true;, um jegliche cURL-Funktion zu ignorieren, die ein Signal an den
            PHP-Prozess sendet. In multi-threaded SAPIs ist diese Option standardmässig aktiviert,
            so daß Timeouts weiterhin abgefangen werden können.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.10 und PHP 5.0.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PATH_AS_IS</constant></entry>
           <entry valign="top">
            &true;, um Dot-Dot-Sequenzen nicht aufzulösen.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.42.0. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PIPEWAIT</constant></entry>
           <entry valign="top">
            &true;, um auf Pipelining/Multiplexing zu warten.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.43.0. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POST</constant></entry>
           <entry valign="top">
            &true;, um einen HTTP-POST-Request abzusetzen. Dabei handelt es sich um
            das übliche <literal>application/x-www-form-urlencoded</literal>, wie
            es im Allgemeinen von HTML-Formularen erzeugt wird.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PUT</constant></entry>
           <entry valign="top">
            &true;, um ein HTTP-PUT für eine Datei abzusetzen. Die fragliche Datei
            muss dabei über die Konstanten <constant>CURLOPT_INFILE</constant> und
            <constant>CURLOPT_INFILESIZE</constant> gesetzt werden.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RETURNTRANSFER</constant></entry>
           <entry valign="top">
            &true;, um den Transfer als String zurückzuliefern, anstatt ihn
            direkt auszugeben.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SASL_IR</constant></entry>
           <entry valign="top">
            &true;, um die Übertragung der ursprünglichen Response im ersten
            Paket zu aktivieren.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.31.10. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_ENABLE_ALPN</constant></entry>
           <entry valign="top">
            &false;, um ALPN im SSL-Handshake zu deaktivieren (wenn das
            SSL-Backend libcurl mit entsprechender Unterstüzung kompiliert
            wurde), was genutzt werden kann, um HTTP2 auszuhandeln.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.36.0. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_ENABLE_NPN</constant></entry>
           <entry valign="top">
            &false;, um NPN im SSL-Handshake zu deaktivieren (wenn das
            SSL-Backend libcurl mit entsprechender Unterstüzung kompiliert
            wurde), was genutzt werden kann, um HTTP2 auszuhandeln.
           </entry>
           <entry valign="top">
            Added in cURL 7.36.0. Available since PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_VERIFYPEER</constant></entry>
           <entry valign="top">
            &false;, um die Überprüfung des Peerzertifikats seitens cURL zu
            unterdrücken.
            Alternative Zertifikate zur Überprüfung können mit der
            Option <constant>CURLOPT_CAINFO</constant> angegeben werden oder ein
            Zertifikat-Verzeichnis kann mit <constant>CURLOPT_CAPATH</constant>
            ausgewiesen werden.
           </entry>
           <entry valign="top">
            &true; als Standard seit cURL 7.10.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_VERIFYSTATUS</constant></entry>
           <entry valign="top">
            &true;, um den Zertifikatsstatus zu überprüfen.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.41.0. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSL_VERIFYPEER</constant></entry>
           <entry valign="top">
            &false;, um cURL zu veranlassen, das Peer-Zertifikat nicht zu prüfen. Alternative
            Zertifikate zur Prüfung können mit der <constant>CURLOPT_CAINFO</constant> Option,
            ein Zertifikatsverzeichnis mit der <constant>CURLOPT_CAPATH</constant> Option
            angegeben werden. Wenn auf false gesetzt, wird die Peer-Zertifikatsprüfung immer
            gelingen.
           </entry>
           <entry valign="top">
            &true; by default. Hinzugefügt in PHP 7.3.0 and libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SAFE_UPLOAD</constant></entry>
           <entry valign="top">
            Immer &true;, was die Unterstützung für das Präfix
            <literal>@</literal> für das Hochladen von Dateien in
            <constant>CURLOPT_POSTFIELDS</constant> deaktiviert. Das bedeutet,
            dass Werte, die mit <literal>@</literal> beginnen, sicher als
            Felder übergeben werden können. Für das Hochladen kann stattdessen
            <classname>CURLFile</classname> verwendet werden.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SUPPRESS_CONNECT_HEADERS</constant></entry>
           <entry valign="top">
            &true;, um Proxy CONNECT Antwortheader in den Benutzercallback-Funktionen
            <constant>CURLOPT_HEADERFUNCTION</constant> und
            <constant>CURLOPT_WRITEFUNCTION</constant> zu unterdrücken, wenn
            <constant>CURLOPT_HTTPPROXYTUNNEL</constant> verwendet wird, und ein
            CONNECT-Request durchgeführt wird.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.54.0. Verfügbar seit PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TCP_FASTOPEN</constant></entry>
           <entry valign="top">
            &true;, um TCP-Fast-Open zu aktivieren.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.49.0. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TFTP_NO_OPTIONS</constant></entry>
           <entry valign="top">
            &true;, um keine TFTP-Optionen zu senden.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.48.0. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TRANSFERTEXT</constant></entry>
           <entry valign="top">
            &true;, um FTP-Transfers im ASCII-Modus durchzuführen.
            Für LDAP werden Daten in Klartext statt HTML übertragen. Unter Windows
            wird <literal>STDOUT</literal> nicht in den binären Modus gesetzt.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_UNRESTRICTED_AUTH</constant></entry>
           <entry valign="top">
            &true;, um beim Folgen eines <literal>Location: </literal>-Headers
            (siehe <constant>CURLOPT_FOLLOWLOCATION</constant>) weiterhin
            Benutzername und Passwort zu senden, sogar nach einem Wechsel des
            Hostnamens.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_UPLOAD</constant></entry>
           <entry valign="top">
            &true;, um einen Upload vorzubereiten
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_VERBOSE</constant></entry>
           <entry valign="top">
            &true;, um ausführliche Informationen auszugeben, entweder nach
            <literal>STDERR</literal> oder in die mittels der
            Option <constant>CURLOPT_STDERR</constant> gewählte Datei.
           </entry>
           <entry valign="top">
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       Für die folgenden <parameter>option</parameter>-Parameter sollte
       <parameter>value</parameter> vom Typ <type>int</type> sein:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Option</entry>
           <entry>Wert für <parameter>value</parameter></entry>
           <entry>Anmerkungen</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_BUFFERSIZE</constant></entry>
           <entry valign="top">
            Die für jede Leseoperation zulässige Buffergröße. Es ist nicht
            garantiert, daß diese Einstellung genutzt wird.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.10.
           </entry>
          </row>
          <row>
           <entry><constant>CURLOPT_CONNECTTIMEOUT</constant></entry>
           <entry valign="top">
            Die Anzahl Sekunden, die der Verbindungsaufbau maximal dauern darf; 0
            hebt die Begrenzung auf.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CONNECTTIMEOUT_MS</constant></entry>
           <entry valign="top">
            Die Anzahl Millisekunden, die der Verbindungsaufbau maximal dauern darf; 0
            hebt die Begrenzung auf.
            <!-- http://curl.haxx.se/libcurl/c/curl_easy_setopt.html -->
            Wenn libcurl so kompiliert wurde, dass die standard System-Namensauflösung
            verwendet wird, wird dieser Teil der Verbindung dennoch die volle
            Sekunden-Auflösung für Timeouts mit einem minimalen Timeout von einer
            Sekunde verwenden.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.16.2.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_CACHE_TIMEOUT</constant></entry>
           <entry valign="top">
            Die Dauer in Sekunden, die ein DNS-Eintrag im Speicher gehalten wird.
            Der Standard sind 120 Sekunden (2 Minuten).
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_EXPECT_100_TIMEOUT_MS</constant></entry>
           <entry valign="top">
            Der Expect-Timeout: 100-continue Antworten in Millisekunden.
            Standardwert sind 1000 Millisekunden.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.36.0. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS</constant></entry>
           <entry valign="top">
            Vorsprung für IPv6 für den Happy-Eyeballs-Algorithmus. Happy-Eyeballs versucht
            für Dual-Stack-Hosts sowohl zu IPv4- als auch IPv6-Adressen zu verbinden,
            wobei IPv6 für die angegebe Dauer in Millisekunden bevorzugt wird.
            Die Voreinstellung ist CURL_HET_DEFAULT, die zurzeit 200 Millisekunden beträgt.
           </entry>
           <entry valign="top">
            Hinzugefügt in 7.59.0. Verfügbar seit PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPSSLAUTH</constant></entry>
           <entry valign="top">
            Die FTP-Authentisierungsmethode (wenn aktiviert):
            <literal>CURLFTPAUTH_SSL</literal> (versuche zunächst SSL),
            <literal>CURLFTPAUTH_TLS</literal> (versuche zunächst TLS),
            oder
            <literal>CURLFTPAUTH_DEFAULT</literal> (lass cURL entscheiden).
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.12.2 und PHP 5.1.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HEADEROPT</constant></entry>
           <entry valign="top">
            Wie mit Headern umzugehen ist. Eine der folgenden Konstanten:
            <simpara>
             <constant>CURLHEADER_UNIFIED</constant>: die Header, die in
             <constant>CURLOPT_HTTPHEADER</constant> angegeben wurden, werden in
             Requests sowohl an Server wie auch Proxies verwendet. Ist diese
             Option aktiviert, hat <constant>CURLOPT_PROXYHEADER</constant>
             keinerlei Wirkung.
            </simpara>
            <simpara>
             <constant>CURLHEADER_SEPARATE</constant>: sendet
             <constant>CURLOPT_HTTPHEADER</constant> Header nur an einen Server,
             aber nicht an einen Proxy. Proxy-Header müssen mit
             <constant>CURLOPT_PROXYHEADER</constant> gesetzt werden, damit sie
             verwendet werden. Es ist zu beachten, dass bei einem
             non-CONNECT-Request, der an einen Proxy gesendet wird, libcurl
             sowohl die Server- als auch die Proxy-Header sendet. Bei einem
             CONNECT sendet libcurl <constant>CURLOPT_PROXYHEADER</constant>
             Header nur an den Proxy, und
             <constant>CURLOPT_HTTPHEADER</constant> Header nur an den Server.
            </simpara>
            <simpara>
             Standardwert ist <constant>CURLHEADER_SEPARATE</constant> von cURL
             7.42.1 an, und <constant>CURLHEADER_UNIFIED</constant> zuvor.
            </simpara>
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.37.0. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTP_VERSION</constant></entry>
           <entry valign="top">
            <constant>CURL_HTTP_VERSION_NONE</constant> (Standard, lässt cURL
            entscheiden, welche Version genutzt werden soll),
            <constant>CURL_HTTP_VERSION_1_0</constant> (nutze HTTP/1.0),
            <constant>CURL_HTTP_VERSION_1_1</constant> (nutze HTTP/1.1),
            <constant>CURL_HTTP_VERSION_2_0</constant> (versucht HTTP 2),
            <constant>CURL_HTTP_VERSION_2 </constant> (Alias von <constant>CURL_HTTP_VERSION_2_0</constant>),
            <constant>CURL_HTTP_VERSION_2TLS</constant> (versucht HTTP 2 nur über TLS (HTTPS)) oder
            <constant>CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE</constant> (stellt nicht-TLS HTTP Anfragen unter Verwendung von HTTP/2 ohne HTTP/1.1 Upgrade).
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPAUTH</constant></entry>
           <entry valign="top">
            <para>
             Die zu nutzende HTTP-Authentisierungsmethode; zur Verfügung stehen:
             <constant>CURLAUTH_BASIC</constant>,
             <constant>CURLAUTH_DIGEST</constant>,
             <constant>CURLAUTH_GSSNEGOTIATE</constant>,
             <constant>CURLAUTH_NTLM</constant>,
             <constant>CURLAUTH_ANY</constant>, und
             <constant>CURLAUTH_ANYSAFE</constant>.
            </para>
            <para>
             Um mehrere Methoden zu kombinieren kann der
             Bit-<literal>|</literal>(oder)-Operator verwendet werden; in diesem
             Fall wird cURL in Abstimmung mit dem Server die günstigste Methode
             auswählen.
            </para>
            <para>
             <constant>CURLAUTH_ANY</constant> ist ein Alias für
             <literal>CURLAUTH_BASIC | CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM</literal>.
            </para>
            <para>
             <constant>CURLAUTH_ANYSAFE</constant> ist ein Alias für
             <literal>CURLAUTH_DIGEST | CURLAUTH_GSSNEGOTIATE | CURLAUTH_NTLM</literal>.
            </para>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_INFILESIZE</constant></entry>
           <entry valign="top">
            Die erwartete Dateigröße der hochzuladenden Datei in Bytes. Beachten
            Sie, dass die Verwendung dieser Option libcurl nicht daran hindern wird
            mehr Daten zu senden, da was genau gesendet wird von
            <constant>CURLOPT_READFUNCTION</constant> abhängt.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_LOW_SPEED_LIMIT</constant></entry>
           <entry valign="top">
            Die Transfergeschwindigkeit in Bytes pro Sekunde, die bei
            Unterschreitung in Kombination mit der Überschreitung von
            <constant>CURLOPT_LOW_SPEED_TIME</constant> Sekunden bewirkt, dass der
            Transfer aufgrund der zu niedrigen Transferrate abgebrochen wird.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_LOW_SPEED_TIME</constant></entry>
           <entry valign="top">
            Die Zeit in Sekunden, in der die Transferrate unter
            <constant>CURLOPT_LOW_SPEED_LIMIT</constant> geduldet wird. Nach
            dieser Zeit wird die Transferrate als zu langsam angesehen und der
            Transfer wird beendet.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAXCONNECTS</constant></entry>
           <entry valign="top">
            Die maximal erlaubte Anzahl persistenter Verbindungen; bei Erreichen
            des Limits wird die älteste Verbindung im Cache geschlossen, um zu
            verhindern, dass sich die Anzahl der offenen Verbindungen erhöht.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAXREDIRS</constant></entry>
           <entry valign="top">
            Die maximal erlaubte Anzahl von HTTP-Weiterleitungen. Verwenden Sie
            diese Option zusammen mit <constant>CURLOPT_FOLLOWLOCATION</constant>.
            Der Standardwert von <literal>20</literal> wird gesetzt, um
            Endlos-Weiterleitungen zu verhindern. Der Wert
            <literal>-1</literal> erlaubt unendlich viele Weiterleitungen, und
            <literal>0</literal> verhindert jegliche Weiterleitung.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PORT</constant></entry>
           <entry valign="top">
            Erlaubt das Setzen eines alternativen Ports für die Verbindung.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POSTREDIR</constant></entry>
           <entry valign="top">
            Eine Bitmaske von 1 (301 Moved Permanently), 2 (302 Found) und
            4 (303 See Other), ob die HTTP POST Methode beibehalten werden soll,
            wenn <constant>CURLOPT_FOLLOWLOCATION</constant> gesetzt ist, und ein
            sepzifischer Typ von Weiterleitung auftritt.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.19.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROTOCOLS</constant></entry>
           <entry valign="top">
            <para>
             Eine Bitmaske von <constant>CURLPROTO_*</constant>-Werten. Mit dieser
             Einstellung lassen sich die Protokolle einschränken die libcurl für
             diesen Transfer nutzen darf.
             Damit wird es möglich ein libcurl mit einer Vielzahl an Protokollen
             zu benutzen, gleichzeitig aber lassen sich die für einen bestimmten
             Transfer zulässigen Protokolle beschränken. Standardmässig akzeptiert
             libcurl alle unterstützten Protokolle.
             Siehe auch <constant>CURLOPT_REDIR_PROTOCOLS</constant>.
            </para>
            <para>
             Zulässige Optionen:
             <constant>CURLPROTO_HTTP</constant>,
             <constant>CURLPROTO_HTTPS</constant>,
             <constant>CURLPROTO_FTP</constant>,
             <constant>CURLPROTO_FTPS</constant>,
             <constant>CURLPROTO_SCP</constant>,
             <constant>CURLPROTO_SFTP</constant>,
             <constant>CURLPROTO_TELNET</constant>,
             <constant>CURLPROTO_LDAP</constant>,
             <constant>CURLPROTO_LDAPS</constant>,
             <constant>CURLPROTO_DICT</constant>,
             <constant>CURLPROTO_FILE</constant>,
             <constant>CURLPROTO_TFTP</constant>,
             <constant>CURLPROTO_ALL</constant>
            </para>
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.19.4.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYAUTH</constant></entry>
           <entry valign="top">
            Die HTTP-Authentisierungsmethode(n) für die Proxy-Verbindung. Nutzt
            die gleiche Bitmaske wie in <constant>CURLOPT_HTTPAUTH</constant>
            beschrieben. Nur <constant>CURLAUTH_BASIC</constant> und
            <constant>CURLAUTH_NTLM</constant> sind momentan für
            Proxy-Verbindungen zulässig.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.10.7 und PHP 5.1.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYPORT</constant></entry>
           <entry valign="top">
            Der Port, auf den die Proxy-Verbindung erfolgen soll; kann auch mittels
            <constant>CURLOPT_PROXY</constant> gesetzt werden.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYTYPE</constant></entry>
           <entry valign="top">
            Entweder <constant>CURLPROXY_HTTP</constant> (Standard),
            <constant>CURLPROXY_SOCKS4</constant>,
            <constant>CURLPROXY_SOCKS5</constant>,
            <constant>CURLPROXY_SOCKS4A</constant> oder
            <constant>CURLPROXY_SOCKS5_HOSTNAME</constant>.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.10.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_REDIR_PROTOCOLS</constant></entry>
           <entry valign="top">
             Eine Bitmaske von <constant>CURLPROTO_*</constant>-Werten. Mit dieser
             Einstellung lassen sich die Protokolle einschränken die libcurl für
             diesen Transfer nutzen darf, wenn eine Weiterleitung stattfindet (setzt
             voraus daß <constant>CURLOPT_FOLLOWLOCATION</constant> erlaubt ist).
             Damit wird es möglich ein libcurl mit einer Vielzahl an Protokollen
             zu benutzen, gleichzeitig aber lassen sich die für eine Weiterleitung
             zulässigen Protokolle beschränken. Standardmässig akzeptiert
             libcurl alle unterstützten Protokolle außer FILE und SCP.
             Siehe auch <constant>CURLOPT_PROTOCOLS</constant> für weitere Informationen
             zu den Protokoll-Konstanten.
           </entry>
           <entry valign="top">
            Added in cURL 7.19.4.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RESUME_FROM</constant></entry>
           <entry valign="top">
            Die Position in Bytes ab der ein Transfer fortgesetzt werden soll.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SOCKS5_AUTH</constant></entry>
           <entry valign="top">
            <para>
             Die zu verwendende SOCK5-Authentifizierungsmethode. Die Optionen sind:
             <constant>CURLAUTH_BASIC</constant>,
             <constant>CURLAUTH_GSSAPI</constant>,
             <constant>CURLAUTH_NONE</constant>.
            </para>
            <para>
             Der bitweise <literal>|</literal> (oder) Operator kann verwendet werden, um
             mehr als eine Methode zu kombinieren. Wird dies getan, wird cURL den Server befragen,
             um zu sehen, welche Methoden unterstützt werden, und die beste zu wählen.
            </para>
            <para>
             <constant>CURLAUTH_BASIC</constant> erlaubt Benutzernamen/Passwort Authentifizierung.
            </para>
            <para>
             <constant>CURLAUTH_GSSAPI</constant> erlaubt GSS-API Authentifizierung.
            </para>
            <para>
             <constant>CURLAUTH_NONE</constant> erlaubt keine Authentifizierung.
            </para>
            <para>
             Voreinstellung ist <literal>CURLAUTH_BASIC|CURLAUTH_GSSAPI</literal>.
             Der eigentliche Benutzername und das Passwort werden mit der
             <constant>CURLOPT_PROXYUSERPWD</constant> Option gesetzt.
            </para>
           </entry>
           <entry valign="top">
            Verfügbar von PHP 7.3.0 mit curl &gt;= 7.55.0 an.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_OPTIONS</constant></entry>
           <entry valign="top">
            Setze SSL-Verhaltensoptionen, die eine Bitmaske von beliebigen der
            folgenden Konstanten ist:
            <simpara>
             <constant>CURLSSLOPT_ALLOW_BEAST</constant>: versuche keine
             Workarounds für Sicherheitsmängel in den SSL3 und TLS1.0
             Protokollen.
            </simpara>
            <simpara>
             <constant>CURLSSLOPT_NO_REVOKE</constant>: deaktiviere
             Zertifikatswiderrufsprüfungen für SSL-Backends, die dies
             unterstützen.
            </simpara>
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.25.0. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_VERIFYHOST</constant></entry>
           <entry valign="top">
            <literal>2</literal>, um zu überprüfen, ob ein Common Name-Feld oder ein Subject Alternate Name-Feld
            im SSL-Peer-Zertifikat mit dem angegebenen Hostnamen übereinstimmt.
            <literal>0</literal>, um die Namen nicht zu überprüfen.
            <literal>1</literal> sollte nicht verwendet werden.
            In Produktionsumgebungen sollte der Wert dieser Option
            auf <literal>2</literal> (Standardwert) belassen werden.
           </entry>
           <entry valign="top">
            Die Unterstützung für Wert <literal>1</literal> wurde in cURL 7.28.1 entfernt
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLVERSION</constant></entry>
           <entry valign="top">
            Entweder <constant>CURL_SSLVERSION_DEFAULT</constant> (0),
            <constant>CURL_SSLVERSION_TLSv1</constant> (1),
            <constant>CURL_SSLVERSION_SSLv2</constant> (2),
            <constant>CURL_SSLVERSION_SSLv3</constant> (3),
            <constant>CURL_SSLVERSION_TLSv1_0</constant> (4),
            <constant>CURL_SSLVERSION_TLSv1_1</constant> (5),
            <constant>CURL_SSLVERSION_TLSv1_2</constant> (6) oder
            <constant>CURL_SSLVERSION_TLSv1_3</constant> (7).
            Die maximale TLS-Version kann durch Verwendung einer der <constant>CURL_SSLVERSION_MAX_*</constant>
            Konstanten spezifiziert werden. Es ist ebenfalls möglich eine der <constant>CURL_SSLVERSION_*</constant>
            Konstanten mit einer der <constant>CURL_SSLVERSION_MAX_*</constant> Konstanten ODER zu verknüpfen.
            <constant>CURL_SSLVERSION_MAX_DEFAULT</constant> (die maximale Version, die von der Bibliothek unterstützt wird),
            <constant>CURL_SSLVERSION_MAX_TLSv1_0</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_1</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_2</constant>, oder
            <constant>CURL_SSLVERSION_MAX_TLSv1_3</constant>.
            <note>
             <para>
              Am besten ist es diese Option nicht zu setzen, und den Default zu verwenden.
              Die Werte 2 und 3 sind sehr gefährlich,
              angesichts der bekannten Sicherheitslücken in SSLv2 und SSLv3.
             </para>
            </note>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSL_OPTIONS</constant></entry>
           <entry valign="top">
            Setzt Proxy-SSL-Verhaltensoptionen, was eine Bitmaske der folgenden Konstanten ist:
            <simpara>
             <constant>CURLSSLOPT_ALLOW_BEAST</constant>: versuche nicht, irgendwelche Workarounds
             für einen Sicherheitsmangel in den SSL3 und TLS1.0 Protokollen zu nutzen.
            </simpara>
            <simpara>
             <constant>CURLSSLOPT_NO_REVOKE</constant>: deaktiviert Zertifikatswiderrufprüfungen
             für SSL-Backends, wo solches Verhalten vorhanden ist. (curl &gt;= 7.44.0)
            </simpara>
            <simpara>
             <constant>CURLSSLOPT_NO_PARTIALCHAIN</constant>: akzeptiert keine "partiellen"
             Zertifikatsketten, was andernfalls per Voreinstellung erfolgt. (curl &gt;= 7.68.0)
            </simpara>
           </entry>
           <entry valign="top">
            Verfügbar seit PHP 7.3.0 und libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSL_VERIFYHOST</constant></entry>
           <entry valign="top">
            <literal>2</literal> prüft Namensfelder im Zertifikat des HTTP-Proxies gegen den Proxy-Namen.
            Wenn auf <literal>0</literal> gesetzt, gelingt die Verbindung unabhängig von dem im Zertifikat
            verwendeten Namen. Diese Möglichkeit ist mit Vorsicht zu verwenden!
            <literal>1</literal> wird in curl 7.28.0 und früher als Debugoption behandelt.
            Von curl 7.28.1 bis 7.65.3 wird <constant>CURLE_BAD_FUNCTION_ARGUMENT</constant> zurückgegeben.
            Von curl 7.66.0 an wird <literal>1</literal> und <literal>2</literal> gleich behandelt.
            In Produktivumgebungen sollte der Wert dieser Option bei <literal>2</literal> belassen werden
            (Standardwert).
           </entry>
           <entry valign="top">
            Verfügbar seit PHP 7.3.0 und libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSLVERSION</constant></entry>
           <entry valign="top">
            Eines aus <constant>CURL_SSLVERSION_DEFAULT</constant>,
            <constant>CURL_SSLVERSION_TLSv1</constant>,
            <constant>CURL_SSLVERSION_TLSv1_0</constant>,
            <constant>CURL_SSLVERSION_TLSv1_1</constant>,
            <constant>CURL_SSLVERSION_TLSv1_2</constant>,
            <constant>CURL_SSLVERSION_TLSv1_3</constant>,
            <constant>CURL_SSLVERSION_MAX_DEFAULT</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_0</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_1</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_2</constant>,
            <constant>CURL_SSLVERSION_MAX_TLSv1_3</constant> oder
            <constant>CURL_SSLVERSION_SSLv3</constant>.
            <note>
             <para>
              Am besten ist es, dies nicht zu setzen und den Standardwert
              <constant>CURL_SSLVERSION_DEFAULT</constant> zu verwenden,
              der versucht, die Remote-SSL-Protokollversion herauszufinden.
             </para>
            </note>
           </entry>
           <entry valign="top">
            Verfügbar seit PHP 7.3.0 und libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_STREAM_WEIGHT</constant></entry>
           <entry valign="top">
            Setze die numerische Streamgewichtung (eine Zahl zwischen 1 und 256).
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.46.0. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TCP_KEEPALIVE</constant></entry>
           <entry valign="top">
            Wenn auf <literal>1</literal> gesetzt, werden TCP-Keepalive-Sonden gesendet. Die Verzögerung und
            Häufigkeit dieser Sonden kann mit den <constant>CURLOPT_TCP_KEEPIDLE</constant>
            und <constant>CURLOPT_TCP_KEEPINTVL</constant> Optionen festgelegt werden, falls das Betriebssystem
            diese unterstützt. Wenn auf <literal>0</literal> gesetzt (Voreinstellung), sind Keepalive-Sonden
            deaktiviert.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.25.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TCP_KEEPIDLE</constant></entry>
           <entry valign="top">
            Gibt die Verzögerung in Sekunden an, die das Betriebssystem im Fall, dass die Verbindung inaktiv ist,
            wartet bevor Keepalive-Sonden gesendet werden, wenn <constant>CURLOPT_TCP_KEEPALIVE</constant>
            aktiviert ist. Nicht alle Betriebssysteme unterstützen diese Option.
            Die Voreinstelung ist <literal>60</literal>.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.25.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TCP_KEEPINTVL</constant></entry>
           <entry valign="top">
            Gibt den Zeitraum in Sekunden an, den das Betriebssystem zwischen dem Senden von
            Keepalive-Sonden warten wird, wenn <constant>CURLOPT_TCP_KEEPALIVE</constant> aktiviert ist.
            Nicht alle Betriebssysteme unterstützen diese Option.
            Die Voreinstelung ist <literal>60</literal>.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.25.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMECONDITION</constant></entry>
           <entry valign="top">
            Dieser Wert gibt an, wie <constant>CURLOPT_TIMEVALUE</constant>
            behandelt werden soll. Mögliche Werte sind
            <constant>CURL_TIMECOND_IFMODSINCE</constant> (Standard) und
            <constant>CURL_TIMECOND_ISUNMODSINCE</constant>. Im ersten Fall
            wird geprüft, ob die Seite seit <constant>CURLOPT_TIMEVALUE</constant>
            geändert wurde; andernfalls wird ein <literal>"304 Not Modified"</literal>-Header
            zurückgegeben (vorausgesetzt <constant>CURLOPT_HEADER</constant> ist
            &true;). <constant>CURL_TIMECOND_ISUNMODSINCE</constant> bewirkt
            das gegenteilige Verhalten. Verwenden Sie <constant>CURL_TIMECOND_NONE</constant>, um <constant>CURLOPT_TIMEVALUE</constant> zu ignorieren und die Seite immer zurückzugeben.
            Die Standardeinstellung ist <constant>CURL_TIMECOND_NONE</constant>.
           </entry>
           <entry valign="top">
            Vor cURL 7.46.0 war die Standardeinstellung
            <constant>CURL_TIMECOND_IFMODSINCE</constant>.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEOUT</constant></entry>
           <entry valign="top">
            Die maximale Ausführungszeit in Sekunden für cURL-Funktionen.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEOUT_MS</constant></entry>
           <entry valign="top">
            Die maximale Ausführungszeit in Millisekunden für cURL-Funktionen.
            <!-- http://curl.haxx.se/libcurl/c/curl_easy_setopt.html -->
            Wenn libcurl so kompiliert wurde, dass die standard System-Namensauflösung
            verwendet wird, wird dieser Teil der Verbindung dennoch die volle
            Sekunden-Auflösung für Timeouts mit einem minimalen Timeout von einer
            Sekunde verwenden.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.16.2.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEVALUE</constant></entry>
           <entry valign="top">
            Zeit in Sekunden seit dem 1. Januar 1970. Dieser Wert wird von
            <constant>CURLOPT_TIMECONDITION</constant> genutzt.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TIMEVALUE_LARGE</constant></entry>
           <entry valign="top">
            Die Zeit in Sekunden seit dem 1. Januar 1970. Die Zeit wird von
            <constant>CURLOPT_TIMECONDITION</constant> verwendet. Der Standardwert ist Null.
            Der Unterschied zwischen dieser Option und <constant>CURLOPT_TIMEVALUE</constant>
            ist der Typ des Arguments. Auf Systemen, auf denen 'long' nur aus 32-Bit besteht,
            muss diese Option verwendet werden, um Daten jenseits des Jahrs 2038 zu setzen.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.59.0. Verfügbar seit PHP 7.3.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAX_RECV_SPEED_LARGE</constant></entry>
           <entry valign="top">
            Wenn ein Download diese Geschwindigkeit (gezählt in Bytes pro Sekunde)
            im Gesamtdurchschnitt während der Übertragung überschreitet,
            wird die Übertragung angehalten, um die durschnittliche Rate kleiner
            oder gleich dem Parameter-Wert zu halten. Voreinstellung ist
            unbegrenzte Geschwindigkeit.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.15.5.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_MAX_SEND_SPEED_LARGE</constant></entry>
           <entry valign="top">
            Wenn ein Upload diese Geschwindigkeit (gezählt in Bytes pro Sekunde)
            im Gesamtdurchschnitt während der Übertragung überschreitet,
            wird die Übertragung angehalten, um die durschnittliche Rate kleiner
            oder gleich dem Parameter-Wert zu halten. Voreinstellung ist
            unbegrenzte Geschwindigkeit.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.15.5.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_AUTH_TYPES</constant></entry>
           <entry valign="top">
            Eine Bitmaske bestehend aus einer oder mehreren von
            <constant>CURLSSH_AUTH_PUBLICKEY</constant>,
            <constant>CURLSSH_AUTH_PASSWORD</constant>,
            <constant>CURLSSH_AUTH_HOST</constant>,
            <constant>CURLSSH_AUTH_KEYBOARD</constant>.
            <constant>CURLSSH_AUTH_ANY</constant> lässt libcurl eine wählen.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.16.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_IPRESOLVE</constant></entry>
           <entry valign="top">
            Erlaubt einer Applikation auszuwählen, welche Art von IP Adressen
            verwendet werden, wenn Hostnamen aufgelöst werden. Dies ist nur interessant,
            wenn Hostnamen verwendet werden, die Adressen unter mehr als einer
            IP-Version auflösen; mögliche Werte sind
            <constant>CURL_IPRESOLVE_WHATEVER</constant>,
            <constant>CURL_IPRESOLVE_V4</constant>,
            <constant>CURL_IPRESOLVE_V6</constant>; Voreinstellung ist
            <constant>CURL_IPRESOLVE_WHATEVER</constant>.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.10.8.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTP_FILEMETHOD</constant></entry>
           <entry valign="top">
            Die zu verwendende Methode, um eine Datei auf einem FTP(S) Server zu
            erreichen. Mögliche Werte sind
            <constant>CURLFTPMETHOD_MULTICWD</constant>,
            <constant>CURLFTPMETHOD_NOCWD</constant> und
            <constant>CURLFTPMETHOD_SINGLECWD</constant>.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.15.1.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       Für die folgenden <parameter>option</parameter>-Parameter sollte
       <parameter>value</parameter> ein String sein:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Option</entry>
           <entry>Wert für <parameter>value</parameter></entry>
           <entry>Anmerkungen</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_ABSTRACT_UNIX_SOCKET</constant></entry>
           <entry valign="top">
            Aktiviert die Verwendung eines abstrakten Unix Domainsocket anstatt eine
            TCP-Verbindung zu einem Host aufzubauen, und setzt den Pfad auf den gegebenen
            <type>string</type>. Diese Option teilt sich die gleiche Bedeutung mit
            <constant>CURLOPT_UNIX_SOCKET_PATH</constant>. Diese beiden Optionen verwenden
            den selben Speicher, und daher kann nur eine pro Handle genutzt werden.
           </entry>
           <entry valign="top">
            Verfügbar seit PHP 7.3.0 und cURL 7.53.0
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CAINFO</constant></entry>
           <entry valign="top">
            Der Name einer Datei, die ein oder mehrere Zerifikate enthält, gegen
            die der Peer geprüft wird. Macht nur Sinn in Verbindung mit
            <constant>CURLOPT_SSL_VERIFYPEER</constant>.
           </entry>
           <entry valign="top">
            Erfodert möglicherweise einen absoluten Pfad.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CAPATH</constant></entry>
           <entry valign="top">
            Ein Verzeichnis, das mehrere CA-Zertifikate enthält. Diese Option
            sollte In Kombination mit <constant>CURLOPT_SSL_VERIFYPEER</constant>
            genutzt werden.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIE</constant></entry>
           <entry valign="top">
            Der Inhalt des im HTTP-Request zu setzenden
            <literal>"Cookie: "</literal>-Headers
            Beachten Sie daß mehrere Cookies durch ein Semikolon gefolgt von einem
            Leerzeichen getrennt werden (z. B. "<literal>fruit=apple; colour=red</literal>")
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIEFILE</constant></entry>
           <entry valign="top">
            Der Name einer Datei, die Cookiedaten enthält. Diese Datei kann im
            Netscape-Format sein oder HTTP-geformte Header enthalten.
            Wenn der Name eine leere Zeichenkette ist, werden keine Cookies geladen,
            aber die Cookie-Behandlung ist dennoch aktiviert.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIEJAR</constant></entry>
           <entry valign="top">
            Der Name einer Datei in der alle internen Cookies beim Schließen
            des Handles gespeichert werden, z. B. nach einem Aufruf von curl_close.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_COOKIELIST</constant></entry>
           <entry valign="top">
            Eine Cookie-Zeichenkette (d. h. eine einzelne Zeile im Netscape/Mozilla-Format, oder ein regulärer
            Set-Cookie-Header im HTTP-Stil), die dieses einzelne Cookie dem internen Cookie-Speicher hinzufügt.
            <literal>"ALL"</literal> löscht alle Cookies, die im Speicher vorgehalten werden.
            <literal>"SESS"</literal> löscht alle Sitzungscookies, die im Speicher vorgehalten werden.
            <literal>"FLUSH"</literal> schreibt alle bekannten Cookies in die durch <constant>CURLOPT_COOKIEJAR</constant> angegebene Datei.
            <literal>"RELOAD"</literal> lädt alle Cookies aus der durch <constant>CURLOPT_COOKIEFILE</constant> angegebenen Datei.
           </entry>
           <entry valign="top">
            Verfügbar seit cURL 7.14.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_CUSTOMREQUEST</constant></entry>
           <entry valign="top"><para>
            Eine benutzerdefinierte Request-Methode, die anstelle von
            <literal>GET</literal> oder <literal>HEAD</literal> für den
            HTTP-Request benutzt werden soll. Dies ist nützlich bei
            <literal>DELETE</literal> oder anderen unüblichen Requests. Zulässige
            Werte sind <literal>GET</literal>, <literal>POST</literal>,
            <literal>CONNECT</literal> etc. Vollständige HTTP-Requests wie
            <literal>GET /index.html HTTP/1.0\r\n\r\n</literal> sind unzulässig!
            <note>
             <para>
              Führen Sie diese Anfragen nicht durch ohne sicherzugehen, daß Ihr
              Server die betreffenden Kommandos unterstützt.
             </para>
            </note>
           </para></entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DEFAULT_PROTOCOL</constant></entry>
           <entry valign="top"><para>
            Das Standardprotokoll, das verwendet werden soll, wenn die URL kein
            Schema angibt.
           </para></entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.45.0. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_INTERFACE</constant></entry>
           <entry valign="top"><para>
            Setze den Namen der Netzwerkschnittstelle, an die sich der
            DNS-Resolver binden soll. Dies muss ein Schnittstellenname sein
            (keine Adresse).
            </para></entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.33.0. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_LOCAL_IP4</constant></entry>
           <entry valign="top"><para>
            Setze die lokale IPv4 Adresse, an die sich der Resolver binden soll.
            Das Argument sollte eine einzige numerische IPv4 Adresse als
            Zeichenkette enthalten.
            </para></entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.33.0. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_DNS_LOCAL_IP6</constant></entry>
           <entry valign="top"><para>
            Setze die lokale IPv6 Adresse, an die sich der Resolver binden soll.
            Das Argument sollte eine einzige numerische IPv6 Adresse als
            Zeichenkette enthalten.
            </para></entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.33.0. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_EGDSOCKET</constant></entry>
           <entry valign="top">
            Analog <constant>CURLOPT_RANDOM_FILE</constant>, hier wird der
            Dateiname eines Entropy Gathering Daemon Socket erwartet.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_ENCODING</constant></entry>
           <entry valign="top">
            Der Inhalt des <literal>"Accept-Encoding: "</literal>-Headers. Damit
            wird das Dekodieren der Serverantwort aktiviert. Unterstützte
            Kodierungen sind <literal>identity</literal>, <literal>deflate</literal>
            und <literal>gzip</literal>. Wird ein leerer String <literal>""</literal>
            gesetzt wird ein Header mit allen unterstützten Kodierungen gesetzt.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.10.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_FTPPORT</constant></entry>
           <entry valign="top">
            Ein String, der genutzt wird, um die IP-Adresse zu erlangen, die von
            der FTP-PORT-Anweisung genutzt wird.
            Die PORT-Anweisung teilt dem entfernten Server mit, zu der angegebenen
            IP-Adresse zu verbinden. Der String kann eine einfache IP-Addresse,
            ein Hostname, der Name eines Netzwerkinterfaces (unter Unix) oder nur
            '-' sein, um die vordefinierte IP-Addresse (des Systems) zu nutzen.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_INTERFACE</constant></entry>
           <entry valign="top">
            Der Name des zu nutzenden Netzwerkinterfaces für ausgehende Daten.
            Statt des Namens des Interfaces kann auch eine IP-Adresse oder ein
            Hostname übergeben werden.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_KEYPASSWD</constant></entry>
           <entry valign="top">
            Das erforderliche Passwort, um die privaten <constant>CURLOPT_SSLKEY</constant>
            oder <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant> Schlüssel zu verwenden.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.16.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_KRB4LEVEL</constant></entry>
           <entry valign="top">
            Die KRB4 (Kerberos 4) Sicherheitsstufe. Folgende Werte (von niedriger
            zu höherer Stufe) sind gültig: <literal>clear</literal>,
            <literal>safe</literal>, <literal>confidential</literal>,
            <literal>private</literal>.
            Sollte der String keinen dieser Werte enthalten dann wird die höchste
            Stufe genutzt, d. h. <literal>private</literal>. Sollte diese Option mit
            dem Wert &null; besetzt werden, wird KRB4 Security deaktiviert. Bislang
            wird KRB4 nur unter Verwendung des FTP unterstützt.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_LOGIN_OPTIONS</constant></entry>
           <entry valign="top">
            Kann verwendet werden, um Protokoll spezifische Anmeldeoptionen, wie
            den bevorzugten Authentifizierungsmechanismus per "AUTH=NUM" oder
            "AUTH=*", zu setzen, und sollte in Verbindung mit der
            <constant>CURLOPT_USERNAME</constant> Option verwendet werden.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.34.0. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PINNEDPUBLICKEY</constant></entry>
           <entry valign="top">
             Setze den pinned öffentlichen Schlüssel.
             Die Zeichenkette kann der Dateiname des pinned öffentlichen
             Schlüssels sein. Das erwartete Dateiformat ist "PEM" oder "DER".
             Die Zeichenkette kann ebenfalls eine beliebige Anzahl von base64
             kodierten SHA-256 Hashes sein, denen "sha256//" vorangestellt ist,
             und die durch ";" getrennt sind.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.39.0. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POSTFIELDS</constant></entry>
           <entry valign="top">
            <simpara>
             Die in einem HTTP-POST-Request zu nutzenden Daten.
             Als Wert für diesen Parameter kann entweder ein URL-kodierter String übergeben werden wie
             z. B. '<literal>para1=val1&amp;para2=val2&amp;...</literal>' oder ein
             Array, wobei die Feldnamen als Schlüssel und die Felddaten als Wert
             verwendet werden.
             Ist <parameter>value</parameter> ein Array, dann wird der
             <literal>Content-Type</literal>-Header auf <literal>multipart/form-data</literal>
             gesetzt.
            </simpara>
            <simpara>
             Dateien können mit <classname>CURLFile</classname> oder
             <classname>CURLStringFile</classname> gesendet werden. In diesem
             Fall muss <parameter>value</parameter> ein Array sein.
            </simpara>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PRIVATE</constant></entry>
           <entry valign="top">
            Beliebige Daten, die mit diesem cURL-Handle assoziert werden sollen.
            Diese Daten können in der Folge mit der
            <constant>CURLINFO_PRIVATE</constant> Option von
            <function>curl_getinfo</function> abgerufen werden. cURL tut sonst
            nichts mit diesen Daten. Bei cURL-Multi-Handles sind diese privaten
            Daten typischerweise ein eindeutiger Schlüssel, um ein
            Standard-cURL-Handle zu identifizieren.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.10.3.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PRE_PROXY</constant></entry>
           <entry valign="top">
            Ein <type>String</type>, der den Hostnamen oder die IP-Adresse in Dezimalpunktschreibweise
            des Preproxys enthält, zu dem sich curl für den bevorstehenden Request verbinden soll
            bevor es sich zum HTTP(S) Proxy verbindet, der mit der <constant>CURLOPT_PROXY</constant>
            Option angegeben wurde.
            Der Preproxy kann nur ein SOCKS-Proxy sein, und er sollte mit vorangestelltem
            <literal>[scheme]://</literal> angegeben werden, um anzugeben welche Art von socks verwendet wird.
            Eine numerische IPv6-Adresse muss in [eckigen Klammen] angegeben werden.
            Wird der Preproxy als leere Zeichenkette angegeben, deaktiviert dies ausdrücklich die Verwendung
            eines Preproxys.
            Um eine Portnummer in dieser Zeichenkette anzugeben, wird ein <literal>:[port]</literal>
            am Ende des Hostnamens angefügt. Die Portnummer des Proxys kann optinal mit der
            separaten Option <constant>CURLOPT_PROXYPORT</constant> angegeben werden.
            Per Voreinstellung wird Port 1080 für Proxys verwendet, wenn kein Port angegeben wurde.
           </entry>
           <entry valign="top">
            Verfügbar seit PHP 7.3.0 und libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY</constant></entry>
           <entry valign="top">
            Der HTTP-Proxy, durch den Requests getunnelt werden sollen.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SERVICE_NAME</constant></entry>
           <entry valign="top">
            Der Name des Proxy-Authentifizierungsdienstes.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.43.0 für HTTP-Proxys und in cURL 7.49.0 für
            SOCKS5-Proxys. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_CAINFO</constant></entry>
           <entry valign="top">
            Der Pfad zu einem Proxy-Zertifikatsautoritätspaket (CA). Der Pfad wird
            als <type>String</type> angegeben, der eine Datei benennt, die ein oder
            mehrere Zertifikate enthält, die zur Prüfung des HTTPS-Proxys verwendet werden.
            Diese Option gilt für die Verbindung zu einem HTTP-Proxy, nicht zu einem HTTPS-Server.
            Der Standardwert ist der System-Pfad unter dem das cacert-Paket von libcurl
            erwartet wird.
           </entry>
           <entry valign="top">
            Verfügbar seit PHP 7.3.0 und libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_CAPATH</constant></entry>
           <entry valign="top">
            Das Verzeichnis, das mehrere CA-Zertifikate enthält, mit denen der HTTPS-Proxy
            geprüft wird.
           </entry>
           <entry valign="top">
            Verfügbar seit PHP 7.3.0 und libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_CRLFILE</constant></entry>
           <entry valign="top">
            Setzt den Dateinamen mit der Verkettung von CRL (Zertifikatswiderrufsliste)
            im PEM-Format, die in der Zertifikatsprüfung, die während des SSL-Austauschs
            stattfindet, verwendet wird.
           </entry>
           <entry valign="top">
            Verfügbar seit PHP 7.3.0 und libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_KEYPASSWD</constant></entry>
           <entry valign="top">
            Setzt die Zeichenkette, die als Passwort erforderlich ist, um den
            <constant>CURLOPT_PROXY_SSLKEY</constant> privaten Schlüssel zu verwenden.
            Es wird niemals ein Passwort benötigt, um ein Zertifikat zu laden, aber
            es wird eins benötigt, um den privaten Schlüssel zu laden.
            Diese Option gilt für die Verbindung zu einem HTTPS-Proxy, nicht zu einem HTTPS-Server.
           </entry>
           <entry valign="top">
            Verfügbar seit PHP 7.3.0 und libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_PINNEDPUBLICKEY</constant></entry>
           <entry valign="top">
            Setzt den festgesteckten (pinned) öffentlichen Schlüssel für den HTTPS-Proxy.
            Die Zeichenkette kann der Dateiname des festgesteckten öffentlichen Schlüssels
            sein. Das erwartete Dateiformat ist "PEM" oder "DER". Die Zeichenkette kann
            ebenfalls eine beliebige Anzahl von Base64-kodierten SHA256-Hashwerten enthalten, denen
            "sha256://" vorangestellt, und die durch ";" getrennt sind.
           </entry>
           <entry valign="top">
            Verfügbar seit PHP 7.3.0 und libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSLCERT</constant></entry>
           <entry valign="top">
            Der Dateiname des Client-Zertifikats, das zur Verbindung mit dem HTTPS-Proxy
            verwendet wird. Das Standardformat ist "P12" bei Secure Transport, und "PEM"
            bei anderen Engines, kann aber mit <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>
            geändert werden. Bei Verwendung von NSS oder Secure Transport kann es ebenfalls
            der Spitzname des Zertifikats sein, das zur Authentifizierung verwendet werden soll,
            wie in der Sicherheitsdatenbank hinterlegt.
            Soll eine Datei im aktuellen Verzeichnis verwendet werden, sollte sie mit einem
            "./"-Präfix angegeben werden, um Verwechslungen mit einem Spitznamen zu vermeiden.
           </entry>
           <entry valign="top">
            Verfügbar seit PHP 7.3.0 und libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSLCERTTYPE</constant></entry>
           <entry valign="top">
            Das Format des Client-Zertifikats, das zur Verbindung mit dem HTTPS-Proxy
            verwendet wird. Unterstützte Formate sind "PEM" und "DER", außer bei Secure Transport.
            OpenSSL (Version 0.9.3 und später) und Secure Transport (unter iOS 5 oder später,
            oder OS X 10.7 oder später) unterstützen ebenso "P12" für PKCS#12-kodierte Dateien.
            Der Standardwert ist "PEM".
           </entry>
           <entry valign="top">
            Verfügbar seit PHP 7.3.0 und libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant></entry>
           <entry valign="top">
            Die Liste von Chiffren, die zur Verbindung mit dem HTTPS-Proxy verwendet wird.
            Die Liste muss syntaktisch korrekt sein; sie besteht aus einer oder mehreren
            Chiffre-Zeichenketten, die durch Doppelpunkt getrennt sind. Kommas und Leerzeichen
            sind ebenfalls als Trennzeichen erlaubt, aber normalerweise werden Doppelpunkte
            verwendet; !, - und + können als Operatoren verwendet werden.
           </entry>
           <entry valign="top">
            Verfügbar seit PHP 7.3.0 und libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_TLS13_CIPHERS</constant></entry>
           <entry valign="top">
            Die Liste von Chiffre-Folgen, die für die TLS 1.3 Verbindung zu einem Proxy
            verwendet werden. Die Liste muss syntaktisch korrekt sein; sie besteht aus einer
            oder mehreren Chiffre-Folgen-Zeichenketten, die durch Doppelpunkt getrennt sind.
            Die Option wird zurzeit nur verwendet, wenn curl mit OpenSSL 1.1.1 oder später
            kompiliert wurde. Wird ein anderes SSL-Backend verwendet, kann versucht werden
            die Chiffre-Folgen unter Verwendung der <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant>
            Option zu setzen.
           </entry>
           <entry valign="top">
            Verfügbar seit PHP 7.3.0 und libcurl &gt;= cURL 7.61.0. Verfügbar wenn mit OpenSSL >= 1.1.1 kompiliert.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSLKEY</constant></entry>
           <entry valign="top">
            Der Dateiname des privaten Schlüssels, der für die Verbindung zum HTTPS-Proxy verwendet wird.
            Das Standardformat ist "PEM", und kann mit <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>
            geändert werden.
            (nur für iOS und Mac OS X) Diese Option wird ignoriert, wenn curl mit Secure Transport
            kompiliert wurde.
           </entry>
           <entry valign="top">
            Verfügbar seit PHP 7.3.0 und libcurl &gt;= cURL 7.52.0. Verfügbar wenn beim Kompilieren TLS aktivert war.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_SSLKEYTYPE</constant></entry>
           <entry valign="top">
            Das Format des privaten Schlüssels. Unterstützte Formate sind "PEM", "DER" und "ENG".
           </entry>
           <entry valign="top">
            Verfügbar seit PHP 7.3.0 und libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant></entry>
           <entry valign="top">
            Das Passwort, das für die TLS-Authentifizierungsmethode, die mit der
            <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant> Option angegeben wurde,
            verwendet werden soll. Erfordert, dass die <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant>
            Option ebenfalls angegeben wird.
           </entry>
           <entry valign="top">
            Verfügbar seit PHP 7.3.0 und libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant></entry>
           <entry valign="top">
            Die Methode der TLS-Authentifizierung, die für die HTTPS-Verbindung verwendet wird.
            Die unterstützte Methode is "SRP".
            <note>
             <para>
              Die Secure Remote Password (SRP) Authentifizierung für TLS bietet gegenseitige
              Authentifizierung, wenn beide Seiten ein geteiltes Geheimnis (shared secret) haben.
              Um TLS-SRP zu verwenden, müssen ebenfalls die
              <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant> und
              <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant> Optionen gesetzt werden.
             </para>
            </note>
           </entry>
           <entry valign="top">
            Verfügbar seit PHP 7.3.0 und libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant></entry>
           <entry valign="top">
            Der Benutzername für die HTTPS-Proxy TLS-Authentifizierungsmethode, die mit der
            <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant> Option angegeben wurde. Erfordert, dass die
            <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant> Option ebenfalls angegeben wird.
           </entry>
           <entry valign="top">
            Verfügbar seit PHP 7.3.0 and libcurl &gt;= cURL 7.52.0.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYUSERPWD</constant></entry>
           <entry valign="top">
             Benutzername und Passwort in der Form
             <literal>"[benutzername]:[passwort]"</literal>
             für die Proxy-Verbindung.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RANDOM_FILE</constant></entry>
           <entry valign="top">
            Ein Dateiname der zur Initialisierung des Zufallsgenerators für SSL
            benutzt wird.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RANGE</constant></entry>
           <entry valign="top">
            Bereiche an Daten, die empfangen werden sollen. Das Format sollte
            <literal>"X-Y"</literal> sein, wobei <literal>X</literal> oder
            <literal>Y</literal> optional sind. HTTP-Transfers unterstützen auch
            mehrere Komma-getrennte Intervalle im Format <literal>"X-Y,N-M"</literal>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_REFERER</constant></entry>
           <entry valign="top">
            Der Inhalt des <literal>"Referer: "</literal>-Headers
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SERVICE_NAME</constant></entry>
           <entry valign="top">
            Der Name des Authentifizierungsdienstes.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.43.0. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_HOST_PUBLIC_KEY_MD5</constant></entry>
           <entry valign="top">
            Eine Zeichenkette, die 32 hexadezimale Ziffern enthält. Die
            Zeichenkette sollte die MD5 Prüfsumme des öffentlichen Schlüssels
            des Remote-Hosts sein. libcurl wird die Verbindung zum Host
            zurückweisen, falls die Prüfsummen nicht übereinstimmen.
            Diese Option gilt nur für SCP und SFTP Übertragungen.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.17.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_PUBLIC_KEYFILE</constant></entry>
           <entry valign="top">
            Der Dateiname des öffentlichen Schlüssels. Wenn nicht gesetzt, nimmt
            libcurl $HOME/.ssh/id_dsa.pub an, falls die HOME Umgebungsvariable
            gesetzt ist, und andernfalls "id_dsa.pub" im aktuellen Verzeichnis.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.16.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant></entry>
           <entry valign="top">
            Der Dateiname des privaten Schlüssels. Wenn nicht gesetzt, nimmt
            libcurl $HOME/.ssh/id_dsa an, falls die HOME Umgebungsvariable
            gesetzt ist, und andernfalls "id_dsa" im aktuellen Verzeichnis.
            Wenn die Datei passwort geschützt ist, muss das Passwort mit
            <constant>CURLOPT_KEYPASSWD</constant> bestimmt werden.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.16.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSL_CIPHER_LIST</constant></entry>
           <entry valign="top">
            Eine Liste der für SSL zulässigen Chiffren. <literal>RC4-SHA</literal>
            und <literal>TLSv1</literal> sind zulässig.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLCERT</constant></entry>
           <entry valign="top">
            Der Name einer Datei die ein Zertifikat im PEM-Format enthält.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLCERTPASSWD</constant></entry>
           <entry valign="top">
            Das Passwort für das <constant>CURLOPT_SSLCERT</constant>-Zertifikat.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLCERTTYPE</constant></entry>
           <entry valign="top">
            Das Format des Zertifikats. Unterstützt werden <literal>PEM</literal>
            (Standard), <literal>DER</literal> und <literal>ENG</literal>.
            Von OpenSSL 0.9.3 an wird <literal>"P12"</literal> (für PKCS#12-kodierte Dateien)
            ebenfalls unterstützt.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.9.3.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLENGINE</constant></entry>
           <entry valign="top">
            Der Bezeichner für die Crypto Engine des privaten SSL-Schlüssels, der
            in <constant>CURLOPT_SSLKEY</constant> definiert ist.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLENGINE_DEFAULT</constant></entry>
           <entry valign="top">
            Der Bezeichner für die Crypto-Engine für asymmetrische kryptographische
            Operationen.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLKEY</constant></entry>
           <entry valign="top">
            Der Name einer Datei, die einen privaten SSL-Schlüssel enthält.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLKEYPASSWD</constant></entry>
           <entry valign="top"><para>
            Das geheime Passwort das für den in <constant>CURLOPT_SSLKEY</constant>
            definierten privaten SSL-Schlüssel.
            <note>
             <para>
              Da diese Option sensible Daten enthält sollte das PHP-Script in
              einer sicheren Umgebung liegen.
             </para>
            </note>
           </para></entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_SSLKEYTYPE</constant></entry>
           <entry valign="top">
            Der Typ des in <constant>CURLOPT_SSLKEY</constant> definierten
            privaten SSL-Schlüssels. Unterstützte Schlüssel-Typen sind
            <literal>PEM</literal> (Standard), <literal>DER</literal>
            und <literal>ENG</literal>.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_TLS13_CIPHERS</constant></entry>
           <entry valign="top">
            Die Liste von Chiffre-Folgen, die für die TLS 1.3 Verbindung verwendet werden. Die
            List muss syntaktisch korrekt sein; sie besteht aus einer oder mehreren
            Chiffre-Folgen-Zeichenketten, die durch Doppelpunkt getrennt sind. Die Option wird
            zurzeit nur verwendet, wenn curl mit OpenSSL 1.1.1 oder später kompiliert wurde.
            Wird ein anderes SSL-Backend verwendet, kann versucht werden die TLS 1.3
            Chiffre-Folgen unter Verwendung der <constant>CURLOPT_SSL_CIPHER_LIST</constant>
            Option zu setzen.
           </entry>
           <entry valign="top">
            Verfügbar seit PHP 7.3.0 und libcurl &gt;= cURL 7.61.0. Verfügbar wenn mit OpenSSL >= 1.1.1 kompiliert.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_UNIX_SOCKET_PATH</constant></entry>
           <entry valign="top">
            Aktiviert die Verwendung von Unix-Domain-Sockets als Verbindsendpunkt,
            und setzt den Pfad auf den angegebenen <type>String</type>.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.40.0. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_URL</constant></entry>
           <entry valign="top">
            Der abzurufende URL; kann auch beim initialisieren der Session mittels
            <function>curl_init</function> gesetzt werden.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_USERAGENT</constant></entry>
           <entry valign="top">
            Der Wert des <literal>"User-Agent: "</literal>-Headers für den
            HTTP-Request
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_USERNAME</constant></entry>
           <entry valign="top">
            Der für die Authentifizierung zu verwendende Benutzername.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.19.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PASSWORD</constant></entry>
           <entry valign="top">
            Das Passwort, das für die Authentifizierung verwendet wird.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.19.1.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_USERPWD</constant></entry>
           <entry valign="top">
            Benutzername und Passwort im Format <literal>"[benutzername]:[passwort]"</literal>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_XOAUTH2_BEARER</constant></entry>
           <entry valign="top">
            Gibt das OAuth 2.0 Access-Token an.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.33.0. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       Für die folgenden <parameter>option</parameter>-Parameter sollte
       <parameter>value</parameter> ein Array sein:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Option</entry>
           <entry>Wert für <parameter>value</parameter></entry>
           <entry>Anmerkungen</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_CONNECT_TO</constant></entry>
           <entry valign="top">
            Verbinde zu einem bestimmten Host und Port anstatt dem Host und
            Port, der in der URL angegeben ist. Erwartet ein Array von
            Zeichenketten im Format
            <literal>HOST:PORT:CONNECT-TO-HOST:CONNECT-TO-PORT</literal>.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.49.0. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTP200ALIASES</constant></entry>
           <entry valign="top">
            Ein Array von HTTP-200-Status die als gültige Antoworten und nicht
            als Fehler behandelt werden.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.10.3.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_HTTPHEADER</constant></entry>
           <entry valign="top">
            Ein Array von HTTP-Headern, im Format
            <code>
             array('Content-type: text/plain', 'Content-length: 100')
            </code>
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_POSTQUOTE</constant></entry>
           <entry valign="top">
            Ein Array von FTP-Kommandos, die nach dem FTP-Request auf dem Server
            ausgeführt werden sollen.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROXYHEADER</constant></entry>
           <entry valign="top">
            Ein Array von benutzerdefinierten HTTP-Headern, die an Proxies
            gesendet werden sollen.
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.37.0. Verfügbar seit PHP 7.0.7.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_QUOTE</constant></entry>
           <entry valign="top">
            Ein Array von FTP-Kommandos, die vor dem FTP-Request auf dem Server
            ausgeführt werden sollen.
           </entry>
           <entry valign="top">
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_RESOLVE</constant></entry>
           <entry valign="top">
            Nutze eine benutzerdefinierte Adresse für eine bestimmte Host und
            Port-Kombination Ein Array von Hostname-, Port- und
            IP-Adressen-Zeichenketten, wobei jedes Element durch einen
            Doppelpunkt getrennt ist; im Format:
            <code>
             array("example.com:80:127.0.0.1")
            </code>
           </entry>
           <entry valign="top">
            Hinzugefügt in cURL 7.21.3.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       Für die folgenden <parameter>option</parameter>-Parameter sollte
       <parameter>value</parameter> eine Stream-Resource sein, so wie sie z. B.
       mittels <function>fopen</function> erstellt werden kann
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Option</entry>
           <entry>Wert für <parameter>value</parameter></entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_FILE</constant></entry>
           <entry valign="top">
            Die Datei, in die der Transfer geschrieben werden soll. Standard ist
            <literal>STDOUT</literal> (der Browser).
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_INFILE</constant></entry>
           <entry valign="top">
            Die Datei die zum Upload gelesen werden soll.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_STDERR</constant></entry>
           <entry valign="top">
            Eine Datei, in die Fehler ausgegeben werden, alternativ zu
            <literal>STDERR</literal>.
           </entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_WRITEHEADER</constant></entry>
           <entry valign="top">
            In diese Datei werden die Header eines Transfers geschrieben.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       Für die folgenden <parameter>option</parameter>-Parameter sollte
       <parameter>value</parameter> der Name einer gültigen Funktion oder eine Closure sein.
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Option</entry>
           <entry>Wert für <parameter>value</parameter></entry>
           <entry>Anmerkungen</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_HEADERFUNCTION</constant></entry>
           <entry valign="top">
            Ein Callback, der zwei Parameter erwartet. Der
            erste ist die cURL-Resource, der zweite ist ein String mit den zu
            schreibenden Headern. Bei Nutzung dieser Callback-Funktion liegt die
            Verantwortung für das Schreiben der Header bei Ihnen. Die Funktion
            sollte die Anzahl der geschriebenen Bytes zurückgeben.
           </entry>
           <entry></entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PASSWDFUNCTION</constant></entry>
           <entry valign="top">
            Ein Callback, der drei Parameter erwartet. Der
            erste ist die cURL-Resource, der zweite ein String der ein
            Passwort-Prompt enthält, der dritte Parameter enthält die maximal
            zulässige Länge des Passworts. Die Funktion sollte das Passwort
            als String zurückgeben.
           </entry>
           <entry>Entfernt in PHP 7.3.0.</entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_PROGRESSFUNCTION</constant></entry>
           <entry valign="top">
            <para>
             Ein Callback, die fünf Parameter erwartet. Der erste ist die
             cURL-Resource, der zweite ist die erwartete Gesamtanzahl von Bytes,
             die in dieser Übertragung herunter geladen werden, der dritte ist
             die Anzahl von Bytes die bisher herunter geladen wurden, der vierte
             ist die erwartete Gesamtanzahl von Bytes, die bei dieser Übertragung
             hochgeladen werden, und der fünfte ist die Anzahl von Bytes, die
             bisher hochgeladen wurden.
            </para>
            <note>
             <para>
              Der Callback wird nur aufgerufen, wenn die
              <constant>CURLOPT_NOPROGRESS</constant> Option auf &false; gesetzt
              ist.
             </para>
            </note>
            <para>
             Ein Rückgabewert ungleich 0 bricht die Übertragung ab. In diesem
             Fall setzt der Transfer einen
             <constant>CURLE_ABORTED_BY_CALLBACK</constant> Fehler.
            </para>
           </entry>
           <entry></entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_READFUNCTION</constant></entry>
           <entry valign="top">
            Ein Callback, der drei Parameter erwartet. Der erste ist die cURL-
            Resource, der zweite ist eine Stream-Resource, die cURL durch die
            Option <constant>CURLOPT_INFILE</constant> zur Verfügung gestellt
            wird, und der dritte ist die Höchstmenge von Daten die gelesen
            werden. Der Callback muss eine Zeichenkette mit einer Länge gleich
            oder kleiner als der angeforderten Datenmenge zurückgeben,
            typischerweise durch Lesen von der übergebenen Stream-Resource. Er
            soll eine leere Zeichenkette zurückgeben, um <literal>EOF</literal>
            zu signalisieren.
           </entry>
           <entry></entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_WRITEFUNCTION</constant></entry>
           <entry valign="top">
            Ein  Callback, der zwei Parameter erwartet. Der
            erste ist die cURL-Resource, der zweite ist ein String mit den zu
            schreibenden Daten. Bei Nutzung dieser Callback-Funktion liegt die
            Verantwortung für das Speichern der Daten bei Ihnen. Die Funktion muss
            die genaue Anzahl geschriebener Bytes zurückgeben!
           </entry>
           <entry></entry>
          </row>
          <row>
           <entry valign="top"><constant>CURLOPT_XFERINFOFUNCTION</constant></entry>
           <entry valign="top">
            Ein  Callback, der zwei Parameter erwartet. Dient einem ähnlichen
            Zweck wie <constant>CURLOPT_PROGRESSFUNCTION</constant>, ist aber
            moderner und die bevorzugte Option von cURL.
           </entry>
           <entry valign="top">
            Hinzugefügt in 7.32.0. Verfügbar ab PHP 8.2.0.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
      <para>
       Andere Werte:
       <informaltable>
        <tgroup cols="3">
         <thead>
          <row>
           <entry>Option</entry>
           <entry>Wert für <parameter>value</parameter></entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry valign="top"><constant>CURLOPT_SHARE</constant></entry>
           <entry valign="top">
            Ein Ergebnis von <function>curl_share_init</function>. Veranlasst
            das cURL-Handle die Daten des geteilten Handle zu verwenden.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </informaltable>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.success;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      &curl.changelog.handle-param;
      <row>
       <entry>7.3.15, 7.4.3</entry>
       <entry>
        <constant>CURLOPT_HTTP09_ALLOWED</constant> wurde eingeführt.
       </entry>
      </row>
      <row>
       <entry>7.3.0</entry>
       <entry>
        <constant>CURLOPT_ABSTRACT_UNIX_SOCKET</constant>, <constant>CURLOPT_KEEP_SENDING_ON_ERROR</constant>,
        <constant>CURLOPT_PRE_PROXY</constant>, <constant>CURLOPT_PROXY_CAINFO</constant>,
        <constant>CURLOPT_PROXY_CAPATH</constant>, <constant>CURLOPT_PROXY_CRLFILE</constant>,
        <constant>CURLOPT_PROXY_KEYPASSWD</constant>, <constant>CURLOPT_PROXY_PINNEDPUBLICKEY</constant>,
        <constant>CURLOPT_PROXY_SSLCERT</constant>, <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>,
        <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant>, <constant>CURLOPT_PROXY_SSLKEY</constant>,
        <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>, <constant>CURLOPT_PROXY_SSL_OPTIONS</constant>,
        <constant>CURLOPT_PROXY_SSL_VERIFYHOST</constant>, <constant>CURLOPT_PROXY_SSL_VERIFYPEER</constant>,
        <constant>CURLOPT_PROXY_SSLVERSION</constant>, <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant>,
        <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>, <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant>,
        <constant>CURLOPT_SOCKS5_AUTH</constant>, <constant>CURLOPT_SUPPRESS_CONNECT_HEADERS</constant>,
        <constant>CURLOPT_DISALLOW_USERNAME_IN_URL</constant>, <constant>CURLOPT_DNS_SHUFFLE_ADDRESSES</constant>,
        <constant>CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS</constant>, <constant>CURLOPT_HAPROXYPROTOCOL</constant>,
        <constant>CURLOPT_PROXY_TLS13_CIPHERS</constant>, <constant>CURLOPT_SSH_COMPRESSION</constant>,
        <constant>CURLOPT_TIMEVALUE_LARGE</constant> und <constant>CURLOPT_TLS13_CIPHERS</constant> wurden eingeführt.
       </entry>
      </row>
      <row>
       <entry>7.0.7</entry>
       <entry>
        <constant>CURL_HTTP_VERSION_2</constant>, <constant>CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE</constant>,
        <constant>CURL_HTTP_VERSION_2TLS</constant>, <constant>CURL_REDIR_POST_301</constant>,
        <constant>CURL_REDIR_POST_302</constant>, <constant>CURL_REDIR_POST_303</constant>,
        <constant>CURL_REDIR_POST_ALL</constant>, <constant>CURL_VERSION_KERBEROS5</constant>,
        <constant>CURL_VERSION_PSL</constant>, <constant>CURL_VERSION_UNIX_SOCKETS</constant>,
        <constant>CURLAUTH_NEGOTIATE</constant>, <constant>CURLAUTH_NTLM_WB</constant>,
        <constant>CURLFTP_CREATE_DIR</constant>, <constant>CURLFTP_CREATE_DIR_NONE</constant>,
        <constant>CURLFTP_CREATE_DIR_RETRY</constant>, <constant>CURLHEADER_SEPARATE</constant>,
        <constant>CURLHEADER_UNIFIED</constant>, <constant>CURLMOPT_CHUNK_LENGTH_PENALTY_SIZE</constant>,
        <constant>CURLMOPT_CONTENT_LENGTH_PENALTY_SIZE</constant>, <constant>CURLMOPT_MAX_HOST_CONNECTIONS</constant>,
        <constant>CURLMOPT_MAX_PIPELINE_LENGTH</constant>, <constant>CURLMOPT_MAX_TOTAL_CONNECTIONS</constant>,
        <constant>CURLOPT_CONNECT_TO</constant>, <constant>CURLOPT_DEFAULT_PROTOCOL</constant>,
        <constant>CURLOPT_DNS_INTERFACE</constant>, <constant>CURLOPT_DNS_LOCAL_IP4</constant>,
        <constant>CURLOPT_DNS_LOCAL_IP6</constant>, <constant>CURLOPT_EXPECT_100_TIMEOUT_MS</constant>,
        <constant>CURLOPT_HEADEROPT</constant>, <constant>CURLOPT_LOGIN_OPTIONS</constant>,
        <constant>CURLOPT_PATH_AS_IS</constant>, <constant>CURLOPT_PINNEDPUBLICKEY</constant>,
        <constant>CURLOPT_PIPEWAIT</constant>, <constant>CURLOPT_PROXY_SERVICE_NAME</constant>,
        <constant>CURLOPT_PROXYHEADER</constant>, <constant>CURLOPT_SASL_IR</constant>,
        <constant>CURLOPT_SERVICE_NAME</constant>, <constant>CURLOPT_SSL_ENABLE_ALPN</constant>,
        <constant>CURLOPT_SSL_ENABLE_NPN</constant>, <constant>CURLOPT_SSL_FALSESTART</constant>,
        <constant>CURLOPT_SSL_VERIFYSTATUS</constant>, <constant>CURLOPT_STREAM_WEIGHT</constant>,
        <constant>CURLOPT_TCP_FASTOPEN</constant>, <constant>CURLOPT_TFTP_NO_OPTIONS</constant>,
        <constant>CURLOPT_UNIX_SOCKET_PATH</constant>, <constant>CURLOPT_XOAUTH2_BEARER</constant>,
        <constant>CURLPROTO_SMB</constant>, <constant>CURLPROTO_SMBS</constant>,
        <constant>CURLPROXY_HTTP_1_0</constant>, <constant>CURLSSH_AUTH_AGENT</constant> und
        <constant>CURLSSLOPT_NO_REVOKE</constant> wurden eingeführt.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>
     Initialisierung einer neuen cURL-Session und das Abrufen einer Webseite
    </title>
    <programlisting role="php">
<![CDATA[
<?php
// erzeuge einen neuen cURL-Handle
$ch = curl_init();

// setze die URL und andere Optionen
curl_setopt($ch, CURLOPT_URL, "http://www.example.com/");
curl_setopt($ch, CURLOPT_HEADER, false);

// führe die Aktion aus und gebe die Daten an den Browser weiter
curl_exec($ch);

// schließe den cURL-Handle und gebe die Systemresourcen frei
curl_close($ch);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  <note>
   <para>
    Ein für <constant>CURLOPT_POST</constant> übergebenes Array wird als
    <emphasis>multipart/form-data</emphasis>, ein URL-kodierter String als
    <emphasis>application/x-www-form-urlencoded</emphasis> kodiert.
   </para>
  </note>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>curl_setopt_array</function></member>
    <member><classname>CURLFile</classname></member>
    <member><classname>CURLStringFile</classname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
