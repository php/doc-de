<!-- EN-Revision: fb2b760cac71413ec55fe403086586fd1560a002 Maintainer: samesch Status: wip -->
<!-- Reviewed: no -->
<!-- Mostly copied from curl/functions/curl-setopt.xml -->
<!-- Credits: jaenecke -->
 <variablelist role="constant_list">
  <title><function>curl-setopt</function></title>
  <varlistentry xml:id="constant.curlopt-abstract-unix-socket">
   <term>
    <constant>CURLOPT_ABSTRACT_UNIX_SOCKET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Aktiviert die Verwendung eines abstrakten Unix-Domainsockets anstatt eine
     TCP-Verbindung zu einem Host aufzubauen, und setzt den Pfad auf den
     gegebenen <type>String</type>. Diese Option folgt der gleichen Semantik
     wie die Option <constant>CURLOPT_UNIX_SOCKET_PATH</constant>. Diese beiden
     Optionen verwenden den selben Speicher, weshalb nur eine pro Handle
     genutzt werden kann.
     Verfügbar seit PHP 7.3.0 und cURL 7.53.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-accept-encoding">
   <term>
    <constant>CURLOPT_ACCEPT_ENCODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Sets a <type>string</type> with the contents
     of the <literal>Accept-Encoding:</literal> header sent in an HTTP request.
     Set to &null; to disable sending the <literal>Accept-Encoding:</literal> header.
     Defaults to &null;.
     Available as of cURL 7.21.6.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-accepttimeout-ms">
   <term>
    <constant>CURLOPT_ACCEPTTIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The maximum number of milliseconds to wait for a server
     to connect back to cURL when an active FTP connection is used.
     This option accepts any value that can be cast to a valid <type>int</type>.
     Defaults to <literal>60000</literal> milliseconds.
     Available as of cURL 7.24.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-address-scope">
   <term>
    <constant>CURLOPT_ADDRESS_SCOPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The scope id value to use when connecting to IPv6 addresses.
     This option accepts any value that can be cast to a valid <type>int</type>.
     Defaults to <literal>0</literal>.
     Available as of cURL 7.19.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-altsvc">
   <term>
    <constant>CURLOPT_ALTSVC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Gibt den Namen der Datei an, die cURL für den Alt-Svc-Cache verwenden
     soll, um den Inhalt des Caches auszulesen und gegebenenfalls nach einer
     Übertragung zurückzuschreiben. Letzteres ist allerdings nur möglich, wenn
     in <constant>CURLOPT_ALTSVC_CTRL</constant> nicht die Option
     <constant>CURLALTSVC_READONLYFILE</constant> verwendet wird.
     Verfügbar seit PHP 8.2.0 und cURL 7.64.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-altsvc-ctrl">
   <term>
    <constant>CURLOPT_ALTSVC_CTRL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Eine Bitmaske mit dem gewünschten Satz von Merkmalen. Sie wird verwendet,
     um cURL anzuweisen, wie Alt-Svc bei der Übertragung mit diesem Handle zu
     verwenden ist. cURL akzeptiert Alt-Svc-Header nur über HTTPS. Es führt
     auch nur dann eine Anfrage an einen alternativen Ursprung aus, wenn
     dieser Ursprung ordnungsgemäß über HTTPS gehostet wird. Das Setzen eines
     beliebigen Bits aktiviert die Alt-Svc-Engine. Folgende Optionen stehen
     zur Verfügung:
     <constant>CURLALTSVC_H1</constant>,
     <constant>CURLALTSVC_H2</constant>,
     <constant>CURLALTSVC_H3</constant> und
     <constant>CURLALTSVC_READONLYFILE</constant>.
     Verfügbar seit PHP 8.2.0 und cURL 7.64.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-append">
   <term>
    <constant>CURLOPT_APPEND</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Setting this option to <literal>1</literal> will cause FTP uploads
     to append to the remote file instead of overwriting it.
     Defaults to <literal>0</literal>.
     Available as of cURL 7.17.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-autoreferer">
   <term>
    <constant>CURLOPT_AUTOREFERER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um automatisch den <literal>Referer:</literal> in Anfragen zu
     setzen, die einer Weiterleitung per <literal>Location:</literal> folgen.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-aws-sigv4">
   <term>
    <constant>CURLOPT_AWS_SIGV4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Stellt die AWS V4-Signatur-Authentifizierung im HTTP(S)-Header bereit.
     Diese Option hat Vorrang vor allen anderen Authentifizierungstypen, die
     in <constant>CURLOPT_HTTPAUTH</constant> angegeben wurden. Diese Methode
     kann nicht mit anderen Authentifizierungstypen kombiniert werden.
     Verfügbar seit PHP 8.2.0 und cURL 7.75.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-binarytransfer">
   <term>
    <constant>CURLOPT_BINARYTRANSFER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>

    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-buffersize">
   <term>
    <constant>CURLOPT_BUFFERSIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die für jede Leseoperation zulässige Puffergröße. Es ist nicht
     garantiert, dass diese Einstellung genutzt wird.
     Verfügbar seit cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cainfo">
   <term>
    <constant>CURLOPT_CAINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Name einer Datei, die ein oder mehrere Zertifikate enthält, gegen die
     der Peer geprüft wird. Nur sinnvoll in Verbindung mit
     <constant>CURLOPT_SSL_VERIFYPEER</constant>. Erfodert möglicherweise
     einen absoluten Pfad.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cainfo-blob">
   <term>
    <constant>CURLOPT_CAINFO_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Name einer PEM-Datei, die ein oder mehrere Zertifikate enthält, mit
     denen die Gegenstelle verifiziert werden soll. Diese
     Option hat Vorrang vor <constant>CURLOPT_CAINFO</constant>.
     Verfügbar seit PHP 8.2.0 und cURL 7.77.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-capath">
   <term>
    <constant>CURLOPT_CAPATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Ein Verzeichnis, das mehrere CA-Zertifikate enthält. Diese Option
     sollte in Kombination mit <constant>CURLOPT_SSL_VERIFYPEER</constant>
     genutzt werden.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ca-cache-timeout">
   <term>
    <constant>CURLOPT_CA_CACHE_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Verfügbar seit PHP 8.3.0 und cURL 7.87.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-certinfo">
   <term>
    <constant>CURLOPT_CERTINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um die SSL-Zertifikatsinformation bei sicheren Übertragungen auf
     <constant>STDERR</constant> auszugeben. Verfügbar seit cURL 7.19.1.
     Erfordert, dass <constant>CURLOPT_VERBOSE</constant> gesetzt ist,
     um eine Wirkung zu haben.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connecttimeout">
   <term>
    <constant>CURLOPT_CONNECTTIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die Anzahl Sekunden, die der Verbindungsaufbau maximal dauern darf; 0
     hebt die Begrenzung auf.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connecttimeout-ms">
   <term>
    <constant>CURLOPT_CONNECTTIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die Anzahl Millisekunden, die der Verbindungsaufbau maximal dauern darf;
     0 hebt die Begrenzung auf.
     <!-- http://curl.haxx.se/libcurl/c/curl_easy_setopt.html -->
     Wenn libcurl so kompiliert wurde, dass die Standard-Namensauflösung des
     Systems verwendet wird, wird dieser Teil der Verbindung dennoch die volle
     Sekunden-Auflösung für Zeitlimits mit einem minimalen Das Zeitlimit von
     einer Sekunde verwenden.
     Verfügbar seit cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connect-only">
   <term>
    <constant>CURLOPT_CONNECT_ONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; weist die Bibliothek an, die gesamte erforderliche
     Proxy-Authentifizierung und den Verbindungsaufbau durchzuführen, aber
     keine Datenübertragung. Diese Option ist für HTTP, SMTP und POP3
     implementiert.
     Verfügbar seit cURL 7.15.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-connect-to">
   <term>
    <constant>CURLOPT_CONNECT_TO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Verbinde zu einem bestimmten Host und Port anstatt dem Host und Port, der
     in der URL angegeben ist. Erwartet ein Array von Zeichenketten im Format
     <literal>HOST:PORT:CONNECT-TO-HOST:CONNECT-TO-PORT</literal>.
     Verfügbar seit PHP 7.0.7 und cURL 7.49.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookie">
   <term>
    <constant>CURLOPT_COOKIE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Inhalt des in der HTTP-Anfrage zu setzenden
     <literal>"Cookie: "</literal>-Headers
     Es ist zu beachten dass mehrere Cookies durch ein Semikolon gefolgt von
     einem Leerzeichen getrennt werden
     (&zb; "<literal>fruit=apple; colour=red</literal>")
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiefile">
   <term>
    <constant>CURLOPT_COOKIEFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Name einer Datei, die Cookiedaten enthält. Diese Datei kann im
     Netscape-Format sein oder nur einfache Header im HTTP-Stil enthalten.
     Wenn der Name eine leere Zeichenkette ist, werden keine Cookies geladen,
     aber die Cookie-Behandlung ist dennoch aktiviert.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiejar">
   <term>
    <constant>CURLOPT_COOKIEJAR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Name einer Datei, in der alle internen Cookies gespeichert werden,
     wenn der Destruktor des Handles aufgerufen wird.
     <warning>
      <simpara>
       Seit PHP 8.0.0 ist <function>curl_close</function> eine Null-Operation
       (no-op) und zerstört das Handle <emphasis>nicht</emphasis>.
       Wenn Cookies geschrieben werden müssen, bevor das Handle automatisch
       zerstört wird, muss <function>unset</function> auf das Handle
       angewendet werden.
      </simpara>
     </warning>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookielist">
   <term>
    <constant>CURLOPT_COOKIELIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Eine Cookie-Zeichenkette (&dh; eine einzelne Zeile im
     Netscape/Mozilla-Format, oder ein regulärer Set-Cookie-Header im
     HTTP-Stil), die dieses einzelne Cookie dem internen Cookie-Speicher
     hinzufügt. <literal>"ALL"</literal> löscht alle Cookies, die im Speicher
     vorgehalten werden. <literal>"SESS"</literal> löscht alle
     Session-Cookies, die im Speicher vorgehalten werden.
     <literal>"FLUSH"</literal> schreibt alle bekannten Cookies in die durch
     <constant>CURLOPT_COOKIEJAR</constant> angegebene Datei.
     <literal>"RELOAD"</literal> lädt alle Cookies aus der durch
     <constant>CURLOPT_COOKIEFILE</constant> angegebenen Datei.
     Verfügbar seit cURL 7.14.1
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-cookiesession">
   <term>
    <constant>CURLOPT_COOKIESESSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um diese Anfrage als neue Cookie-"Session" zu behandeln. Somit
     wird libcurl alle Cookies, die geladen werden sollen, ignorieren, sofern
     es sich um "Session-Cookies" einer vorherigen Session handelt.
     Standardmäßig lädt und speichert libcurl alle Cookies, unabhängig davon,
     ob es Session-Cookies sind. Bei Session-Cookies handelt es sich um Cookies
     ohne Ablaufdatum, die nur für die aktuelle Session gültig sind.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-crlf">
   <term>
    <constant>CURLOPT_CRLF</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um Unix-Zeilenumbrüche beim Transfer in CRLF-Zeilenumbrüche
     umzuwandeln.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-crlfile">
   <term>
    <constant>CURLOPT_CRLFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Pass a <type>string</type> naming a file with the concatenation of
     CRL (Certificate Revocation List) (in PEM format)
     to use in the certificate validation that occurs during the SSL exchange.
     When cURL is built to use GnuTLS,
     there is no way to influence the use of CRL passed
     to help in the verification process.
     When cURL is built with OpenSSL support,
     <literal>X509_V_FLAG_CRL_CHECK</literal>
     and <literal>X509_V_FLAG_CRL_CHECK_ALL</literal> are both set,
     requiring CRL check against all the elements of the certificate chain
     if a CRL file is passed.
     Also note that <constant>CURLOPT_CRLFILE</constant> implies
     <constant>CURLSSLOPT_NO_PARTIALCHAIN</constant>
     as of cURL 7.71.0 due to an OpenSSL bug.
     Available as of cURL 7.19.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-customrequest">
   <term>
    <constant>CURLOPT_CUSTOMREQUEST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Eine benutzerdefinierte Anfragemethode, die anstelle von
     <literal>"GET"</literal> oder <literal>"HEAD"</literal> für die
     HTTP-Anfrage benutzt werden soll. Dies ist nützlich bei
     <literal>"DELETE"</literal> oder anderen unüblichen Anfragen. Zulässige
     Werte sind <literal>"GET"</literal>, <literal>"POST"</literal>,
     <literal>"CONNECT"</literal> etc. Vollständige HTTP-Anfragen wie
     <literal>"GET /index.html HTTP/1.0\r\n\r\n"</literal> sind unzulässig!
     <note>
      <para>
       Diese Anfragen sollten nicht durchgeführt werden, ohne sicherzustellen,
       dass der Server die betreffenden Kommandos unterstützt.
      </para>
     </note>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-default-protocol">
   <term>
    <constant>CURLOPT_DEFAULT_PROTOCOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Das Standardprotokoll, das verwendet werden soll, wenn die URL kein
     Schema angibt.
     Verfügbar seit PHP 7.0.7 und cURL 7.45.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dirlistonly">
   <term>
    <constant>CURLOPT_DIRLISTONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Setting this option to <literal>1</literal> will have different effects
     based on the protocol it is used with.
     FTP and SFTP based URLs will list only the names of files in a directory.
     POP3 will list the email message or messages on the POP3 server.
     For FILE, this option has no effect
     as directories are always listed in this mode.
     Using this option with <constant>CURLOPT_WILDCARDMATCH</constant>
     will prevent the latter from having any effect.
     Defaults to <literal>0</literal>.
     Available as of cURL 7.17.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-disallow-username-in-url">
   <term>
    <constant>CURLOPT_DISALLOW_USERNAME_IN_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um URLs, die einen Benutzernamen enthalten, zu verbieten.
     Benutzernamen sind in der Voreinstellung (0) erlaubt.
     Verfügbar seit PHP 7.3.0 und cURL 7.61.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-cache-timeout">
   <term>
    <constant>CURLOPT_DNS_CACHE_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die Dauer in Sekunden, die ein DNS-Eintrag im Speicher gehalten wird.
     Der Standard sind 120 Sekunden (2 Minuten).
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-interface">
   <term>
    <constant>CURLOPT_DNS_INTERFACE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Name der Netzwerkschnittstelle, an die sich der DNS-Resolver binden
     soll. Dies muss ein Schnittstellenname sein (keine Adresse).
     Verfügbar seit PHP 7.0.7 und cURL 7.33.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-local-ip4">
   <term>
    <constant>CURLOPT_DNS_LOCAL_IP4</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die lokale IPv4-Adresse, an die sich der Resolver binden soll. Das
     Argument sollte eine einzige numerische IPv4-Adresse als Zeichenkette
     enthalten.
     Verfügbar seit PHP 7.0.7 und cURL 7.33.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-local-ip6">
   <term>
    <constant>CURLOPT_DNS_LOCAL_IP6</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die lokale IPv6-Adresse, an die sich der Resolver binden soll. Das
     Argument sollte eine einzige numerische IPv6-Adresse als Zeichenkette
     enthalten.
     Verfügbar seit PHP 7.0.7 und cURL 7.33.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-servers">
   <term>
    <constant>CURLOPT_DNS_SERVERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Pass a <type>string</type> with a comma-separated list of DNS servers to be used
     instead of the system default
     (e.g.: <literal>192.168.1.100,192.168.1.101:8080</literal>).
     Available as of cURL 7.24.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-shuffle-addresses">
   <term>
    <constant>CURLOPT_DNS_SHUFFLE_ADDRESSES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um die Reihenfolge aller zurückgegebenen Adressen zu mischen
     sodass sie in zufälliger Reihenfolge verwendet werden, wenn ein Name
     aufgelöst wird und mehr als eine IP-Adresse zurückgegeben wurde.
     Dies kann bewirken, dass IPv4 vor IPv6 verwendet wird, oder umgekehrt.
     Verfügbar seit PHP 7.3.0 und cURL 7.60.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-dns-use-global-cache">
   <term>
    <constant>CURLOPT_DNS_USE_GLOBAL_CACHE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um den globalen DNS-Cache zu nutzen. Diese Option ist nicht
     thread-safe. Sie ist standardmäßig aktiviert, wenn PHP für
     Singlethread-Verwendung kompiliert wurde (CLI, FCGI, Apache2-Prefork
     etc.).
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifyhost">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Überprüft die Namensfelder des SSL-Zertifikats des DNS-over-HTTPS-Servers
     in Bezug auf den Hostnamen.
     Verfügbar seit PHP 8.2.0 und cURL 7.76.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifypeer">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Überprüft die Authentizität des SSL-Zertifikats des DNS-over-HTTPS-Servers.
     Verfügbar seit PHP 8.2.0 und cURL 7.76.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-ssl-verifystatus">
   <term>
    <constant>CURLOPT_DOH_SSL_VERIFYSTATUS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Weist cURL an, den Status des DNS-over-HTTPS-Serverzertifikats mit Hilfe
     der TLS-Erweiterung "Certificate Status Request" (OCSP-Stapling) zu
     überprüfen.
     Verfügbar seit PHP 8.2.0 und cURL 7.76.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-doh-url">
   <term>
    <constant>CURLOPT_DOH_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Gibt die URL für DNS-over-HTTPS an.
     Verfügbar seit PHP 8.1.0 und cURL 7.62.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-egdsocket">
   <term>
    <constant>CURLOPT_EGDSOCKET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Wie <constant>CURLOPT_RANDOM_FILE</constant>, aber ein Dateiname für
     einen Entropy Gathering Daemon Socket.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-encoding">
   <term>
    <constant>CURLOPT_ENCODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Inhalt des <literal>"Accept-Encoding: "</literal>-Headers. Damit wird
     das Dekodieren der Serverantwort aktiviert. Unterstützte Kodierungen sind
     <literal>"identity"</literal>, <literal>"deflate"</literal> und
     <literal>"gzip"</literal>. Wenn eine leere Zeichenkette
     <literal>""</literal> angegeben wird, wird ein Header mit allen
     unterstützten Kodierungen gesendet.
     Verfügbar seit cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-expect-100-timeout-ms">
   <term>
    <constant>CURLOPT_EXPECT_100_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Das Zeitlimit für <literal>Expect: 100-continue</literal>-Antworten in
     Millisekunden.
     Standardwert sind 1000 Millisekunden.
     Verfügbar seit PHP 7.0.7 und cURL 7.36.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-failonerror">
   <term>
    <constant>CURLOPT_FAILONERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um PHP anzuweisen, bei Fehlern aufgrund eines HTTP-Codes größer
     oder gleich 400 eine ausführliche Fehlermeldung zu liefern. Das
     Standardverhalten ist, die Seite normal zurückzugeben und den Code zu
     ignorieren.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-file">
   <term>
    <constant>CURLOPT_FILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die Datei, in die der Transfer geschrieben werden soll. Standard ist
     <constant>STDOUT</constant> (der Browser).
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-filetime">
   <term>
    <constant>CURLOPT_FILETIME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um zu versuchen, das Änderungsdatum des serverseitigen Dokuments
     zu ermitteln. Der Wert kann über die Funktion
     <function>curl_getinfo</function> unter Verwendung des Parameters
     <constant>CURLINFO_FILETIME</constant> ermittelt werden.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-fnmatch-function">
   <term>
    <constant>CURLOPT_FNMATCH_FUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Pass a <type>callable</type> that will be used for wildcard matching.
     The signature of the callback should be:
     <methodsynopsis>
      <type>int</type><methodname><replaceable>callback</replaceable></methodname>
      <methodparam><type>resource</type><parameter>curlHandle</parameter></methodparam>
      <methodparam><type>string</type><parameter>pattern</parameter></methodparam>
      <methodparam><type>string</type><parameter>string</parameter></methodparam>
     </methodsynopsis>
     <variablelist role="function_parameters">
      <varlistentry>
       <term><parameter>curlHandle</parameter></term>
       <listitem>
        <simpara>
         The cURL handle.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>pattern</parameter></term>
       <listitem>
        <simpara>
         The wildcard pattern.
        </simpara>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term><parameter>string</parameter></term>
       <listitem>
        <simpara>
         The <type>string</type> to run the wildcard pattern matching on.
        </simpara>
       </listitem>
      </varlistentry>
     </variablelist>
     The callback should return
     <constant>CURL_FNMATCHFUNC_MATCH</constant> if pattern matches the <type>string</type>,
     <constant>CURL_FNMATCHFUNC_NOMATCH</constant> if not
     or <constant>CURL_FNMATCHFUNC_FAIL</constant> if an error occurred.
     Available as of cURL 7.21.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-followlocation">
   <term>
    <constant>CURLOPT_FOLLOWLOCATION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um jedem <literal>"Location: "</literal>-Header zu folgen, den
     der Server als Teil der HTTP-Header zurückgibt.
     Siehe auch <constant>CURLOPT_MAXREDIRS</constant>.
     Diese Konstante ist nicht verfügbar, wenn
     <link xmlns="http://docbook.org/ns/docbook" linkend="ini.open-basedir">open_basedir</link>
     aktiviert ist.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-forbid-reuse">
   <term>
    <constant>CURLOPT_FORBID_REUSE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um die Verbindung nach der Verarbeitung explizit zu schließen,
     sodass sie nicht wiederverwendet werden kann.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-fresh-connect">
   <term>
    <constant>CURLOPT_FRESH_CONNECT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true; um die Verwendung einer neuen Verbindung zu erzwingen, statt eine
     zwischengespeicherte zu verwenden.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpappend">
   <term>
    <constant>CURLOPT_FTPAPPEND</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um Daten an die serverseitige Datei anzuhängen anstatt diese
     zu überschreiben.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpascii">
   <term>
    <constant>CURLOPT_FTPASCII</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Ein Alias für <constant>CURLOPT_TRANSFERTEXT</constant>, das bevorzugt
     werden sollte.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftplistonly">
   <term>
    <constant>CURLOPT_FTPLISTONLY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um nur die Namen in einem FTP-Verzeichnis aufzulisten.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpport">
   <term>
    <constant>CURLOPT_FTPPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Wert, der genutzt wird, um die IP-Adresse zu erlangen, die von der
     FTP-Anweisung "PORT" genutzt wird. Die "PORT"-Anweisung teilt dem
     entfernten Server mit, zu der angegebenen IP-Adresse zu verbinden. Die
     Zeichenkette kann eine einfache IP-Addresse, ein Hostname, der Name einer
     Netzwerkschnittstelle (unter Unix) oder nur '-' sein, um die vordefinierte
     IP-Addresse des Systems zu nutzen.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftpsslauth">
   <term>
    <constant>CURLOPT_FTPSSLAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die FTP-Authentifizierungsmethode (wenn aktiviert):
     <constant>CURLFTPAUTH_SSL</constant> (versuche zunächst SSL),
     <constant>CURLFTPAUTH_TLS</constant> (versuche zunächst TLS) oder
     <constant>CURLFTPAUTH_DEFAULT</constant> (lass cURL entscheiden).
     Verfügbar seit cURL 7.12.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-account">
   <term>
    <constant>CURLOPT_FTP_ACCOUNT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Pass a <type>string</type> that will be sent as account information over FTP
     (using the <literal>ACCT</literal> command) after username and password has been provided
     to the server.
     Set to &null; to disable sending the account information.
     Defaults to &null;.
     Available as of cURL 7.13.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-alternative-to-user">
   <term>
    <constant>CURLOPT_FTP_ALTERNATIVE_TO_USER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Pass a <type>string</type> that will be used to try to authenticate over FTP
     if the <literal>USER/PASS</literal> negotiation fails.
     Available as of cURL 7.15.5.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-create-missing-dirs">
   <term>
    <constant>CURLOPT_FTP_CREATE_MISSING_DIRS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um fehlende Verzeichnisse zu erzeugen, wenn eine FTP-Operation
     auf einen Pfad stößt, der zurzeit nicht existiert.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-filemethod">
   <term>
    <constant>CURLOPT_FTP_FILEMETHOD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die zu verwendende Methode, um eine Datei auf einem FTP(S)-Server zu
     erreichen. Mögliche Werte sind
     <constant>CURLFTPMETHOD_DEFAULT</constant>,
     <constant>CURLFTPMETHOD_MULTICWD</constant>,
     <constant>CURLFTPMETHOD_NOCWD</constant> und
     <constant>CURLFTPMETHOD_SINGLECWD</constant>.
     Verfügbar seit cURL 7.15.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-response-timeout">
   <term>
    <constant>CURLOPT_FTP_RESPONSE_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     A timeout in seconds cURL will wait for a response from an FTP server.
     This option overrides <constant>CURLOPT_TIMEOUT</constant>.
     This option accepts any value that can be cast to a valid <type>int</type>.
     Available as of cURL 7.10.8 and deprecated as of cURL 7.85.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-skip-pasv-ip">
   <term>
    <constant>CURLOPT_FTP_SKIP_PASV_IP</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     If this option is set to <literal>1</literal>
     cURL will not use the IP address the server suggests
     in its 227-response to cURL's <literal>PASV</literal> command
     but will use the IP address it used for the connection.
     The port number received from the 227-response will not be ignored by cURL.
     Defaults to <literal>1</literal> as of cURL 7.74.0
     and <literal>0</literal> prior to that.
     Available as of cURL 7.15.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-ssl">
   <term>
    <constant>CURLOPT_FTP_SSL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>

    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-ssl-ccc">
   <term>
    <constant>CURLOPT_FTP_SSL_CCC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     This option makes cURL use CCC (Clear Command Channel)
     which shuts down the SSL/TLS layer after authenticating
     making the rest of the control channel communication unencrypted.
     Use one of the <constant>CURLFTPSSL_CCC_<replaceable>*</replaceable></constant> constants.
     Defaults to <constant>CURLFTPSSL_CCC_NONE</constant>.
     Available as of cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-use-eprt">
   <term>
    <constant>CURLOPT_FTP_USE_EPRT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um für aktive FTP-Downloads EPRT (und LPRT) zu nutzen. Auf
     &false; setzen, um EPRT und LPRT zu deaktivieren und ausschließlich PORT
     zu nutzen.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-use-epsv">
   <term>
    <constant>CURLOPT_FTP_USE_EPSV</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um zunächst zu versuchen, einen EPSV-Befehl für FTP-Übertragungen
     auszuführen, bevor PASV verwendet wird. Auf &false; setzen, um EPSV zu
     deaktivieren.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ftp-use-pret">
   <term>
    <constant>CURLOPT_FTP_USE_PRET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set to <literal>1</literal> to send a <literal>PRET</literal> command
     before <literal>PASV</literal> (and <literal>EPSV</literal>).
     Has no effect when using the active FTP transfers mode.
     Defaults to <literal>0</literal>.
     Available as of cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-gssapi-delegation">
   <term>
    <constant>CURLOPT_GSSAPI_DELEGATION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set to <constant>CURLGSSAPI_DELEGATION_FLAG</constant>
     to allow unconditional GSSAPI credential delegation.
     Set to <constant>CURLGSSAPI_DELEGATION_POLICY_FLAG</constant>
     to delegate only if the <literal>OK-AS-DELEGATE</literal> flag is set
     in the service ticket.
     Defaults to <constant>CURLGSSAPI_DELEGATION_NONE</constant>.
     Available as of cURL 7.22.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-happy-eyeballs-timeout-ms">
   <term>
    <constant>CURLOPT_HAPPY_EYEBALLS_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Vorsprung für IPv6 für den Happy-Eyeballs-Algorithmus. Happy-Eyeballs
     versucht sich bei Dual-Stack-Hosts sowohl mit IPv4- als auch mit
     IPv6-Adressen zu verbinden verbinden, wobei IPv6 für die angegebe Dauer
     in Millisekunden bevorzugt wird. Die Voreinstellung ist CURL_HET_DEFAULT
     und beträgt zurzeit 200 Millisekunden.
     Verfügbar seit PHP 7.3.0 und 7.59.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-haproxyprotocol">
   <term>
    <constant>CURLOPT_HAPROXYPROTOCOL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um zu Beginn der Verbindung einen HAProxy PROXY-Protokoll v1
     Header zu senden.
     Standardmäßig wird dieser Header nicht gesendet.
     Verfügbar seit PHP 7.3.0 und cURL 7.60.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-header">
   <term>
    <constant>CURLOPT_HEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um den Header in die Ausgabe aufzunehmen.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-headerfunction">
   <term>
    <constant>CURLOPT_HEADERFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Ein Callback, der zwei Parameter erwartet. Der erste ist die
     cURL-Ressource, der zweite ist eine Zeichenkette mit den zu schreibenden
     Headern. Die Header-Daten müssen von diesem Callback geschrieben werden.
     Gibt die Anzahl der geschriebenen Bytes zurück.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-headeropt">
   <term>
    <constant>CURLOPT_HEADEROPT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Eine der Konstanten <constant>CURLHEADER_UNIFIED</constant> und
     <constant>CURLHEADER_SEPARATE</constant>.
     Seit cURL 7.42.1 ist der Standardwert
     <constant>CURLHEADER_SEPARATE</constant>; davor war es
     <constant>CURLHEADER_UNIFIED</constant>.
     Verfügbar seit PHP 7.0.7 und cURL 7.37.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-hsts">
   <term>
    <constant>CURLOPT_HSTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Name der HSTS- (HTTP Strict Transport Security) Cache-Datei.
     Verfügbar seit PHP 8.2.0 und cURL 7.74.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-hsts-ctrl">
   <term>
    <constant>CURLOPT_HSTS_CTRL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Steuert das Verhalten von HSTS (HTTP Strict Transport Security). Die
     Bitmaske sollte mit dem gewünschten Satz von Merkmalen gefüllt werden, um
     cURL anzuweisen, wie HSTS für die Übertragungen mit diesem Handle
     verwendet werden soll. <constant>CURLHSTS_ENABLE</constant> aktiviert den
     speicherinternen HSTS-Cache. Wenn die HSTS-Cache-Datei definiert ist,
     sollte <constant>CURLHSTS_READONLYFILE</constant> gesetzt werden, um sie
     schreibgeschützt zu machen.
     Verfügbar seit PHP 8.2.0 und cURL 7.74.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http09-allowed">
   <term>
    <constant>CURLOPT_HTTP09_ALLOWED</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Gibt an, ob HTTP/0.9-Antworten erlaubt sind. Der Standardwert ist von
     libcurl 7.66.0 an &false;; zuvor war er &true;.
     Verfügbar seit PHP 7.3.15 bzw. 7.4.3 und cURL 7.64.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http200aliases">
   <term>
    <constant>CURLOPT_HTTP200ALIASES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Ein Array von HTTP-200-Antworten, die als gültige Antoworten und nicht
     als Fehler behandelt werden.
     Verfügbar seit cURL 7.10.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpauth">
   <term>
    <constant>CURLOPT_HTTPAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die zu nutzende HTTP-Authentisierungsmethode; zur Verfügung stehen:
     <constant>CURLAUTH_BASIC</constant>,
     <constant>CURLAUTH_DIGEST</constant>,
     <constant>CURLAUTH_GSSNEGOTIATE</constant>,
     <constant>CURLAUTH_NTLM</constant>,
     <constant>CURLAUTH_AWS_SIGV4</constant>,
     <constant>CURLAUTH_ANY</constant> und
     <constant>CURLAUTH_ANYSAFE</constant>.
     Um mehrere Methoden zu kombinieren, kann der bitweise
     <literal>|</literal>- (oder) Operator verwendet werden; in diesem Fall
     fragt cURL den Server, welche Methoden er unterstützt, und wählt die
     beste aus. <constant>CURLAUTH_ANY</constant> setzt alle Bits. cURL wählt
     automatisch diejenige aus, die es als am sichersten erachtet.
     <constant>CURLAUTH_ANYSAFE</constant> setzt alle Bits außer
     <constant>CURLAUTH_BASIC</constant>. cURL wählt automatisch diejenige
     aus, die es als am sichersten erachtet.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpget">
   <term>
    <constant>CURLOPT_HTTPGET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um die Methode der HTTP-Anfrage auf GET zu setzen. Da dies die
     Standard-Methode ist, sollte dies nur nach einem Wechsel der
     Anfrage-Methode notwendig sein.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpheader">
   <term>
    <constant>CURLOPT_HTTPHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Ein Array von zu setzenden HTTP-Header-Feldern im Format
     <code>
      array('Content-type: text/plain', 'Content-length: 100')
     </code>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-httpproxytunnel">
   <term>
    <constant>CURLOPT_HTTPPROXYTUNNEL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um einen vorhandenen Proxy-Tunnel zu nutzen.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http-content-decoding">
   <term>
    <constant>CURLOPT_HTTP_CONTENT_DECODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false;, um den unbearbeiteten HTTP-Response-Body zu erhalten.
     Verfügbar seit cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http-transfer-decoding">
   <term>
    <constant>CURLOPT_HTTP_TRANSFER_DECODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     If set to <literal>0</literal>, transfer decoding is disabled.
     If set to <literal>1</literal>, transfer decoding is enabled.
     cURL does chunked transfer decoding by default
     unless this option is set to <literal>0</literal>.
     Defaults to <literal>1</literal>.
     Available as of cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-http-version">
   <term>
    <constant>CURLOPT_HTTP_VERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <constant>CURL_HTTP_VERSION_NONE</constant> (Standard, lässt cURL
     entscheiden, welche Version genutzt werden soll),
     <constant>CURL_HTTP_VERSION_1_0</constant> (erzwingt HTTP/1.0),
     <constant>CURL_HTTP_VERSION_1_1</constant> (erzwingt HTTP/1.1),
     <constant>CURL_HTTP_VERSION_2_0</constant> (versucht HTTP 2),
     <constant>CURL_HTTP_VERSION_2</constant> (Alias von
     <constant>CURL_HTTP_VERSION_2_0</constant>),
     <constant>CURL_HTTP_VERSION_2TLS</constant> (versucht HTTP 2 nur über TLS
     (HTTPS)) oder <constant>CURL_HTTP_VERSION_2_PRIOR_KNOWLEDGE</constant>
     (stellt nicht-TLS HTTP-Anfragen unter Verwendung von HTTP/2 ohne
     HTTP/1.1-Upgrade).
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ignore-content-length">
   <term>
    <constant>CURLOPT_IGNORE_CONTENT_LENGTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     If set to <literal>1</literal>,
     ignore the <literal>Content-Length</literal> header in the HTTP response
     and ignore asking for or relying on it for FTP transfers.
     Defaults to <literal>0</literal>.
     Available as of cURL 7.14.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-infile">
   <term>
    <constant>CURLOPT_INFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die Datei, die zum Upload gelesen werden soll.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-infilesize">
   <term>
    <constant>CURLOPT_INFILESIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die erwartete Größe der hochzuladenden Datei in Bytes. Es ist zu beachten,
     dass die Verwendung dieser Option libcurl nicht daran hindert, mehr Daten
     zu senden, da das, was genau gesendet wird, von
     <constant>CURLOPT_READFUNCTION</constant> abhängt.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-interface">
   <term>
    <constant>CURLOPT_INTERFACE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Name der zu nutzenden Netzwerkschnittstelle für ausgehende Daten.
     Statt des Namens der Schnittstelle kann auch eine IP-Adresse oder ein
     Hostname übergeben werden.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ipresolve">
   <term>
    <constant>CURLOPT_IPRESOLVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Ermöglicht einer Anwendung, die Art der IP-Adressen auszuwählen, die für
     die Auflösung von Hostnamen verwendet werden sollen. Dies ist nur von
     Interesse, wenn Hostnamen verwendet werden, die Adressen unter mehr als
     einer IP-Version auflösen; mögliche Werte sind
     <constant>CURL_IPRESOLVE_WHATEVER</constant>,
     <constant>CURL_IPRESOLVE_V4</constant>,
     <constant>CURL_IPRESOLVE_V6</constant>; Voreinstellung ist
     <constant>CURL_IPRESOLVE_WHATEVER</constant>.
     Verfügbar seit cURL 7.10.8.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-issuercert">
   <term>
    <constant>CURLOPT_ISSUERCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     If set to a <type>string</type> naming a file holding a CA certificate in PEM format,
     an additional check against the peer certificate is performed
     to verify the issuer is indeed the one associated
     with the certificate provided by the option.
     For the result of the check to be considered a failure,
     this option should be used in combination with the
     <constant>CURLOPT_SSL_VERIFYPEER</constant> option.
     Available as of cURL 7.19.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-issuercert-blob">
   <term>
    <constant>CURLOPT_ISSUERCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Issuer SSL certificate from memory blob.
     Verfügbar seit PHP 8.1.0 und cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-keep-sending-on-error">
   <term>
    <constant>CURLOPT_KEEP_SENDING_ON_ERROR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um den Request-Body weiterhin zu senden, wenn der zurückgegebene
     HTTP-Code gleich oder größer als 300 ist. Standardmäßig würde das Senden
     beendet und der Stream oder die Verbindung geschlossen. Zweckmäßig für
     manuelle NTML-Authentifizierung.
     Die meisten Anwendungen benötigen diese Option nicht.
     Verfügbar seit PHP 7.3.0 und cURL 7.51.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-keypasswd">
   <term>
    <constant>CURLOPT_KEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Das erforderliche Passwort, um den privaten
     <constant>CURLOPT_SSLKEY</constant>- oder
     <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant>-Schlüssel zu verwenden.
     Verfügbar seit cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-krb4level">
   <term>
    <constant>CURLOPT_KRB4LEVEL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die KRB4- (Kerberos 4) Sicherheitsstufe. Folgende Werte (von niedriger zu
     höherer Stufe) sind gültig:
     <literal>"clear"</literal>,
     <literal>"safe"</literal>,
     <literal>"confidential"</literal>,
     <literal>"private"</literal>.
     Sollte die Zeichenkette keinen dieser Werte enthalten, dann wird die
     höchste Stufe genutzt, &dh; <literal>"private"</literal>. Wenn diese
     Option auf &null; gesetzt ist, wird die KRB4-Sicherheit deaktiviert.
     Derzeit funkioniert KRB4 nur bei FTP-Transaktionen.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-krblevel">
   <term>
    <constant>CURLOPT_KRBLEVEL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set the kerberos security level for FTP and also enables kerberos awareness.
     This should be set to one of the following <type>string</type>s:
     <simplelist type="inline">
      <member><literal>clear</literal></member>
      <member><literal>safe</literal></member>
      <member><literal>confidential</literal></member>
      <member><literal>private</literal></member>
     </simplelist>
     .
     If the <type>string</type> is set but does not match one of these,
     <literal>private</literal> is used.
     Setting this option to &null; will disable kerberos support for FTP.
     Defaults to &null;.
     Available as of cURL 7.16.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-localport">
   <term>
    <constant>CURLOPT_LOCALPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Sets the local port number of the socket used for the connection.
     This option accepts any value that can be cast to a valid <type>int</type>.
     Defaults to <literal>0</literal>.
     Available as of cURL 7.15.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-localportrange">
   <term>
    <constant>CURLOPT_LOCALPORTRANGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     The number of attempts cURL makes to find a working local port number,
     starting with the one set with <constant>CURLOPT_LOCALPORT</constant>.
     This option accepts any value that can be cast to a valid <type>int</type>.
     Defaults to <literal>1</literal>.
     Available as of cURL 7.15.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-login-options">
   <term>
    <constant>CURLOPT_LOGIN_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Kann verwendet werden, um protokollspezifische Anmeldeoptionen zu setzen,
     &zb; den bevorzugten Authentifizierungsmechanismus per "AUTH=NTLM" oder
     "AUTH=*", und sollte in Verbindung mit der Option
     <constant>CURLOPT_USERNAME</constant> verwendet werden.
     Verfügbar seit PHP 7.0.7 und cURL 7.34.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-low-speed-limit">
   <term>
    <constant>CURLOPT_LOW_SPEED_LIMIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die Übertragungsgeschwindigkeit in Bytes pro Sekunde. Wenn dieser Wert für
     die Dauer von <constant>CURLOPT_LOW_SPEED_TIME</constant> Sekunden
     unterschritten wird, stuft PHP die Übertragung als zu langsam ein und
     bricht sie ab.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-low-speed-time">
   <term>
    <constant>CURLOPT_LOW_SPEED_TIME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die Zeit in Sekunden, in der die Transferrate unter
     <constant>CURLOPT_LOW_SPEED_LIMIT</constant> geduldet wird. Nach dieser
     Zeit wird die Transferrate als zu langsam angesehen und der Transfer wird
     beendet.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mail-auth">
   <term>
    <constant>CURLOPT_MAIL_AUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set a <type>string</type> with the authentication address (identity)
     of a submitted message that is being relayed to another server.
     The address should not be specified within a pair of angled brackets
     (<literal>&gt;&lt;</literal>).
     If an empty <type>string</type> is used then a pair of brackets are sent by cURL
     as required by RFC 2554.
     Available as of cURL 7.25.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mail-from">
   <term>
    <constant>CURLOPT_MAIL_FROM</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set a <type>string</type> with the sender's email address when sending SMTP mail.
     The email address should be specified with angled brackets
     (<literal>&gt;&lt;</literal>) around it,
     which if not specified are added automatically.
     If this parameter is not specified then an empty address is sent
     to the SMTP server which might cause the email to be rejected.
     Available as of cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mail-rcpt">
   <term>
    <constant>CURLOPT_MAIL_RCPT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set to an <type>array</type> of <type>string</type>s
     with the recipients to pass to the server in an SMTP mail request.
     Each recipient should be specified within a pair of angled brackets
     (<literal>&gt;&lt;</literal>).
     If an angled bracket is not used as the first character,
     cURL assumes a single email address has been provided
     and encloses that address within brackets.
     Available as of cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mail-rcpt-alllowfails">
   <term>
    <constant>CURLOPT_MAIL_RCPT_ALLLOWFAILS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Verfügbar seit PHP 8.2.0 und cURL 7.69.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxage-conn">
   <term>
    <constant>CURLOPT_MAXAGE_CONN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die maximale Leerlaufzeit, für die eine bestehende Verbindung zur
     Wiederverwendung in Betracht gezogen wird. Standardmäßig ist die maximale
     Zeit auf <literal>118</literal> Sekunden eingestellt.
     Verfügbar seit PHP 8.2.0 und cURL 7.65.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxconnects">
   <term>
    <constant>CURLOPT_MAXCONNECTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die maximal erlaubte Anzahl persistenter Verbindungen; bei Erreichen des
     Limits wird die älteste Verbindung im Cache geschlossen, um zu verhindern,
     dass sich die Anzahl der offenen Verbindungen erhöht.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxfilesize">
   <term>
    <constant>CURLOPT_MAXFILESIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Sets the maximum accepted size (in bytes) of a file to download.
     If the file requested is found larger than this value,
     the transfer is aborted
     and <constant>CURLE_FILESIZE_EXCEEDED</constant> is returned.
     Passing <literal>0</literal> disables this option,
     and passing a negative size returns a
     <constant>CURLE_BAD_FUNCTION_ARGUMENT</constant>.
     If the file size is not known prior to the start of download,
     this option has no effect.
     For setting a size limit above <literal>2GB</literal>,
     <constant>CURLOPT_MAXFILESIZE_LARGE</constant> should be used.
     As of cURL 8.4.0, this option also stops ongoing transfers
     if they reach this threshold.
     This option accepts any value that can be cast to a valid <type>int</type>.
     Defaults to <literal>0</literal>.
     Available as of cURL 7.10.8.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxfilesize-large">
   <term>
    <constant>CURLOPT_MAXFILESIZE_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die maximale Größe einer Datei in Bytes, die heruntergeladen werden darf.
     Ist die angeforderte Datei größer als dieser Wert, wird die Übertragung
     nicht gestartet und <constant>CURLE_FILESIZE_EXCEEDED</constant>
     zurückgegeben. Da die Größe einer Datei vor dem Herunterladen nicht immer
     bekannt ist, bewirkt diese Option bei solchen Dateien nichts, selbst wenn
     sie größer ist als der angegebene Grenzwert.
     Verfügbar seit PHP 8.2.0 und cURL 7.11.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxlifetime-conn">
   <term>
    <constant>CURLOPT_MAXLIFETIME_CONN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die maximale Zeit in Sekunden, die bei einer bestehenden Verbindung seit
     ihrer Erstellung vergangen sein darf, um für eine erneute Verwendung in
     Betracht gezogen zu werden. Wenn im Cache eine Verbindung gefunden wird,
     die älter als dieser Wert ist, wird sie geschlossen, sobald alle laufenden
     Übertragungen abgeschlossen sind. Der Standardwert ist 0 Sekunden, was
     bedeutet, dass die Option deaktiviert ist und alle Verbindungen dafür in
     Frage kommen, wiederverwendet zu werden.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-maxredirs">
   <term>
    <constant>CURLOPT_MAXREDIRS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die maximal erlaubte Anzahl von HTTP-Weiterleitungen. Diese Option sollte
     zusammen mit <constant>CURLOPT_FOLLOWLOCATION</constant> verwendet werden.
     Der Standardwert von <literal>20</literal> wird gesetzt, um
     Endlos-Weiterleitungen zu verhindern. Der Wert <literal>-1</literal>
     erlaubt unendlich viele Weiterleitungen und <literal>0</literal>
     verhindert jegliche Weiterleitung.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-max-recv-speed-large">
   <term>
    <constant>CURLOPT_MAX_RECV_SPEED_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Wenn ein Download diese Geschwindigkeit (gezählt in Bytes pro Sekunde) im
     Gesamtdurchschnitt während der Übertragung überschreitet, wird die
     Übertragung angehalten, um die durschnittliche Rate kleiner oder gleich
     dem Wert des Parameters zu halten. Voreinstellung ist unbegrenzte
     Geschwindigkeit.
     Verfügbar seit cURL 7.15.5
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-max-send-speed-large">
   <term>
    <constant>CURLOPT_MAX_SEND_SPEED_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Wenn ein Upload diese Geschwindigkeit (gezählt in Bytes pro Sekunde) im
     Gesamtdurchschnitt während der Übertragung überschreitet, wird die
     Übertragung angehalten, um die durschnittliche Rate kleiner oder gleich
     dem Wert des Parameters zu halten. Voreinstellung ist unbegrenzte
     Geschwindigkeit.
     Verfügbar seit cURL 7.15.5
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mime-options">
   <term>
    <constant>CURLOPT_MIME_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Verfügbar seit PHP 8.3.0 und cURL 7.81.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-mute">
   <term>
    <constant>CURLOPT_MUTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um jegliche Ausgabe der cURL-Funktionen zu unterbinden.
     Entfernt in cURL 7.15.5 (stattdessen kann
     <constant xmlns="http://docbook.org/ns/docbook">CURLOPT_RETURNTRANSFER</constant>
     verwendet werden)
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-netrc">
   <term>
    <constant>CURLOPT_NETRC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um die lokale Datei <filename>~/.netrc</filename> nach einem
     Benutzernamen und einem Passwort zu durchsuchen, mit dem eine Verbindung
     zur Gegenstelle aufgebaut wird.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-netrc-file">
   <term>
    <constant>CURLOPT_NETRC_FILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set a <type>string</type> containing the full path name to a <literal>.netrc</literal> file.
     If this option is omitted and <constant>CURLOPT_NETRC</constant> is set,
     cURL checks for a <literal>.netrc</literal> file
     in the current user's home directory.
     Available as of cURL 7.11.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-new-directory-perms">
   <term>
    <constant>CURLOPT_NEW_DIRECTORY_PERMS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Sets the value of the permissions (<type>int</type>) that is set on newly created directories
     on the remote server. The default value is <literal>0755</literal>.
     The only protocols that can use this are
     <literal>sftp://</literal>, <literal>scp://</literal>
     and <literal>file://</literal>.
     Available as of cURL 7.16.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-new-file-perms">
   <term>
    <constant>CURLOPT_NEW_FILE_PERMS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Sets the value of the permissions (as an <type>int</type>) that are set on newly created files
     on the remote server. The default value is <literal>0644</literal>.
     The only protocols that can use this are
     <literal>sftp://</literal>, <literal>scp://</literal>
     and <literal>file://</literal>.
     Available as of cURL 7.16.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-nobody">
   <term>
    <constant>CURLOPT_NOBODY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um den Body nicht in die Ausgabe aufzunehmen.
     Die Anfragemethode wird dann auf HEAD gesetzt. Die Änderung in &false;
     ändert die Methode nicht in GET.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-noprogress">
   <term>
    <constant>CURLOPT_NOPROGRESS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um die Fortschrittsanzeige für den Transfer auszublenden.
     <note>
      <para>
       PHP setzt die Option automatisch auf &true;. Dies sollte ausschließlich
       für die Fehlersuche geändert werden.
      </para>
     </note>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-noproxy">
   <term>
    <constant>CURLOPT_NOPROXY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set a <type>string</type> consisting of a comma separated list of hostnames
     that do not require a proxy to get reached.
     Each name in this list is matched as either a domain
     which contains the hostname or the hostname itself.
     The only wildcard available in the <type>string</type>
     is a single <literal>*</literal> character which matches all hosts,
     effectively disabling the proxy.
     Setting this option to an empty <type>string</type> enables the proxy for all hostnames.
     Since cURL 7.86.0, IP addresses set with this option
     can be provided using CIDR notation.
     Available as of cURL 7.19.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-nosignal">
   <term>
    <constant>CURLOPT_NOSIGNAL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um jegliche cURL-Funktion zu ignorieren, die ein Signal an den
     PHP-Prozess sendet. In multi-threaded SAPIs ist diese Option
     standardmäßig aktiviert, sodass Zeitüberschreitungen weiterhin abgefangen
     werden können.
     Verfügbar seit cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-passwdfunction">
   <term>
    <constant>CURLOPT_PASSWDFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Ein Callback, der drei Parameter erwartet.
     Der erste ist die cURL-Ressource, der zweite eine Zeichenkette die einen
     Passwort-Prompt enthält und der dritte Parameter enthält die maximal
     zulässige Länge des Passworts. Die Funktion sollte das Passwort als
     Zeichenkette zurückgeben.
     Entfernt in PHP 7.3.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-password">
   <term>
    <constant>CURLOPT_PASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Das Passwort, das für die Authentifizierung verwendet wird.
     Verfügbar seit cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-path-as-is">
   <term>
    <constant>CURLOPT_PATH_AS_IS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um Dot-Dot-Sequenzen nicht aufzulösen.
     Verfügbar seit PHP 7.0.7 und cURL 7.42.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pinnedpublickey">
   <term>
    <constant>CURLOPT_PINNEDPUBLICKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Setzt den gepinnten öffentlichen Schlüssel.
     Die Zeichenkette kann der Dateiname des gepinnten öffentlichen Schlüssels
     sein. Das erwartete Dateiformat ist "PEM" oder "DER". Die Zeichenkette
     kann auch eine beliebige Anzahl von Base64-kodierten SHA-256-Hashes sein,
     denen "sha256//" vorangestellt ist und die durch ";" getrennt sind.
     Verfügbar seit PHP 7.0.7 und cURL 7.39.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pipewait">
   <term>
    <constant>CURLOPT_PIPEWAIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um auf Pipelining/Multiplexing zu warten.
     Verfügbar seit PHP 7.0.7 und cURL 7.43.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-port">
   <term>
    <constant>CURLOPT_PORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Ein alternativer Port für die Verbindung.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-post">
   <term>
    <constant>CURLOPT_POST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um eine HTTP-POST-Anfrage abzusetzen. Dabei handelt es sich um das
     übliche <literal>application/x-www-form-urlencoded</literal>, wie es im
     Allgemeinen von HTML-Formularen erzeugt wird.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postfields">
   <term>
    <constant>CURLOPT_POSTFIELDS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die in einer HTTP-POST-Anfrage zu nutzenden Daten.
     Als Wert für diesen Parameter kann entweder eine URL-kodierte Zeichenkette
     übergeben werden, &zb;
     "<literal>para1=val1&amp;para2=val2&amp;...</literal>", oder ein Array,
     wobei die Feldnamen als Schlüssel und die Felddaten als Wert verwendet
     werden.
     Ist <parameter>value</parameter> ein Array, dann wird der
     <literal>Content-Type</literal>-Header auf
     <literal>multipart/form-data</literal> gesetzt.
     Dateien können mit <classname>CURLFile</classname> oder
     <classname>CURLStringFile</classname> gesendet werden. In diesem Fall
     muss <parameter>value</parameter> ein Array sein.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postquote">
   <term>
    <constant>CURLOPT_POSTQUOTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Ein Array von FTP-Kommandos, die nach der FTP-Anfrage auf dem Server
     ausgeführt werden sollen.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-postredir">
   <term>
    <constant>CURLOPT_POSTREDIR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Eine Bitmaske von 1 (301 Moved Permanently), 2 (302 Found) und 4 (303 See
     Other), ob die HTTP-POST-Methode beibehalten werden soll, wenn
     <constant>CURLOPT_FOLLOWLOCATION</constant> gesetzt ist und ein
     sepzifischer Typ von Weiterleitung auftritt.
     Verfügbar seit cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-pre-proxy">
   <term>
    <constant>CURLOPT_PRE_PROXY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Ein Wert vom Typ <type>string</type>, der den Hostnamen des Präproxys oder
     dessen IP-Adresse in Dezimalpunktschreibweise enthält, mit dem sich curl
     für die kommende Anfrage verbinden soll, bevor es sich mit dem in
     <constant>CURLOPT_PROXY</constant> angegebenen HTTP(S)-Proxy verbindet.
     Der Präproxy kann nur ein SOCKS-Proxy sein und sollte mit vorangestelltem
     <literal>[scheme]://</literal> angegeben werden, um anzugeben welcher Typ
     von Socks verwendet wird. Eine numerische IPv6-Adresse muss in [eckigen
     Klammen] angegeben werden. Wird der Präproxy als leere Zeichenkette
     angegeben, deaktiviert dies die Verwendung eines Präproxys ausdrücklich.
     Um eine Portnummer in dieser Zeichenkette anzugeben, wird ein
     <literal>:[port]</literal> am Ende des Hostnamens angefügt. Die Portnummer
     des Proxys kann optinal separat mit der Option
     <constant>CURLOPT_PROXYPORT</constant> angegeben werden. Wenn kein Port
     angegeben wird, wird für Proxys standardmäßig Port 1080 verwendet.
     Verfügbar seit PHP 7.3.0 und cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-prequote">
   <term>
    <constant>CURLOPT_PREQUOTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set an <type>array</type> of FTP command <type>string</type>s to pass to the server
     after the transfer type is set.
     These commands are not performed when a directory listing is performed,
     only for file transfers.
     Available as of cURL 7.9.5.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-private">
   <term>
    <constant>CURLOPT_PRIVATE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Alle Daten, die mit diesem cURL-Handle verknüpft werden sollen. Diese
     Daten können später mit der Option <constant>CURLINFO_PRIVATE</constant>
     von <function>curl_getinfo</function> abgerufen werden. cURL macht nichts
     mit diesen Daten.
     Bei cURL-Mehrfach-Handles sind diese privaten Daten typischerweise ein
     eindeutiger Schlüssel, um ein Standard-cURL-Handle zu identifizieren.
     Verfügbar seit cURL 7.10.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-progressfunction">
   <term>
    <constant>CURLOPT_PROGRESSFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Ein Callback, der fünf Parameter erwartet. Der erste ist die
     cURL-Ressource, der zweite ist die erwartete Gesamtzahl von Bytes, die in
     dieser Übertragung voraussichtlich heruntergeladen werden, der dritte ist
     die Anzahl von Bytes die bisher heruntergeladen wurden, der vierte ist die
     erwartete Gesamtzahl von Bytes, die bei dieser Übertragung hochgeladen
     werden, und der fünfte ist die Anzahl von Bytes, die bisher hochgeladen
     wurden.
     <note>
      <para>
       Der Callback wird nur dann aufgerufen, wenn die Option
       <constant>CURLOPT_NOPROGRESS</constant> auf &false; gesetzt ist.
      </para>
     </note>
     Ein Rückgabewert ungleich 0 bricht die Übertragung ab. In diesem Fall
     setzt der Transfer einen
     <constant>CURLE_ABORTED_BY_CALLBACK</constant>-Fehler.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-protocols">
   <term>
    <constant>CURLOPT_PROTOCOLS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Eine Bitmaske von <constant>CURLPROTO_*</constant>-Werten. Mit dieser
     Einstellung lassen sich die Protokolle einschränken, die libcurl für
     diesen Transfer nutzen darf. Damit wird es möglich ein libcurl mit einer
     Vielzahl an Protokollen zu benutzen, gleichzeitig aber lassen sich die für
     einen bestimmten Transfer zulässigen Protokolle beschränken. Standardmäßig
     akzeptiert libcurl alle unterstützten Protokolle.
     Siehe auch <constant>CURLOPT_REDIR_PROTOCOLS</constant>.
     Zulässige Optionen:
     <constant>CURLPROTO_HTTP</constant>,
     <constant>CURLPROTO_HTTPS</constant>,
     <constant>CURLPROTO_FTP</constant>,
     <constant>CURLPROTO_FTPS</constant>,
     <constant>CURLPROTO_SCP</constant>,
     <constant>CURLPROTO_SFTP</constant>,
     <constant>CURLPROTO_TELNET</constant>,
     <constant>CURLPROTO_LDAP</constant>,
     <constant>CURLPROTO_LDAPS</constant>,
     <constant>CURLPROTO_DICT</constant>,
     <constant>CURLPROTO_FILE</constant>,
     <constant>CURLPROTO_TFTP</constant>,
     <constant>CURLPROTO_MQTT</constant> und
     <constant>CURLPROTO_ALL</constant>.
     Verfügbar seit cURL 7.19.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-protocols-str">
   <term>
    <constant>CURLOPT_PROTOCOLS_STR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Verfügbar seit PHP 8.3.0 und cURL 7.85.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy">
   <term>
    <constant>CURLOPT_PROXY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der HTTP-Proxy, durch den die Anfragen getunnelt werden sollen.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyauth">
   <term>
    <constant>CURLOPT_PROXYAUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die HTTP-Authentifizierungsmethode(n), die für die Proxy-Verbindung
     verwendet werden sollen. Nutzt die gleiche Bitmaske wie in
     <constant>CURLOPT_HTTPAUTH</constant> beschrieben. Nur
     <constant>CURLAUTH_BASIC</constant> und <constant>CURLAUTH_NTLM</constant>
     sind derzeit für Proxy-Verbindungen zulässig.
     Verfügbar seit cURL 7.10.7.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyheader">
   <term>
    <constant>CURLOPT_PROXYHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Ein Array von benutzerdefinierten HTTP-Headern, die an Proxies gesendet
     werden sollen.
     Verfügbar seit PHP 7.0.7 und cURL 7.37.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxypassword">
   <term>
    <constant>CURLOPT_PROXYPASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set a <type>string</type> with the password to be used for authentication with the proxy.
     Available as of cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyport">
   <term>
    <constant>CURLOPT_PROXYPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Port des Proxys, mit dem eine Verbindung hergestellt werden soll; kann
     auch mittels <constant>CURLOPT_PROXY</constant> gesetzt werden.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxytype">
   <term>
    <constant>CURLOPT_PROXYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Entweder <constant>CURLPROXY_HTTP</constant> (Standard),
     <constant>CURLPROXY_SOCKS4</constant>,
     <constant>CURLPROXY_SOCKS5</constant>,
     <constant>CURLPROXY_SOCKS4A</constant> oder
     <constant>CURLPROXY_SOCKS5_HOSTNAME</constant>.
     Verfügbar seit cURL 7.10.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyusername">
   <term>
    <constant>CURLOPT_PROXYUSERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set a <type>string</type> with the username to be used for authentication with the proxy.
     Available as of cURL 7.19.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxyuserpwd">
   <term>
    <constant>CURLOPT_PROXYUSERPWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Benutzername und Passwort, die für die Proxy-Verbindung verwendet werden
     sollen, in der Form <literal>"[benutzername]:[passwort]"</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-cainfo">
   <term>
    <constant>CURLOPT_PROXY_CAINFO</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Pfad zum Bundle der Proxy-Zertifizierungsstelle (CA). Der Pfad wird
     als <type>String</type> angegeben, der eine Datei mit einem oder mehreren
     Zertifikaten enthält, die zur Prüfung des HTTPS-Proxys verwendet werden
     sollen. Diese Option gilt für die Verbindung zu einem HTTPS-Proxy, nicht
     zu einem HTTPS-Server. Der Standardwert ist der Systempfad, unter dem das
     cacert-Bundle von libcurl gespeichert sein sollte.
     Verfügbar seit PHP 7.3.0 und cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-cainfo-blob">
   <term>
    <constant>CURLOPT_PROXY_CAINFO_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Name einer PEM-Datei, die ein oder mehrere Zertifikate enthält, mit
     denen der HTTPS-Proxy verifiziert werden soll. Diese Option ist für die
     Verbindung zu einem HTTPS-Proxy, nicht zu einem HTTPS-Server.
     Standardmäßig ist dies der Systempfad, unter dem das cacert-Bundle von
     libcurl gespeichert sein sollte.
     Verfügbar seit PHP 8.2.0 und cURL 7.77.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-capath">
   <term>
    <constant>CURLOPT_PROXY_CAPATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Das Verzeichnis, das mehrere CA-Zertifikate enthält, mit denen der
     HTTPS-Proxy geprüft wird.
     Verfügbar seit PHP 7.3.0 und cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-crlfile">
   <term>
    <constant>CURLOPT_PROXY_CRLFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Name der CRL-Datei (Certificate Revocation List, Zertifikatsperrliste)
     im PEM-Format, die für die Zertifikatsprüfung beim SSL-Austausch verwendet
     wird.
     Verfügbar seit PHP 7.3.0 und cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-issuercert">
   <term>
    <constant>CURLOPT_PROXY_ISSUERCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Name der Datei, die das SSL-Zertifikat des Proxy-Ausstellers enthält.
     Verfügbar seit PHP 8.1.0 und cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-issuercert-blob">
   <term>
    <constant>CURLOPT_PROXY_ISSUERCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Das SSL-Zertifikat des Proxy-Ausstellers aus dem Speicherblob.
     Verfügbar seit PHP 8.1.0 und cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-keypasswd">
   <term>
    <constant>CURLOPT_PROXY_KEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die Zeichenkette, die als Passwort erforderlich ist, um den privaten
     Schlüssel aus <constant>CURLOPT_PROXY_SSLKEY</constant> zu verwenden. Es
     wird niemals ein Passwort benötigt, um ein Zertifikat zu laden, aber es
     wird eins benötigt, um den privaten Schlüssel zu laden. Diese Option gilt
     für die Verbindung zu einem HTTPS-Proxy, nicht zu einem HTTPS-Server.
     Verfügbar seit PHP 7.3.0 und cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-pinnedpublickey">
   <term>
    <constant>CURLOPT_PROXY_PINNEDPUBLICKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der festgesteckte (pinned) öffentlichen Schlüssel für den HTTPS-Proxy. Die
     Zeichenkette kann der Dateiname des festgesteckten öffentlichen Schlüssels
     sein. Das erwartete Dateiformat ist "PEM" oder "DER". Die Zeichenkette
     kann auch eine beliebige Anzahl von Base64-kodierten SHA256-Hashwerten
     enthalten, denen "sha256://" vorangestellt ist und die durch ";" getrennt
     sind.
     Verfügbar seit PHP 7.3.0 und cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-service-name">
   <term>
    <constant>CURLOPT_PROXY_SERVICE_NAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Name des Proxy-Authentifizierungsdienstes.
     Verfügbar seit PHP 7.0.7 und cURL 7.43.0 (für HTTP-Proxys) bzw.
     cURL 7.49.0 (für SOCKS5-Proxys).
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcert">
   <term>
    <constant>CURLOPT_PROXY_SSLCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Dateiname des Client-Zertifikats, das für die Verbindung mit dem
     HTTPS-Proxy verwendet wird. Das Standardformat ist "P12" für Secure
     Transport und "PEM" für andere Engines und kann mit
     <constant>CURLOPT_PROXY_SSLCERTTYPE</constant> geändert werden.
     Bei NSS oder Secure Transport kann dies auch der in der
     Sicherheitsdatenbank angegebene Kurzname des Zertifikats sein, das für die
     Authentifizierung verwendet werden soll.
     Soll eine Datei im aktuellen Verzeichnis verwendet werden, sollte sie mit
     dem Präfix "./" angegeben werden, um Verwechslungen mit einem Kurznamen zu
     vermeiden.
     Verfügbar seit PHP 7.3.0 und cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcerttype">
   <term>
    <constant>CURLOPT_PROXY_SSLCERTTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Das Format des Client-Zertifikats, das für die Verbindung mit dem
     HTTPS-Proxy verwendet wird. Unterstützte Formate sind "PEM" und "DER",
     außer bei Secure Transport. OpenSSL (ab Version 0.9.3) und Secure
     Transport (unter iOS 5 oder höher bzw. OS X 10.7 oder höher)
     unterstützen zusätzlich "P12" für PKCS#12-kodierte Dateien.
     Der Standardwert ist "PEM".
     Verfügbar seit PHP 7.3.0 und cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslcert-blob">
   <term>
    <constant>CURLOPT_PROXY_SSLCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Das Client-Zertifikat des SSL-Proxys aus dem Speicherblob.
     Verfügbar seit PHP 8.1.0 und cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkey">
   <term>
    <constant>CURLOPT_PROXY_SSLKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Dateiname des privaten Schlüssels, der für die Verbindung mit dem
     HTTPS-Proxy verwendet wird. Das Standardformat ist "PEM" und kann mit
     <constant>CURLOPT_PROXY_SSLKEYTYPE</constant> geändert werden (nur unter
     iOS und Mac OS X). Diese Option wird ignoriert, wenn cURL mit Secure
     Transport kompiliert wurde. Verfügbar, wenn TLS beim Kompilieren aktivert
     wurde.
     Verfügbar seit PHP 7.3.0 und cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkeytype">
   <term>
    <constant>CURLOPT_PROXY_SSLKEYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Das Format des privaten Schlüssels. Unterstützte Formate sind "PEM", "DER"
     und "ENG".
     Verfügbar seit PHP 7.3.0 und cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslkey-blob">
   <term>
    <constant>CURLOPT_PROXY_SSLKEY_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der private Schlüssel für das Proxy-Zertifikat aus dem Speicherblob.
     Verfügbar seit PHP 8.1.0 und cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-sslversion">
   <term>
    <constant>CURLOPT_PROXY_SSLVERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Eine der folgenden Konstanten:
     <simplelist type="inline">
      <member><constant>CURL_SSLVERSION_DEFAULT</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_0</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_1</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_2</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_3</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_DEFAULT</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_0</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_1</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_2</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_3</constant></member>
      <member><constant>CURL_SSLVERSION_SSLv3</constant></member>
     </simplelist>
     .
     <warning>
      <simpara>
       Es ist besser, diese Option nicht zu setzen und den Standardwert
       <constant>CURL_SSLVERSION_DEFAULT</constant> zu verwenden, der versucht,
       die Remote-SSL-Protokollversion herauszufinden.
      </simpara>
     </warning>
     Verfügbar seit PHP 7.3.0 und cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-cipher-list">
   <term>
    <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die Liste der Chiffriersuiten, die für die Verbindung mit dem HTTPS-Proxy
     verwendet werden sollen. Die Liste muss syntaktisch korrekt sein und
     besteht aus einer oder mehreren Zeichenketten von Chiffriersuiten, die
     durch Doppelpunkt getrennt sind. Kommas und Leerzeichen sind zwar auch als
     Trennzeichen erlaubt, aber normalerweise werden Doppelpunkte verwendet; !,
     - und + können als Operatoren verwendet werden.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-options">
   <term>
    <constant>CURLOPT_PROXY_SSL_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Definiert die Verhaltensoptionen für den SSL-Proxy, die eine Bitmaske der
     folgenden Konstanten sind:
     <simplelist type="inline">
      <member><constant>CURLSSLOPT_ALLOW_BEAST</constant></member>
      <member><constant>CURLSSLOPT_NO_REVOKE</constant></member>
      <member><constant>CURLSSLOPT_NO_PARTIALCHAIN</constant></member>
     </simplelist>
     Verfügbar seit PHP 7.3.0 und cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-verifyhost">
   <term>
    <constant>CURLOPT_PROXY_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>2</literal> prüft die Namensfelder im Zertifikat des HTTP-Proxies
     gegen den Proxy-Namen. Wenn auf <literal>0</literal> gesetzt, gelingt die
     Verbindung unabhängig von dem im Zertifikat verwendeten Namen. Diese
     Möglichkeit ist mit Vorsicht zu verwenden!
     <literal>1</literal> wird in cURL 7.28.0 und früher als Debug-Option
     behandelt.
     Von cURL 7.28.1 bis 7.65.3 wird
     <constant>CURLE_BAD_FUNCTION_ARGUMENT</constant> zurückgegeben.
     Von cURL 7.66.0 an werden <literal>1</literal> und
     <literal>2</literal> gleich behandelt.
     In Produktivumgebungen sollte der Wert dieser Option beim Standardwert
     <literal>2</literal> belassen werden.
     Verfügbar seit PHP 7.3.0 und cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-ssl-verifypeer">
   <term>
    <constant>CURLOPT_PROXY_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false;, um cURL zu veranlassen, das Peer-Zertifikat nicht zu prüfen.
     Alternative Zertifikate zur Prüfung können mit der Option
     <constant>CURLOPT_CAINFO</constant> angegeben werden und das Verzeichnis
     mit den Zertifikaten mit der Option <constant>CURLOPT_CAPATH</constant>.
     Wenn der Wert auf &false; gesetzt ist, ist die Überprüfung des
     Peer-Zertifikats immer erfolgreich. Die Voreinstellung ist &true;.
     Verfügbar seit PHP 7.3.0 und cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tls13-ciphers">
   <term>
    <constant>CURLOPT_PROXY_TLS13_CIPHERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die Liste der Chiffriersuiten, die für die TLS 1.3-Verbindung mit einem
     Proxy verwendet werden sollen. Die Liste muss syntaktisch korrekt sein und
     besteht aus einer oder mehreren Zeichenketten von Chiffriersuiten, die
     durch Doppelpunkt getrennt sind. Die Option wird zurzeit nur verwendet,
     wenn cURL mit OpenSSL 1.1.1 oder höher kompiliert wurde. Wird ein anderes
     SSL-Backend verwendet, kann versucht werden die Chiffriersuiten unter
     Verwendung der Option <constant>CURLOPT_PROXY_SSL_CIPHER_LIST</constant>
     zu setzen. Verfügbar, wenn mit OpenSSL &gt;= 1.1.1 kompiliert.
     Verfügbar seit PHP 7.3.0 und cURL 7.61.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-password">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Das Passwort, das für die TLS-Authentifizierungsmethode, die mit der
     Option <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant> angegeben wurde,
     verwendet werden soll. Erfordert, dass die Option
     <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant> ebenfalls angegeben
     wird.
     Verfügbar seit PHP 7.3.0 und cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-type">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die Methode der TLS-Authentifizierung, die für die HTTPS-Verbindung
     verwendet wird. Die unterstützte Methode is <literal>"SRP"</literal>.
     <note>
      <para>
       Die Secure Remote Password (SRP) Authentifizierung für TLS bietet
       gegenseitige Authentifizierung, wenn beide Seiten ein gemeinsames
       Geheimnis (shared secret) haben. Um TLS-SRP zu verwenden, müssen auch
       die Optionen <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant> und
       <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant> gesetzt werden.
      </para>
     </note>
     Verfügbar seit PHP 7.3.0 und cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-tlsauth-username">
   <term>
    <constant>CURLOPT_PROXY_TLSAUTH_USERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Benutzername, der für die mit der Option
     <constant>CURLOPT_PROXY_TLSAUTH_TYPE</constant> angegebene
     TLS-Authentifizierungsmethode des HTTPS-Proxys verwendet wird. Erfordert,
     dass die Option <constant>CURLOPT_PROXY_TLSAUTH_PASSWORD</constant>
     ebenfalls angegeben wird.
     Verfügbar seit PHP 7.3.0 und cURL 7.52.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-proxy-transfer-mode">
   <term>
    <constant>CURLOPT_PROXY_TRANSFER_MODE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set to <literal>1</literal> to set the transfer mode (binary or ASCII)
     for FTP transfers done via an HTTP proxy, by appending
     <literal>type=a</literal> or <literal>type=i</literal> to the URL.
     Without this setting or it being set to <literal>0</literal>,
     <constant>CURLOPT_TRANSFERTEXT</constant> has no effect
     when doing FTP via a proxy.
     Defaults to <literal>0</literal>.
     Available as of cURL 7.18.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-put">
   <term>
    <constant>CURLOPT_PUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um ein HTTP-PUT für eine Datei abzusetzen. Die fragliche Datei
     muss dabei über die Konstanten <constant>CURLOPT_INFILE</constant> und
     <constant>CURLOPT_INFILESIZE</constant> angegeben werden.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-quick-exit">
   <term>
    <constant>CURLOPT_QUICK_EXIT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Verfügbar seit PHP 8.3.0 und cURL 7.87.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-quote">
   <term>
    <constant>CURLOPT_QUOTE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Ein Array von FTP-Kommandos, die vor der FTP-Anfrage auf dem Server
     ausgeführt werden sollen.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-random-file">
   <term>
    <constant>CURLOPT_RANDOM_FILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Name der Datei, die zur Initialisierung des Zufallsgenerators für SSL
     benutzt werden soll.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-range">
   <term>
    <constant>CURLOPT_RANGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Bereiche an Daten, die empfangen werden sollen. Das Format sollte
     <literal>"X-Y"</literal> sein, wobei <literal>X</literal> oder
     <literal>Y</literal> optional sind. HTTP-Transfers unterstützen auch
     mehrere durch Komma getrennte Intervalle im Format
     <literal>"X-Y,N-M"</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-readdata">
   <term>
    <constant>CURLOPT_READDATA</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Sets a file pointer <type>resource</type> that will be used by the file read function
     set with <constant>CURLOPT_READFUNCTION</constant>.
     Available as of cURL 7.9.7.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-readfunction">
   <term>
    <constant>CURLOPT_READFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Ein Callback, der drei Parameter erwartet.
     Der erste ist die cURL-Ressource, der zweite ist eine Stream-Ressource,
     die cURL durch die Option <constant>CURLOPT_INFILE</constant> zur
     Verfügung gestellt wird, und der dritte ist die Höchstmenge von Daten, die
     gelesen werden. Der Callback muss eine Zeichenkette zurückgeben, deren
     Länge kleiner oder gleich der angeforderten Datenmenge ist, typischerweise
     durch Lesen aus der übergebenen Stream-Ressource. Er soll eine leere
     Zeichenkette zurückgeben, um <literal>EOF</literal> zu signalisieren.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-redir-protocols">
   <term>
    <constant>CURLOPT_REDIR_PROTOCOLS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Eine Bitmaske von <constant>CURLPROTO_*</constant>-Werten. Mit dieser
     Einstellung lassen sich die Protokolle einschränken, die libcurl in einer
     Übertragung nutzen darf, wenn eine Weiterleitung stattfindet (das setzt
     voraus, dass <constant>CURLOPT_FOLLOWLOCATION</constant> erlaubt ist).
     Auf diese Weise können bestimmte Übertragungen eingeschränkt werden,
     sodass nur eine Auswahl von Protokollen in Umleitungen verwendet werden
     darf. Standardmäßig akzeptiert libcurl alle unterstützten Protokolle außer
     FILE und SCP.
     Siehe auch <constant>CURLOPT_PROTOCOLS</constant> für weitere
     Informationen zu den Protokoll-Konstanten.
     Verfügbar seit cURL 7.19.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-redir-protocols-str">
   <term>
    <constant>CURLOPT_REDIR_PROTOCOLS_STR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Verfügbar seit PHP 8.3.0 und cURL 7.85.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-referer">
   <term>
    <constant>CURLOPT_REFERER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Inhalt des <literal>"Referer: "</literal>-Headers, der in einer
     HTTP-Anfrage verwendet werden soll.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-request-target">
   <term>
    <constant>CURLOPT_REQUEST_TARGET</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Verfügbar seit PHP 7.3.0 und cURL 7.55.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-resolve">
   <term>
    <constant>CURLOPT_RESOLVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Gibt eine benutzerdefinierte Adresse für eine bestimmte Kombination aus
     Host und Port an. Ein Array aus Zeichenketten für Hostname, Port und
     IP-Adresse, wobei die einzelnen Elemente durch einen Doppelpunkt getrennt
     sind; im Format:
     <code>
      array("example.com:80:127.0.0.1")
     </code>
     Verfügbar seit cURL 7.21.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-resume-from">
   <term>
    <constant>CURLOPT_RESUME_FROM</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die Position in Bytes, ab der ein Transfer fortgesetzt werden soll.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-returntransfer">
   <term>
    <constant>CURLOPT_RETURNTRANSFER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um den Transfer als Zeichenkette zurückzugeben, anstatt ihn direkt
     auszugeben.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-client-cseq">
   <term>
    <constant>CURLOPT_RTSP_CLIENT_CSEQ</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set an <type>int</type> with the CSEQ number to issue for the next RTSP request.
     Useful if the application is resuming a previously broken connection.
     The CSEQ increments from this new number henceforth.
     Defaults to <literal>0</literal>.
     Available as of cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-request">
   <term>
    <constant>CURLOPT_RTSP_REQUEST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Sets the kind of RTSP request to make.
     Must be one of the <constant>CURL_RTSPREQ_<replaceable>*</replaceable></constant>
     constants.
     Available as of cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-server-cseq">
   <term>
    <constant>CURLOPT_RTSP_SERVER_CSEQ</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set an <type>int</type> with the CSEQ number to expect
     for the next RTSP Server to Client request.
     This feature (listening for Server requests) is unimplemented.
     Defaults to <literal>0</literal>.
     Available as of cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-session-id">
   <term>
    <constant>CURLOPT_RTSP_SESSION_ID</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set a <type>string</type> with the value of the current RTSP Session ID for the handle.
     Once this value is set to any non-&null; value,
     cURL returns <constant>CURLE_RTSP_SESSION_ERROR</constant>
     if the ID received from the server does not match.
     If set to &null;, cURL automatically sets the ID
     the first time the server sets it in a response.
     Defaults to &null;
     Available as of cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-stream-uri">
   <term>
    <constant>CURLOPT_RTSP_STREAM_URI</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Sets a <type>string</type> with the stream URI to operate on.
     If not set, cURL defaults to operating on generic server options
     by passing <literal>*</literal> in the place of the RTSP Stream URI.
     When working with RTSP, <literal>CURLOPT_RTSP_STREAM_URI</literal>
     indicates what URL to send to the server in the request header
     while the <literal>CURLOPT_URL</literal> indicates
     where to make the connection to.
     Available as of cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-rtsp-transport">
   <term>
    <constant>CURLOPT_RTSP_TRANSPORT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set the <literal>Transport:</literal> header for this RTSP session.
     Available as of cURL 7.20.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-safe-upload">
   <term>
    <constant>CURLOPT_SAFE_UPLOAD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Immer &true;, was die Unterstützung für das Präfix <literal>@</literal>
     für das Hochladen von Dateien in <constant>CURLOPT_POSTFIELDS</constant>
     deaktiviert. Das bedeutet, dass Werte, die mit <literal>@</literal>
     beginnen, sicher als Felder übergeben werden können. Für das Hochladen
     kann stattdessen <classname>CURLFile</classname> verwendet werden.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sasl-authzid">
   <term>
    <constant>CURLOPT_SASL_AUTHZID</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die Autorisierungs-ID (authzid) für die Übertragung. Gilt nur für den
     Authentifizierungsmechanismus PLAIN SASL, wo sie optional ist. Wird nichts
     angegeben, wird nur die durch den Benutzernamen angegebene
     Authentifizierungskennung (authcid) zusammen mit dem Passwort an den
     Server gesendet. Wenn die authzid nicht angegeben wurde, leitet der Server
     die authzid von der authcid ab und verwendet sie intern.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sasl-ir">
   <term>
    <constant>CURLOPT_SASL_IR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um die Übertragung der ersten Antwort im ersten Paket zu
     ermöglichen.
     Verfügbar seit PHP 7.0.7 und cURL 7.31.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-service-name">
   <term>
    <constant>CURLOPT_SERVICE_NAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Name des Authentifizierungsdienstes.
     Verfügbar seit PHP 7.0.7 und cURL 7.43.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-share">
   <term>
    <constant>CURLOPT_SHARE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Ein Ergebnis von <function>curl_share_init</function>. Veranlasst das
     cURL-Handle, die Daten des gemeinsamen Handles zu verwenden.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-socks5-auth">
   <term>
    <constant>CURLOPT_SOCKS5_AUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die zu verwendende SOCKS5-Authentifizierungsmethode. Die Optionen sind:
     <constant>CURLAUTH_BASIC</constant>,
     <constant>CURLAUTH_GSSAPI</constant>,
     <constant>CURLAUTH_NONE</constant>.
     Der bitweise Operator <literal>|</literal> (oder) kann verwendet werden,
     um mehrere Methoden zu kombinieren. In diesem Fall fragt cURL den Server,
     welche Methoden er unterstützt, und wählt die beste aus.
     <constant>CURLAUTH_BASIC</constant> erlaubt die Authentifizierung mit
     Benutzername/Passwort.
     <constant>CURLAUTH_GSSAPI</constant> erlaubt die GSS-API-Authentifizierung.
     <constant>CURLAUTH_NONE</constant> erlaubt keine Authentifizierung.
     Voreinstellung ist <literal>CURLAUTH_BASIC|CURLAUTH_GSSAPI</literal>.
     Der eigentliche Benutzername und das Passwort werden mit der Option
     <constant>CURLOPT_PROXYUSERPWD</constant> gesetzt.
     Verfügbar seit PHP 7.3.0 und cURL 7.55.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-socks5-gssapi-nec">
   <term>
    <constant>CURLOPT_SOCKS5_GSSAPI_NEC</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set to <literal>1</literal> to enable and <literal>0</literal> to disable
     the unprotected exchange of the protection mode negotiation
     as part of the GSSAPI negotiation.
     Available as of cURL 7.19.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-socks5-gssapi-service">
   <term>
    <constant>CURLOPT_SOCKS5_GSSAPI_SERVICE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set a <type>string</type> holding the name of the SOCKS5 service.
     Defaults to <literal>rcmd</literal>.
     Available as of cURL 7.19.4 and deprecated as of cURL 7.49.0.
     Use <constant>CURLOPT_PROXY_SERVICE_NAME</constant> instead.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-auth-types">
   <term>
    <constant>CURLOPT_SSH_AUTH_TYPES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Eine Bitmaske bestehend aus einer oder mehreren der
     Authentifizierungsmethoden
     <constant>CURLSSH_AUTH_PUBLICKEY</constant>,
     <constant>CURLSSH_AUTH_PASSWORD</constant>,
     <constant>CURLSSH_AUTH_HOST</constant>,
     <constant>CURLSSH_AUTH_KEYBOARD</constant>.
     <constant>CURLSSH_AUTH_ANY</constant>, damit libcurl eine auswählen kann.
     Verfügbar seit cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-compression">
   <term>
    <constant>CURLOPT_SSH_COMPRESSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um die eingebaute SSH-Komprimierung zu aktivieren. Dies ist eine
     Anfrage, kein Befehl; der Server kann diese ignorieren.
     Verfügbar seit PHP 7.3.0 und cURL 7.56.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-hostkeyfunction">
   <term>
    <constant>CURLOPT_SSH_HOSTKEYFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Verfügbar seit PHP 8.3.0 und cURL 7.84.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-host-public-key-md5">
   <term>
    <constant>CURLOPT_SSH_HOST_PUBLIC_KEY_MD5</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Eine Zeichenkette, die 32 hexadezimale Ziffern enthält. Die Zeichenkette
     sollte die MD5-Prüfsumme des öffentlichen Schlüssels des Remote-Hosts
     sein. Falls die Prüfsummen nicht übereinstimmen, weist libcurl die
     Verbindung zum Host zurück. Diese Option gilt nur für SCP- und
     SFTP-Übertragungen.
     Verfügbar seit cURL 7.17.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-host-public-key-sha256">
   <term>
    <constant>CURLOPT_SSH_HOST_PUBLIC_KEY_SHA256</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der öffentliche Schlüssel des entfernten Hosts in Form eines
     Base64-kodierten SHA256-Hashes. Wenn der angegebene Hash nicht mit dem
     Hash des entfernten Hosts übereinstimmt, schlägt die Übertragung fehl.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-knownhosts">
   <term>
    <constant>CURLOPT_SSH_KNOWNHOSTS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set to the filename of the <filename>known_host</filename> file to use
     which should use the OpenSSH file format as supported by libssh2.
     Available as of cURL 7.19.6.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-private-keyfile">
   <term>
    <constant>CURLOPT_SSH_PRIVATE_KEYFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Dateiname des privaten Schlüssels. Wenn nicht gesetzt, verwendet
     libcurl standardmäßig $HOME/.ssh/id_dsa, falls die Umgebungsvariable HOME
     gesetzt ist, und andernfalls "id_dsa" im aktuellen Verzeichnis. Wenn die
     Datei passwortgeschützt ist, kann das Passwort über die Option
     <constant>CURLOPT_KEYPASSWD</constant> angegeben werden.
     Verfügbar seit cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssh-public-keyfile">
   <term>
    <constant>CURLOPT_SSH_PUBLIC_KEYFILE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Dateiname des öffentlichen Schlüssels. Wenn nicht gesetzt, verwendet
     libcurl standardmäßig $HOME/.ssh/id_dsa.pub, falls die Umgebungsvariable
     HOME gesetzt ist, und andernfalls "id_dsa.pub" im aktuellen Verzeichnis.
     Verfügbar seit cURL 7.16.1.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcert">
   <term>
    <constant>CURLOPT_SSLCERT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Name einer Datei, die ein Zertifikat im PEM-Format enthält.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcertpasswd">
   <term>
    <constant>CURLOPT_SSLCERTPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Das Passwort für das <constant>CURLOPT_SSLCERT</constant>-Zertifikat.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcerttype">
   <term>
    <constant>CURLOPT_SSLCERTTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Das Format des Zertifikats. Unterstützt werden <literal>"PEM"</literal>
     (Standard), <literal>"DER"</literal> und <literal>"ENG"</literal>.
     Von OpenSSL 0.9.3 an wird <literal>"P12"</literal> (für PKCS#12-kodierte
     Dateien) ebenfalls unterstützt.
     Verfügbar seit cURL 7.9.3.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslcert-blob">
   <term>
    <constant>CURLOPT_SSLCERT_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     SSL client certificate from memory blob.
     Verfügbar seit PHP 8.1.0 und cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslengine">
   <term>
    <constant>CURLOPT_SSLENGINE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Bezeichner für die Crypto-Engine des privaten SSL-Schlüssels, der in
     <constant>CURLOPT_SSLKEY</constant> definiert ist.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslengine-default">
   <term>
    <constant>CURLOPT_SSLENGINE_DEFAULT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Bezeichner für die Crypto-Engine, die für asymmetrische
     kryptographische Operationen verwendet wird.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkey">
   <term>
    <constant>CURLOPT_SSLKEY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Name einer Datei, die einen privaten SSL-Schlüssel enthält.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkeypasswd">
   <term>
    <constant>CURLOPT_SSLKEYPASSWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Das geheime Passwort, das für den in <constant>CURLOPT_SSLKEY</constant>
     definierten privaten SSL-Schlüssel benötigt wird.
     <note>
      <para>
       Da diese Option sensible Daten enthält, sollte das PHP-Skript in einer
       sicheren Umgebung liegen.
      </para>
     </note>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkeytype">
   <term>
    <constant>CURLOPT_SSLKEYTYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Typ des in <constant>CURLOPT_SSLKEY</constant> definierten privaten
     SSL-Schlüssels. Unterstützte Schlüssel-Typen sind <literal>"PEM"</literal>
     (Standard), <literal>"DER"</literal> und <literal>"ENG"</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslkey-blob">
   <term>
    <constant>CURLOPT_SSLKEY_BLOB</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Private key for client cert from memory blob.
     Verfügbar seit PHP 8.1.0 und cURL 7.71.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-sslversion">
   <term>
    <constant>CURLOPT_SSLVERSION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Eine der folgenden Konstanten:
     <simplelist type="inline">
      <member><constant>CURL_SSLVERSION_DEFAULT</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1</constant></member>
      <member><constant>CURL_SSLVERSION_SSLv2</constant></member>
      <member><constant>CURL_SSLVERSION_SSLv3</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_0</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_1</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_2</constant></member>
      <member><constant>CURL_SSLVERSION_TLSv1_3</constant></member>
     </simplelist>
     .
     Die höchste TLS-Version kann durch Verwendung einer der
     <constant>CURL_SSLVERSION_MAX_<replaceable>*</replaceable></constant>-Konstanten
     spezifiziert werden.
     Es ist ebenfalls möglich, eine der
     <constant>CURL_SSLVERSION_<replaceable>*</replaceable></constant>-Konstanten
     mittels OR mit einer der
     <constant>CURL_SSLVERSION_MAX_<replaceable>*</replaceable></constant>-Konstanten
     zu verknüpfen.
     <simplelist type="inline">
      <member><constant>CURL_SSLVERSION_MAX_DEFAULT</constant> (die höchste Version, die von der Bibliothek unterstützt wird)</member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_0</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_1</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_2</constant></member>
      <member><constant>CURL_SSLVERSION_MAX_TLSv1_3</constant></member>
     </simplelist>
     .
     <warning>
      <simpara>
       Es ist besser, diese Option nicht zu setzen und die
       Standardeinstellungen beizubehalten.
       Sie auf <constant>CURL_SSLVERSION_SSLv2</constant> oder
       <constant>CURL_SSLVERSION_SSLv3</constant> zu setzen, ist angesichts der
       bekannten Sicherheitslücken in SSLv2 und SSLv3 sehr gefährlich.
      </simpara>
     </warning>
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-cipher-list">
   <term>
    <constant>CURLOPT_SSL_CIPHER_LIST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Eine Liste der für SSL zu verwendenden Chiffren. Zum Beispiel sind
     <literal>RC4-SHA</literal> und <literal>TLSv1</literal> gültige
     Chiffre-Listen.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-ec-curves">
   <term>
    <constant>CURLOPT_SSL_EC_CURVES</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Eine durch Doppelpunkte getrennte Liste von elliptischen
     Kurvenalgorithmen. Zum Beispiel ist <literal>X25519:P-521</literal> eine
     gültige Liste von zwei elliptischen Kurven. Diese Option definiert die
     Schlüsselaustauschalgorithmen des Clients im SSL-Handshake, wenn das
     SSL-Backend, für das cURL gebaut wurde, diese unterstützt.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-enable-alpn">
   <term>
    <constant>CURLOPT_SSL_ENABLE_ALPN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false;, um ALPN im SSL-Handshake zu deaktivieren (wenn das SSL-Backend,
     für das libcurl gebaut wurde, es unterstützt), was genutzt werden kann,
     um HTTP2 auszuhandeln.
     Verfügbar seit PHP 7.0.7 und cURL 7.36.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-enable-npn">
   <term>
    <constant>CURLOPT_SSL_ENABLE_NPN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false;, um NPN im SSL-Handshake zu deaktivieren (wenn das SSL-Backend,
     für das libcurl gebaut wurde, es unterstützt), was genutzt werden kann,
     um HTTP2 auszuhandeln.
     Verfügbar seit PHP 7.0.7 und cURL 7.36.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-falsestart">
   <term>
    <constant>CURLOPT_SSL_FALSESTART</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um TLS-False-Start zu aktivieren.
     Verfügbar seit PHP 7.0.7 und cURL 7.42.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-options">
   <term>
    <constant>CURLOPT_SSL_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Definiert SSL-Verhaltensoptionen, die eine Bitmaske von beliebigen
     der folgenden Konstanten ist:
     <simplelist type="inline">
      <member><constant>CURLSSLOPT_ALLOW_BEAST</constant></member>
      <member><constant>CURLSSLOPT_NO_REVOKE</constant></member>
      <member><constant>CURLSSLOPT_AUTO_CLIENT_CERT</constant></member>
      <member><constant>CURLSSLOPT_NATIVE_CA</constant></member>
      <member><constant>CURLSSLOPT_NO_PARTIALCHAIN</constant></member>
      <member><constant>CURLSSLOPT_REVOKE_BEST_EFFORT</constant></member>
     </simplelist>
     Verfügbar seit PHP 7.0.7 und cURL 7.25.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-sessionid-cache">
   <term>
    <constant>CURLOPT_SSL_SESSIONID_CACHE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set to <literal>0</literal> to disable and <literal>1</literal> to enable
     SSL session-ID caching.
     By default all transfers are done using the cache enabled.
     Available as of cURL 7.16.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifyhost">
   <term>
    <constant>CURLOPT_SSL_VERIFYHOST</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     <literal>2</literal>, um zu überprüfen, ob ein Common Name-Feld oder ein
     Subject Alternate Name-Feld im SSL-Peer-Zertifikat mit dem angegebenen
     Hostnamen übereinstimmt. <literal>0</literal>, um die Namen nicht zu
     überprüfen. <literal>1</literal> sollte nicht verwendet werden. In
     Produktionsumgebungen sollte der Wert dieser Option auf
     <literal>2</literal> (Standardwert) belassen werden.
     Die Unterstützung für den Wert <literal>1</literal> wurde in cURL 7.28.1
     entfernt.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifypeer">
   <term>
    <constant>CURLOPT_SSL_VERIFYPEER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &false;, um die Überprüfung des Peer-Zertifikats seitens cURL zu
     unterdrücken. Alternative Zertifikate zur Überprüfung können mit der
     Option <constant>CURLOPT_CAINFO</constant> angegeben werden und das
     Verzeichnis mit den Zertifikaten kann mit
     <constant>CURLOPT_CAPATH</constant> ausgewiesen werden.
     Seit cURL 7.10 standardmäßig &true;. Seit cURL 7.10 installiertes
     Standardpaket.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ssl-verifystatus">
   <term>
    <constant>CURLOPT_SSL_VERIFYSTATUS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um den Status des Zertifikats zu überprüfen.
     Verfügbar seit PHP 7.0.7 und cURL 7.41.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-stderr">
   <term>
    <constant>CURLOPT_STDERR</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Ein alternativer Ort für die Ausgabe von Fehlern anstelle von
     <constant>STDERR</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-stream-weight">
   <term>
    <constant>CURLOPT_STREAM_WEIGHT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die numerische Gewichtung des Streams (eine Zahl zwischen 1 und 256).
     Verfügbar seit PHP 7.0.7 und cURL 7.46.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-suppress-connect-headers">
   <term>
    <constant>CURLOPT_SUPPRESS_CONNECT_HEADERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um Proxy-CONNECT-Antwortheader in den Benutzercallback-Funktionen
     <constant>CURLOPT_HEADERFUNCTION</constant> und
     <constant>CURLOPT_WRITEFUNCTION</constant> zu unterdrücken, wenn
     <constant>CURLOPT_HTTPPROXYTUNNEL</constant> verwendet wird und eine
     CONNECT-Anfrage durchgeführt wird.
     Verfügbar seit PHP 7.3.0 und cURL 7.54.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-fastopen">
   <term>
    <constant>CURLOPT_TCP_FASTOPEN</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um TCP-Fast-Open zu aktivieren.
     Verfügbar seit PHP 7.0.7 und cURL 7.49.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepalive">
   <term>
    <constant>CURLOPT_TCP_KEEPALIVE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Ist diese Option auf <literal>1</literal> gesetzt, werden
     TCP-Keepalive-Signale gesendet. Die Verzögerung und Häufigkeit dieser
     Signale kann mit den Optionen <constant>CURLOPT_TCP_KEEPIDLE</constant>
     und <constant>CURLOPT_TCP_KEEPINTVL</constant> festgelegt werden, falls
     das Betriebssystem diese unterstützt. Wenn auf <literal>0</literal>
     gesetzt (Voreinstellung), sind Keepalive-Signale deaktiviert.
     Verfügbar seit cURL 7.25.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepidle">
   <term>
    <constant>CURLOPT_TCP_KEEPIDLE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Wenn <constant>CURLOPT_TCP_KEEPALIVE</constant> aktiviert ist, gibt diese
     Option die Verzögerung in Sekunden an, die das Betriebssystem wartet,
     während die Verbindung inaktiv ist, bevor Keepalive-Signale gesendet
     werden. Nicht alle Betriebssysteme unterstützen diese Option.
     Die Voreinstellung ist <literal>60</literal>.
     Verfügbar seit cURL 7.25.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-keepintvl">
   <term>
    <constant>CURLOPT_TCP_KEEPINTVL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Wenn <constant>CURLOPT_TCP_KEEPALIVE</constant> aktiviert ist, gibt diese
     Option den Zeitraum in Sekunden an, den das Betriebssystem zwischen dem
     Senden von Keepalive-Signalen wartet. Nicht alle Betriebssysteme
     unterstützen diese Option.
     Die Voreinstellung ist <literal>60</literal>.
     Verfügbar seit cURL 7.25.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tcp-nodelay">
   <term>
    <constant>CURLOPT_TCP_NODELAY</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um den Nagle-Algorithmus von TCP zu deaktivieren, der verucht, die
     Anzahl kleiner Pakete im Netzwerk zu reduzieren.
     Verfügbar seit cURL 7.11.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-telnetoptions">
   <term>
    <constant>CURLOPT_TELNETOPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set an <type>array</type> of <type>string</type>s to pass to the telnet negotiations.
     The variables should be in the format <literal>&gt;option=value&lt;</literal>.
     cURL supports the options <literal>TTYPE</literal>,
     <literal>XDISPLOC</literal> and <literal>NEW_ENV</literal>.
     Available as of cURL 7.7.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tftp-blksize">
   <term>
    <constant>CURLOPT_TFTP_BLKSIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set the blocksize to use for TFTP data transmission.
     Valid range is <literal>8</literal>-<literal>65464</literal> bytes.
     The default of <literal>512</literal> bytes is used if this option is not specified.
     The specified block size is only used if supported by the remote server.
     If the server does not return an option acknowledgment
     or returns an option acknowledgment with no block size,
     the default of <literal>512</literal> bytes is used.
     Available as of cURL 7.19.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tftp-no-options">
   <term>
    <constant>CURLOPT_TFTP_NO_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um keine TFTP-Optionen zu senden.
     Verfügbar seit PHP 7.0.7 und cURL 7.48.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timecondition">
   <term>
    <constant>CURLOPT_TIMECONDITION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Dieser Wert gibt an, wie <constant>CURLOPT_TIMEVALUE</constant> behandelt
     werden soll. Der Wert <constant>CURL_TIMECOND_IFMODSINCE</constant>
     bewirkt, dass die Seite nur dann zurückgegeben wird, wenn sie seit
     <constant>CURLOPT_TIMEVALUE</constant> verändert wurde; andernfalls wird
     ein <literal>"304 Not Modified"</literal>-Header zurückgegeben
     (vorausgesetzt <constant>CURLOPT_HEADER</constant> ist &true;).
     <constant>CURL_TIMECOND_IFUNMODSINCE</constant> bewirkt das gegenteilige
     Verhalten. Mit <constant>CURL_TIMECOND_NONE</constant> wird
     <constant>CURLOPT_TIMEVALUE</constant> ignoriert und die Seite immer
     zurückzugeben. Die Standardeinstellung ist
     <constant>CURL_TIMECOND_NONE</constant>. Vor cURL 7.46.0 war die
     Standardeinstellung <constant>CURL_TIMECOND_IFMODSINCE</constant>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timeout">
   <term>
    <constant>CURLOPT_TIMEOUT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die maximale Ausführungszeit für cURL-Funktionen in Sekunden.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timeout-ms">
   <term>
    <constant>CURLOPT_TIMEOUT_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die maximale Ausführungszeit für cURL-Funktionen in Millisekunden.
     <!-- http://curl.haxx.se/libcurl/c/curl_easy_setopt.html -->
     Wenn libcurl so kompiliert wurde, dass die Standard-Namensauflösung des
     Systems verwendet wird, verwendet dieser Teil der Verbindung dennoch die
     volle Sekundenauflösung für Timeouts mit einem minimalen Timeout von einer
     Sekunde.
     Verfügbar seit cURL 7.16.2.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timevalue">
   <term>
    <constant>CURLOPT_TIMEVALUE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die Zeit seit dem 1. Januar 1970 in Sekunden. Dieser Wert wird von
     <constant>CURLOPT_TIMECONDITION</constant> verwendet.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-timevalue-large">
   <term>
    <constant>CURLOPT_TIMEVALUE_LARGE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die Zeit seit dem 1. Januar 1970 in Sekunden. Dieser Wert wird von
     <constant>CURLOPT_TIMECONDITION</constant> verwendet. Der Standardwert ist
     Null. Der Unterschied zwischen dieser Option und
     <constant>CURLOPT_TIMEVALUE</constant> ist der Typ des Arguments. Auf
     Systemen, auf denen "long" nur aus 32-Bit besteht, muss diese Option
     verwendet werden, um Daten jenseits des Jahrs 2038 anzugeben.
     Verfügbar seit PHP 7.3.0 und cURL 7.59.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tls13-ciphers">
   <term>
    <constant>CURLOPT_TLS13_CIPHERS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die Liste der Chiffriersuiten, die für die TLS 1.3-Verbindung verwendet
     werden sollen. Die Liste muss syntaktisch korrekt sein und besteht aus
     einer oder mehreren Zeichenketten von Chiffriersuiten, die durch
     Doppelpunkt getrennt sind. Die Option wird zurzeit nur verwendet, wenn
     cURL mit OpenSSL 1.1.1 oder später kompiliert wurde. Wird ein anderes
     SSL-Backend verwendet, kann versucht werden die Chiffriersuiten unter
     Verwendung der Option <constant>CURLOPT_SSL_CIPHER_LIST</constant>
     zu setzen. Verfügbar, wenn mit OpenSSL &gt;= 1.1.1 kompiliert.
     Verfügbar seit PHP 7.3.0 und cURL 7.61.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tlsauth-password">
   <term>
    <constant>CURLOPT_TLSAUTH_PASSWORD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set a password to use for the TLS authentication method specified
     with the <constant>CURLOPT_TLSAUTH_TYPE</constant> option. Requires that
     the <constant>CURLOPT_TLSAUTH_USERNAME</constant> option also be set.
     This feature relies on TLS SRP which does not work with TLS 1.3.
     Available as of cURL 7.21.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tlsauth-type">
   <term>
    <constant>CURLOPT_TLSAUTH_TYPE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set a <type>string</type> with the method of the TLS authentication.
     Supported method is <literal>SRP</literal>
     (TLS Secure Remote Password authentication).
     Available as of cURL 7.21.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-tlsauth-username">
   <term>
    <constant>CURLOPT_TLSAUTH_USERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set a <type>string</type> with the username to use for the TLS authentication method
     specified with the <constant>CURLOPT_TLSAUTH_TYPE</constant> option.
     Requires that the <constant>CURLOPT_TLSAUTH_PASSWORD</constant> option
     also be set.
     This feature relies on TLS SRP which does not work with TLS 1.3.
     Available as of cURL 7.21.4.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-transfer-encoding">
   <term>
    <constant>CURLOPT_TRANSFER_ENCODING</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set to <literal>1</literal> to enable and <literal>0</literal> to disable
     requesting compressed <literal>Transfer Encoding</literal> in the outgoing
     HTTP request. If the server responds with a compressed
     <literal>Transfer Encoding</literal>,
     cURL will automatically uncompress it on reception.
     Defaults to <literal>0</literal>.
     Available as of cURL 7.21.6.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-transfertext">
   <term>
    <constant>CURLOPT_TRANSFERTEXT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um FTP-Transfers im ASCII-Modus durchzuführen.
     Für LDAP werden Daten in Klartext statt HTML übertragen. Unter Windows
     wird <constant>STDOUT</constant> nicht in den binären Modus gesetzt.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-unix-socket-path">
   <term>
    <constant>CURLOPT_UNIX_SOCKET_PATH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Aktiviert die Verwendung von Unix-Domain-Sockets als Verbindsendpunkt und
     setzt den Pfad auf den angegebenen <type>String</type>.
     Verfügbar seit PHP 7.0.7 und cURL 7.40.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-unrestricted-auth">
   <term>
    <constant>CURLOPT_UNRESTRICTED_AUTH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um beim Verfolgen eines <literal>Location: </literal>-Headers
     (siehe <constant>CURLOPT_FOLLOWLOCATION</constant>) weiterhin
     Benutzername und Passwort zu senden, selbst dann, wenn sich der Hostname
     geändert hat.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upkeep-interval-ms">
   <term>
    <constant>CURLOPT_UPKEEP_INTERVAL_MS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Einige Protokolle verfügen über Mechanismen, um bestehende Verbindungen
     aufrecht zu erhalten, und senden zu diesem Zweck in der Regel einen Teil
     des Datenverkehrs an diese Verbindungen.
     Mit dieser Option wird das Intervall für die Aufrechterhaltung der
     Verbindung festgelegt. Derzeit ist HTTP/2 das einzige Protokoll mit einem
     solchen Mechanismus. Wenn das Intervall überschritten wird, wird ein
     HTTP/2-PING-Frame an die Verbindung gesendet.
     Die Voreinstellung ist <literal>60</literal> Sekunden.
     Verfügbar seit PHP 8.2.0 und cURL 7.62.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upload">
   <term>
    <constant>CURLOPT_UPLOAD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um einen Upload vorzubereiten
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-upload-buffersize">
   <term>
    <constant>CURLOPT_UPLOAD_BUFFERSIZE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Die bevorzugte Puffergröße für den cURL-Upload-Puffer in Bytes.
     Die Standardgröße des Upload-Puffers beträgt 64 Kilobytes. Als maximale
     Puffergröße können 2 Megabyte eingestellt werden, als Mindestgröße 16
     Kilobyte.
     Verfügbar seit PHP 8.2.0 und cURL 7.62.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-url">
   <term>
    <constant>CURLOPT_URL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der abzurufende URL. Diese kann auch bei der Initialisierung einer Session
     mittels <function>curl_init</function> gesetzt werden.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-use-ssl">
   <term>
    <constant>CURLOPT_USE_SSL</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Sets the desired level of SSL/TLS for the transfer
     when using FTP, SMTP, POP3, IMAP, etc.
     These are all protocols that start out plain text
     and get "upgraded" to SSL using the STARTTLS command.
     Set to one of the following:
     <constant>CURLUSESSL_NONE</constant>,
     <constant>CURLUSESSL_TRY</constant>,
     <constant>CURLUSESSL_CONTROL</constant> or
     <constant>CURLUSESSL_ALL</constant>.
     Available as of cURL 7.17.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-useragent">
   <term>
    <constant>CURLOPT_USERAGENT</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der Wert des Headers <literal>"User-Agent: "</literal>, der in einer
     HTTP-Anfrage verwendet werden soll.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-username">
   <term>
    <constant>CURLOPT_USERNAME</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Der für die Authentifizierung zu verwendende Benutzername.
     Verfügbar seit cURL 7.19.1
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-userpwd">
   <term>
    <constant>CURLOPT_USERPWD</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Benutzername und Passwort, die für die Verbindung verwendet werden sollen,
     im Format <literal>"[benutzername]:[passwort]"</literal>.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-verbose">
   <term>
    <constant>CURLOPT_VERBOSE</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     &true;, um ausführliche Informationen auszugeben, entweder nach
     <constant>STDERR</constant> oder in die mittels der Option
     <constant>CURLOPT_STDERR</constant> gewählte Datei.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-wildcardmatch">
   <term>
    <constant>CURLOPT_WILDCARDMATCH</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Set to <literal>1</literal> to transfer multiple files
     according to a filename pattern.
     The pattern can be specified as part of the
     <constant>CURLOPT_URL</constant> option,
     using an fnmatch-like pattern (Shell Pattern Matching)
     in the last part of URL (filename).
     Available as of cURL 7.21.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-writefunction">
   <term>
    <constant>CURLOPT_WRITEFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Ein Callback, der zwei Parameter erwartet. Der erste ist die
     cURL-Ressource, der zweite ist eine Zeichenkette mit den zu schreibenden
     Daten. Die Daten müssen durch diesen Callback gespeichert werden. Er muss
     die genaue Anzahl der geschriebenen Bytes zurückgeben, sonst wird die
     Übertragung mit einem Fehler abgebrochen.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-writeheader">
   <term>
    <constant>CURLOPT_WRITEHEADER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     In diese Datei werden die Header eines Transfers geschrieben.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-ws-options">
   <term>
    <constant>CURLOPT_WS_OPTIONS</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Verfügbar seit PHP 8.3.0 und cURL 7.86.0
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-xferinfofunction">
   <term>
    <constant>CURLOPT_XFERINFOFUNCTION</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Ein Callback, der zwei Parameter erwartet. Dient einem ähnlichen Zweck wie
     <constant>CURLOPT_PROGRESSFUNCTION</constant>, ist aber moderner und die
     bevorzugte Option von cURL.
     Verfügbar seit PHP 8.2.0 und cURL 7.32.0.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="constant.curlopt-xoauth2-bearer">
   <term>
    <constant>CURLOPT_XOAUTH2_BEARER</constant>
    (<type>int</type>)
   </term>
   <listitem>
    <para>
     Gibt das OAuth 2.0 Access-Token an.
     Verfügbar seit PHP 7.0.7 und cURL 7.33.0
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
