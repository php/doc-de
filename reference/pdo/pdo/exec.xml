<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: eae19eb5fe0f5bebcbce382ea7a505cedeb5a883 Maintainer: nikic Status: ready -->
<!-- Reviewed: yes Maintainer: samesch -->

<refentry xml:id="pdo.exec" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>PDO::exec</refname>
  <refpurpose>
   Führt ein SQL-Statement aus und liefert die Anzahl der betroffenen Zeilen
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <type class="union"><type>int</type><type>false</type></type><methodname>PDO::exec</methodname>
   <methodparam><type>string</type><parameter>statement</parameter></methodparam>
  </methodsynopsis>

  <para>
   <methodname>PDO::exec</methodname> führt ein SQL-Statement aus und gibt
   die Anzahl der betroffenen Zeilen zurück.
  </para>
  <para>
   <methodname>PDO::exec</methodname> gibt nicht die Ergebnisse eines
   SELECT-Statements zurück. Um diese zu erhalten kann entweder
   <methodname>PDO::query</methodname> genutzt werden, oder ein ein PDOStatement,
   welches über <methodname>PDO::prepare</methodname> erstellt und über
   <methodname>PDOStatement::execute</methodname> ausgeführt wird.
  </para>

 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>statement</parameter></term>
      <listitem>
       <para>
        Das SQL-Statement, welches ausgeführt werden soll.
       </para>
       <para>
        Alle Usereingaben in diesem Query müssen
        <link linkend="pdo.quote">maskiert werden</link>.
       </para>
      </listitem>
     </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <methodname>PDO::exec</methodname> gibt die Anzahl von Zeilen zurück, welche
   durch diese Abfrage geändert oder gelöscht wurden. Wenn keine Zeilen
   geändert wurden, gibt <methodname>PDO::exec</methodname> <literal>0</literal>
   zurück.
  </para>

  &return.falseproblem;
  <para>
   Das folgende Beispiel verlässt sich fälschlicherweise auf den Rückgabewert
   von <methodname>PDO::exec</methodname>, weswegen ein Statement, welches 0 Zeilen
   ändert, einen Aufruf von <function>die</function> nach sich zieht:
   <programlisting role="php">
<![CDATA[
<?php
$db->exec() or die(print_r($db->errorInfo(), true));  // unrichtig
?>
]]>
   </programlisting>
  </para>

 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Ein DELETE-Statement ausführen</title>
    <para>
     Führt ein DELETE-Statement ohne WHERE-Klausel aus, und gibt die Anzahl der gelöschten
     Zeilen aus.
    </para>
    <programlisting role="php">
<![CDATA[
<?php
$dbh = new PDO('odbc:sample', 'db2inst1', 'ibmdb2');

/* Lösche alle Zeilen aus der FRUIT Tabelle */
$count = $dbh->exec("DELETE FROM fruit");

/* Und gebe die Anzahl an gelöschten Zeilen zurück */
echo "$count Zeilen wurden gelöscht.\n";
?>
]]>
    </programlisting>
    &example.outputs;
    <screen>
<![CDATA[
10 Zeilen wurden gelöscht.
]]>
    </screen>
   </example>
  </para>
 </refsect1>


 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>PDO::prepare</methodname></member>
    <member><methodname>PDO::query</methodname></member>
    <member><methodname>PDOStatement::execute</methodname></member>
   </simplelist>
  </para>
 </refsect1>


</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
