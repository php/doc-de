<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: theseer Status: ready -->
<refentry xml:id="xsltprocessor.transformtouri" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>XSLTProcessor::transformToURI</refname>
  <refpurpose>Transformierung zu einer URI</refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <classsynopsis>
   <ooclass><classname>XSLTProcessor</classname></ooclass>
   <methodsynopsis>
    <type>int</type>
    <methodname>transformToURI</methodname>
    <methodparam><type>DOMDocument</type><parameter>doc</parameter></methodparam>
    <methodparam><type>string</type><parameter>uri</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>
  <para>
   Transformiert die Quell-<classname>DOMNode</classname> unter Verwendung
   des mittels <function>XSLTProcessor::importStylesheet</function>-Methode
   importierten Stylesheets zu einer gegebene URI.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>doc</parameter></term>
     <listitem>
      <para>
       Die zu verarbeitende DOMNode.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>uri</parameter></term>
     <listitem>
      <para>
         Die URI für das Ziel der Transformation.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Liefert die Anzahl geschriebener Bytes zurück oder &false; falls ein Fehler aufgetreten ist.
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Transformierung in eine HTML-Datei</title>
    <programlisting role="php">
<![CDATA[
<?php

// XML-Quellen laden
$xml = new DOMDocument;
$xml->load('collection.xml');

$xsl = new DOMDocument;
$xsl->load('collection.xsl');

// Prozessor instanziieren und konfigurieren
$proc = new XSLTProcessor;
$proc->importStyleSheet($xsl); // XSL Document importieren

$proc->transformToURI($xml, 'file:///tmp/out.html');

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>XSLTProcessor::transformToDoc</function></member>
    <member><function>XSLTProcessor::transformToXml</function></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
