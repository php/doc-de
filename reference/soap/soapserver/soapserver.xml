<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 337114 Maintainer: nobody Status: ready -->

<refentry xml:id="soapserver.soapserver" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SoapServer::SoapServer</refname>
  <refpurpose>SoapServer-Konstruktor</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <modifier>public</modifier> <methodname>SoapServer::SoapServer</methodname>
   <methodparam><type>mixed</type><parameter>wsdl</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter></methodparam>
  </methodsynopsis>
  <para>
   Dieser Konstruktor erlaubt das Erzeugen eines <classname>SoapServer</classname>-Objekts
   im WSDL- oder nicht-WSDL-Modus.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>wsdl</parameter></term>
     <listitem>
      <para>
       Wenn der WSDL-Modus verwendet werden soll, muss die URI auf eine WSDL-Datei
       verweisen. Ansonsten muss &null; übergeben, und die <literal>uri</literal>-Option
       auf den Zielnamensraum des Servers gesetzt werden.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Erlaubt das Setzen der Standard-SOAP-Version  (<literal>soap_version</literal>),
       der internen Zeichenkodierung (<literal>encoding</literal>), und der Actor-URI
       (<literal>actor</literal>).
      </para>
      <para>
       Die <literal>classmap</literal> Option kann genutzt werden, um einige
       WSDL-Typen auf PHP-Klassen abzubilden. Die Option muß ein Array sein mit
       den WSDL-Typen als Schlüssel und den PHP-Klassennamen als Wert.
      </para>
      <para>
       Die Option <literal>typemap</literal> ist ein Array mit Typabbildungen.
       Jede Abbildung ist ein Array mit den Schlüsseln <literal>type_name</literal>,
       <literal>type_ns</literal> (Namensraum-URI), <literal>from_xml</literal>
       (Callback, der einen String-Parameter akzeptiert) und <literal>to_xml</literal>
       (Callback, der einen Objekt-Parameter akzeptiert).
      </para>
      <para>
       Die <literal>cache_wsdl</literal> Option ist entweder
       <constant>WSDL_CACHE_NONE</constant>,
       <constant>WSDL_CACHE_DISK</constant>,
       <constant>WSDL_CACHE_MEMORY</constant> oder
       <constant>WSDL_CACHE_BOTH</constant>.
      </para>
      <para>
       Weiterhin gibt es eine <literal>features</literal> Option, die auf
       <constant>SOAP_WAIT_ONE_WAY_CALLS</constant>,
       <constant>SOAP_SINGLE_ELEMENT_ARRAYS</constant> oder
       <constant>SOAP_USE_XSI_ARRAY_TYPE</constant> gesetzt werden kann.
      </para>
      <para>
       Die <literal>send_errors</literal> Option kann auf &false; gesetzt
       werden, um eine generische Fehlermeldung ("Internal error") anstelle
       einer spezifischen zu senden.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>SoapServer::SoapServer</function> Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php

$server = new SoapServer("some.wsdl");

$server = new SoapServer("some.wsdl", array('soap_version' => SOAP_1_2));

$server = new SoapServer("some.wsdl", array('actor' => "http://example.org/ts-tests/C"));

$server = new SoapServer("some.wsdl", array('encoding'=>'ISO-8859-1'));

$server = new SoapServer(null, array('uri' => "http://test-uri/"));

class MyBook {
    public $title;
    public $author;
}

$server = new SoapServer("books.wsdl", array('classmap' => array('book' => "MyBook")));

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>5.2.0</entry>
       <entry>
        Die <literal>typemap</literal> Option wurde hinzugefügt.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><methodname>SoapClient::SoapClient</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
