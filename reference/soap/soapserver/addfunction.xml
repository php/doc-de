<?xml version='1.0' encoding='utf-8'?>
<!-- EN-Revision: 1.3 Maintainer: sammywg Status: working -->
<!-- $Revision: 1.3 $ -->
<refentry xml:id="soapserver.addfunction" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SoapServer->addFunction()</refname>
  <refpurpose>
   Hinzufügen einer oder mehrerer Funktionen, die SOAP-Anfragen bearbeiten sollen.
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <classsynopsis>
   <ooclass><classname>SoapServer</classname></ooclass>
   <methodsynopsis>
    <type>void</type><methodname>addFunction</methodname>
    <methodparam><type>mixed</type><parameter>functions</parameter></methodparam>
   </methodsynopsis>
  </classsynopsis>
  <para>
   Zur Verfügung stellen von ein oder mehreren Funktionen für entfernte Clients.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>Funktionen</parameter></term>
     <listitem>
      <para>
       Funktionsname als String übergeben, um eine Funktion hinzuzufügen.
      </para>
      <para>
       Array mit Funktionsnamen übergeben, um mehrere Funktionen hinzuzufügen.
      </para>
      <para>
       Spezielle Konstante <constant>SOAP_FUNCTIONS_ALL</constant> übergeben, um
       alle Funktionen zu exportieren.
      </para>
      <note>
       <para>
        <parameter>Funktionen</parameter> müssen alle Argumente in der gleichen Reihenfolge
        entgegennehmen, wie sie in der WSDL-Datei beschrieben sind (es sollten keine Rückgabewerte
        als Argumente definiert werden) und ein oder mehrere Werte zurückgeben. Um mehrere
        Werte zurückzugeben, müssen sich die Werte benannt in einem assoziativen Array befinden.
       </para>
      </note>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &return.void;
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Beispiele</title>
    <programlisting role="php">
<![CDATA[
<?php

function echoString($inputString)
{
    return $inputString;
}

$server->addFunction("echoString");

function echoTwoStrings($inputString1, $inputString2)
{
    return array("outputString1" => $inputString1,
                 "outputString2" => $inputString2);
}
$server->addFunction(array("echoString", "echoTwoStrings"));

$server->addFunction(SOAP_FUNCTIONS_ALL);

?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>
 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><xref linkend="soapserver.construct" /></member>
    <member><xref linkend="soapserver.setclass" /></member>
   </simplelist>
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
