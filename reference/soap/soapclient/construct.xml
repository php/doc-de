<?xml version='1.0' encoding='iso-8859-1'?>
<!-- EN-Revision: 1.11 Maintainer: nobody Status: ready -->
<!-- $Revision: 1.1 $ -->
<refentry xml:id="function.soap-soapclient-construct" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>SoapClient->__construct()</refname>
  <refpurpose>
   SoapClient-Konstruktor
  </refpurpose>
 </refnamediv>
 <refsect1 role="description">
  &reftitle.description;
  <classsynopsis>
   <ooclass><classname>SoapClient</classname></ooclass>
   <constructorsynopsis>
    <methodname>__construct</methodname>
    <methodparam><type>mixed</type><parameter>wsdl</parameter></methodparam>
    <methodparam choice="opt"><type>array</type><parameter>options</parameter></methodparam>
   </constructorsynopsis>
  </classsynopsis>
  <para>
   Der Konstruktor erzeugt ein <classname>SoapClient</classname>-Objekt 
   im <literal>WSDL</literal>- oder <literal>nicht-WSDL</literal>-Modus.
  </para>
 </refsect1>
 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>wsdl</parameter></term>
     <listitem>
      <para>
       URI der <literal>WSDL</literal>-Datei oder &null; wenn der
       <literal>nicht-WSDL</literal>-Modus verwendet werden soll.
      </para>
      <note>
       <para>
        Während der Entwicklung ist es sinnvoll das WSDL-Caching, definiert
        durch die &php.ini; Einstellung <literal>soap.wsdl_cache_ttl</literal>, 
        zu deaktivieren, da sonst Änderungen an der WSDL-Datei erst Wirkung
        zeigen, sobald die <literal>soap.wsdl_cache_ttl</literal> erreicht
        wurde. 
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Ein Array mit Optionen. Optional wenn der <literal>WSDL</literal>-Modus verwendet
       wird, sonst müssen die Werte <literal>location</literal> und <literal>uri</literal> 
       gesetzt werden, wobei <literal>location</literal> die URL der Anfrage und 
       <literal>uri</literal> der Zielnamensraum des SOAP-Service ist.
      </para>
      <para>
       Die <literal>style</literal> und <literal>use</literal> Optionen werden nur im
       <literal>nicht-WSDL</literal>-Modus verwendet. In <literal>WSDL</literal>-Modus
       werden diese von der WSDL-Datei geliefert.
      </para>
      <para>
       Die <literal>soap_version</literal> Option gibt vor, welche SOAP-Client-Version
       verwendet werden soll (SOAP 1.1 oder SOAP 1.2).
      </para>
      <para>
       Die Optionen <literal>login</literal> und <literal>password</literal> können für
       HTTP-Authentifizierung verwendet werden. Um eine Verbindung über einen Proxy-Server 
       herzustellen, stehen die Optionen <literal>proxy_host</literal>,
       <literal>proxy_port</literal>, <literal>proxy_login</literal>
       und <literal>proxy_password</literal> zur Verfügung.
       Für Authentifizierung über HTTPS-Client-Zertifikate nutzen Sie die Optionen
       <literal>local_cert</literal> und <literal>passphrase</literal>.
      </para>
      <para>
       HTTP-SOAP-Anfragen und -Antworten können mit Hilfe von <literal>compression</literal>
       komprimiert werden.
      </para>
      <para>
       Die Option <literal>encoding</literal> definiert die intern verwendete
       Zeichenkodierung. Sie ändert nicht die Kodierung der SOAP-Anfrage selbst (die
       bleibt immer utf-8), es werden lediglich die Zeichenketten konvertiert.
      </para>
      <para>
       In der <literal>classmap</literal> Option können WSDL-Typen auf PHP-Klassen abgebildet
       werden. Die Option muß ein Array sein mit den WSDL-Typen als Schlüssel und den
       PHP-Klassennamen als Wert.
      </para>
      <para>
       Setzen der <literal>trace</literal> Option (boolean) aktiviert den Gebrauch
       der Methoden <link linkend="function.soap-soapclient-getlastrequest">
       SoapClient->__getLastRequest</link>, 
       <link linkend="function.soap-soapclient-getlastrequestheaders">
       SoapClient->__getLastRequestHeaders</link>,
       <link linkend="function.soap-soapclient-getlastresponse">
       SoapClient->__getLastResponse</link> und
       <link linkend="function.soap-soapclient-getlastresponseheaders">
       SoapClient->__getLastResponseHeaders</link>.
      </para>
      <para>
       Die Option <literal>exceptions</literal> (boolean) definiert, ob bei SOAP-Fehlern 
       Exceptions vom Typ <link linkend="function.soap-soapfault-construct">
       SoapFault</link> geworfen werden sollen.
      </para>
      <para>
       Zeitüberschreitung in Sekunden für Verbindungen zu einem SOAP-Service können
       mit der Option <literal>connection_timeout</literal> angegeben werden. Diese
       Option definiert keine Zeitüberschreitung für Dienste mit langsamen Antwortzeiten.
       Um zu definieren, wie lange auf die Beendung einer Anfrage gewartet werden soll,
       steht die Einstellung <link linkend="ini.default-socket-timeout">default_socket_timeout</link>
       zur Verfügung.
      </para>
      <para>
       Die Option <literal>typemap</literal> ist ein Array mit Typabbildungen.
       Jede Abbildung ist ein Array mit den Schlüsseln <literal>type_name</literal>,
       <literal>type_ns</literal> (Namespace URI), <literal>from_xml</literal>
       (callback akzeptiert einen String-Parameter) und <literal>to_xml</literal>
       (callback akzeptiert einen Objekt-Parameter).
      </para>
      <para>
      </para>
      <para>
       Weitere Optionen sind <literal>stream_context</literal>,
       <literal>features</literal>, <literal>cache_wsdl</literal> und
       <literal>user_agent</literal>.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>
 <refsect1 role="examples">
  &reftitle.examples;
    <para>
     <example>
      <title>Beispiele</title>
      <programlisting role="php">
<![CDATA[
<?php

$client = new SoapClient("some.wsdl");

$client = new SoapClient("some.wsdl", array('soap_version'   => SOAP_1_2));

$client = new SoapClient("some.wsdl", array('login'          => "some_name",
                                            'password'       => "some_password"));

$client = new SoapClient("some.wsdl", array('proxy_host'     => "localhost",
                                            'proxy_port'     => 8080));

$client = new SoapClient("some.wsdl", array('proxy_host'     => "localhost",
                                            'proxy_port'     => 8080,
                                            'proxy_login'    => "some_name",
                                            'proxy_password' => "some_password"));

$client = new SoapClient("some.wsdl", array('local_cert'     => "cert_key.pem"));

$client = new SoapClient(null, array('location' => "http://localhost/soap.php",
                                     'uri'      => "http://test-uri/"));

$client = new SoapClient(null, array('location' => "http://localhost/soap.php",
                                     'uri'      => "http://test-uri/",
                                     'style'    => SOAP_DOCUMENT,
                                     'use'      => SOAP_LITERAL));

$client = new SoapClient("some.wsdl", 
  array('compression' => SOAP_COMPRESSION_ACCEPT | SOAP_COMPRESSION_GZIP));

$server = new SoapClient("some.wsdl", array('encoding'=>'ISO-8859-1'));

class MyBook {
    public $title;
    public $author;
}

$server = new SoapClient("books.wsdl", array('classmap' => array('book' => "MyBook")));

?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
