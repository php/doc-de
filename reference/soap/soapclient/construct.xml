<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: fe4e8b87d18f17394e7177917c498774b062448c Maintainer: sammywg Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: 96f69db3ae2245082de88ff0cc4f8a76620a44d1 Reviewer: samesch -->
<refentry xml:id="soapclient.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SoapClient::__construct</refname>
  <refpurpose>SoapClient-Konstruktor</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <constructorsynopsis role="SoapClient">
   <modifier>public</modifier> <methodname>SoapClient::__construct</methodname>
   <methodparam><type class="union"><type>string</type><type>null</type></type><parameter>wsdl</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>options</parameter><initializer>[]</initializer></methodparam>
  </constructorsynopsis>
  <para>
   Erstellt ein <classname>SoapClient</classname>-Objekt, um eine Verbindung
   zu einem SOAP-Dienst herzustellen.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>wsdl</parameter></term>
     <listitem>
      <para>
       Der URI einer WSDL-Datei, die den Dienst beschreibt, der verwendet
       wird, um den Client automatisch zu konfigurieren. Wenn er nicht
       angegeben wird, arbeitet der Client im non-WSDL-Modus.
      </para>
      <note>
       <para>
        Standardmäßig wird die WSDL-Datei aus Performance-Gründen
        zwischengespeichert. Um diese Zwischenspeicherung zu deaktivieren oder
        zu konfigurieren, siehe die
        <link linkend="soap.configuration.list">SOAP-&ConfigureOptions;</link>
        und die Option
        <link linkend="soapclient.construct.options.cache-wsdl"><literal>cache_wsdl</literal></link>.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Ein assoziatives Array, das zusätzliche Optionen für den SOAP-Client
       angibt. Wenn <parameter>wsdl</parameter> angegeben wird, ist es
       optional, andernfalls müssen mindestens <literal>location</literal> und
       <literal>url</literal> angegeben werden.
       <variablelist>
        <varlistentry xml:id="soapclient.construct.options.location">
         <term>
          <parameter>location</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Die URL des SOAP-Servers, an den die Anfrage gesendet werden soll.
          </para>
          <para>
           Wird benötigt, wenn der Parameter <parameter>wsdl</parameter> nicht
           angegeben wird. Wenn sowohl der Parameter
           <parameter>wsdl</parameter> als auch die Option
           <literal>location</literal> angegeben werden, überschreibt die
           Option <literal>location</literal> alle in der WSDL-Datei angegeben
           Orte.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.uri">
         <term>
          <parameter>uri</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Der Ziel-Namensraum des SOAP-Dienstes.
          </para>
          <para>
           Wird benötigt, wenn der Parameter <parameter>wsdl</parameter> nicht
           angegeben wird, andernfalls wird er ignoriert.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.style">
         <term>
          <parameter>style</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Mit den Konstanten <constant>SOAP_RPC</constant> und
           <constant>SOAP_DOCUMENT</constant> kann der Bindungsstil angegeben
           werden, der für diesen Client verwendet werden soll.
           <constant>SOAP_RPC</constant> gibt an, dass die Bindung im RPC-Stil
           verwendet werden soll, bei der der Body der SOAP-Anfrage die
           Standardkodierung des Funktionsaufrufs enthält.
           <constant>SOAP_DOCUMENT</constant> gibt an, dass die Bindung im
           Dokumentenstil verwendet werden soll, wobei der Body der
           SOAP-Anfrage ein XML-Dokument mit einer durch den Dienst
           definierten Bedeutung enthält.
          </para>
          <para>
           Wenn der Parameter <parameter>wsdl</parameter> angegeben wird, wird
           diese Option ignoriert und der Stil wird aus der WSDL-Datei
           gelesen.
          </para>
          <para>
           Wenn weder diese Option noch der Parameter
           <parameter>wsdl</parameter> angegeben wird, wird der RPC-Stil
           verwendet.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.use">
         <term>
          <parameter>use</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Mit den Konstanten <constant>SOAP_ENCODED</constant> und
           <constant>SOAP_LITERAL</constant> kann der Kodierungsstil angegeben
           werden, der für diesem Client verwendet werden soll.
           <constant>SOAP_ENCODED</constant> gibt an, dass ein in der
           SOAP-Spezifikation definierter Kodierungstyp verwendet werden soll.
           <constant>SOAP_LITERAL</constant> gibt an, dass das vom Dienst
           definierte Schema für die Kodierung verwendet werden soll.
          </para>
          <para>
           Wenn der Parameter <parameter>wsdl</parameter> angegeben wird, wird
           diese Option ignoriert und die Kodierung wird aus der WSDL-Datei
           gelesen.
          </para>
          <para>
           Wenn weder diese Option noch der Parameter
           <parameter>wsdl</parameter> angegeben wird, wird der Stil "encoded"
           verwendet.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.soap-version">
         <term>
          <parameter>soap_version</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Gibt die Version des SOAP-Protokolls an, die verwendet werden soll:
           <constant>SOAP_1_1</constant> für SOAP 1.1 oder
           <constant>SOAP_1_2</constant> für SOAP 1.2.
          </para>
          <para>
           Wenn diese Option weggelassen wird, wird SOAP 1.1 verwendet.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.authentication">
         <term>
          <parameter>authentication</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Wenn für Anfragen die HTTP-Authentifizierung verwendet wird,
           bestimmt diese Option die Authentifizierungsmethode. Als Wert kann
           <constant>SOAP_AUTHENTICATION_BASIC</constant> oder
           <constant>SOAP_AUTHENTICATION_DIGEST</constant> angegeben werden.
          </para>
          <para>
           Wenn diese Option weggelassen wird und die Option
           <literal>login</literal> vorhanden ist, wird die Basic
           Authentication verwendet.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.login">
         <term>
          <parameter>login</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Der Benutzername, der für die Basic oder Digest Authentication
           verwendet wird.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.password">
         <term>
          <parameter>password</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Das Passwort, das für die Basic oder Digest Authentication
           verwendet wird.
          </para>
          <para>
           Nicht zu verwechseln mit <literal>passphrase</literal>, das für die
           Authentifizierung mit HTTPS-Client-Zertifikat verwendet wird.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.local-cert">
         <term>
          <parameter>local_cert</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Der Pfad zu einem Client-Zertifikat für die Verwendung mit der
           HTTPS-Authentifizierung. Es muss sich um eine PEM-kodierte Datei
           handeln, die das Zertifikat und den privaten Schlüssel enthält.
          </para>
          <para>
           Die Datei kann auch eine Kette von Zertifikatsausstellern
           enthalten, die hinter dem Client-Zertifikat angehängt sein muss.
          </para>
          <para>
           Kann auch mittels
           <link linkend="soapclient.construct.options.stream-context"><parameter>stream_context</parameter></link>
           gesetzt werden, das auch die Angabe einer separaten privaten
           Schlüsseldatei unterstützt.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.passphrase">
         <term>
          <parameter>passphrase</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Die Passphrase für das Client-Zertifikat, das in der Option
           <literal>local_cert</literal> angegeben ist.
          </para>
          <para>
           Nicht zu verwechseln mit <literal>password</literal>, das für die
           Basic oder Digest Authentication verwendet wird.
          </para>
          <para>
           Kann auch mittels
           <link linkend="soapclient.construct.options.stream-context"><parameter>stream_context</parameter></link>
           gesetzt werden.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.proxy-host">
         <term>
          <parameter>proxy_host</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Der Hostname, der als Proxy-Server für HTTP-Anfragen verwendet
           werden soll.
          </para>
          <para>
           Die Option <literal>proxy_port</literal> muss ebenfalls angegeben
           werden.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.proxy-port">
         <term>
          <parameter>proxy_port</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Der TCP-Port, der bei der Verbindung mit dem in
           <literal>proxy_host</literal> angegebenen Proxy-Server verwendet
           werden soll.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.proxy-login">
         <term>
          <parameter>proxy_login</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Optionaler Benutzername zur Authentifizierung bei dem in
           <literal>proxy_host</literal> angegebenen Proxyserver, unter
           Verwendung der HTTP Basic Authentication.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.proxy-password">
         <term>
          <parameter>proxy_password</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Optionales Passwort zur Authentifizierung bei dem in
           <literal>proxy_host</literal> angegebenen Proxyserver, unter
           Verwendung der HTTP Basic Authentication.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.compression">
         <term>
          <parameter>compression</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Aktiviert die Komprimierung von HTTP-SOAP-Anfragen und -Antworten.
          </para>
          <para>
           Der Wert ist ein bitweises OR aus drei Teilen: das optionale
           <constant>SOAP_COMPRESSION_ACCEPT</constant>, um einen
           "Accept-Encoding"-Header zu senden, entweder
           <constant>SOAP_COMPRESSION_GZIP</constant> oder
           <constant>SOAP_COMPRESSION_DEFLATE</constant>, um den zu
           verwendenden Komprimierungsalgorithmus anzugeben, und eine Zahl
           zwischen 1 und 9, um die Komprimierungsstufe anzugeben, die in der
           Anfrage verwendet werden soll. Um zum Beispiel eine bidirektionale
           Gzip-Kompression mit der maximalen Komprimierungsstufe zu
           aktivieren, wird <literal>SOAP_COMPRESSION_ACCEPT |
           SOAP_COMPRESSION_GZIP | 9</literal> verwendet.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.encoding">
         <term>
          <parameter>encoding</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Gibt die interne Zeichenkodierung an. Anfragen werden immer von der
           hier angegebenen Kodierung in UTF-8 umgewandelt und Antworten
           werden in diese Kodierung umgewandelt.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.trace">
         <term>
          <parameter>trace</parameter>
          <type>bool</type>
         </term>
         <listitem>
          <para>
           Erfasst Anfrage- und Antwortinformationen, auf die dann mit den
           Methoden <methodname>SoapClient::__getLastRequest</methodname>,
           <methodname>SoapClient::__getLastRequestHeaders</methodname>,
           <methodname>SoapClient::__getLastResponse</methodname> und
           <methodname>SoapClient::__getLastResponseHeaders</methodname>
           zugegriffen werden kann.
          </para>
          <para>
           Falls nicht angegeben, ist der Standardwert &false;.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.classmap">
         <term>
          <parameter>classmap</parameter>
          <type>array</type>
         </term>
         <listitem>
          <para>
           Wird verwendet, um in der WSDL definierte Typen auf PHP-Klassen
           abzubilden. Diese Option benötigt ein assoziatives
           <type>Array</type> mit den Typnamen aus der WSDL als Schlüssel und
           den Namen von PHP-Klassen als Werte. Es ist zu beachten, dass der
           Typname eines Elements nicht notwendigerweise derselbe ist wie der
           (Tag-)Name des Elements.
          </para>
          <para>
           Die angegebenen Klassennamen müssen immer voll qualifiziert sein
           mit allen <link linkend="language.namespaces">Namensräumen</link>
           und dürfen nicht mit einem <literal>\</literal> beginnen. Die
           korrekte Form kann mit
           <link linkend="language.oop5.basic.class.class">::class</link>
           erzeugt werden.
          </para>
          <para>
           Zu beachten ist auch, dass beim Erstellen einer Klasse nicht der
           Konstruktor aufgerufen wird, sondern die Methoden
           <link linkend="object.set">__set()</link> und
           <link linkend="object.get">__get()</link> für die einzelnen
           Eigenschaften aufgerufen werden.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.typemap">
         <term>
          <parameter>typemap</parameter>
          <type>array</type>
         </term>
         <listitem>
          <para>
           Wird verwendet, um Typzuordnungen mit Hilfe benutzerdefinierter
           Callback-Funktionen zu definieren. Jede Typzuordnung ist ein Array
           mit den Schlüsseln <literal>type_name</literal> (eine Zeichenkette,
           die den Typ des XML-Elements angibt), <literal>type_ns</literal>
           (eine Zeichenkette mit dem Namesraum-URI),
           <literal>from_xml</literal> (ein <type>Callable</type>, das eine
           Zeichenkette als Parameter akzeptiert und ein Objekt zurückgibt)
           und <literal>to_xml</literal> (ein <type>Callable</type>, das ein
           Objekt als Parameter akzeptiert und eine Zeichenkette zurückgibt).
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.exceptions">
         <term>
          <parameter>exceptions</parameter>
          <type>bool</type>
         </term>
         <listitem>
          <para>
           Legt fest, ob Fehler Exceptions des Typs
           <classname>SoapFault</classname> auslösen.
          </para>
          <para>
           Der Standardwert ist &true;
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.connection-timeout">
         <term>
          <parameter>connection_timeout</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Legt das Zeitlimit für die Verbindung mit dem SOAP-Dienst fest (in
           Sekunden). Mit dieser Option wird kein Zeitlimit für Dienste mit
           langsamen Antworten festgelegt. Um die Zeit zu begrenzen, die auf
           den Abschluss von Aufrufen gewartet wird, steht die
           Konfigurationsoption
           <link linkend="ini.default-socket-timeout">default_socket_timeout</link>
           zur Verfügung.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.cache-wsdl">
         <term>
          <parameter>cache_wsdl</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Wenn der Parameter <parameter>wsdl</parameter> angegeben wird, und
           die Konfigurationsoption
           <link linkend="ini.soap.wsdl-cache-enabled">soap.wsdl_cache_enabled</link>
           aktiviert ist, bestimmt diese Option die Art der
           Zwischenspeicherung. Es kann einer der Werte
           <constant>WSDL_CACHE_NONE</constant>,
           <constant>WSDL_CACHE_DISK</constant>,
           <constant>WSDL_CACHE_MEMORY</constant> oder
           <constant>WSDL_CACHE_BOTH</constant> sein.
          </para>
          <para>
           Es stehen zwei Arten von Caches zur Verfügung: In-Memory-Caching,
           bei dem die WSDL im Speicher des aktuellen Prozesses
           zwischenspeichert wird, und Festplatten-Caching, bei dem die WSDL
           auf der Festplatte in einer Datei zwischenspeichert wird, die von
           allen Prozessen gemeinsam genutzt werden kann. Das Verzeichnis, das
           für den Festplatten-Cache verwendet wird, kann durch die
           Konfigurationsoption
           <link linkend="ini.soap.wsdl-cache-dir">soap.wsdl_cache_dir</link>
           angegeben werden. Beide Caches verwenden die gleiche Lebensdauer,
           die durch die Konfigurationsoption
           <link linkend="ini.soap.wsdl-cache-ttl">soap.wsdl_cache_ttl</link>
           festgelegt ist. Für den In-Memory-Cache kann die maximale Anzahl
           von Einträgen mit der Konfigurationsoption
           <link linkend="ini.soap.wsdl-cache-limit">soap.wsdl_cache_limit</link>
           festgelegt werden.
          </para>
          <para>
           Falls nicht angegeben, wird die Konfigurationsoption
           <link linkend="ini.soap.wsdl-cache">soap.wsdl_cache</link>
           verwendet.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.user-agent">
         <term>
          <parameter>user_agent</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Der Wert, der im HTTP-Header <literal>User-Agent</literal> bei
           Anfragen zu verwenden ist.
          </para>
          <para>
           Dieser Wert kann auch über
           <link linkend="soapclient.construct.options.stream-context"><parameter>stream_context</parameter></link>
           gesetzt werden.
          </para>
          <para>
           Falls nicht angegeben, ist der User-Agent
           <literal>"PHP-SOAP/"</literal>, gefolgt vom Wert der Konstante
           <constant>PHP_VERSION</constant>.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.stream-context">
         <term>
          <parameter>stream_context</parameter>
          <type>resource</type>
         </term>
         <listitem>
          <para>
           Ein <link linkend="context">Stream-Kontext</link>, der mit der
           Funktion <function>stream_context_create</function> erstellt werden
           kann und es ermöglicht, zusätzliche Optionen zu setzen.
          </para>
          <para>
           Der Kontext kann
           <link linkend="context.socket">Socket-Kontextoptionen</link>,
           <link linkend="context.ssl">SSL-Kontextoptionen</link>, sowie
           ausgewählte <link linkend="context.http">HTTP-Kontextoptionen</link>
           enthalten: <literal>content_type</literal>,
           <literal>header</literal>, <literal>max_redirects</literal>,
           <literal>protocol_version</literal> und
           <literal>user_agent</literal>.
          </para>
          <para>
           Es ist zu beachten, dass die folgenden HTTP-Header automatisch oder
           aus anderen Optionen generiert werden, und dass sie ignoriert
           werden, wenn sie in der Kontextoption <literal>'header'</literal>
           angegeben werden: <literal>host</literal>,
           <literal>connection</literal>, <literal>user-agent</literal>,
           <literal>content-length</literal>, <literal>content-type</literal>,
           <literal>cookie</literal>, <literal>authorization</literal> und
           <literal>proxy-authorization</literal>.
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.features">
         <term>
          <parameter>features</parameter>
          <type>int</type>
         </term>
         <listitem>
          <para>
           Eine Bitmaske zur Aktivierung einer oder mehrerer der folgenden
           Funktionen:
           <variablelist>
            <varlistentry>
             <term>
              <constant>SOAP_SINGLE_ELEMENT_ARRAYS</constant>
             </term>
             <listitem>
              <para>
               Beim Dekodieren einer Antwort in ein Array wird standardmäßig
               automatisch erkannt, ob der Name eines Elements einmal oder
               mehrmals in einem bestimmten übergeordneten Element vorkommt.
               Bei Elementen, die nur einmal vorkommen, kann der Inhalt direkt
               über die Eigenschaften des Objekts abgerufen werden. Bei
               Elementen, die mehrfach vorkommen, enthält die Eigenschaft ein
               Array mit dem Inhalt der entsprechenden Elemente.
              </para>
              <para>
               Wenn das Feature <constant>SOAP_SINGLE_ELEMENT_ARRAYS</constant>
               aktiviert ist, werden die Elemente, die nur einmal vorkommen,
               in einem Array mit einem einzigen Element abgelegt, sodass der
               Zugriff für alle Elemente konsistent ist. Dies hat nur eine
               Auswirkung, wenn eine WSDL verwendet wird, die ein Schema für
               die Antwort enthält. Im Abschnitt Beispiele wird dies
               anschaulich dargestellt.
              </para>
             </listitem>
            </varlistentry>
            <varlistentry>
             <term>
              <constant>SOAP_USE_XSI_ARRAY_TYPE</constant>
             </term>
             <listitem>
              <para>
               Wenn die Option
               <link linkend="soapclient.construct.options.use"><literal>use</literal></link>
               oder die WSDL-Eigenschaft auf <literal>encoded</literal>
               gesetzt ist, verwenden Arrays statt eines schemaspezifischen
               Typs den Typ <literal>SOAP-ENC:Array</literal>.
              </para>
             </listitem>
            </varlistentry>
            <varlistentry>
             <term>
              <constant>SOAP_WAIT_ONE_WAY_CALLS</constant>
             </term>
             <listitem>
              <para>
               Auf eine Antwort warten, auch wenn die WSDL eine einseitige
               Anfrage angibt.
              </para>
             </listitem>
            </varlistentry>
           </variablelist>
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.keep-alive">
         <term>
          <parameter>keep_alive</parameter>
          <type>bool</type>
         </term>
         <listitem>
          <para>
           Ein boolescher Wert, der definiert, ob der Header
           <literal>Connection: Keep-Alive</literal> oder der Header
           <literal>Connection: close</literal> gesendet wird.
          </para>
          <para>
           Der Standardwert ist &true;
          </para>
         </listitem>
        </varlistentry>
        <varlistentry xml:id="soapclient.construct.options.ssl-method">
         <term>
          <parameter>ssl_method</parameter>
          <type>string</type>
         </term>
         <listitem>
          <para>
           Gibt die SSL- oder TLS-Protokollversion an, die für sichere
           HTTP-Verbindungen anstelle der Standardvereinbarung (default
           negotiation) verwendet werden soll. Die Angabe von
           <constant>SOAP_SSL_METHOD_SSLv2</constant> oder
           <constant>SOAP_SSL_METHOD_SSLv3</constant> erzwingt die Verwendung
           von SSL 2 bzw. SSL 3. Die Angabe von
           <constant>SOAP_SSL_METHOD_SSLv23</constant> hat keine Auswirkung;
           Diese Konstante existiert nur aus Gründen der
           Abwärtskompatibilität. Seit PHP 7.2 hat auch die Angabe von
           <constant>SOAP_SSL_METHOD_TLS</constant> keine Auswirkung mehr; in
           früheren Versionen erzwang sie die Verwendung von TLS 1.0.
          </para>
          <para>
           Es ist zu beachten, dass die SSL-Versionen 2 und 3 als unsicher
           gelten und von der installierten OpenSSL-Bibliothek möglicherweise
           nicht unterstützt werden.
          </para>
          <para>
           Diese Option ist seit PHP 8.1.0 als <emphasis>VERALTET</emphasis>
           markiert und sollte nicht mehr verwendet werden. Die Option
           <link linkend="soapclient.construct.options.stream-context"><parameter>stream_context</parameter></link>
           bietet mit dem Kontextparameter 'crypto_method' eine flexiblere
           Alternative, die es ermöglicht, einzelne Versionen von TLS
           anzugeben.
           <example>
            <title>Die Verwendung von TLS 1.3 vorschreiben</title>
            <programlisting role="php">
<![CDATA[
<?php
$context = stream_context_create([
    'ssl' => [
        'crypto_method' => STREAM_CRYPTO_METHOD_TLSv1_3_CLIENT
     ]
];
$client = new SoapClient("some.wsdl", ['context' => $context]);
]]>
            </programlisting>
           </example>
          </para>
         </listitem>
        </varlistentry>
       </variablelist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="errors">
  &reftitle.errors;
  <para>
   Wenn die Optionen <literal>location</literal> und <literal>uri</literal>
   im non-WSDL-Modus nicht angegeben werden, erzeugt
   <methodname>SoapClient::__construct</methodname> einen Fehler der Stufe
   <constant>E_ERROR</constant>.
  </para>
  <para>
   Wenn der <parameter>wsdl</parameter>-URI nicht geladen werden kann, wird
   eine <classname>SoapFault</classname>-Exception ausgelöst.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><methodname>SoapClient::__construct</methodname>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php

$client = new SoapClient("ein.wsdl");

$client = new SoapClient("ein.wsdl", array('soap_version'   => SOAP_1_2));

$client = new SoapClient("ein.wsdl", array('login'          => "ein_name",
                                           'password'       => "ein_passwort"));

$client = new SoapClient("ein.wsdl", array('proxy_host'     => "localhost",
                                           'proxy_port'     => 8080));

$client = new SoapClient("ein.wsdl", array('proxy_host'     => "localhost",
                                           'proxy_port'     => 8080,
                                           'proxy_login'    => "ein_name",
                                           'proxy_password' => "ein_passwort"));

$client = new SoapClient("ein.wsdl", array('local_cert'     => "cert_key.pem"));

$client = new SoapClient(null, array('location' => "http://localhost/soap.php",
                                     'uri'      => "http://test-uri/"));

$client = new SoapClient(null, array('location' => "http://localhost/soap.php",
                                     'uri'      => "http://test-uri/",
                                     'style'    => SOAP_DOCUMENT,
                                     'use'      => SOAP_LITERAL));

$client = new SoapClient("ein.wsdl",
  array('compression' => SOAP_COMPRESSION_ACCEPT | SOAP_COMPRESSION_GZIP | 9));

$client = new SoapClient("ein.wsdl", array('encoding'=>'ISO-8859-1'));

class MeinBuch {
    public $titel;
    public $autor;
}

$client = new SoapClient("buecher.wsdl", array('classmap' => array('book' => "MeinBuch")));

$typemap = array(
    array("type_ns"  => "http://schemas.example.com",
         "type_name" => "book",
         "from_xml"  => "unserialize_book",
         "to_xml"    => "serialize_book")
);
$client = new SoapClient("buecher.wsdl", array('typemap' => $typemap));

?>
]]>
    </programlisting>
   </example>
  </para>

  <para>
   <example>
    <title>Verwendung des Features <constant>SOAP_SINGLE_ELEMENT_ARRAYS</constant></title>
    <programlisting role="php">
<![CDATA[
/* Unter der Annahme einer Antwort wie dieser und einer entsprechenden WSDL:
<?xml version="1.0" encoding="UTF-8"?>
<SOAP-ENV:Envelope xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns="urn:example">
    <SOAP-ENV:Body>
        <response>
            <collection>
                <item>Single</item>
            </collection>
            <collection>
                <item>First</item>
                <item>Second</item>
            </collection>
        </response>
    </SOAP-ENV:Body>
</SOAP-ENV:Envelope>
*/

echo "Voreinstellung:\n";

$client = new TestSoapClient(__DIR__ . '/temp.wsdl');
$response = $client->exampleRequest();
var_dump( $response->collection[0]->item );
var_dump( $response->collection[1]->item );

echo "\nMit SOAP_SINGLE_ELEMENT_ARRAYS:\n";

$client = new TestSoapClient(__DIR__ . '/temp.wsdl', ['features' => SOAP_SINGLE_ELEMENT_ARRAYS]);
$response = $client->exampleRequest();
var_dump( $response->collection[0]->item );
var_dump( $response->collection[1]->item );
]]>
    </programlisting>

    &example.outputs;

    <screen>
<![CDATA[
Voreinstellung:
string(6) "Single"
array(2) {
  [0] =>
  string(5) "First"
  [1] =>
  string(6) "Second"
}

Mit SOAP_SINGLE_ELEMENT_ARRAYS:
array(1) {
  [0] =>
  string(6) "Single"
}
array(2) {
  [0] =>
  string(5) "First"
  [1] =>
  string(6) "Second"
}
]]>
    </screen>
   </example>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
