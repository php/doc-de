<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: conni Status: ready -->
<section xml:id="ifx.configuration" xmlns="http://docbook.org/ns/docbook">
 &reftitle.runtime;
 &extension.runtime;
  <note>
   <para>
    Die Umgebungsvariablen INFORMIXDIR und INFORMIXSERVER müssen für den
    PHP-Treiber verfügbar sein und das INFORMIX bin-Verzeichnis muss im
    Pfad enthalten sein. Prüfen Sie diese Voraussetzungen mit einem Skript,
    das einen Aufruf von <function>phpinfo</function> enthält, bevor Sie
    testen. Die Ausgabe von <function>phpinfo</function> sollte diese
    Umgebungsvariablen auflisten. Dies ist sowohl für CGI PHP als auch
    Apache mod_php &true;. Möglicherweise müssen Sie diese
    Umgebungsvariablen in Ihrem Apache Startskript setzen.
   </para>
   <para>
    Die Informix shared libraries sollten für den Lader ebenfalls verfügbar
    sein (überprüfen Sie den LD_LIBRARY_PATH oder ld.so.conf/ldconfig).
   </para>
  </note>
  <note>
   <title>
    Einige Anmerkungen zum Gebrauch von BLOBs (TEXT- und BYTE Felder)
   </title>
   <para>
    BLOBs werden normalerweise durch blob-Identifikatoren adressiert.
    Select Abfragen geben eine "blob-ID" für alle TEXT- und BYTE-Felder
    zurück. Sie können die Inhalte mit "string_var =
    ifx_get_blob($blob_id);" auslesen, falls Sie die
    BLOBS in den Speicher schreiben möchten (mit "ifx_blobinfile(0);").
    Wenn Sie die Inhalte von BLOB-Felder lieber in eine Datei ausgeben
    möchten, benutzen Sie "ifx_blobinfile(1);" und mit
    "ifx_get_blob($blob_id);" ermitteln Sie den Dateinamen. Mit den
    normalen I/O-Routinen des Dateisystems erhalten Sie die Inhalte von
    BLOBs.
   </para>
   <para>
    Bei insert/update Abfragen müssen Sie diese "blob-ID's" mit der
    Funktion <function>ifx_create_blob</function> selber erzeugen.
    Danach schreiben Sie die blob-ID's in ein Array und ersetzen die
    BLOB-Felder durch ein Fragezeichen (?) im Abfragestring. Für die
    Inhalte der BLOBs, die mit der Funktion
    <function>ifx_update_blob</function> gesetzt werden, sind Sie bei
    updates/inserts selber verantwortlich.
   </para>
   <para>
    Das Verhalten einer BLOB-Spalte kann auch zur Laufzeit durch
    Konfigurationsvariablen verändert werden.
   </para>
   <para>
    Konfigurationsvariable: ifx.textasvarchar
   </para>
   <para>
    Konfigurationsvariable: ifx.byteasvarchar
   </para>
   <para>
    Laufzeitfunktionen:
   </para>
   <para>
    ifx_textasvarchar(0): benutzt bei SELECT Abfragen von TEXT-Feldern die blob-ID
   </para>
   <para>
    ifx_byteasvarchar(0): benutzt bei SELECT Abfragen von BYTE-Feldern die blob-ID
   </para>
   <para>
    ifx_textasvarchar(1): gibt TEXT-Felder so zurück, als wären es VARCHAR Felder, so dass Sie keine blob-ID für select Abfragen brauchen.
   </para>
   <para>
    ifx_byteasvarchar(1): gibt BYTE-Felder so zurück, als wären es VARCHAR Felder, so dass Sie keine blob-ID für select Abfragen brauchen.
   </para>
   <para>
    Konfigurationsvariable: ifx.blobinfile
   </para>
   <para>
    Laufzeitfunktionen:
   </para>
   <para>
    ifx_blobinfile_mode(0): gibt BYTE-Felder in den Speicher zurück, mit
    der blob-ID können Sie auf den Inhalt zugreifen.
   </para>
   <para>
    ifx_blobinfile_mode(1): gibt BYTE-Felder in einer Datei zurück, mit
    der blob-ID können Sie den Dateinamen ermitteln.
   </para>
   <para>
    Wenn Sie ifx_text/byteasvarchar auf 1 setzen, können Sie TEXT- und
    BYTE-Felder in select Abfragen genauso benutzen, wie normale
    (allerdings sehr lange) VARCHAR-Felder. Da alle Zeichenketten in PHP
    "gezählt" werden, bleibt dies "binary safe". Es bleibt Ihnen
    überlassen, korrekt damit umzugehen. Die zurückgegebenen Daten können
    alles mögliche enthalten, so dass Sie für die Inhalte verantwortlich
    sind.
   </para>
   <para>
    Wenn Sie ifx_blobinfile auf 1 setzen, benutzen Sie den Dateinamen, der
    von ifx_get_blob(..) zurückgegeben wird, um auf den Inhalt des BLOB
    zuzugreifen. Beachten Sie, dass Sie in diesem Fall FÜR DAS LÖSCHEN DER
    TEMPORÄREN DATEIEN, DIE VON INFORMIX ERSTELLT WERDEN VERANTWORTLLICH
    SIND, wenn sie ein Tupel auslesen. Jedes neue Tupel, das gelesen wird,
    erzeugt für jedes BYTE-Feld eine neue temporäre Datei.
   </para>
   <para>
    Der Speicherort für die temporären Dateien kann mit der
    Umgebungsvariablen "blobdir" beeinflusst werden, die
    Standardeinstellung ist "." (das aktuelle Verzeichnis). Etwas Ähnliches
    wie : putenv(blobdir=tmpblob"); erleichtert das Bereinigen der
    temporären Dateien, die versehentlich stehen geblieben sind (ihre Namen
    beginnen alle mit "blb").
   </para>
  </note>
  <note>
   <title>Automatisches Abschneiden von Leerzeichen bei "char" (SQLCHAR und
   SQLNCHAR) Daten </title>
   <para>
    Dies kann mit einer Konfigurationsvariablen eingestellt werden.
   </para>
   <para>
    ifx.charasvarchar : falls auf 1 gesetzt, werden abschließende
    Leerzeichen automatisch abgeschnitten. Dies erspart den Aufruf der
    chop() Funktion.
   </para>
  </note>
  <note>
   <title>&null;-Werte</title>
   <para>
    Wenn die Konfigurationsvariable ifx.nullformat (und die
    Laufzeitfunktion <function>ifx_nullformat</function>) auf &true;
    gesetzt sind, werden &null;-werte in Spalten als Zeichenkette &null;
    zurückgegeben, wenn die Variable auf &false; gesetzt ist, werden leere
    Strings für &null;werte zurückgegeben. So können sie zwischen
    &null;werten und leeren Spalten unterscheiden.
   </para>
  </note>

 <para>
 <table>
  <title>Informix Konfigurationsoptionen</title>
  <tgroup cols="4">
   <thead>
    <row>
     <entry>&Name;</entry>
     <entry>&Default;</entry>
     <entry>&Changeable;</entry>
     <entry>&Changelog;</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>ifx.allow_persistent</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_SYSTEM</entry>
     <entry>Removed in PHP 5.2.1.</entry>
    </row>
    <row>
     <entry>ifx.max_persistent</entry>
     <entry>"-1"</entry>
     <entry>PHP_INI_SYSTEM</entry>
     <entry>Removed in PHP 5.2.1.</entry>
    </row>
    <row>
     <entry>ifx.max_links</entry>
     <entry>"-1"</entry>
     <entry>PHP_INI_SYSTEM</entry>
     <entry>Removed in PHP 5.2.1.</entry>
    </row>
    <row>
     <entry>ifx.default_host</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_SYSTEM</entry>
     <entry>Removed in PHP 5.2.1.</entry>
    </row>
    <row>
     <entry>ifx.default_user</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_SYSTEM</entry>
     <entry>Removed in PHP 5.2.1.</entry>
    </row>
    <row>
     <entry>ifx.default_password</entry>
     <entry>NULL</entry>
     <entry>PHP_INI_SYSTEM</entry>
     <entry>Removed in PHP 5.2.1.</entry>
    </row>
    <row>
     <entry>ifx.blobinfile</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Removed in PHP 5.2.1.</entry>
    </row>
    <row>
     <entry>ifx.textasvarchar</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Removed in PHP 5.2.1.</entry>
    </row>
    <row>
     <entry>ifx.byteasvarchar</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Removed in PHP 5.2.1.</entry>
    </row>
    <row>
     <entry>ifx.charasvarchar</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Removed in PHP 5.2.1.</entry>
    </row>
    <row>
     <entry>ifx.nullformat</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Removed in PHP 5.2.1.</entry>
    </row>
   </tbody>
  </tgroup>
 </table>
 &ini.php.constants;
 </para>

 &ini.descriptions.title;

 <para>
 <variablelist>
  <varlistentry xml:id="ini.ifx.allow-persistent">
   <term>
    <parameter>ifx.allow_persistent</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <para>
     Bestimmt, ob persistente Verbindungen zugelassen sind.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.ifx.max-persistent">
   <term>
    <parameter>ifx.max_persistent</parameter>
    <type>integer</type>
   </term>
   <listitem>
    <para>
     Gibt die maximale Anzahl persistenter Verbindungen pro Prozess an.
    </para>
   </listitem>
  </varlistentry>

  <varlistentry xml:id="ini.ifx.max-links">
   <term>
    <parameter>ifx.max_links</parameter>
    <type>integer</type>
   </term>
   <listitem>
    <para>
     Gibt die maximale Anzahl der Verbindungen zum Informix Server pro Prozess an, einschließlich der persistenten Verbindungen.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="ini.ifx.default-host">
   <term>
    <parameter>ifx.default_host</parameter>
    <type>string</type>
   </term>
   <listitem>
    <para>
     Der Standardhost, zu dem verbunden wird, wenn kein Host in <function>ifx_connect</function> oder
     <function>ifx_pconnect</function> angegeben wurde. Diese Einstellung
     kann im &safemode; nicht verwendet werden.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="ini.ifx.default-user">
   <term>
    <parameter>ifx.default_user</parameter>
    <type>string</type>
   </term>
   <listitem>
    <para>
     Der Standardbenutzer, wenn kein Benutzer in <function>ifx_connect</function> oder
     <function>ifx_pconnect</function> angegeben wurde. Diese Einstellung
     kann im &safemode; nicht verwendet werden.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="ini.ifx.default-password">
   <term>
    <parameter>ifx.default_password</parameter>
    <type>string</type>
   </term>
   <listitem>
    <para>
     Das Standardpasswort, wenn kein Passwort in <function>ifx_connect</function> oder
     <function>ifx_pconnect</function> angegeben wurde. Diese Einstellung
     kann im &safemode; nicht verwendet werden.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="ini.ifx.blobinfile">
   <term>
    <parameter>ifx.blobinfile</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <para>
    &true;, falls blob-Spalten in eine Datei ausgegeben werden sollen,
    &false;, falls blob-Spalten in den Speicher ausgegeben werden sollen.
    Sie können diese Einstellung mit der Funktion
    <function>ifx_blobinfile_mode</function> zur Laufzeit ändern.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="ini.ifx.textasvarchar">
   <term>
    <parameter>ifx.textasvarchar</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <para>
     &true;, falls text-Spalten in select Abfragen als normale Strings
     zurückgegeben werden sollen. &false;, falls Sie blob-ID Parameter
     benutzen wolen. Sie können diese Einstellung mit der Funktion
     <function>ifx_textasvarchar</function> zur Laufzeit ändern.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="ini.ifx.byteasvarchar">
   <term>
    <parameter>ifx.byteasvarchar</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <para>
     &true;, falls BYTE-Spalten in select Abfragen als normale Strings
     zurückgegeben werden sollen. &false;, falls Sie blob-ID Parameter
     benutzen wolen. Sie können diese Einstellung mit der Funktion
     <function>ifx_textasvarchar</function> zur Laufzeit ändern.
    </para>
   </listitem>
  </varlistentry>
  <varlistentry xml:id="ini.ifx.charasvarchar">
   <term>
    <parameter>ifx.charasvarchar</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <para>
     &true;, falls Sie abschlißende Leerzeichen von CHAR Spalten
     beim Auslesen abschneiden wollen.
    </para>
   </listitem>
  </varlistentry>
   <varlistentry xml:id="ini.ifx.nullformat">
   <term>
    <parameter>ifx.nullformat</parameter>
    <type>boolean</type>
   </term>
   <listitem>
    <para>
     &true;, falls der Spaltenwert &null; als Literal "&null;"
     zurückgegeben werden soll. &false;, falls für Nullwerte als leere
     Strigs "" zurückgegeben werden sollen. Sie können diese Einstellung
     mit der Funktion <function>ifx_nullformat</function> zur Laufzeit
     ändern.
    </para>
   </listitem>
  </varlistentry>
 </variablelist>
 </para>
</section>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

