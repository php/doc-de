<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- splitted from ./en/functions/ifx.xml, last change in rev 1.2 -->
  <refentry id="function.ifx-fetch-row">
   <refnamediv>
    <refname>ifx_fetch_row</refname>
    <refpurpose>Get row as enumerated array</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Description</title>
     <methodsynopsis>
      <type>array</type><methodname>ifx_fetch_row</methodname>
      <methodparam><type>int</type><parameter>result_id</parameter></methodparam>
      <methodparam choice="opt"><type>mixed</type><parameter>position</parameter></methodparam>
     </methodsynopsis>
    <para> 
     Returns an associative array that corresponds to the fetched row,
     or &false; if there are no more rows.
    </para>
    <para>
     Blob columns are returned as integer blob id values for use in
     <function>ifx_get_blob</function> unless you have used
     ifx_textasvarchar(1) or ifx_byteasvarchar(1), in which case blobs
     are returned as string values.  Returns &false; on error
    </para>
    <para>
     <parameter>result_id</parameter> is a valid resultid returned by
     <function>ifx_query</function> or
     <function>ifx_prepare</function> (select type queries only!).
    </para>
    <para>
     <parameter>position</parameter> is an
     optional parameter for a "fetch" operation on "scroll" cursors:
     "NEXT", "PREVIOUS", "CURRENT", "FIRST", "LAST" or a number.  If
     you specify a number, an "absolute" row fetch is executed.  This
     parameter is optional, and only valid for SCROLL cursors.
    </para>
    <para>
     <function>ifx_fetch_row</function> fetches one row of data from
     the result associated with the specified result identifier.  The
     row is returned as an array.  Each result column is stored in an
     array offset, starting at offset 0, with the column name as key.
    </para>
    <para>
     Subsequent calls to <function>ifx_fetch_row</function> would
     return the next row in the result set, or &false; if there are no
     more rows.
    </para>
    <example>
     <title>Informix fetch rows</title>
     <programlisting role="php">
<![CDATA[
$rid = ifx_prepare ("select * from emp where name like " . $name,
                     $connid, IFX_SCROLL);
if (! $rid) {
    ... error ...
}
$rowcount = ifx_affected_rows($rid);
if ($rowcount > 1000) {
    printf ("Too many rows in result set (%d)\n<br>", $rowcount);
    die ("Please restrict your query<br>\n");
}
if (! ifx_do ($rid)) {
   ... error ...
}
$row = ifx_fetch_row ($rid, "NEXT");
while (is_array($row)) {
    for(reset($row); $fieldname=key($row); next($row)) {
        $fieldvalue = $row[$fieldname];
        printf ("%s = %s,", $fieldname, $fieldvalue);
    }
    printf("\n<br>");
    $row = ifx_fetch_row ($rid, "NEXT");
}
ifx_free_result ($rid);
]]>
     </programlisting>
    </example>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
