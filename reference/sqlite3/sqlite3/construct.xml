<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 310596 Maintainer: lapistano Status: working -->

<refentry xml:id="sqlite3.construct" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SQLite3::__construct</refname>
  <refpurpose>
   Instantiiert ein SQLite3 Objekt und öffnet eine SQLite3 Datenbank
  </refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <methodname>SQLite3::__construct</methodname>
   <methodparam><type>string</type><parameter>Dateiname</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>Schalter</parameter></methodparam>
   <methodparam choice="opt"><type>string</type><parameter>Verschlüsselungs-Phrase</parameter></methodparam>
  </methodsynopsis>
  <para>
   Instantiiert ein SQLite3-Objekt und öffnet eine Verbindung zu einer SQLite3-Datenbank.
   Umfasst der Aufbau eine Verschlüsselung, wird versucht den angegebenen Schlüssel zu nutzen.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>Dateiname</parameter></term>
     <listitem>
      <para>
       Pfad zur SQLite-Datenbank oder <literal>:memory:</literal>, um eine im Speicher befindliche Datenbank zu nutzen. 
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>Schalter</parameter></term>
     <listitem>
      <para>
       Optionale Schalter, die die Art bestimmen, wie die SQLite-Datenbank geöffnet wird.
       Standardmäßig wird <literal>SQLITE3_OPEN_READWRITE | SQLITE3_OPEN_CREATE</literal> zum Öffnen
       genutzt.
       <itemizedlist>
        <listitem>
         <para>
          <literal>SQLITE3_OPEN_READONLY</literal>: Öffnet die Datenbank im "nur lese"-Modus.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>SQLITE3_OPEN_READWRITE</literal>: Öffnet die Datenbank zum Lesen und Schreiben.
         </para>
        </listitem>
        <listitem>
         <para>
          <literal>SQLITE3_OPEN_CREATE</literal>: erzeugt die Datenbank, sollte diese nicht existieren.
         </para>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>Verschlüsselungs-Phrase</parameter></term>
     <listitem>
      <para>
       Eine optionale Verschlüsselungs-Phrase, die zur Ver- und Entschlüsselung der 
       Datenbank genutzt wird.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>

 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt im Erfolgsfall das SQLite-Datenbank-Objekt zurück.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>SQLite3::__construct</function> Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$db = new SQLite3('mysqlitedb.db');

$db->exec('CREATE TABLE foo (bar STRING)');
$db->exec("INSERT INTO foo (bar) VALUES ('This is a test')");

$result = $db->query('SELECT bar FROM foo');
var_dump($result->fetchArray());
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
