<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343898 Maintainer: nobody Status: ready -->

<refentry xml:id='function.pcntl-wait' xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>pcntl_wait</refname>
  <refpurpose>Wartet auf ein oder gibt den Status eines abgezweigten Kindes zurück</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>int</type><methodname>pcntl_wait</methodname>
   <methodparam><type>int</type><parameter role="reference">status</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>options</parameter><initializer>0</initializer></methodparam>
   <methodparam choice="opt"><type>array</type><parameter role="reference">rusage</parameter></methodparam>
  </methodsynopsis>
  <para>
   Die Funktion wait unterbricht die Ausführung des aktuellen Prozesses bis ein
   Kind sich beendet hat, oder bis ein Signal ausgeliefert wurde, dessen Aktion
   den aktuellen Prozess beendet, oder eine Signalverabeitungsfunktion aufruft.
   Wenn ein Kind sich zum Zeitpunkt des Funktionsaufrufes bereits beendet hat
   (ein sog. "Zombie" Prozess), kehrt die Funktion umgehend zurück. Alle durch
   das Kind verwendeten Ressourcen werden freigegeben. Die waitpid(2)
   Handbuch-Seite des Systems ist bezüglich spezifischer Details, wie waitpid
   auf dem System arbeitet, zu konsultieren.
  </para>
  <note>
   <para>
    Diese Funktion ist gleichwertig zum Aufruf der Funktion 
    <function>pcntl_waitpid</function> mit <literal>-1</literal> als
    <parameter>pid</parameter> und keinerlei <parameter>options</parameter>.
   </para>
  </note>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>status</parameter></term>
     <listitem>
      <para>
       <function>pcntl_wait</function> speichert Statusinformationen im Parameter
       <parameter>status</parameter>, welcher durch die folgenden Funktionen
       ausgewertet werden kann:
       <function>pcntl_wifexited</function>,
       <function>pcntl_wifstopped</function>,
       <function>pcntl_wifsignaled</function>,
       <function>pcntl_wexitstatus</function>,
       <function>pcntl_wtermsig</function> und
       <function>pcntl_wstopsig</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>options</parameter></term>
     <listitem>
      <para>
       Wenn wait3 auf Ihrem System verfügbar ist (meist BSD-artige Systeme) können
       Sie den optionalen <parameter>options</parameter> Parameter angeben.
       Wenn dieser Parameter nicht angegeben wurde, wird wait als Systemaufruf
       verwendet. Wenn wait3 nicht verfügbar ist, wird die Angabe eines Wertes
       für <parameter>options</parameter> keinerlei Auswirkungen haben. Der Wert
       von <parameter>options</parameter> ist der Wert von keiner oder mehr der
       folgenden durch <literal>OR</literal> verknüpften beiden Konstanten:
       <table>
        <title>Mögliche Werte für <parameter>options</parameter></title>
        <tgroup cols="2">
         <tbody>
          <row>
           <entry><literal>WNOHANG</literal></entry>
           <entry>
            Kehre umgehend zurück, wenn kein Kind beendet wurde.
           </entry>
          </row>
          <row>
           <entry><literal>WUNTRACED</literal></entry>
           <entry>
            Kehre für Kinder zurück die gestoppt sind und für solche, deren
            Status nicht gemeldet ist.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>pcntl_wait</function> gibt die Prozess ID des beendeten Kindes 
   zurück, -1 im Fehlerfall, oder 0, wenn WNOHANG als Option angegeben wurde
   (auf wait3 Systemen) und kein Kind verfügbar war.
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>pcntl_fork</function></member>
    <member><function>pcntl_signal</function></member>
    <member><function>pcntl_wifexited</function></member>
    <member><function>pcntl_wifstopped</function></member>
    <member><function>pcntl_wifsignaled</function></member>
    <member><function>pcntl_wexitstatus</function></member>
    <member><function>pcntl_wtermsig</function></member>
    <member><function>pcntl_wstopsig</function></member>
    <member><function>pcntl_waitpid</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
