<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 601f6f4ce5827d441a7e110184708f0abe9fd447 Maintainer: samesch Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="sessionhandlerinterface.read" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SessionHandlerInterface::read</refname>
  <refpurpose>Ruft die Session-Daten ab</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="SessionHandlerInterface">
   <modifier>public</modifier> <type class="union"><type>string</type><type>false</type></type><methodname>SessionHandlerInterface::read</methodname>
   <methodparam><type>string</type><parameter>id</parameter></methodparam>
  </methodsynopsis>
  <para>
   Liest die Session-Daten aus dem Session-Speicher und gibt das Ergebnis
   zurück. Diese Methode wird direkt nach dem Start einer Session aufgerufen
   oder wenn <function>session_start</function> aufgerufen wird. Es ist zu
   beachten, dass vor dem Aufruf dieser Methode
   <function>SessionHandlerInterface::open</function> aufgerufen wird.
  </para>
  <para>
   Diese Methode wird von PHP selbst aufgerufen, wenn eine Session gestartet
   wird. Sie soll die Session-Daten anhand der angegebenen Session-ID aus dem
   Speicher abrufen. Die von dieser Methode zurückgegebene Zeichenkette muss
   dasselbe serialisierte Format haben wie die ursprünglich an die
   <function>SessionHandlerInterface::write</function> übergebene Zeichenkette.
   Wenn der Datensatz nicht gefunden werden konnte, wird &false; zurückgegeben.
  </para>
  <para>
   Die von dieser Methode zurückgegebenen Daten werden von PHP intern
   dekodiert, indem die in
   <link linkend="ini.session.serialize-handler">session.serialize_handler</link>
   angegebene Methode zur Deserialisierung verwendet wird. Mit den daraus
   resultierenden Daten wird die Superglobale <varname>$_SESSION</varname>
   gefüllt.
  </para>
  <para>
   Zu beachten ist, dass das Serialisierungsverfahren nicht dasselbe ist wie
   bei <function>unserialize</function> und mittels
   <function>session_decode</function> aufgerufen werden kann.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>id</parameter></term>
    <listitem>
     <para>
      Die Session-ID
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt eine kodierte Zeichenkette der gelesenen Daten zurück. Wurde nichts
   gelesen, wird &false; zurückgegeben. Zu beachten ist, dass dieser Wert
   intern zur Verarbeitung an PHP zurückgegeben wird.
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     Die Konfigurationsanweisung
     <link linkend="ini.session.serialize-handler">session.serialize_handler</link>.
    </member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
