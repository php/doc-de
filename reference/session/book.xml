<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 333618 Maintainer: samesch Status: ready -->

<book xml:id="book.session" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <?phpdoc extension-membership="core" ?>
 <title>Sessionbehandlung</title>
 <titleabbrev>Sessions</titleabbrev>

 <!-- {{{ preface -->
 <preface xml:id="intro.session">
  &reftitle.intro;
  <para>
   Die Unterstützung von Sessions in PHP bietet die Möglichkeit, bestimmte
   Daten während einer Folge von Aufrufen Ihrer Website festzuhalten.
  </para>
  <para>
   Einem Besucher wird beim Aufruf Ihrer Website eine eindeutige ID, die
   sogenannte Session-ID, zugeordnet. Diese wird entweder benutzerseitig in
   einem Cookie abgelegt oder in der URL übermittelt.
  </para>
  <para>
   Die Unterstützung von Sessions erlaubt Ihnen, Daten zwischen Anfragen im
   superglobalen Array <varname>$_SESSION</varname> zu speichern. Wenn ein
   Besucher Ihre Website aufruft, überprüft PHP automatisch (falls <link
   linkend="ini.session.auto-start">session.auto_start</link> auf 1 gesetzt
   ist) oder auf Anfrage (explizit durch <function>session_start</function>),
   ob mit der Anfrage schon eine bestimmte Session-ID gesendet wurde. Wenn
   dies der Fall ist, wird die zuvor gespeicherte Umgebung wiederhergestellt.
  </para>
  <caution>
   <para>
    Falls Sie <link linkend="ini.session.auto-start">session.auto_start</link>
    aktivieren, können Objekte nur in Ihre Sessions aufgenommen werden, indem
    die Klassendefinition mittels <link
    linkend="ini.auto-prepend-file">auto_prepend_file</link> geladen wird.
    Andernfalls müssen Sie Ihr Objekt mittels <function>serialize</function>
    serialisieren und danach mittels <function>unserialize</function>
    deserialisieren.
   </para>
  </caution>
  <para>
   <varname>$_SESSION</varname> (und alle registrierten Variablen) werden
   intern von PHP unter Verwendung der in der Konfigurationseinstellung
   <link linkend="ini.session.serialize-handler">session.serialize_handler</link>
   festgelegten Serialisierungsroutine serialisiert, nachdem die Anfrage
   beendet ist. Registrierte Variablen, die nicht definiert sind, werden als
   nicht definiert gekennzeichnet. Auch bei darauf folgenden Zugriffen werden
   sie nicht vom Session-Modul definiert, außer der Benutzer definiert sie
   später.
  </para>
  <warning>
   <para>
    Weil Session-Daten serialisiert werden, können
    <type>resource</type>-Variablen nicht in der Session gespeichert werden.
   </para>
   <para>
    Die Serialisierungsroutinen (<literal>php</literal> und
    <literal>php_binary</literal>) erben die Beschränkungen für
    register_globals. Daher können numerische Indizes oder alphanumerische
    Indizes, die Sonderzeichen (<literal>|</literal> und <literal>!</literal>)
    enthalten, nicht verwendet werden. Deren Verwendung erzeugt Fehler beim
    Beenden des Scripts. <literal>php_serialize</literal> hat diese
    Einschränkungen nicht. <literal>php_serialize</literal> steht seit PHP
    5.5.4 zur Verfügung.
   </para>
  </warning>
  <note>
   <para>
    Bitte beachten Sie beim Arbeiten mit Sessions, dass der Datensatz einer
    Session nicht angelegt wird, bevor eine Variable mit der Funktion
    <function>session_register</function> registriert oder dem superglobalen
    Array <varname>$_SESSION</varname> ein neuer Schlüssel hinzugefügt wird.
    Das gilt auch dann, wenn eine Session mit der Funktion
    <function>session_start</function> gestartet wurde.
   </para>
  </note>
  <note>
   <para>
    Mit PHP 5.2.2 wurde die nicht dokumentierte Eigenschaft eingeführt,
    Session-Dateien in "/tmp" zu speichern, selbst wenn <link
    linkend="ini.open-basedir">open_basedir</link> aktiviert war und "/tmp"
    nicht ausdrücklich zur Liste der zulässigen Pfade hinzugefügt wurde. Diese
    Eigenschaft wurde in PHP 5.3.0 aus PHP entfernt.
   </para>
  </note>
 </preface>
 <!-- }}} -->

 &reference.session.setup;
 &reference.session.constants;
 &reference.session.examples;
 &reference.session.upload-progress;
 &reference.session.security;
 &reference.session.reference;
 &reference.session.sessionhandler;
 &reference.session.sessionhandlerinterface;

</book>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

