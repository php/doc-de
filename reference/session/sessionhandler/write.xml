<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 601f6f4ce5827d441a7e110184708f0abe9fd447 Maintainer: samesch Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="sessionhandler.write" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>SessionHandler::write</refname>
  <refpurpose>Speichert die Session-Daten</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis role="SessionHandler">
   <modifier>public</modifier> <type>bool</type><methodname>SessionHandler::write</methodname>
   <methodparam><type>string</type><parameter>id</parameter></methodparam>
   <methodparam><type>string</type><parameter>data</parameter></methodparam>
  </methodsynopsis>
  <para>
   Schreibt die Session-Daten in den Session-Speicher. Wird von PHP beim
   normalen Herunterfahren aufgerufen, von
   <function>session_write_close</function> oder wenn
   <function>session_register_shutdown</function> fehlschlägt. Unmittelbar
   nach dieser Methode ruft PHP <function>SessionHandler::close</function> auf.
  </para>
  <para>
   Diese Methode ist ein Wrapper für den in der INI-Einstellung
   <link linkend="ini.session.save-handler">session.save_handler</link>
   definierten internen PHP-Speicherverwalter, der gesetzt wird, bevor er
   mittels <function>session_set_save_handler</function> gesetzt wird.
  </para>
  <para>
   Wenn diese Klasse durch Vererbung erweitert wird, wird durch den Aufruf der
   übergeordneten <parameter>write</parameter>-Methode der Wrapper für diese
   Methode und damit der zugehörige interne Callback aufgerufen. Dadurch kann
   diese Methode überschrieben und/oder abgefangen und gefiltert werden (z.B.
   um den Wert des Parameters <parameter>$data</parameter> zu verschlüsseln,
   bevor er an die übergeordnete <parameter>write</parameter>-Methode
   übergeben wird).
  </para>
  <para>
   Weitere Informationen darüber, welche Aufgaben diese Methode erfüllen soll,
   sind in der Dokumentation unter
   <function>SessionHandlerInterface::write</function> zu finden.
  </para>

 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <variablelist>
   <varlistentry>
    <term><parameter>id</parameter></term>
    <listitem>
     <para>
      Die Session-ID
     </para>
    </listitem>
   </varlistentry>
   <varlistentry>
    <term><parameter>data</parameter></term>
    <listitem>
     <para>
      Die kodierten Session-Daten. Diese Daten sind das Ergebnis der internen
      PHP-Kodierung der Superglobale <varname>$_SESSION</varname> in eine
      serialisierte Zeichenkette und deren Übergabe als dieser Parameter.
      Es ist zu beachten, dass Sessions eine andere Serialisierungsmethode
      verwenden.
     </para>
    </listitem>
   </varlistentry>
  </variablelist>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   &returns.session.storage.retval;
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     Die Konfigurationsanweisung
     <link linkend="ini.session.serialize-handler">session.serialize_handler</link>.
    </member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
