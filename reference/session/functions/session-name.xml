<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: d7a77b5f850d5077f75d0c8c0d22cd60f099965d Maintainer: samesch Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: c35c07ab6a9cf533455947147634399fc928f6ca Reviewer: samesch -->
<refentry xml:id="function.session-name" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>session_name</refname>
  <refpurpose>Liefert und/oder setzt den Namen der aktuellen Session</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>session_name</methodname>
   <methodparam choice="opt"><type class="union"><type>string</type><type>null</type></type><parameter>name</parameter><initializer>&null;</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>session_name</function> gibt den Namen der aktuellen Session
   zurück. Falls <parameter>name</parameter> angegeben wurde, aktualisiert
   <function>session_name</function> den Namen der Session und gibt den
   <emphasis>alten</emphasis> Namen der Session zurück.
  </para>
  <para>
   Wird ein neuer Session-Name (<parameter>name</parameter>) angegeben, ändert
   <function>session_name</function> das HTTP-Cookie (und gibt den Inhalt aus,
   wenn <link linkend="ini.session.use-trans-sid">session.use_trans_sid</link>
   aktiviert ist). Nachdem das HTTP-Cookie gesendet wurde, erzeugt
   <function>session_name</function> ein <constant>E_WARNING</constant>.
   <function>session_name</function> muss vor
   <function>session_start</function> aufgerufen werden, damit die Session
   ordnungsgemäß funktioniert.
  </para>
  <para>
   Der Session-Name wird auf den Ausgangswert zurückgesetzt, der zu Beginn in
   <literal>session.name</literal> gespeichert wurde. Deshalb muss
   <function>session_name</function> bei jeder Anfrage aufgerufen werden (und
   bevor <function>session_start</function> aufgerufen wurde).
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>name</parameter></term>
     <listitem>
      <para>
       Der Session-Name referenziert den Namen der Session, der in Cookies und
       URLs verwendet wird (&zb; <literal>PHPSESSID</literal>). Er sollte nur
       alphanumerische Zeichen enthalten und sollte kurz und beschreibend sein
       (&zb; für Benutzer mit aktivierter Cookie-Warnung). Wenn
       <parameter>name</parameter> angegeben wird und nicht &null; ist, wird
       der Name der aktuellen Session durch dessen Wert ersetzt.
      </para>
      <para>
       <warning>
        <para>
         Der Session-Name darf nicht nur aus Zahlen bestehen, sondern muss
         mindestens einen Buchstaben enthalten. Andernfalls wird jedesmal eine
         neue Session-ID erzeugt.
        </para>
       </warning>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt den Namen der aktuellen Session zurück. Wird
   <parameter>name</parameter> übergegeben und die Funktion aktualisiert den
   Session-Namen, wird der Name der <emphasis>alten</emphasis> Session
   zurückgegeben. &return.falseforfailure;
  </para>
 </refsect1>

 <refsect1 role="changelog">
  &reftitle.changelog;
  <para>
   <informaltable>
    <tgroup cols="2">
     <thead>
      <row>
       <entry>&Version;</entry>
       <entry>&Description;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>8.0.0</entry>
       <entry>
        <parameter>name</parameter> ist jetzt nullable (akzeptiert den
        NULL-Wert).
       </entry>
      </row>
      <row>
       <entry>7.2.0</entry>
       <entry>
        <function>session_name</function> prüft den Session-Status; zuvor
        wurde nur der Cookie-Status geprüft. Somit war es zuvor möglich, dass
        <function>session_name</function> nach
        <function>session_start</function> aufgerufen wurde, was
        möglicherweise zum Absturz von PHP und zu anderem Fehlverhalten führen
        konnte.
       </entry>
      </row>
     </tbody>
    </tgroup>
   </informaltable>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>session_name</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
/* den Session-Namen auf WebsiteID setzen */
$name_vorher = session_name ("WebsiteID");
echo "Der vorhergehende Session-Name war $name_vorher<br />";
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member>
     Die Konfigurationsanweisung
     <link linkend="ini.session.name">session.name</link>
    </member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
