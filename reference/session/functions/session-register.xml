<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.9 $ -->
<!-- splitted from ./de/functions/session.xml, last change in rev 1.2 -->
<!-- last change to 'session-register' in en/ tree in rev 1.2 -->
<!-- EN-Revision: 1.10 Maintainer: samesch Status: ready -->
<!-- OLD-Revision: 1.81/EN.1.2 -->
<refentry id="function.session-register">
 <refnamediv>
  <refname>session_register</refname>
  <refpurpose>Registriert eine oder mehrere globale Variablen in der aktuellen Session</refpurpose>
 </refnamediv>
 <refsect1>
  <title>Beschreibung</title>
  <methodsynopsis>
   <type>bool</type><methodname>session_register</methodname>
   <methodparam><type>mixed</type><parameter>Name</parameter></methodparam>
   <methodparam choice="opt"><type>mixed</type><parameter>...</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>session_register</function> akzeptiert eine variable Anzahl von
   Argumenten, die jeweils entweder eine Zeichenkette sein können, die den
   Namen einer Variablen trägt, oder ein Array, das aus solchen Variablennamen
   oder anderen Arrays besteht. Für jeden Namen registriert
   <function>session_register</function> die globale Variable mit diesem Namen
   in der aktuellen Session.
  </para>
  <caution>
   <para>
    Wenn Sie wollen, dass ihr Script unabhängig von der Einstellung von <link
    linkend="ini.register-globals">register_globals</link> funktioniert,
    müssen Sie stattdessen das Array <link
    linkend="reserved.variables.session">$_SESSION</link> verwenden, weil
    <varname>$_SESSION</varname>-Einträge automatisch registriert werden. Wenn
    Sie in Ihrem Script <function>session_register</function> verwenden,
    funktioniert es nicht in Umgebungen, in denen die PHP-Anweisung <link
    linkend="ini.register-globals">register_globals</link> deaktiviert ist.
   </para>
  </caution>

  &note.registerglobals;

  <caution>
   <para>
    Diese Funktion registriert eine <emphasis>globale</emphasis> Variable.
    Wenn Sie eine Session-Variable innerhalb einer Funktion registrieren
    wollen, müssen Sie sicherstellen, dass Sie sie unter Verwendung des <link
    linkend="language.variables.scope"><command>global</command></link>-Schlüsselworts
    oder des <varname>$GLOBALS[]</varname>-Arrays global machen oder die
    nachstehend vermerkten speziellen Session-Arrays verwenden.
   </para>
  </caution>
  <caution>
   <para>
    Wenn Sie <varname>$_SESSION</varname> (oder
    <varname>$HTTP_SESSION_VARS</varname>) verwenden, sollten Sie nicht
    <function>session_register</function>,
    <function>session_is_registered</function> und
    <function>session_unregister</function> verwenden.
   </para>
  </caution>
  <para>
   Diese Funktion gibt &true; zurück, wenn alle Variablen erfolgreich in der
   Session registriert wurden.
  </para>
  <para>
   Wenn <function>session_start</function> nicht vor dieser Funktion
   aufgerufen wurde, erfolgt ein impliziter Aufruf von
   <function>session_start</function> ohne Parameter.
   <varname>$_SESSION</varname> ahmt dieses Verhalten nicht nach und benötigt
   den Aufruf von <function>session_start</function> bevor es verwendet wird.
  </para>
  <para>
   Sie können eine Session-Variable auch erzeugen, indem Sie das entsprechende
   Element des <varname>$_SESSION</varname>- oder (PHP &lt;= 4.1.0)
   <varname>$HTTP_SESSION_VARS</varname>-Arrays setzen.
   <informalexample>
    <programlisting role="php">
<![CDATA[
<?php
// Sie sollten session_register() nicht verwenden
$barney = "A big purple dinosaur.";
session_register("barney");

// Ab PHP 4.1.0 ist die Verwendung von $_SESSION vorzuziehen
$_SESSION["zim"] = "An invader from another planet.";

// Die alte Methode war, $HTTP_SESSION_VARS zu verwenden
$HTTP_SESSION_VARS["spongebob"] = "He's got square pants.";
?>
]]>
    </programlisting>
   </informalexample>
  </para>
  <note>
   <para>
    Gegenwärtig ist es nicht möglich, Ressourcen-Variablen in einer Session zu
    registrieren. Zum Beispiel können Sie nicht erwarten, dass die als
    Session-Variable gespeicherte Verbindungs-Kennung der zu einer Datenbank
    aufgebauten Verbindung bei der nächsten Wiederherstellung der Session noch
    gültig ist. PHP-Funktionen, die eine Ressource zurückgeben, können daran
    erkannt werden, dass sie einen Rückgabewert <literal>resource</literal> in
    ihrer Funktionsdefinition haben. Eine Liste der Funktionen, die Ressourcen
    zurückgeben befindet sich im Anhang <link linkend="resource">Liste von PHP
    Ressourcen</link>.
   </para>
   <para>
    Bei Verwendung von <varname>$_SESSION</varname> (oder
    <varname>$HTTP_SESSION_VARS</varname> bei PHP 4.0.6 oder niedriger) weisen
    Sie <varname>$_SESSION</varname> einen Wert zu, also $_SESSION['var'] =
    'ABC';
   </para>
  </note>
  <para>
   Siehe auch: <function>session_is_registered</function>,
   <function>session_unregister</function> und <link
   linkend="reserved.variables.session">$_SESSION</link>.
  </para>
 </refsect1>
</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
