<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.7 $ -->
<!-- splitted from ./de/functions/session.xml, last change in rev 1.22 -->
<!-- last change to 'session-cache-limiter' in en/ tree in rev 1.62 -->
<!-- EN-Revision: 1.6 Maintainer: samesch Status: ready -->
<!-- OLD-Revision: 1.81/EN.1.62 -->
  <refentry id="function.session-cache-limiter">
   <refnamediv>
    <refname>session_cache_limiter</refname>
    <refpurpose>
     Liefert und/oder setzt die aktuelle Cacheverwaltung
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>string</type><methodname>session_cache_limiter</methodname>
      <methodparam choice="opt">
       <type>string</type><parameter>Cacheverwaltung</parameter>
      </methodparam>
     </methodsynopsis>
    <para>
     <function>session_cache_limiter</function> gibt die Bezeichnung
     der aktuellen Cacheverwaltung zurück. Wenn
     <parameter>Cacheverwaltung</parameter> angegeben wurde, wird
     diese dem neuen Wert entsprechend geändert.
    </para>
    <para>
     Die Cacheverwaltung definiert, welche Cache-Kontroll-HTTP-Header,
     zum Client geschickt werden. Diese Header bestimmen die Regel,
     nach der der Seiteninhalt von Client und dazwischenliegenden
     Proxies in den Cachespeicher aufgenommen werden darf. Wird die
     Cacheverwaltung auf <literal>nocache</literal> gesetzt, so ist
     eine client-/proxyseitige Speicherung im Cache nicht erlaubt. Der
     Wert <literal>public</literal> erlaubt die Aufnahme in den
     Cachespeicher durch Proxies und den Client, wohingegen
     <literal>private</literal> Proxies die Speicherung im Cache
     verbietet und dem Client erlaubt, den Seiteninhalt im Cache zu
     speichern.
    </para>
    <para>
     Im <literal>private</literal>-Modus könnte ein zum Client
     gesendeter Expire-Header manche Browser, inklusive Mozilla,
     verwirren. Sie können dieses Problem durch Verwendung des
     <literal>private_no_expire</literal>-Modus vermeiden. In diesem
     Modus wird nie ein Expire-Header zum Client gesendet.
    </para>
    <note>
     <para>
      <literal>private_no_expire</literal> wurde in PHP 4.2.0
      hinzugefügt.
     </para>
    </note>
    <para>
     Zu Beginn einer Anfrage wird die Cacheverwaltung auf den
     voreingestellten Wert zurückesetzt, der in
     <link
     linkend="ini.session.cache-limiter">session.cache_limiter</link>
     gespeichert ist. Daher müssen Sie
     <function>session_cache_limiter</function> bei jeder Anfrage
     aufrufen (und zwar bevor <function>session_start</function>
     aufgerufen wird).
    </para>
    <example>
     <title><function>session_cache_limiter</function> Beispiel</title>
     <programlisting role="php">
<![CDATA[
<?php
/* setzen der Cacheverwaltung auf 'private' */
session_cache_limiter('private');
$cacheverwaltung = session_cache_limiter();
echo "Die Cacheverwaltung ist jetzt auf $cacheverwaltung gesetzt<br />";
?>
]]>
     </programlisting>
    </example>
    <para>
     Siehe auch die <link
     linkend="ini.session.cache-limiter">session.cache_limiter</link>
     Konfigurationsanweisung.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
