<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: f5c124befdf7c2791877694a86ead123b179d935 Maintainer: samesch Status: ready -->
<!-- Reviewed: no -->
<refentry xml:id="function.session-create-id" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>session_create_id</refname>
  <refpurpose>Erzeugt eine neue Session-ID</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>string</type><type>false</type></type><methodname>session_create_id</methodname>
   <methodparam choice="opt"><type>string</type><parameter>prefix</parameter><initializer>""</initializer></methodparam>
  </methodsynopsis>
  <para>
   <function>session_create_id</function> wird verwendet, um für die aktuelle
   Session eine neue Session-ID zu erstellen. Die Funktion gibt eine
   kollisionsfreie Session-ID zurück.
  </para>
  <para>
   Wenn keine Session aktiv ist, entfällt die Kollisionsprüfung.
  </para>
  <para>
   Die Session-ID wird entsprechend der php.ini-Einstellungen erstellt.
  </para>
  <para>
   Es ist wichtig, dass bei der Garbage Collection (GC) dieselbe Benutzer-ID
   verwendet wird wie beim Webserver. Andernfalls kann es insbesondere bei der
   Dateispeicherverwaltung zu Problemen mit den Zugriffsrechten kommen.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>prefix</parameter></term>
      <listitem>
       <para>
        Wenn <parameter>prefix</parameter> angegeben wird, wird der neuen
        Session-ID das <parameter>prefix</parameter> vorangestellt. In der
        Session-ID sind nicht alle Zeichen erlaubt. Erlaubt sind Zeichen aus
        dem Bereich <literal>[a-zA-Z0-9,-]</literal>.
        Die maximale Länge beträgt 256 Zeichen.
       </para>
      </listitem>
     </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   <function>session_create_id</function> gibt eine neue kollisionsfreie
   Session-ID für die aktuelle Session zurück. Wenn diese Funktion ohne aktive
   Session verwendet wird, entfällt die Kollisionsprüfung. Bei einem Fehler
   wird &false; zurückgegeben.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>session_create_id</function>-Beispiel mit <function>session_regenerate_id</function></title>
    <programlisting role="php">
<![CDATA[
<?php
// Meine Session-Start-Funktion unterstützt die Verwaltung von Zeitstempeln
function my_session_start() {
    session_start();
    // Zu alte Session-ID nicht zulassen
    if (!empty($_SESSION['deleted_time']) && $_SESSION['deleted_time'] < time() - 180) {
        session_destroy();
        session_start();
    }
}

// Meine Funktion zur Erneuerung der Session-ID
function my_session_regenerate_id() {
    // Bei einer aktiven Session wird session_create_id() aufgerufen,
    // um sicherzustellen, dass es keine Kollisionen gibt.
    if (session_status() != PHP_SESSION_ACTIVE) {
        session_start();
    }
    // WARNUNG: Niemals vertrauliche Zeichenfolgen als Präfix verwenden!
    $newid = session_create_id('myprefix-');
    // Zeitstempel für das Löschen setzen. Session-Daten dürfen aus
    // verschiedenen Gründen nicht sofort gelöscht werden.
    $_SESSION['deleted_time'] = time();
    // Beenden der Session.
    session_commit();
    // Sicherstellen, dass die benutzerdefinierte Session-ID akzeptiert wird
    // HINWEIS: Für den normalen Betrieb muss use_strict_mode aktiviert werden.
    ini_set('session.use_strict_mode', 0);
    // Neue benutzerdefinierte Session-ID festlegen
    session_id($newid);
    // Starten mit benutzerdefinierter Session-ID
    session_start();
}

// Sicherstellen, dass use_strict_mode aktiviert ist.
// use_strict_mode ist aus Sicherheitsgründen zwingend erforderlich.
ini_set('session.use_strict_mode', 1);
my_session_start();

// Die Session-ID muss neu generiert werden, wenn
// - sich ein Benutzer anmeldet
// - sich ein Benutzer abmeldet
// - ein bestimmter Zeitraum verstrichen ist
my_session_regenerate_id();

// Nachfolgend der eigentliche Code des Programms
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>session_regenerate_id</function></member>
    <member><function>session_start</function></member>
    <member><link linkend="ini.session.use-strict-mode">session.use_strict_mode</link></member>
    <member><methodname>SessionHandler::create_sid</methodname></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
