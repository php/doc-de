<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./de/functions/session.xml, last change in rev 1.2 -->
<!-- last change to 'session-set-save-handler' in en/ tree in rev 1.23 -->
<!-- EN-Revision: 1.2 Maintainer: samesch Status: ready -->
<!-- OLD-Revision: 1.81/EN.1.23 -->
  <refentry id="function.session-set-save-handler">
   <refnamediv>
    <refname>session_set_save_handler</refname>
    <refpurpose>
     Setzt benutzerdefinierte Session-Speicherfunktionen
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>void</type><methodname>session_set_save_handler</methodname>
      <methodparam>
       <type>string</type><parameter>öffnen</parameter>
      </methodparam>
      <methodparam>
       <type>string</type><parameter>schließen</parameter>
      </methodparam>
      <methodparam>
       <type>string</type><parameter>lesen</parameter>
      </methodparam>
      <methodparam>
       <type>string</type><parameter>schreiben</parameter>
      </methodparam>
      <methodparam>
       <type>string</type><parameter>löschen</parameter>
      </methodparam>
      <methodparam>
       <type>string</type><parameter>gc</parameter>
      </methodparam>
     </methodsynopsis>
    <para>
     <function>session_set_save_handler</function> setzt die
     benutzerdefinierten Session-Speicherfunktionen, die zur
     Speicherung und Wiederherstellung von zur Session gehörigen Daten
     verwendet werden. Dies ist äußerst nützlich, wenn eine andere als
     die mit PHP-Sessions zur Verfügung stehende Art der Speicherung,
     z.B. die Speicherung der Session-Daten in einer lokalen
     Datenbank, bevorzugt wird.
   </para>
    <note>
     <para>
      Sie müssen in Ihrer php.ini-Datei die Konfigurationsoption
      <parameter>session.save_handler</parameter> auf
      <parameter>user</parameter> setzen, damit
      <function>session_set_save_handler</function> wirksam wird.
     </para>
    </note>
    <note>
     <para>
      Die "schreiben"-Routine wird nicht ausgeführt, bevor die Ausgabe
      abgeschlossen ist. Deshalb werden auch niemals Fehlermeldungen
      der "schreiben"-Routine im Browser erscheinen. Wenn die Ausgabe
      von Fehlermeldungen nötig ist, sollte diese stattdessen in eine
      Datei geschrieben werden.
     </para>
    </note>
    <para>
     Das folgende Beispiel liefert eine dateibasierte
     Session-Speicherung, die der Standard-Speicherroutine
     <parameter>files</parameter> der PHP-Sessions ähnlich ist. Dieses
     Beispiel kann problemlos erweitert werden, dass es
     Datenbank-Speicherung mittels ihrer bevorzugten PHP-gestützten
     Datenbank beinhaltet.
    </para>
    <para>
     Damit die Speicherroutine funktioniert wie erwartet, muss die
     read-Function immer einen String-Wert zurückgeben. Wenn es keine
     Daten zu lesen gibt, geben Sie eine leere Zeichenkette zurück.
     Rückgabewerte anderer Routinen werden in boolesche Ausdrücke
     umgewandelt. TRUE für einen Erfolg, FALSE für einen Fehler.
    </para>
    <para>
     <example>
      <title>
       <function>session_set_save_handler</function> Beispiel
      </title>
      <programlisting role="php">
<![CDATA[
<?php
function open ($save_path, $session_name) {
  global $sess_save_path, $sess_session_name;

  $sess_save_path = $save_path;
  $sess_session_name = $session_name;
  return(true);
}

function close() {
  return(true);
}

function read ($id) {
  global $sess_save_path, $sess_session_name;

  $sess_file = "$sess_save_path/sess_$id";
  if ($fp = @fopen($sess_file, "r")) {
    $sess_data = fread($fp, filesize($sess_file));
    return($sess_data);
  } else {
    return(""); // Must return "" here.
  }

}

function write ($id, $sess_data) {
  global $sess_save_path, $sess_session_name;

  $sess_file = "$sess_save_path/sess_$id";
  if ($fp = @fopen($sess_file, "w")) {
    return(fwrite($fp, $sess_data));
  } else {
    return(false);
  }

}

function destroy ($id) {
  global $sess_save_path, $sess_session_name;
       
  $sess_file = "$sess_save_path/sess_$id";
  return(@unlink($sess_file));
}

/************************************************
 * WARNUNG - Sie müssen hier irgendeine Art von *
 * Speicherbereinigungsroutine realisieren.     *
 ************************************************/
function gc ($maxlifetime) {
  return true;
}

session_set_save_handler ("open", "close", "read", "write", "destroy",
"gc");

session_start();

// verfahren Sie mit Sessions wie gewohnt
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
