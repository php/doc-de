<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.25 $ -->
<!-- EN-Revision: 1.43 Maintainer: samesch Status: ready -->
<section id="session.configuration">
 &reftitle.runtime;
 &extension.runtime;
 <para>
 <table>
  <title>Session-Konfigurationsoptionen</title>
  <tgroup cols="4">
   <thead>
    <row>
     <entry>Bezeichnung</entry>
     <entry>Grundeinstellung</entry>
     <entry>Änderbar</entry>
     <entry>Changelog</entry>
    </row>
   </thead>
   <tbody>
    <row>
     <entry>session.save_path</entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.name</entry>
     <entry>"PHPSESSID"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.save_handler</entry>
     <entry>"files"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.auto_start</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.gc_probability</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.gc_divisor</entry>
     <entry>"100"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Seit PHP 4.3.2 verfügbar.</entry>
    </row>
    <row>
     <entry>session.gc_maxlifetime</entry>
     <entry>"1440"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.serialize_handler</entry>
     <entry>"php"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.cookie_lifetime</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.cookie_path</entry>
     <entry>"/"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.cookie_domain</entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.cookie_secure</entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Seit PHP 4.0.4 verfügbar.</entry>
    </row>
    <row>
     <entry>session.cookie_httponly</entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Seit PHP 5.2.0 verfügbar.</entry>
    </row>
    <row>
     <entry>session.use_cookies</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.use_only_cookies</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Seit PHP 4.3.0 verfügbar.</entry>
    </row>
    <row>
     <entry>session.referer_check</entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.entropy_file</entry>
     <entry>""</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.entropy_length</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.cache_limiter</entry>
     <entry>"nocache"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.cache_expire</entry>
     <entry>"180"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry></entry>
    </row>
    <row>
     <entry>session.use_trans_sid</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>
      PHP_INI_ALL in PHP &lt;= 4.2.3. PHP_INI_PERDIR in PHP &lt; 5. Seit PHP
      4.0.3 verfügbar.
     </entry>
    </row>
    <row>
     <entry>session.bug_compat_42</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Seit PHP 4.3.0 verfügbar.</entry>
    </row>
    <row>
     <entry>session.bug_compat_warn</entry>
     <entry>"1"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Seit PHP 4.3.0 verfügbar.</entry>
    </row>
    <row>
     <entry>session.hash_function</entry>
     <entry>"0"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Seit PHP 5.0.0 verfügbar.</entry>
    </row>
    <row>
     <entry>session.hash_bits_per_character</entry>
     <entry>"4"</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Seit PHP 5.0.0 verfügbar.</entry>
    </row>
    <row>
     <entry>url_rewriter.tags</entry>
     <entry>"a=href,area=href,frame=src,form=,fieldset="</entry>
     <entry>PHP_INI_ALL</entry>
     <entry>Seit PHP 4.0.4 verfügbar.</entry>
    </row>
   </tbody>
  </tgroup>
 </table>
 &ini.php.constants;
 </para>
 <para>
  Das Sessionmanagementsystem unterstützt eine Anzahl von
  Konfigurationsoptionen, die Sie in Ihrer &php.ini; setzen können. Wir geben
  Ihnen dazu einen kleinen Überblick.
  <variablelist>

   <varlistentry id="ini.session.save-handler">
    <term>
     <parameter>session.save_handler</parameter>
     <type>string</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.save_handler</literal> definiert den Namen der
      Prozedur, die benutzt wird, um die Daten zu speichern und zurückzuholen,
      die mit der Session in Verbindung stehen. Grundeinstellung
      <literal>files</literal>. Siehe auch
      <function>session_set_save_handler</function>.
     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.session.save-path">
    <term>
     <parameter>session.save_path</parameter>
     <type>string</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.save_path</literal> definiert das Argument, das an die
      Speicherprozedur übergeben wird. Wenn Sie die standardmäßige files
      Prozedur wählen, ist das der Pfad, unter dem die Dateien erzeugt werden.
      Grundeinstellung <literal>/tmp</literal>. Siehe auch
      <function>session_save_path</function>.
     </simpara>
     <para>
      Für diese Anweisung gibt es ein optionales Argument N, das die Anzahl
      der Verzeichnisebenen bestimmt, über die Ihre Session-Dateien verteilt
      werden. Wird sie zum Beispiel auf <literal>'5;/tmp'</literal> gesetzt,
      kann das das Anlegen einer Session-Datei und Speicherstelle wie
      <literal>/tmp/4/b/1/e/3/sess_4b1e384ad74619bd212e236e52a5a174If</literal>
      bewirken. Um N verwenden zu können, müssen Sie alle diese Verzeichnisse
      vorher anlegen. In <filename>ext/session</filename> gibt es für diesen
      Zweck ein kleines Shell-Script namens <filename>mod_files.sh</filename>.
      Beachten Sie, dass die automatische 'Müllentsorgung' (garbage
      collection) nicht durchgeführt wird, wenn N verwendet wird und größer 0
      ist (für weitere Informationen siehe eine Kopie der &php.ini;). Achten
      Sie bei der Verwendung von N außerdem darauf, dass Sie
      <literal>session.save_path</literal> zwischen Anführungsstriche setzen,
      weil der Trenner (<literal>;</literal>) in der &php.ini; auch für
      Kommentare benutzt wird.
     </para>
     <warning>
      <para>
       Wenn Sie ein Verzeichnis gewählt haben, für das jeder Leserechte hat,
       wie das z.B. bei /tmp (Grundeinstellung) der Fall ist, könnten andere
       Serverbenutzer mit Hilfe der Dateiliste dieses Verzeichnisses Ihre
       Sessions entführen.
      </para>
     </warning>
     <note>
      <simpara>
       Vor PHP 4.3.6 mussten Benutzer von Windows diese Variable ändern, um
       die Session-Funktionen von PHP nutzen zu können. Es muss ein gültiger
       Pfad, z.B. <filename>c:/temp</filename>, angegeben werden.
      </simpara>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.session.name">
    <term>
     <parameter>session.name</parameter>
     <type>string</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.name</literal> spezifiziert den Namen der Session, der
      als Cookie-Name verwendet wird. Grundeinstellung
      <literal>PHPSESSID</literal>. Siehe auch
      <function>session_name</function>.
     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.session.auto-start">
    <term>
     <parameter>session.auto_start</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.auto_start</literal> spezifiziert, ob das Session-Modul
      zu Beginn einer Anfrage automatisch eine Session startet.
      Grundeinstellung <literal>0</literal> (deaktiviert).
     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.session.serialize-handler">
    <term>
     <parameter>session.serialize_handler</parameter>
     <type>string</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.serialize_handler</literal> definiert den Namen der
      Prozedur, die benutzt wird, um Daten zu serialisieren/deserialisieren.
      Gegenwärtig werden ein internes PHP-Format (Name <literal>php</literal>)
      und WDDX (name <literal>wddx</literal>) unterstützt. WDDX steht nur zur
      Verfügung, wenn PHP mit <link linkend="ref.wddx">WDDX support</link>
      kompiliert wurde. Grundeinstellung <literal>php</literal>.
     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.session.gc-probability">
    <term>
     <parameter>session.gc_probability</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.gc_probability</literal> wird in Verbindung mit
      <literal>session.gc_divisor</literal> dazu verwendet, die
      Wahrscheinlichkeit zu regeln, mit der die gc (garbage collection)
      Routine gestartet wird. Grundeinstellung <literal>1</literal>. Siehe
      auch <link linkend="ini.session.gc-divisor">session.gc_divisor</link>.
     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.session.gc-divisor">
    <term>
     <parameter>session.gc_divisor</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.gc_divisor</literal> definiert gekoppelt mit
      <literal>session.gc_probability</literal> die Wahrscheinlichkeit, mit
      der die gc (garbage collection) Routine bei jeder Initialisierung einer
      Session gestartet wird. Die Wahrscheinlichkeit errechnet sich aus
      gc_probability/gc_divisor. 1/100 bedeutet z.B., dass die GC-Routine bei
      jeder Anfrage mit einer Wahrscheinlichkeit von 1% gestartet wird.
      Grundeinstellung <literal>100</literal>.
     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.session.gc-maxlifetime">
    <term>
     <parameter>session.gc_maxlifetime</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.gc_maxlifetime</literal> spezifiziert die Anzahl der
      Sekunden, nach denen Daten als 'garbage' ('Müll') betrachtet und
      entsorgt werden. Die Speicherbereinigung wird zu Beginn einer Session
      durchgeführt.
     </simpara>
     <note>
      <para>
       Falls sich der Wert von <literal>session.gc_maxlifetime</literal> in
       verschiedenen Scripts unterscheidet, aber sie die Sessiondaten an der
       selben Stelle speichern, löscht das Script mit dem kleinsten Wert die
       Daten. Verwenden Sie die Anweisung in diesem Fall zusammen mit der
       Anweisung <link
       linkend="ini.session.save-path">session.save_path</link>.
      </para>
     </note>
     <note>
      <simpara>
       Falls Sie die standardmäßige dateibasierte Session-Prozedur verwenden,
       muss Ihr Dateisystem die Zugriffszeiten (atime) verfolgen. Windows FAT
       tut dies nicht. Sie müssen sich daher einen anderen Weg einfallen
       lassen, um die 'Müllentsorgung' Ihrer Session zu erledigen, wenn Sie an
       ein FAT-Dateisystem gebunden sind oder an irgendein anderes
       Dateisystem, das keine atime-Kontrolle bietet. Seit PHP 4.2.3 wird
       mtime (modified date) anstatt atime verwendet. Sie werden also keine
       Problem mit Dateisystemen haben, bei denen atime nicht zur Verfügung
       steht.
      </simpara>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.session.referer-check">
    <term>
     <parameter>session.referer_check</parameter>
     <type>string</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.referer_check</literal> enthält die Zeichenkette, auf
      die Sie jeden HTTP-Referer überprüfen wollen. Wenn der Referer vom
      Client gesendet und die Zeichenkette nicht gefunden wurde, wird die
      eingebettete Session-ID als ungültig gekennzeichnet. Grundeinstellung
      ist eine leere Zeichenkette.
     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.session.entropy-file">
    <term>
     <parameter>session.entropy_file</parameter>
     <type>string</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.entropy_file</literal> gibt den Pfad zu einer externen
      Quelle (Datei) an, die bei der Erzeugung einer Session-ID als
      zusätzliche Entropiequelle verwendet wird. Beispiele sind
      <literal>/dev/random</literal> oder <literal>/dev/urandom</literal>, die
      auf vielen Unix-Systemen zur Verfügung stehen.
     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.session.entropy-length">
    <term>
     <parameter>session.entropy_length</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.entropy_length</literal> spezifiziert die Anzahl der
      Bytes, die von der oben spezifizierten Datei gelesen werden.
      Grundeinstellung <literal>0</literal> (deaktiviert).
     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.session.use-cookies">
    <term>
     <parameter>session.use_cookies</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.use_cookies</literal> spezifiziert, ob das Modul
      Cookies verwendet, um die Session-ID clientseitig zu speichern.
      Grundeinstellung <literal>1</literal> (aktiviert).
     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.session.use-only-cookies">
    <term>
     <parameter>session.use_only_cookies</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.use_only_cookies</literal> spezifiziert, ob das Modul
      <emphasis role="strong">nur</emphasis> Cookies verwendet, um die
      Session-ID clientseitig zu speichern. Mit Aktivierung dieser Einstellung
      wird möglichen Angriffen durch Übermittlung von Session-IDs in URLs
      vorgebeugt. Diese Einstellung wurde in PHP 4.3.0 hinzugefügt.
     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.session.cookie-lifetime">
    <term>
     <parameter>session.cookie_lifetime</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.cookie_lifetime</literal> spezifiziert die
      Cookie-Lebensdauer, die an den Browser geschickt wird, in Sekunden. Der
      Wert 0 bedeutet "bis der Browser geschlossen wird." Grundeinstellung
      <literal>0</literal>. Siehe auch
      <function>session_get_cookie_params</function> und
      <function>session_set_cookie_params</function>. Da das Cookie vom
      Browser zurückgegeben wird, wird seine Lebensdauer nicht verlängert. Es
      muss mittels <function>setcookie</function> gesendet werden.
     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.session.cookie-path">
    <term>
     <parameter>session.cookie_path</parameter>
     <type>string</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.cookie_path</literal> spezifiziert den Pfad, in dem das
      Session-Cookie gesetzt wird. Grundeinstellung <literal>/</literal>.
      Siehe auch <function>session_get_cookie_params</function> und
      <function>session_set_cookie_params</function>.
     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.session.cookie-domain">
    <term>
     <parameter>session.cookie_domain</parameter>
     <type>string</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.cookie_domain</literal> spezifiziert die Domain, unter
      der das Session-Cookie gesetzt wird. In der Grundeinstellung überhaupt
      keine, was bedeutet, dass entsprechend der Spezifikation für Cookies der
      Hostname des Servers verwendet wird, der das Cookie erzeugt hat. Siehe
      auch <function>session_get_cookie_params</function> und
      <function>session_set_cookie_params</function>.
     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.session.cookie-secure">
    <term>
     <parameter>session.cookie_secure</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.cookie_secure</literal> spezifiziert, ob Cookies nur
      über sichere Verbindungen geschickt werden sollen. Grundeinstellung
      <literal>off</literal>. Diese Einstellung wurde in PHP 4.0.4
      hinzugefügt. Siehe auch <function>session_get_cookie_params</function>
      und <function>session_set_cookie_params</function>.
     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.session.cookie-httponly">
    <term>
     <parameter>session.cookie_httponly</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.cookie_httponly</literal> markiert das Cookie als nur
      über das HTTP-Protokoll zugänglich. Das bedeutet, dass für
      Skriptsprachen wie z.B. JavaScript nicht zugänglich ist. Diese
      Einstellung kann helfen, Identitätsdiebstahl durch XSS-Angriffe zu
      reduzieren (obwohl es nicht von allen Browsern unterstützt wird).
     </simpara>
    </listitem>
   </varlistentry>
            
   <varlistentry id="ini.session.cache-limiter">
    <term>
     <parameter>session.cache_limiter</parameter>
     <type>string</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.cache_limiter</literal> spezifiziert die Methode der
      Cacheverwaltung, die bei Session-Seiten benutzt wird
      (none/nocache/private/private_no_expire/public). Grundeinstellung
      <literal>nocache</literal>. Siehe auch
      <function>session_cache_limiter</function>.
     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.session.cache-expire">
    <term>
     <parameter>session.cache_expire</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.cache_expire</literal> spezifiziert in Minuten, wie
      lange Session-Seiten im Cache bleiben. Bei nocache ist diese Angabe
      wirkungslos. Grundeinstellung <literal>180</literal>. Siehe auch
      <function>session_cache_expire</function>.
     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.session.use-trans-sid">
    <term>
     <parameter>session.use_trans_sid</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.use_trans_sid</literal> bestimmt ob transparente
      SID-Unterstützung aktiviert ist oder nicht. Grundeinstellung
      <literal>0</literal> (deaktiviert).
     </simpara>
     <note>
      <simpara>
       In PHP 4.1.2 oder darunter wird sie durch compilieren mit <link
       linkend="configure.enable-trans-sid">
       <literal>--enable-trans-sid</literal></link> aktiviert. Ab PHP 4.2.0
       ist das Feature trans-sid immer eincompiliert.
      </simpara>
      <simpara>
       URL-basiertes Session-Management hat im Vergleich zu Cookie-basiertem
       Session-Management zusätzliche Sicherheitsrisiken. Benutzer können zum
       Beispiel eine URL, die eine aktive Session-ID enthält, per Email an
       Freunde schicken oder in ihren Bookmarks speichern und immer mit der
       selben Session-ID auf Ihre Seite zugreifen.
      </simpara>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.session.bug-compat-42">
    <term>
     <parameter>session.bug_compat_42</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <simpara>
      Die PHP-Versionen bis 4.2.3 haben eine undokumentierte Funktion/einen
      undokumentierten Fehler, der es Ihnen gestattet, eine Session-Variable
      im globalen Bereich zu initialisieren, obwohl <link
      linkend="ini.register-globals">register_globals</link> deaktiviert ist.
      Ab Version 4.3.0 gibt PHP bei Verwendung dieser Funktion eine Warnung
      aus, wenn zusätzlich <link
      linkend="ini.session.bug-compat-warn">session.bug_compat_warn</link>
      aktiviert ist. Diese Funktion/dieser Fehler kann durch Deaktivieren
      dieser Einstellung deaktiviert werden.
     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.session.bug-compat-warn">
    <term>
     <parameter>session.bug_compat_warn</parameter>
     <type>boolean</type>
    </term>
    <listitem>
     <simpara>
      Die PHP-Versionen bis 4.2.3 haben eine undokumentierte Funktion/einen
      undokumentierten Fehler, der es Ihnen gestattet, eine Session-Variable
      im globalen Bereich zu initialisieren, obwohl <link
      linkend="ini.register-globals">register_globals</link> deaktiviert ist.
      Ab Version 4.3.0 gibt PHP bei Verwendung dieser Funktion eine Warnung
      aus, wenn sowohl <link
      linkend="ini.session.bug-compat-42">session.bug_compat_42</link> als
      auch <link
      linkend="ini.session.bug-compat-warn">session.bug_compat_warn</link>
      aktiviert sind.
     </simpara>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.session.hash-function">
    <term>
     <parameter>session.hash_function</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.hash_function</literal> gibt Ihnen die Möglichkeit, den
      Prüfsummen-Algorithmus für die Erzeugung von Session-IDs selbst zu
      bestimmen. '0' bedeutet MD5 (128 Bit) und '1' bedeutet SHA-1 (160 Bit).
     </simpara>
     <note>
      <para>
       Dies wurde in PHP 5 eingeführt.
      </para>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.session.hash-bits-per-character">
    <term>
     <parameter>session.hash_bits_per_character</parameter>
     <type>integer</type>
    </term>
    <listitem>
     <simpara>
      <literal>session.hash_bits_per_character</literal> gibt Ihnen die
      Möglichkeit, zu definieren wieviele Bit bei der Umwandlung der binären
      Prüfsummen-Daten in etwas Lesbares in jedem Zeichen gespeichert werden.
      Mögliche Werte sind '4' (0-9, a-f), '5' (0-9, a-v) und '6' (0-9, a-z,
      A-Z, "-", ",").
     </simpara>
     <note>
      <para>
       Dies wurde in PHP 5 eingeführt.
      </para>
     </note>
    </listitem>
   </varlistentry>

   <varlistentry id="ini.url-rewriter.tags">
    <term>
     <parameter>url_rewriter.tags</parameter>
     <type>string</type>
    </term>
    <listitem>
     <simpara>
      <literal>url_rewriter.tags</literal> bestimmt, wenn Unterstützung für
      transparente SID aktiviert ist, welche HTML-Tags so umgeschrieben
      werden, dass sie die Session-ID beinhalten. Grundeinstellung
      <literal>a=href,area=href,frame=src,input=src,form=fakeentry,fieldset=</literal>
     </simpara>
     <note>
      <simpara>
       Wenn Sie XHTML-konform sein wollen, müssen Sie den
       <literal>form</literal>-Eintrag entfernen und Ihre Formularfelder
       zwischen &lt;fieldset&gt;-Tags setzen.
      </simpara>
     </note>
    </listitem>
   </varlistentry>
  </variablelist>
 </para>

 <para>
  Die Konfigurationseinstellungen von <link
  linkend="ini.track-vars"><literal>track_vars</literal></link> und <link
  linkend="ini.register-globals"><literal>register_globals</literal></link>
  beeinflussen, wie die Session-Variablen gespeichert und wiederhergestellt
  werden.
 </para>

 <note>
  <para>
   Seit PHP 4.0.3 ist <link
   linkend="ini.track-vars"><literal>track_vars</literal></link> immer
   aktiviert.
  </para>
 </note>

</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
