<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./de/functions/sesam.xml, last change in rev 1.1 -->
<!-- last change to 'sesam-field-array' in en/ tree in rev 1.1 -->
  <refentry id="function.sesam-field-array">
   <refnamediv>
    <refname>sesam_field_array</refname>
    <refpurpose>
     Liefert Meta-Information über einzelne Ergebnisspalten
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>array</type><methodname>sesam_field_array</methodname>
      <methodparam><type>string</type><parameter>result_id</parameter></methodparam>
     </methodsynopsis>
    <para>
     <parameter>result_id</parameter> ist eine gültige Ergebniskennung (?) der Funktion
     <function>sesam_query</function>.
    </para>
    <para>
     Liefert eine gemischtes assoziativ indiziertes Array (???) mit Meta-Informationen
     (Spaltenname, Typ, Genauigkeit, ...) über einzelne Ergebnisspalten nach einer mit
     <parameter>result_id</parameter> assoziierten Abfrage.
    </para>
    <para>
     <table>
      <title>
       Von <function>sesam_field_array</function> gelieferter gemischter Ausgabesatz 
      </title>
      <tgroup cols="2">
       <thead>
        <row>
 	<entry>Array Element</entry>
 	<entry>Contents</entry>
        </row>
       </thead>
       <tbody>
        <row>
 	<entry>int $arr["count"]</entry>
 	<entry>Gesamtanzahl von Zeilen im Ausgabesatz (oder &null; bei "immediate"
               Abfragen). SESAM "multiple fields" sind "inlined" (???) und werden
               werden wie die entsprechende Anzahl von Spalten behandelt.
	</entry>
        </row>
        <row>
 	<entry>string $arr[col]["name"]</entry>
 	<entry>Spaltenname für column(<literal>col</literal>), wobei 
               <literal>col</literal> zwischen 0 und 
               <literal>$arr["count"]-1</literal> liegt. Für dynamisch
               berechnete Spalten kann der gelieferte Wert auch ein 
               Leer-String sein. SESAM "multiple fields" sind 
               "inlined" (???) und werden wie die entsprechende Anzahl 
               von Spalten behandelt , jedes mit dem selben Spaltennamen. 
        </entry>
        </row>
        <row>
 	<entry>string $arr[col]["count"]</entry>
 	<entry>"count" ist der Wiederholungsfaktor, wenn 
               die Spalte als "multiple field" definiert wurde
               (normalerweise 1). Die erste Spalte einer
               "multiple field"-Spalte enthält dagegen die Anzahl
               von Wiederholungen (in der zweiten und in allen weiteren 
               Spalten ist "count" 1), was zur Identifikation von
               "multiple fields" im Ergebnissatz verwendet werden kann.
               Das Beispiel in der Beschreibung von 
               <function>sesam_query</function> demonstriert die Anwendung
               des "count"-Attributes.
        </entry>
        </row>
        <row>
 	<entry>string $arr[col]["type"]</entry>
 	<entry>PHP-Variablentyp der Daten für
               column(<literal>col</literal>), wobei
               <literal>col</literal> zwischen
	       und <literal>$arr["count"]-1</literal> liegt. Der gelieferte 
               Wert kann (abhängig vom SQL-Typ des Ergebnisses) einer der 
               folgenden sein:
               <itemizedlist>
                <listitem>
                 <simpara>"integer"</simpara>
                </listitem>
                <listitem>
                 <simpara>"double"</simpara>
                </listitem>
                <listitem>
                 <simpara>"string"</simpara>
                </listitem>
               </itemizedlist>
               SESAM "multiple fields" sind "inlined" (???) und werden wie 
               die entsprechende Anzahl von Spalten behandelt, 
               jedes mit dem selben PHP-Typ. 
        </entry>
        </row>
        <row>
 	<entry>string $arr[col]["sqltype"]</entry>
 	<entry>SQL-Variablentyp der Spaltendaten für
               column(<literal>col</literal>), wobei
               <literal>col</literal> zwischen 0
	       und <literal>$arr["count"]-1</literal> liegt. Der gelieferte Wert
               kann abhängig vom SQL-Typ des Ergebnisses einer der folgenden sein:
               <itemizedlist>
                <listitem>
                 <simpara>"CHARACTER"</simpara>
                </listitem>
                <listitem>
                 <simpara>"VARCHAR"</simpara>
                </listitem>
                <listitem>
                 <simpara>"NUMERIC"</simpara>
                </listitem>
                <listitem>
                 <simpara>"DECIMAL"</simpara>
                </listitem>
                <listitem>
                 <simpara>"INTEGER"</simpara>
                </listitem>
                <listitem>
                 <simpara>"SMALLINT"</simpara>
                </listitem>
                <listitem>
                 <simpara>"FLOAT"</simpara>
                </listitem>
                <listitem>
                 <simpara>"REAL"</simpara>
                </listitem>
                <listitem>
                 <simpara>"DOUBLE"</simpara>
                </listitem>
                <listitem>
                 <simpara>"DATE"</simpara>
                </listitem>
                <listitem>
                 <simpara>"TIME"</simpara>
                </listitem>
                <listitem>
                 <simpara>"TIMESTAMP"</simpara>
                </listitem>
               </itemizedlist>
               SESAM "multiple fields" sind "inlined" (???) und werden wie 
               die entsprechende Anzahl von Spalten behandelt, 
               jedes mit dem selben SQL-Typ. 
        </entry>
        </row>
        <row>
 	<entry>string $arr[col]["length"]</entry>
 	<entry>Das Attribut "length" der SQL-Variablen in
               column(<literal>col</literal>), wobei
	       <literal>col</literal> zwischen 0 und
	       <literal>$arr["count"]-1</literal> liegt. Das "length"
	       Attribut wird in "CHARACTER" und "VARCHAR" SQL-Typen
               zur Spezifizierung der (maximalen) Länge der Zeichenvariablen
	       verwendet.  SESAM "multiple fields" sind "inlined" (???) und 
               werden wie die entsprechende Anzahl von Spalten behandelt, 
               jedes mit dem selben Längenattribut. 
        </entry>
        </row>
        <row>
 	<entry>string $arr[col]["precision"]</entry>
 	<entry>Das Attribut "precision" der SQL-Variablen in
               column(<literal>col</literal>), wobei
	       <literal>col</literal> zwischen 0 and
	       <literal>$arr["count"]-1</literal> liegt. Das Attribut "precision"
	       wird für numerische und Zeit-Felder verwendet.
	       SESAM "multiple fields" sind "inlined" (???) und 
               werden wie die entsprechende Anzahl von Spalten behandelt, 
               jedes mit dem selben Attribut "precision". 
        </entry>
        </row>
        <row>
 	<entry>string $arr[col]["scale"]</entry>
 	<entry>Das Attribut "scale" der SQL-Variablen in
               column(<literal>col</literal>), wobei 
	       <literal>col</literal> zwischen 0 and
	       <literal>$arr["count"]-1</literal> liegt. Das Attribut
               "scale" wird für numerische Datentypen verwendet.
               SESAM "multiple fields" sind "inlined" (???) und 
               werden wie die entsprechende Anzahl von Spalten behandelt, 
               jedes mit dem selben Attribut "scale". 
        </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     Siehe Beschreibung von <function>sesam_query</function> für eine beispielhafte
     Anwendung der Funktion <function>sesam_field_array</function>.    
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
