<?xml version="1.0" encoding="iso-8859-1"?>
<!-- splitted from ./de/functions/sesam.xml, last change in rev 1.1 -->
<!-- last change to 'sesam-fetch-array' in en/ tree in rev 1.1 -->
  <refentry id="function.sesam-fetch-array">
   <refnamediv>
    <refname>sesam_fetch_array</refname>
    <refpurpose>Liefert eine Zeile als assoziatives Array</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>array</type><methodname>sesam_fetch_array</methodname>
      <methodparam><type>string</type><parameter>result_id</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>whence</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>offset</parameter></methodparam>
     </methodsynopsis>
    <para>
     Liefert ein Array, das der gelesenen Zeile entspricht oder 
     &false; falls es keine weiteren Zeilen mehr gibt.
    </para>
    <para>
     <function>sesam_fetch_array</function> ist eine Alternative
     zur Funktion <function>sesam_fetch_row</function>. Die Daten werden 
     anstatt in numerischen Indizes des Ergebnisarrays in assoziativen
     Indizes gespeichert, wobei die Feldnamen als Indizes benutzt werden.
    </para>
    <para>
     <parameter>result_id</parameter> ist eine gültige Ergebniskennung (???)
     der Funktion <function>sesam_query</function> (nur Abfragen vom Typ select!).
    </para>
    <para>
     Für die gültigen Werte der optionalen Parameter
     <parameter>whence</parameter> und
     <parameter>offset</parameter> im Detail 
     siehe <function>sesam_fetch_row</function>.
    </para>
    <para>
     Die Funktion <function>sesam_fetch_array</function> holt eine 
     mit der spezifizierten Ergebniskennung (???) assoziierte Datenzeile. 
     Die Zeile wird als assoziatives Array zur Verfügung gestellt. 
     Jede Ergebnisspalte wird mit einem assoziativen Index gleich dem
     Spaltennamen (aka. field) abgespeichert. Die Spaltennamen werden
     in Kleinschreibung konvertiert dargestellt.
    </para>
    <para>
     Spalten ohne Feldnamen (z.B. Ergebnisse von arithmetischen
     Operationen) und leere Felder werden im Array nicht gespeichert. 
     Haben zwei oder mehr Spalten im Ergebnis den selben Namen, bekommt
     diesen die letzte Spalte. In diesem Fall empfiehlt sich der Einsatz
     von <function>sesam_fetch_row</function> oder Alias-Definitionen
     für die Spalten.
     <informalexample>
      <programlisting>
SELECT TBL1.COL AS FOO, TBL2.COL AS BAR FROM TBL1, TBL2</programlisting>
     </informalexample>
    </para>
    <para>
     Eine Spezialbehandlung erlaubt  den Zugriff auf "multiple field"
     Spalten (die sonst alle den selben Spaltennamen haben würden).
     Für jede Spalte eines "multiple field" wird der Name gebildet durch
     Anhängen von "(n)", wobei n den Sub-Index der "multiple field" Spalte
     darstellt und Werte von 1 bis zum deklarierten Wiederholungsfaktor 
     annehmen kann. Zur Übereinstimmung mit der entsprechenden Abfragesyntax
     sind die Indizes  n i c h t  null-basiert. Für eine Spalte der Definition:
     <informalexample>
      <programlisting role="sesam">
CREATE TABLE ... ( ... MULTI(3) INT )</programlisting>
     </informalexample>
     ergäben sich die assoziativen Indizes für die einzelnen "multiple fields"
     als <literal>"multi(1)"</literal>, <literal>"multi(2)"</literal>, and
     <literal>"multi(3)"</literal>.
    </para>
    <para>
     Nachfolgende Aufrufe von <function>sesam_fetch_array</function> liefern
     die nächste Zeile (oder die vorhergehende, höchste/niedrigste je nach den
     Attributen) im Ausgabesatz oder &false; wenn keine Zeilen 
     mehr verfügabr sind.
    </para>
    <example>
     <title>SESAM fetch rows</title>
     <programlisting role="php">
&lt;?php
$result = sesam_query (&quot;SELECT * FROM phone\n&quot;.
                       &quot;  WHERE LASTNAME='&quot;.strtoupper($name).&quot;'\n&quot;.
                       &quot;  ORDER BY FIRSTNAME&quot;, 1);
if (! $result) {
    ... error ...
}
// print the table:
print &quot;&lt;TABLE BORDER&gt;\n&quot;;
while (($row = sesam_fetch_array ($result)) &amp;&amp; count($row) &gt; 0) {
    print &quot; &lt;TR&gt;\n&quot;;
    print &quot;  &lt;TD&gt;&quot;.htmlspecialchars($row[&quot;firstname&quot;]).&quot;&lt;/TD&gt;\n&quot;;
    print &quot;  &lt;TD&gt;&quot;.htmlspecialchars($row[&quot;lastname&quot;]).&quot;&lt;/TD&gt;\n&quot;;
    print &quot;  &lt;TD&gt;&quot;.htmlspecialchars($row[&quot;phoneno&quot;]).&quot;&lt;/TD&gt;\n&quot;;
    print &quot; &lt;/TR&gt;\n&quot;;
}
print &quot;&lt;/TABLE&gt;\n&quot;;
sesam_free_result ($result);
?&gt;
     </programlisting>
    </example>
    <para>
     Siehe auch: <function>sesam_fetch_row</function> (liefert ein indiziertes Array)  
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
