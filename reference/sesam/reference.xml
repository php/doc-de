<?xml version="1.0" encoding="iso-8859-1"?>
 <reference id="ref.sesam">
  <title>SESAM Datenbankfunktionen</title>
  <titleabbrev>SESAM</titleabbrev>

  <partintro>
   <para>
    SESAM/SQL-Server ist ein von Fujitsu Siemens Computers in Deutschland entwickeltes 
    Mainframe-Datenbanksystem für High-End Server mit dem Betriebssystem BS2000/OSD.
   </para>
   <para>
    In zahlreichen BS2000-Installationen hat SESAM/SQL-Server unter Beweis gestellt:
    <itemizedlist>
     <listitem><simpara>die einfach zu handhabende Unterstützung von Java-, Web- und
                        Client-Server-Anwendungen</simpara></listitem>
     <listitem><simpara>eine Hochverfügbarkeit von mehr als 99,99 %</simpara></listitem>
     <listitem><simpara>die Fähigkeit, bis zu mehrere hunderttausend Benutzer zu 
                        bedienen </simpara></listitem>
    </itemizedlist>
   </para>
   <para>
    Mit einer PHP3 SESAM-Schnittstelle sind jetzt auch Datenbank-Operationen per 
    PHP-scripts möglich.
   </para>
   <note>
    <title>Konfigurationshinweise</title>
    <para>
     Die PHP-SESAM-Schnittstelle muß als Modul in Apache integriert werden. 
     Stand-alone-Betrieb ist nicht möglich. Im Apache-PHP-Modul ist die 
     <link linkend="ini.sect.sesam">SESAM-Schnittstelle</link> entsprechend
     den Apache-Vorschriften zu konfigurieren.
     <table>
      <title>SESAM-Konfigurationsvorschriften</title>
      <tgroup cols="2">
       <thead>
        <row>
 	<entry>Directive</entry>
 	<entry>Bedeutung</entry>
        </row>
       </thead>
       <tbody>
        <row>
 	<entry><literal>php3_sesam_oml</literal></entry>
 	<entry>Name der BS2000-PLAM-Bibliothek mit den ladbaren Modulen des
               SESAM-Treibers. Für die Nutzung von SESAM-Funktionen erforderlich.
               <para>
	        Beispiel:
	        <informalexample>
                 <programlisting role="apache">
php3_sesam_oml $.SYSLNK.SESAM-SQL.030</programlisting>
                </informalexample>
	       </para>
        </entry>
        </row>
        <row>
 	<entry><literal>php3_sesam_configfile</literal></entry>
 	<entry>Name der Konfigurationsdatei der SESAM-Anwendung. Für die Nutzung 
               von SESAM-Funktionen erforderlich.
	       <para>
	        Example:
	        <informalexample>
                 <programlisting role="apache">
php3_sesam_configfile $SESAM.SESAM.CONF.AW</programlisting></informalexample>
                enthält im allgemeinen folgende Konfiguration (siehe auch SESAM
                Referenzhandbuch):
	        <informalexample>
                 <programlisting role="bs2000">
CNF=B
NAM=K
NOTYPE</programlisting>
                </informalexample>
               </para>
        </entry>
        </row>
        <row>
 	<entry><literal>php3_sesam_messagecatalog</literal></entry>
 	<entry>Name des SESAM-Meldungskatalogs. Nur erforderlich, wenn der 
               SESAM-Meldungskatalog nicht im BS2000-Meldungkatalog enthalten ist.
               <para>
	        Example:
                <informalexample>
                 <programlisting role="apache">
php3_sesam_messagecatalog $.SYSMES.SESAM-SQL.030</programlisting>
                </informalexample>
               </para>
        </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
     Zusätzlich zur PHP-SESAM-Schnittstelle muß natürlich die SESAM-Datenbank
     selbst auf dem BS2000-System installiert und konfiguriert werden:
     <itemizedlist>
      <listitem><simpara>der SESAM database handler (DBH) muß gestartet sein</simpara></listitem>
      <listitem><simpara>die Datenbank und der DBH müssen verbunden sein</simpara></listitem>
     </itemizedlist>
    </para>
    <para>
     Für eine Verbindung zwischen dem PHP script und dem DBH müssen die Parameter von
     <literal>CNF</literal> und <literal>NAM</literal> der SESAM-Konfiguration
     den Werten des im BS2000 gestarteten DBH ensprechen.
    </para>
    <para>
     Bei verteilten Datenbanken muß ein SESAM/SQL-DCN-Agent gestartet
     werden, dessen Konfigurationstabelle Host- und Datenbank-Namen enthält.
    </para>
    <para>
     Die Kommunication zwischen PHP im BS2000-Subsystem POSIX und dem DBH 
     im BS2000 erfolgt über Zugriffe eines speziellen Treibermoduls (SQLSCI) und 
     der SESAM-Anschlußmodule auf einen gemeinsamen Speicherbereich (common 
     memory).
     Der common-memory-pool-Mechanismus und die Tatsache, daß PHP in den 
     Webserver statisch eingebunden ist, machen die Datenbankzugriffe sehr 
     schnell. Datenbankzugriffe über ODBC, JDBC or UTM sind nicht erforderlich.
    </para>
    <para>
     Nur ein kleines Lademodul (SESMOD) wird zum PHP gebunden, während die 
     SESAM-Anschlußmodule aus der SESAM-OML (PLAM-Bibliothek) nachgeladen werden.
     library.  In der <link
     linkend="ini.sect.sesam">PHP-Konfiguration</link>,muß diese SESAM-OML und der
     für die SESAM-Konfiguration erforderliche Linkname angegeben werden
     (SQLSCI ist wie in SESAM V3.0 in der Standard-SESAM-Toolbibliothek verfügbar). 
    </para>
    <para>
     Wegen der SQL-Syntaxvorschriften für Anführungszeichen (doppelte Anführungszeichen
     statt AnfÜhrungszeichen mit vorangestelltem Gegenschrägstrich wie in manchen
     anderen Datenbanken) wird empfohlen, die PHP-Konfigurationsvorschriften 
     <link linkend="ini.magic-quotes-gpc"><literal>php3_magic_quotes_gpc</literal></link>
     und <link linkend="ini.magic-quotes-sybase"><literal>php3_magic_quotes_sybase</literal></link>
     für alle SESAM betreffenden PHP-scripts auf <literal>On</literal> zu setzen.
    </para>
   </note>
   <note>
    <title>Überlegungen zur Ablaufzeit</title>
    <para>
     Wegen der spezifischen Eigenschaften der BS2000-Prozeßsteuerung kann der 
     Treiber erst nach dem fork des Apache-Servers für seine Sohn-Prozesse
     geladen werden. Der erste SESAM-Zugriff jedes dieser Prozesse wird dadurch
     etwas verlangsamt, alle weiteren Zugriffe werden jedoch ohne Beeinträchtigung
     abgearbeitet.   
    </para>
    <para>
     Ein explizit definierter SESAM-Meldungskatalog wird bei jedem Laden des Treibers
     (d.h. beim ersten SESAM-Zugriff) geladen. BS2000 erzeugt nach dem erfolgreichen Laden
     dieses Katalogs eine Meldung, die an die error_logfile von Apache geschickt wird.
     Da BS2000 z. Zt. ein Unterdrücken dieser Meldung nicht erlaubt, wird das logfile
     langsam damit vollgeschrieben.
    </para>
    <para>
     Bitte beachten: die SESAM-OML (PLAM-Bibliothek) und die SESAM-Konfigurationsdatei
     müssen für die Benutzerkennung, unter der der Webserver läuft, lesbar sein!
     Andernfalls kann der Server den Treiber nicht laden, womit die SESAM-Funktionen
     nicht zur Verfügung stehen. Auch der Zugriff die Datenbank selbst muß dem Server
     möglich sein, da sonst keine Verbindung zum DBH möglich ist.
    </para>
   </note>
   <note>
    <title>Cursor Typen</title>
    <para>
     Die für SQL-Abfragen "select type" zugewiesenen Ergebniscursor können
     "sequential" oder "scrollable" sein, Standardwert ist wegen des geringeren 
     Speicherbedarfs "sequential"
    </para>
    <para>
     "Scrollable" Cursors können im Ausgabedatensatz beliebig positioniert werden. 
     Für jede "scrollable" Abfrage gibt es globale Standardwerte für den Scroll-Typ 
     (initialisiert zu: <literal>SESAM_SEEK_NEXT</literal>) und der Scrolling-Abstand,
     der entweder einmal mit: <function>sesam_seek_row</function> oder jedesmal beim 
     Lesen einer Zeile mit: <function>sesam_fetch_row</function> gesetzt werden kann.
     Die folgende Tabelle zeigt die Behandlung der globalen Stadtardwerte für
     Scroll-Typ und Scroll-Abstand beim Lesen einer Zeile mit "scrollable" Cursor: 
     <table>
      <title>Scrolled Cursor Post-Processing</title>
      <tgroup cols="2">
       <thead>
        <row>
 	<entry>Scroll Type</entry>
 	<entry>Action</entry>
        </row>
       </thead>
       <tbody>
        <row>
 	<entry><literal>SESAM_SEEK_NEXT</literal></entry>
 	<entry>none</entry>
        </row>
        <row>
 	<entry><literal>SESAM_SEEK_PRIOR</literal></entry>
 	<entry>none</entry>
        </row>
        <row>
 	<entry><literal>SESAM_SEEK_FIRST</literal></entry>
 	<entry>set scroll type to
               <literal>SESAM_SEEK_NEXT</literal></entry>
        </row>
        <row>
 	<entry><literal>SESAM_SEEK_LAST</literal></entry>
 	<entry>set scroll type to
               <literal>SESAM_SEEK_PRIOR</literal></entry>
        </row>
        <row>
 	<entry><literal>SESAM_SEEK_ABSOLUTE</literal></entry>
 	<entry>Auto-Increment internal offset value</entry>
        </row>
        <row>
 	<entry><literal>SESAM_SEEK_RELATIVE</literal></entry>
 	<entry>none. (maintain global default 
               <parameter>offset</parameter> value, which allows
               for, e.g., fetching each 10th row backwards)
               </entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
   </note>
   <note>
    <title>
     Bemerkungen zur Portierung
    </title>
    <para>
     Da in PHP Indizes üblicherweise mit &null; gestartet werden, mußte
     die SESAM-Schnittstelle entsprechend adaptiert werden: während in
     der "normalen" SESAM-Schnittstelle ein Array mit Index 1 beginnt, 
     wird in PHP &null; als Startpunkt verwendet - z.B. hat beim Lesen von
     Spalten mit <function>sesam_fetch_row</function> die erste Spalte
     den Index 0 und the folgenden Spalten haben Indizes bis zu (aber 
     nicht einschließlich!) dem Spaltenindex ($array["count"]).
     Beim Portieren von SESAM-Anwendungen aus aus anderen höheren 
     Programmiersprachen nach PHP ist diese Schnittstellenänderung zu
     beachten. Wo es erforderlich ist, beinhaltet die jeweilige 
     PHP-SESAM-Funktion einen Hinweis auf die mit &null; beginnende
     Indizierung.
    </para>
   </note>
   <note>
    <title>Sicherheitsaspekte</title>
    <para>
     Beim Zugriff auf SESAM-Datenbanken sollte der normale Benutzer
     eines Web-Servers nur die allernötigsten Privilegien bekommen.
     Im allgemeinen sollte auf Datenbanken nur lesender Zugriff 
     möglich sein. Weitergehende Rechte sollten - nur falls wirklich 
     erforderlich - abhängig vom jeweiligen Einsatzfall eingerichtet
     werden. Auf keinen Fall sollte man beliebigen Benutzern im Internet
     volle Zugriffsrechte auf eine Datenbank gewähren! Der Zugriff auf
     PHP-scripts für die Datenbank-Administration sollte in jedem Fall
     per Passwort und/oder durch SSL-Verbindung geschützt sein.
   </para>
   </note>
   <note>
    <title>Migration von anderen SQL-Datenbanken</title>
    <para>
     Unterschiedliche SQL-Ausprägungen sind nie 100-prozentig kompatibel.
     Bei der Portierung von SQL-Anwendungen anderer Datenbanken nach SESAM
     können daher Anpassungen erforderlich sein. Auf folgende, typische
     Unterschiede sei besonders hingewiesen:
     <itemizedlist>
      <listitem>
       <simpara>Herstellerspezifische Datentypen</simpara>
       <simpara>Manche herstellerspezifischen Datentypen müssen u.U. durch
       Standard-SQL-Typen ersetzt werden, wie z.B. <literal>TEXT</literal> 
       in <literal>VARCHAR(max. size)</literal>.
     </simpara>
      </listitem>
      <listitem>
       <simpara>Schlüsselwörter als SQL-Bezeichner</simpara>
       <simpara>In SESAM müssen Schlüsselwörter in Anführungsstrichen (???)
        angegeben werden (SQL-Standard) Schlüssel.</simpara>
      </listitem>
      <listitem>
       <simpara>Länge der Anzeige in Datentypen</simpara>
       <simpara>Datentypen in SESAM sind nicht durch Längenangabe, sondern 
        durch ihre Genauigkeit spezifiziert. Statt <literal>int(4)</literal> 
        für  ganze Zahlen bis '9999' braucht SESAM lediglich 
	<literal>int</literal> für eine implizite Länge von 31 Bit. Als Datentypen 
         für Datum und Zeit gibt es in SESAM nur: <literal>DATE</literal>, 
         <literal>TIME(3)</literal> und <literal>TIMESTAMP(3)</literal>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>SQL-Datentypen mit herstellerspezifischen Attributen der Form: 
	<literal>unsigned</literal>, <literal>zerofill</literal>, oder
	<literal>auto_increment</literal> attributes</simpara>
       <simpara><literal>Unsigned</literal> und<literal>
	zerofill</literal>werden nicht unterstützt. Um die SESAM-implizite 
        automatische Erhöhung zu nutzen, gibt es anstelle von <literal>"... VALUES(0,
        ...)"</literal> automatisch <literal>Auto_increment</literal> (<literal>
        "INSERT ... VALUES(*, ...)"</literal>.
        . </simpara>
      </listitem>
      <listitem>
       <simpara><command>int ... DEFAULT '0000'</command></simpara>
       <simpara>Numerische Variablen dürfen nicht mit Zeichenkonstanten initialisiert 
                werden. Statt dessen ist <command>DEFAULT 0</command> zu verwenden.
                Dem Initialisierungs-string für Variablen des SQL-Datentyps datetime
                muß das jeweilige Schlüsselwort als Prefix vorangestellt werden wie in
                <literal> CREATE TABLE exmpl ( xtime timestamp(3) DEFAULT TIMESTAMP 
               '1970-01-01 00:00:00.000' NOT &null;
                ); </literal>
       </simpara>
      </listitem>
      <listitem>
       <simpara><command>$count = xxxx_num_rows();</command></simpara>
       <simpara>Manche Datenbanken liefern die geschätzte/erratene Anzahl von
                Ausgabezeilen als Abfrageresultat an, obwohl der gelieferte 
                Wert grob falsch ist. SESAM kennt die Anzahl von Ausgabezeilen 
                erst, wenn sie tatsächlich gelesen wurden. Falls diese Information
                TATSÄCHLICH benötigt wird, sollte man <command>SELECT COUNT(...) 
                WHERE ...</command>, versuchen. Diese Funktion ermittelt die 
                Anzahl der Treffer. Ein zweiter Aufruf liefert (hoffentlich)
		die eigentlichen Ergebnisse.
       </simpara>
      </listitem>
      <listitem>
       <simpara><command>DROP TABLE thename;</command></simpara>
       <simpara>In SESAM muß im Kommamdo <command>DROP TABLE</command>
		der Name entweder um die Schlüsselwörter <literal>RESTRICT</literal> 
                oder <literal>CASCADE</literal> ergänzt werden. Bei der Angabe von
                <literal>RESTRICT</literal> wird ein Fehler gemeldet, wenn abhängige		
                Objekte (z.B. VIEWs) existieren, während bei <literal>CASCADE</literal>
                abhängige Objekte zusammen (???) mit der definierten Tabelle 
                gelöscht werden.
       </simpara>
      </listitem>
     </itemizedlist>
    </para>
   </note>
   <note>
    <title>
     Bemerkungen zu weiteren SQL-Datentypen 
    </title>
    <para>
     SESAM unterstützt z.Zt. keine Daten von Typ BLOB. Für zukünftige 
     SESAM-Versionen ist diese Unterstützung geplant.
    </para>
    <para>
     Bei SQL-Abfragen werden von der PHP-Schnittstelle folgende Datentypen 
     automatisch konvertiert:
     <table>
      <title>SQL to PHP Type Conversions</title>
      <tgroup cols="2">
       <thead>
        <row>
 	<entry>SQL Type</entry>
 	<entry>PHP Type</entry>
        </row>
       </thead>
       <tbody>
        <row>
 	<entry>SMALLINT, INTEGER</entry>
 	<entry>"integer"</entry>
        </row>
        <row>
 	<entry>NUMERIC, DECIMAL, FLOAT, REAL, DOUBLE</entry>
 	<entry>"double"</entry>
        </row>
        <row>
 	<entry>DATE, TIME, TIMESTAMP</entry>
 	<entry>"string"</entry>
        </row>
        <row>
 	<entry>VARCHAR, CHARACTER</entry>
 	<entry>"string"</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
     Bei Abfragen auf ganze Zeilen wird das Ergebnis als Array geliefert.
     Leere Felder werden nicht gefüllt, d.h. ihre Existenz muß explizit mit
     <function>isset</function> oder <function>empty</function> überprüft werden.
     Dies ermöglicht dem Benutzer eine bessere Kontrolle als durch Rückgabe 
     eines Leer-strings zur Darstellung eines leeren Feldes.
    </para>
   </note>
   <note>
    <title>Unterstützung der SESAM-Features "multiple fields"</title>
    <para>
     Diese spezielle SESAM-Funktion erlaubt die Definiton von Spalten als Feld-Array.
     Eine "multiple field" Spalte wird wie folgt definiert:
     <example>
      <title>Creating a "multiple field" column</title>
      <programlisting role="sesam">
CREATE TABLE multi_field_test
(
     pkey  CHAR(20) PRIMARY KEY,
     multi(3)   CHAR(12)
)
      </programlisting>
     </example>
     und folgendermaßen ausgefüllt: 
     <example>
      <title>Filling a "multiple field" column</title>
      <programlisting role="sesam">
INSERT INTO multi_field_test ( pkey, multi(2..3) )
  VALUES ( 'Second', &lt;'first_val','second_val'&gt;)
      </programlisting>
     </example>
     Zur Beachtung: führende leere Unterfelder (wie in diesem Fall) werden ignoriert 
     und die enthaltenen Werte damit verworfen, so daß in obigem Beispiel das Ergebnis
     als multi(1..2) angezeigt wird und nicht als multi(2..3).
    </para>
    <para>
     Bei der Ausgabe von Ergebniszeilen wird auf "multiple columns" wie auf "inlined" 
     zusätzliche Spalten zugegriffen. Im obigen Beispiel bekommt  "pkey" den Indexwert
     &null; und auf die drei Spalten "multi(1..3)" kann mit den Indizes 1 bis 3 zugegriffen 
     werden.
    </para>
   </note>
   <para>
    SESAM-spezifische Details sind in den Handbüchern <ulink url="&url.sesam.en;">
    the SESAM/SQL-Server documentation (english)</ulink> oder
    <ulink url="&url.sesam.de;">the SESAM/SQL-Server documentation (german)</ulink>
    beschrieben. Beide Manuale sind online abrufbar und stehen in gedruckter Form
    zur Verfügung.
   </para>
  </partintro>

&reference.sesam.functions;

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

