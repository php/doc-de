<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.1 Maintainer: sas Status: unknown -->
 <reference id="ref.wddx">
  <title>WDDX Funktionen</title>
  <titleabbrev>WDDX</titleabbrev>

  <partintro>
   <para>
    Diese Funktionen arbeiten mit <ulink url="&url.wddx;">WDDX</ulink>
    zusammen.
   </para>
   <para>
    Es ist zu beachten, dass alle Funktionen, die Variablen
    serialisieren, immer das erste Element eines Arrays benutzen, um
    festzustellen, ob das Array in ein Array oder eine 'Structure'
    serialisiert wird.  Wenn das erste Element einen String als
    Schlüssel hat, wird das Array in eine 'Structure' serialisiert,
    andernfalls in ein Array.
    <example>
     <title>Einen einzelnen String serialisieren</title>
     <programlisting role="php">
<![CDATA[
<?php
print wddx_serialize_value("PHP to WDDX packet example", "PHP packet");
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    dieses Beispiel erzeugt:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<wddxPacket version='1.0'><header comment='PHP packet'/><data>
<string>PHP to WDDX packet example</string></data></wddxPacket>
]]>     </programlisting>
    </informalexample>
    <example>
     <title>Die Verwendung von inkrementierenden Paketen</title>
     <programlisting role="php">
<![CDATA[
<?php
$pi = 3.1415926;
$packet_id = wddx_packet_start("PHP");
wddx_add_vars($packet_id, "pi");

/* So tun, als ob $cities aus einer Datenbank kommt */
$cities = array("Austin", "Novato", "Seattle");
wddx_add_vars($packet_id, "cities");

$packet = wddx_packet_end($packet_id);
print $packet;
?>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Diese Beispiel wird erzeugen:
    <informalexample>
     <programlisting role="php">
<![CDATA[
<wddxPacket version='1.0'><header comment='PHP'/><data><struct>
<var name='pi'><number>3.1415926</number></var><var name='cities'>
<array length='3'><string>Austin</string><string>Novato</string>
<string>Seattle</string></array></var></struct></data></wddxPacket>
]]>     </programlisting>
    </informalexample>
   </para>
  </partintro>

&reference.wddx.functions;

 </reference>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->

