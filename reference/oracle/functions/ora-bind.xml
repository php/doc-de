<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- splitted from ./de/functions/oracle.xml, last change in rev 1.2 -->
<!-- last change to 'ora-bind' in en/ tree in rev 1.2 -->
<!-- EN-Revision: 1.2 Maintainer: samesch Status: ready -->
<!-- OLD-Revision: 1.30/EN.1.2 -->
  <refentry id="function.ora-bind">
   <refnamediv>
    <refname>ora_bind</refname>
    <refpurpose>
     Bindet eine PHP-Variable an einen Oracle-Parameter
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>int</type><methodname>ora_bind</methodname>
      <methodparam><type>int</type><parameter>cursor</parameter></methodparam>
      <methodparam><type>string</type><parameter>PHP-Variablenname</parameter></methodparam>
      <methodparam><type>string</type><parameter>SQL-Parametername</parameter></methodparam>
      <methodparam><type>int</type><parameter>Länge</parameter></methodparam>
      <methodparam choice="opt"><type>int</type><parameter>Typ</parameter></methodparam>
     </methodsynopsis>
    <para>
     Gibt nach erfolgter Bindung &true;, andernfalls &false; zurück.
     Einzelheiten über den Fehler bekommen Sie mit den Funktionen
     <function>ora_error</function> und
     <function>ora_errorcode</function>.
    </para>
    <para>
     Diese Funktion bindet die genannte PHP-Variable an einen
     SQL-Parameter. Der SQL-Parameter muss von der Form ":name" sein.
     Mit dem optionalen Parameter <parameter>Typ</parameter> können
     sie definieren, ob der SQL-Parameter ein in/out- (0,
     Grundeinstellung), in- (1) oder out- (2) Parameter ist. Ab PHP
     3.0.1 können Sie statt der Zahlen die Konstanten ORA-BIND_INOUT,
     ORA_BIND_IN und ORA_BIND_OUT verwenden.
    </para>
    <para>
     <function>ora_bind</function> muss nach
     <function>ora_parse</function> und vor
     <function>ora_exec</function> aufgerufen werden. Die Eingabewerte
     können durch Zuweisung an die gebundenen PHP-Variablen angegeben
     werden. Nach dem Aufruf von <function>ora_exec</function>
     enthalten die gebunden PHP-Variablen die Ausgabewerte, falls
     diese verfügbar sind.
     <informalexample>
      <programlisting role="php">
<![CDATA[
<?php
ora_parse($curs, "declare tmp INTEGER; begin tmp := :in; :out := tmp; :x := 7.77; end;");
ora_bind($curs, "ergebnis", ":x", $len, 2);
ora_bind($curs, "eingabe", ":in", 5, 1);
ora_bind($curs, "ausgabe", ":out", 5, 2);
$eingabe = 765;
ora_exec($curs);
echo "Ergebnis: $ergebnis<BR>Ausgabe: $ausgabe<BR>Eingabe: $eingabe";
?>
]]>
      </programlisting>
     </informalexample>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
