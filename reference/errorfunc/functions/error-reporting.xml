<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- splitted from ./de/functions/errorfunc.xml, last change in rev 1.5 -->
<!-- last change to 'error-reporting' in en/ tree in rev 1.1 -->
  <refentry id="function.error-reporting">
   <refnamediv>
    <refname>error_reporting</refname>
    <refpurpose>
     Gibt an, welche PHP-Fehlermeldungen angezeigt werden
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>int</type><methodname>error_reporting</methodname>
      <methodparam choice="opt"><type>int</type><parameter>level</parameter></methodparam>
     </methodsynopsis>
    <para>
     Mit <function>error_reporting</function> wird die <link linkend="ini.error-reporting">error_reporting</link>
     Direktive zur Laufzeit des Programms gesetzt. In PHP gibt es viele
     Stufen für die Anzeige von Fehlermeldungen, die mit dieser
     Funktion für die Dauer der Programmausführung eingestellt werden
     kann.  
    </para>
    <para>
     <function>error_reporting</function> setzt die neue Stufe und gibt
     die alte zurück. Der Parameter <parameter>level</parameter>
     erwartet entweder eine Bitmaske oder den Namen einer Konstante. Es
     wird dringend empfohlen, Konstantennamen zu verwenden, um die
     Kompatibilität mit zukünftigen Versionen zu garantieren. Weil die
     Stufen addiert werden, vergrössert sich der integer-Zahlbereich,
     weswegen ältere, integer-basierte Stufen sich möglicherweise
     anders verhalten, als Sie es erwarten.
    </para>
    <para>
     Einige Beispiele:
    </para>
    <para>
     <example role="php">
      <title><function>error_reporting</function> Beispiele</title>
      <programlisting role="php">
<![CDATA[
<?php

// Fehlermeldungen ganz abschalten
error_reporting(0);

// Einfache Laufzeitfehler melden
error_reporting(E_ERROR | E_WARNING | E_PARSE);

// Benachrichtigungen von E_NOTICE können sinnvoll sein (um
// auf nicht initialisierte Variablen oder falsch geschriebene 
// Variablennamen aufmerksam zu machen ...)
error_reporting(E_ERROR | E_WARNING | E_PARSE | E_NOTICE);

// Alle Fehler ausser E_NOTICE melden
// Dies ist die Standardeinstellung in php.ini
error_reporting(E_ALL ^ E_NOTICE);

// Alle PHP-Fehler melden (in PHP 3 kann die Bitmaske 
// 63 verwendet werden)
error_reporting(E_ALL);

// Dasselbe wie error_reporting(E_ALL);
ini_set ('error_reporting', E_ALL);

?>
]]>
      </programlisting>
     </example>
    </para>
    <para> 
     Die verfügbaren Konstanten für die Ausgabe der Fehlermeldungen
     sind unten angegeben. Die aktuellen Bedeutungen dieser Stufen sind
     bei den <link linkend="errorfunc.constants">predefined constants</link> beschrieben
     <table>
      <title><function>error_reporting</function> Konstanten und Bitwerte</title>
      <tgroup cols="2">
       <thead>
        <row>
         <entry>Bitwert</entry>
         <entry>Konstante</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>1</entry>
         <entry>
          <link linkend="e-error">E_ERROR</link>
         </entry>
        </row>
        <row>
         <entry>2</entry>
         <entry>
          <link linkend="e-warning">E_WARNING</link>
         </entry>
        </row>
        <row>
         <entry>4</entry>
         <entry>
          <link linkend="e-parse">E_PARSE</link>
         </entry>
        </row>
        <row>
         <entry>8</entry>
         <entry>
          <link linkend="e-notice">E_NOTICE</link>
         </entry>
        </row>
        <row>
         <entry>16</entry>
         <entry>
          <link linkend="e-core-error">E_CORE_ERROR</link>
         </entry>
        </row>
        <row>
         <entry>32</entry>
         <entry>
          <link linkend="e-core-warning">E_CORE_WARNING</link>
         </entry>
        </row>
        <row>
         <entry>64</entry>
         <entry>
          <link linkend="e-compile-error">E_COMPILE_ERROR</link>
         </entry>
        </row>
        <row>
         <entry>128</entry>
         <entry>
          <link linkend="e-compile-warning">E_COMPILE_WARNING</link>
         </entry>
        </row>
        <row>
         <entry>256</entry>
         <entry>
          <link linkend="e-user-error">E_USER_ERROR</link>
         </entry>
        </row>
        <row>
         <entry>512</entry>
         <entry>
          <link linkend="e-user-warning">E_USER_WARNING</link>
         </entry>
        </row>
        <row>
         <entry>1024</entry>
         <entry>
          <link linkend="e-user-error">E_USER_NOTICE</link>
         </entry>
        </row>
        <row>
         <entry>2047</entry>
          <entry>
         <link linkend="e-all">E_ALL</link>
         </entry>
       </row>
        <row>
         <entry>2048</entry>
         <entry>
          <link linkend="e-strict">E_STRICT</link>
         </entry>
        </row>        
       </tbody>
      </tgroup>
     </table>
    </para>
    <warning>
     <simpara>
      Die Konstante <constant>E_STRICT</constant> mit dem Wert 2048 ist
      ab PHP &gt; 5.0.0  verfügbar. Die Konstante
      <constant>E_ALL</constant> enthält die Stufe
      <constant>E_STRICT</constant> <emphasis>NICHT</emphasis>.
     </simpara>
    </warning>
    <para>
     Siehe auch <link linkend="ini.display-errors">display_errors</link>
     Directive und <function>ini_set</function>.
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
