<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.6 $ -->
<!-- EN-Revision: 1.19 Maintainer: hholzgra Status: ready -->
<appendix xml:id="errorfunc.constants" xmlns="http://docbook.org/ns/docbook">
 &reftitle.constants;
 &extension.constants.core;
  <note>
   <simpara>
    Sie können diese Konstanten innerhalb von  &php.ini; benutzen,
    aber nicht ausserhalb von PHP, wie etwa in der &httpd.conf;, wo
    Sie stattdessen die Werte der Bitmasken benutzen sollten. 
   </simpara>
  </note>
 <table xml:id="errorfunc.constants.errorlevels">
  <title>Fehler und Meldungen</title>
  <tgroup cols="4">
   <thead>
    <row>
     <entry>Wert</entry>
     <entry>Konstante</entry>
     <entry>Beschreibung</entry>
     <entry>Bemerkung</entry>
    </row>
   </thead>
   <tbody>
    <row xml:id="errorfunc.constants.errorlevels.e-error">
     <entry>1</entry>
     <entry>
      <constant>E_ERROR</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Fatale Laufzeit-Fehler. Dies zeigt Fehler an, die nicht
      behoben werden können. Beispielsweise Probleme bei der
      Speicherzuweisung. Die Ausführung des Skripts wird abgebrochen.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-warning">
     <entry>2</entry>
     <entry>
      <constant>E_WARNING</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Warnungen (keine fatalen Fehler) zur Laufzeit des Skripts.
      Das Skript wird nicht abgebrochen. 
     </entry>
     <entry></entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-parse">
     <entry>4</entry>
     <entry>
      <constant>E_PARSE</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Parser-Fehler während der Übersetzung. Parser-Fehler können
      nur vom Parser erzeugt werden.
     </entry>
     <entry></entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-notice">
     <entry>8</entry>
     <entry>
      <constant>E_NOTICE</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Benachrichtigungen während der Laufzeit. Sie zeigen an, dass
      im Skript irgend etwas gefunden wurde, was einen Fehler
      verursachen könnte. Es ist aber genauso möglich, dass 
      Benachrichtigungen im ordnungsgemäßen Ablauf eines Skripts
      ausgegeben werden. 
     </entry>
     <entry></entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-core-error">
     <entry>16</entry>
     <entry>
      <constant>E_CORE_ERROR</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Fatale Fehler, die beim Starten von PHP auftreten. Diese sind
      ähnlich wie <constant>E_ERROR</constant>, nur dass diese
      Fehlermeldungen vom PHP-Kern erzeugt werden.
     </entry>
     <entry>seit PHP 4</entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-core-warning">
     <entry>32</entry>
     <entry>
      <constant>E_CORE_WARNING</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Warnungen (keine fatalen Fehler), die beim Starten von PHP
      auftreten. Diese sind ähnlich wie <constant>E_WARNING</constant>, 
      nur dass diese Warnungen vom PHP-Kern erzeugt werden.
     </entry>
     <entry>seit PHP 4</entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-compile-error">
     <entry>64</entry>
     <entry>
      <constant>E_COMPILE_ERROR</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Fatale Fehler zur Übersetzungszeit. Diese sind ähnlich wie 
      <constant>E_ERROR</constant>, nur dass diese Fehlermeldungen
      von der Zend Scripting Engine erzeugt werden. 
     </entry>
     <entry>seit PHP 4</entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-compile-warning">
     <entry>128</entry>
     <entry>
      <constant>E_COMPILE_WARNING</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Warnungen zur Übersetzungszeit. Diese sind ähnlich wie 
      <constant>E_WARNING</constant>, nur dass diese Warnungen 
      von der Zend Scripting Engine erzeugt werden. 
     </entry>
     <entry>seit PHP 4</entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-user-error">
     <entry>256</entry>
     <entry>
      <constant>E_USER_ERROR</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Benutzerdefinierte Fehlermeldungen. Diese sind ähnlich wie
      <constant>E_ERROR</constant>, nur dass diese Fehlermeldungen
      im PHP-Code mit <function>trigger_error</function> erzeugt werden.
     </entry>
     <entry>seit PHP 4</entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-user-warning">
     <entry>512</entry>
     <entry>
      <constant>E_USER_WARNING</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Benutzerdefinierte Warnungen. Diese sind ähnlich wie       <constant>E_WARNING</constant>,
      nur dass diese Warnungen im PHP-Code mit
      <function>trigger_error</function> erzeugt werden.
     </entry>
     <entry>seit PHP 4</entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-user-notice">
     <entry>1024</entry>
     <entry>
      <constant>E_USER_NOTICE</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Benutzerdefinierte Benachrichtigung. Diese sind ähnlich wie   
      <constant>E_NOTICE</constant>, 
      nur dass diese Benachrichtigungen im PHP-Code mit
      <function>trigger_error</function> erzeugt werden.
     </entry>
     <entry>seit PHP 4</entry>
    </row>


    <row xml:id="errorfunc.constants.errorlevels.e-strict">
     <entry>2048</entry>
     <entry>
      <constant>E_STRICT</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Benachrichtigungen des Laufzeitsystems. Damit erhalten Sie von
      PHP Vorschläge für Änderungen des Programmcodes, die eine
      bestmögliche Interoperabilität und zukünftige Kompatibilität
      Ihres Codes gewährleisten. 
     </entry>
     <entry>seit PHP 5</entry>
    </row>

    <row xml:id="errorfunc.constants.errorlevels.e-recoverable-error">
     <entry>4096</entry>
     <entry>
      <constant>E_RECOVERABLE_ERROR</constant>
      (<type>integer</type>)
     </entry>
     <entry>
      Abfangbarer fataler Fehler. Dies bedeutet das ein potentiell
      gefährlicher Fehler aufgetreten ist, die Engine aber nicht in
      einem instabilen Zustand hinterlassen hat. Wird der Fehler
      nicht durch eine benutzerdefinierte Fehlerbehandlungsroutine
      abgefangen (siehe auch <function>set_error_handler</function>)
      so wird die Anwendung wie bei einem <constant>E_ERROR</constant>
      Fehler abgebrochen.
     </entry>
     <entry>since PHP 5.2.0</entry>
    </row>


    <row xml:id="errorfunc.constants.errorlevels.e-all">
     <entry>2047</entry>
     <entry>
      <constant>E_ALL</constant> 
      (<type>integer</type>)
     </entry>
     <entry>
      Alle Fehler und Warnungen die unterstützt werden, mit Ausnahme
      von <constant>E_STRICT</constant>.
     </entry>
     <entry></entry>
    </row>

   </tbody>
  </tgroup>
 </table>

 <para>
  Mit den obengennnten Werten (sowohl nummerisch als auch mit den
  Konstanten) wird eine Bitmaske erzeugt, die festlegt, welche
  Fehler angezeigt werden sollen. Mit den 
  <link linkend="language.operators.bitwise">Bit Operatoren</link>
  können Sie diese Werte kombinieren oder bestimmte Fehlertypen
  ausmaskieren. Beachten Sie, dass innerhalb von &php.ini; jedoch
  nur '|', '~', '!', '^' and '&amp;' verstanden wird.
 </para>
</appendix> 

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
