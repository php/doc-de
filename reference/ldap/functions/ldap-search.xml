<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 343898 Maintainer: nobody Status: ready -->

<refentry xml:id="function.ldap-search" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <refnamediv>
  <refname>ldap_search</refname>
  <refpurpose>Suche im LDAP Baum</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>resource</type><methodname>ldap_search</methodname>
   <methodparam><type>resource</type><parameter>link_identifier</parameter></methodparam>
   <methodparam><type>string</type><parameter>base_dn</parameter></methodparam>
   <methodparam><type>string</type><parameter>filter</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>attributes</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>attrsonly</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>sizelimit</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>timelimit</parameter></methodparam>
   <methodparam choice="opt"><type>int</type><parameter>deref</parameter></methodparam>
   <methodparam choice="opt"><type>array</type><parameter>serverctrls</parameter></methodparam>
  </methodsynopsis>
  <para>
   Führt eine Suche für einen gegebenen Filter im Verzeichnis mit der Reichweite
   von <constant>LDAP_SCOPE_SUBTREE</constant> durch. Das ist äquivalent zu
   einer Suche im ganzen Verzeichnis.
  </para>
    <para>
     Von 4.0.5 an ist es außerdem möglich parallele Suchen durchzuführen. Um
     dies zu tun, wird ein Array von Verbindungskennungen statt einer einzelnen
     Verbindungskennung als erstes Argument verwendet. Soll nicht der gleiche
     Basis-DN und der gleichen Filter für alle Suchen verwenden werden, kann
     ebenso ein Array von Basis-DNs und/oder ein Array von Filtern verwendet
     werden. Diese Arrays müssen die gleiche Größe wie das Array der
     Verbindungskennungen haben, da die ersten Einträge der Arrays für eine
     Suche verwendet werden, die zweiten Einträge für eine andere Suche und so
     weiter. Wenn parallel gesucht wird, wird ein Array von
     Suchergebniskennungen zurückgegeben, außer im Fehlerfall; dann liefert der
     Eintrag zur entsprechenden Suche &false; zurück. Das entspricht im Prinzip
     dem Wert, der normalerweise zurückgeliefert wird, außer dass immer eine
     Ergebniskennung geliefert wird, wenn eine Suche durchgeführt wurde. Es
     treten einige seltene Fälle auf, wo eine normale Suche &false; zurückgibt,
     während die parallele Suche eine Kennung zurückliefert.
    </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>link_identifier</parameter></term>
     <listitem>
      <para>
       Eine LDAP-Verbindungskennung, geliefert von <function>ldap_connect</function>.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>base_dn</parameter></term>
     <listitem>
      <para>
       Der Basis-DN für das Verzeichnis.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>filter</parameter></term>
     <listitem>
      <para>
       Der Suchfilter kann einfach oder fortgeschritten sein, und Boolesche
       Operatoren im Format, das in der LDAP-Dokumentation beschrieben wird,
       verwenden (siehe das <link xlink:href="&url.ldap.filters;">Netscape
       Directory SDK</link> oder <link xlink:href="&url.rfc;4515">RFC4515</link>
       für vollständige Informationen zu Filtern).
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>attributes</parameter></term>
     <listitem>
      <para>
       Ein Array von erforderlichen Merkmalen, z.B. <literal>array("mail", "sn",
       "cn")</literal>. Es ist zu beachten, dass der "dn" immer zurückgegeben
       wird, unabhängig davon, welche Merkmalstypen angefragt wurden.
      </para>
      <para>
       Die Verwendung dieses Parameters ist effizienter als die Standardaktion
       (die alle Merkmale und deren assoziierte Werte zurückgibt). Die
       Verwendung dieses Parameter sollte daher als gute Praxis eingestuft
       werden.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>attrsonly</parameter></term>
     <listitem>
      <para>
       Sollte auf 1 gesetzt werden, wenn nur Merkmalstypen erwünscht sind. Wird
       0 übergeben, werden sowohl Merkmalstypen als auch Merkmalswerte
       abgerufen, was das Standardverhalten ist.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>sizelimit</parameter></term>
     <listitem>
      <para>
       Ermöglich die Begrenzung der Anzahl der abgerufenen Einträge. Wird hier 0
       übergeben, besteht keine Begrenzung.
      </para>
      <note>
       <para>
        Dieser Parameter kann ein serverseitig voreingestelltes sizelimit
        nicht übersteuern. Es kann allerdings kleiner gewählt werden.
       </para>
       <para>
        Verzeichnisserver können so konfiguriert werden, dass sie nicht mehr als
        eine voreingestellte Anzahl von Einträgen liefern. Wenn dies geschieht,
        dann wird der Server anzeigen, dass nur eine teilweise Ergebnismenge
        zurückgeliefert wurde. Das geschieht ebenfalls, wenn dieser Parameter
        verwendet wird, um die Zahl der abgerufenen Einträge zu begrenzen.
       </para>
      </note> 
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>timelimit</parameter></term>
     <listitem>
      <para>
       Setzt die Anzahl von Sekunden, die auf die Suche verwendet wird. Die
       Übergabe von 0 bedeutet keine Begrenzung.
      </para>
      <note>
       <para>
        Dieser Parameter kann ein serverseitig voreingestelltes timelimit nicht
        übersteuern. Es kann allerdings kleiner gewählt werden.
       </para>
      </note>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>deref</parameter></term>
     <listitem>
      <para>
       Gibt an, wie Aliase während der Suche behandelt werden sollen. Es kann
       einen der folgenden Werte annehmen:
       <itemizedlist>
        <listitem>
         <simpara>
          <constant>LDAP_DEREF_NEVER</constant> - (standard) Aliase werden nie
          dereferenziert.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>LDAP_DEREF_SEARCHING</constant> - Aliase sollen während der
          Suche dereferenziert werden, aber nicht wenn das Basis-Objekt der
          Suche lokalisiert wird.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>LDAP_DEREF_FINDING</constant> - Aliase sollen für die
          Lokalisierung des Basis-Objekt dereferenziert werden, aber nicht
          während der Suche.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <constant>LDAP_DEREF_ALWAYS</constant> - Aliase sollen immer
          dereferenziert werden.
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt eine Suchergebniskennung zurück, oder &false; im Fehlerfall.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   Das untenstehende Beispiel liefert die Organisationseinheit, den
   Familiennamen, den Vornamen und die E-Mail-Adresse aller Personen in "Meine
   Firma", deren Familien- oder Vorname die Zeichenkette
   <varname>$person</varname> enhält. In diesem Beispiel wird ein boolescher
   Filter verwendet, um den Server zu veranlassen, nach Informationen in mehr
   als einem Merkmal zu suchen.
   <example>
    <title>LDAP Suche</title>
    <programlisting role="php">
<![CDATA[
// $ds gültige Verbindungs-Kennung für einen Verzeichnis-Server

// $person ein Teil oder der vollständige Name einer Person, z.B. "Jo"

$dn = "o=Meine Firma, c=DE";
$filter="(|(sn=$person*)(vorname=$person*))";
$justthese = array( "ou", "sn", "vorname", "mail");

$sr=ldap_search($ds, $dn, $filter, $justthese);

$info = ldap_get_entries($ds, $sr);

print $info["count"]." Einträge gefundene<p>";
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

</refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
