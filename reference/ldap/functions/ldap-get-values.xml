<?xml version="1.0" encoding="UTF-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: nobody Status: ready -->
  <refentry xml:id="function.ldap-get-values" xmlns="http://docbook.org/ns/docbook">
   <refnamediv>
    <refname>ldap_get_values</refname>
    <refpurpose>
     Liefert alle Werte eines Ergebnis-Eintrags
    </refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>array</type><methodname>ldap_get_values</methodname>
      <methodparam><type>resource</type><parameter>Verbindungs-Kennung</parameter></methodparam>
      <methodparam><type>resource</type><parameter>Ergebnis-Eintrag-Kennung</parameter></methodparam>
      <methodparam><type>string</type><parameter>merkmal</parameter></methodparam>
     </methodsynopsis>
    <para>
     Rückgabewert: im Erfolgsfall ein Array der Werte des Merkmals,
     &false; im Fehlerfall.
    </para>
    <para>
     Die <function>ldap_get_values</function> Funktion wird benutzt um
     alle Werte des Merkmals eines Eintrags im Ergebnis zu lesen. Der
     Eintrag wird durch
     <parameter>Ergebnis-Eintrag-Kennung</parameter> bestimmt. Die
     Anzahl der Werte kann über die Indexierung von "count" des
     resultierenden Arrays bestimmt werden. Der Zugriff auf einzelne Werte
     erfolgt durch einen ganzzahligen Index im Array. Der erste Indexwert
     ist 0.
    </para>
    <para>
     Da diese Funktion eine
     <parameter>Ergebnis-Eintrag-Kennung</parameter> benötigt, muss
     ein Aufruf einer der LDAP Suchfunktionen und einer der
     Funktionen, die einen einzelnen Eintrag liefern, vorausgehen.
    </para>
    <para>
     Ihre Anwendung wird entweder hart codiert sein, um bestimmte
     Merkmale (wie z.B.: "Nachname" oder "Mail") zu suchen, oder Sie
     müssen die Funktion <function>ldap_get_attributes</function>
     benutzen, um herauszufinden, welche Merkmale für einen gegebenen
     Eintrag vorhanden sind.
    </para>
    <para>
     LDAP erlaubt mehr als einen Eintrag für ein Merkmal, so dass es
     z.B. sein kann, dass der Verzeichnis-Eintrag einer Person mehrere
     Email-Adressen enthält, die alle mit dem Merkmal "mail"
     bezeichnet sind.

    <informalexample>
<literallayout>
return_value["count"] = Anzahl der Werte eines Merkmals
return_value[0]       = der erste Wert des Merkmals
return_value[i]       = der i-te Wert des Merkmals
</literallayout>
    </informalexample>

     <example>
      <title>
       Liste aller Werte des Merkmals "mail" für einen Verzeichnis-
       Eintrag
      </title>
      <programlisting role="php">
<![CDATA[
<?php
// $ds gültige Verbindungs-Kennung für einen Verzeichnis-Server

// $sr gültiges Suchergebnis eines früheren Aufrufs einer der ldap
//     Verzeichnis Suchfunktionen

// $entry gültige Eintrag-Kennung eines früheren Aufrufs einer
//        der Funktionen, die einen Verzeichnis-Eintrag zurückgeben

$values = ldap_get_values($ds, $entry,"mail");

echo $values["count"]." Email-Adressen für diesen Eintrag.<p>";

for ($i=0; $i < $values["count"]; $i++)
    echo $values[$i]."<br>";
?>
]]>
      </programlisting>
     </example>
    </para>

   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
