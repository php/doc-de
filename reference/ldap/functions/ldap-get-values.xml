<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 1f801a1187777ac1ec620e0a228d55e483f2757b Maintainer: nobody Status: ready -->
<refentry xml:id="function.ldap-get-values" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>ldap_get_values</refname>
  <refpurpose>Liefert alle Werte eines Eintrags aus einem Ergebnis</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type class="union"><type>array</type><type>false</type></type><methodname>ldap_get_values</methodname>
   <methodparam><type>resource</type><parameter>ldap</parameter></methodparam>
   <methodparam><type>resource</type><parameter>entry</parameter></methodparam>
   <methodparam><type>string</type><parameter>attribute</parameter></methodparam>
  </methodsynopsis>
  <para>
   Liest alle Werte eines Merkmals im Ergebniseintrag.
  </para>
  <para>
   Da diese Funktion eine Ergebniseintragskennung
   (<parameter>entry</parameter>) benötigt, muss ein Aufruf
   einer der LDAP-Suchfunktionen und einer der Funktionen, die einen einzelnen
   Eintrag liefern, vorausgehen.
  </para>
  <para>
   Die Anwendung ist entweder hart kodiert, um bestimmte Merkmale (wie z.B.
   "Nachname" oder "E-Mail") zu suchen, oder die Funktion
   <function>ldap_get_attributes</function> muss verwendet werden, um
   herauszufinden, welche Merkmale für einen gegebenen Eintrag vorhanden sind.
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>ldap</parameter></term>
     <listitem>
      <para>
       &ldap.parameter.ldap;
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>entry</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>attribute</parameter></term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt im Erfolgsfall ein Array mit den Werten des Merkmals zurück und
   &false; im Fehlerfall. Die Anzahl der zurückgegebenen Werte steht im Index
   "count" des zurückgegebenen Arrays zur Verfügung. Der Zugriff auf einzelne
   Werte erfolgt durch einen numerischen Index im Array. Der erste Indexwert
   ist 0.
  </para>
  <para>
   LDAP erlaubt mehr als einen Eintrag für ein Merkmal, so dass es z.B. sein
   kann, dass der Verzeichnis-Eintrag einer Person mehrere E-Mail-Adressen
   enthält, die alle mit dem Merkmal "mail" bezeichnet sind.
   <informalexample>
    <literallayout>
     return_value["count"] = Anzahl der Werte eines Merkmals
     return_value[0]       = der erste Wert des Merkmals
     return_value[i]       = der i-te Wert des Merkmals
    </literallayout>
   </informalexample>
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title>Liste alle Werte des Merkmals "mail" für einen Verzeichnis-Eintrag auf</title>
    <programlisting role="php">
<![CDATA[
<?php
// $ds ist eine gültige Verbindungskennung für einen Verzeichnis-Server

// $sr ist ein gültiges Suchergebnis eines früheren Aufrufs einer der
//     LDAP-Verzeichnis-Suchfunktionen

// $entry gültige Eintrag-Kennung eines früheren Aufrufs einer
//        der Funktionen, die einen Verzeichnis-Eintrag zurückgeben

$values = ldap_get_values($ds, $entry, "mail");

echo $values["count"] . " E-Mail-Adressen für diesen Eintrag.<br />";

for ($i=0; $i < $values["count"]; $i++) {
    echo $values[$i] . "<br />";
}
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="seealso">
  &reftitle.seealso;
  <para>
   <simplelist>
    <member><function>ldap_get_values_len</function></member>
   </simplelist>
  </para>
 </refsect1>

</refentry>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
