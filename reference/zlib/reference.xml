<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.16 Maintainer: nobody Status: ready -->
<!-- CREDITS: nohn -->
<!-- Purpose: compression -->
<!-- Membership: bundled -->

 <reference id="ref.zlib">
  <title>Zlib Komprimierungsfunktionen</title>
  <titleabbrev>Zlib</titleabbrev>

  <partintro>
   <section id="zlib.intro">
    &reftitle.intro;
    <para>
     Dieses Modul gibt Ihnen die Möglichkeit, transparent gzip (.gz) -
     komprimierte Dateien zu lesen und zu schreiben. Hierfür bietet diese
     Erweiterung die Versionen der meisten <link
     linkend="ref.filesystem">Dateisystem</link>-Funktionen, die mit
     gzip-komprimierten (und unkomprimierten) Dateien, jedoch nicht mit
     Sockets funktionieren.
    </para>
    <note>
     <para>
      Mit Version 4.0.4 wurde ein fopen-wrapper für .gz-Dateien eingeführt,
      so dass Sie die spezielle <filename>zlib:</filename>-URL verwenden
      können, um auf komprimierte Dateien transparent über die
      f*()-Dateifunktionen zuzugreifen. Beim Aufruf von
      <function>fopen</function> müssen Sie dazu lediglich vor dem Dateinamen
      das Präfix <filename>zlib:</filename> schreiben. Diese Möglichkeit
      erfordert eine C-Laufzeitbibliothek, die die
      <literal>fopencookie()</literal>-Funktion bereitstellt. Nach aktuellem
      Stand scheint die GNU libc die einzige Bibliothek zu sein, die dieses
      Feature bereitstellt.
     </para>
     <para>
      In PHP 4.3.0 wurde <filename>zlib:</filename> in
      <filename>compress.zlib://</filename> geändert, um Konflikte mit
      Dateinamen zu vermeiden die ':' Zeichen enthalten. Die
      <literal>fopencookie()</literal> Funktion wird nicht mehr benötigt. Mehr
      Information hierzu finden Sie im Abschnitt über 
      <xref linkend="wrappers.compression" />.
     </para>
     <para>
     </para>
    </note>
   </section>

   <section id="zlib.requirements">
    &reftitle.required;
    <para>
     Diese Erweiterung nutzt die Funktionen der <ulink
     url="&url.zlib;">zlib</ulink>-Bibliothek von Jean-loup Gailly und
     Mark Adler. Sie benötigen zlib &gt;= 1.0.9, um die Funktionen nutzen zu
     können.
    </para>
   </section>

   &reference.zlib.configure;

   &reference.zlib.ini;

   <section id="zlib.resources">
    &reftitle.resources;
    &no.resource;
   </section>

   &reference.zlib.constants;

   <section id="zlib.examples">
    &reftitle.examples;
    <para>
     Dieses Beispiel öffnet eine temporäre Datei und schreibt einen Test
     String in die Datei, dann wird der Inhalt dieser Datei zweimal ausgegeben.
    </para>
    <example>
     <title>Ein kleines Beispiel zu Zlib</title>
     <programlisting role="php">
<![CDATA[
<?php

$filename = tempnam('/tmp', 'zlibtest') . '.gz';
echo "<html>\n<head></head>\n<body>\n<pre>\n";
$s = "Nur ein test, test, test, test, test, test, test, test!\n";

// Temporäre Datei zum Schreiben mit der maximalen Kompressionsstufe öffnen
$zp = gzopen($filename, "w9");

// String in die Datei schreiben
gzwrite($zp, $s);

// Datei schließen
gzclose($zp);

// Datei zum Lesen öffnen
$zp = gzopen($filename, "r");

// 3 Zeichen ausgeben
echo gzread($zp, 3);

// Inhalt der Datei ausgeben und die Datei schließen
gzpassthru($zp);
gzclose($zp);

echo "\n";

// Öffne die Datei und gib den Inhalt zum zweiten Mal aus
if (readgzfile($filename) != strlen($s)) {
        echo "Error with zlib functions!";
}
unlink($filename);
echo "</pre>\n</body>\n</html>\n";

?>
]]>
     </programlisting>
    </example>
   </section>
  </partintro>

&reference.zlib.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

