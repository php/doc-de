<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.3 Maintainer: nohn Status: ready -->
<!-- $Revision: 1.1 $ -->
 <reference id="ref.zlib">
  <title>Zlib Komprimierungsfunktionen</title>
  <titleabbrev>Zlib</titleabbrev>
  <partintro>
  <para>
   Diese Extension nutzt die Funktionen der <ulink
   url="&url.zlib;">zlib</ulink> von Jean-loup Gailly und Mark Adler 
   um transparent gzip (.gz) - komprimierte Dateien lesen und
   schreiben zu können. Es muß die zlib &gt;= 1.0.9 verwendet werden,
   um die Funktionen nutzen zu können.
  </para>
  <para>
   Diese Extension beinhaltet Versionen der meisten <link
   linkend="ref.filesystem">Dateisystem</link>-Funktionen, die mit
   gzip-komprimierten (und nicht komprimierten) Datein, jedoch nicht
   mit Sockets funktionieren.
  </para>
  <note>
   <para>
    Mit Version 4.0.4 wurde ein fopen-wrapper für .gz-Dateien
    eingeführt, so das eine spezielle 'zlib:'-URL verwendet werden kann,
    um komprimierte Datei transparent über die f*()-Dateifunktionen
    genutzt werden können.
   </para>
   <para>
    In Version 4.3.0 wurde diese spezielle Prefix in zlib:// geändert,
    um Konflikte mit Dateinamen zu vermeiden die ':' enthalten.
   </para>
   
   <para>
    Dieses Feature erfordert eine C-Laufzeitbibliothek, die 
    die <literal>fopencookie()</literal>-Funktion bereitstellt. Nach
    aktuellem Stand ist die GNU libc die einzige Bibliothek, die dieses
    Feature bereitstellt.
   </para>
  </note>

   <section id="zlib-example">
    <title>Code-Beispiel</title>
    <para>
     Öffnet eine temporäre Datei und schreibt einen Test-String in die
     Datei, dann wird der Inhalt dieser Datei zweimal ausgegeben.
    </para>
    <example>
     <title>Zlib Beispiel</title>
     <programlisting role="php">
<![CDATA[
<?php

$filename = tempnam ('/tmp', 'zlibtest').'.gz';
print "<html>\n<head></head>\n<body>\n<pre>\n";
$s = "Only a test, test, test, test, test, test, test, test!\n";

// Öffne eine Datei zum Schreibzugriff mit der maximalen Kompressionsstufe
$zp = gzopen($filename, "w9");

// Schreibe den String in die Datei
gzwrite($zp, $s);

// Schließe die Datei
gzclose($zp);

// Öffne die Datei zum Lesezugriff
$zp = gzopen($filename, "r");

// Lese 3 Zeichen
print gzread($zp, 3);

// Gebe den Inhalt aus, bis die Datei vollständig ausgegeben ist.
gzpassthru($zp);

print "\n";

// Öffne die Datei und gebe den Inhalt zum zweiten Mal aus
if (readgzfile($filename) != strlen($s)) {
        echo "Fehler in den Zlib-Funktionen!";
}
unlink($filename);
print "</pre>\n</h1></body>\n</html>\n";

?>
]]>
     </programlisting>
    </example>
   </section>
  </partintro>

&reference.zlib.functions;

 </reference>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->

