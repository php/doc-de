<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.1 $ -->
<!-- EN-Revision: 1.6 Maintainer: samesch Status: ready -->
<!-- splitted from ./en/functions/pcre.xml, last change in rev 1.2 -->
  <refentry id="function.preg-quote">
   <refnamediv>
    <refname>preg_quote</refname>
    <refpurpose>Maskiert Zeichen regulärer Ausdrücke</refpurpose>
   </refnamediv>
   <refsect1>
    <title>Beschreibung</title>
     <methodsynopsis>
      <type>string</type><methodname>preg_quote</methodname>
      <methodparam><type>string</type><parameter>Zeichenkette</parameter></methodparam>
     <methodparam choice="opt"><type>string</type><parameter>Begrenzer</parameter></methodparam>
     </methodsynopsis>
    <para>
     <function>preg_quote</function> setzt einen Backslash vor jedes Zeichen
     von <parameter>Zeichenkette</parameter>, das zur Syntax eines regulären
     Ausdrucks gehört. Das ist nützlich, wenn Sie einen Text nach
     Übereinstimmungen mit einer zur Laufzeit erzeugten Zeichenkette
     durchsuchen müssen, die spezielle Regex-Zeichen enthalten könnte.
    </para>
    <para>
     Falls der optionale <parameter>Begrenzer</parameter> angegeben wurde,
     wird dieser ebenfalls maskiert. Das ist nützlich, um den Begrenzer zu
     maskieren, der von den PCRE-Funktionen benötigt wird. Der / ist der am
     häufigsten verwendete Begrenzer.
    </para>
    <para>
     Spezielle Zeichen regulärer Ausdrücke sind:
     <literal>. \\ + * ? [ ^ ] $ ( ) { } = ! &lt; &gt; | :</literal>
    </para>
    <para>
     <example>
      <title><function>preg_quote</function> Beispiel</title>
      <programlisting role="php">
<![CDATA[
<?php
$schluesselwoerter = "$40 für einen G3/400";
$schluesselwoerter = preg_quote($schluesselwoerter, "/");
echo $schluesselwoerter; // liefert \$40 für einen G3\/400
?>
]]>
      </programlisting>
     </example>
    </para>
    <para>
     <example>
      <title>Kursivdruck eines Wortes in einem Text</title>
      <programlisting role="php">
<![CDATA[
<?php
// In diesem Beispiel wird preg_quote($wort) verwendet,
// damit die Asterisks (*) für den regulären Ausdruck
// keine spezielle Bedeutung haben.

$text = "Dieses Buch ist *sehr* schwer zu finden.";
$wort = "*sehr*";
$text = preg_replace ("/" . preg_quote($wort) . "/",
                          "<i>" . $wort . "</i>",
                          $text);
?>
]]>
      </programlisting>
     </example>
    </para>
   </refsect1>
  </refentry>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
