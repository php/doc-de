<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: samesch Status: ready -->
<refentry xml:id="function.preg-quote" xmlns="http://docbook.org/ns/docbook">
 <refnamediv>
  <refname>preg_quote</refname>
  <refpurpose>Maskiert Zeichen regulärer Ausdrücke</refpurpose>
 </refnamediv>

 <refsect1 role="description">
  &reftitle.description;
  <methodsynopsis>
   <type>string</type><methodname>preg_quote</methodname>
   <methodparam><type>string</type><parameter>str</parameter></methodparam>
  <methodparam choice="opt"><type>string</type><parameter>delimiter</parameter></methodparam>
  </methodsynopsis>
  <para>
   <function>preg_quote</function> setzt einen Backslash vor jedes Zeichen von
   <parameter>str</parameter>, das zur Syntax eines regulären
   Ausdrucks gehört. Das ist nützlich, wenn Sie einen Text nach
   Übereinstimmungen mit einer zur Laufzeit erzeugten Zeichenkette durchsuchen
   müssen, die spezielle RegEx-Zeichen enthalten könnte.
  </para>
  <para>
   Spezielle Zeichen regulärer Ausdrücke sind:
   <literal>. \ + * ? [ ^ ] $ ( ) { } = ! &lt; &gt; | :</literal>
  </para>
 </refsect1>

 <refsect1 role="parameters">
  &reftitle.parameters;
  <para>
   <variablelist>
    <varlistentry>
     <term><parameter>str</parameter></term>
     <listitem>
      <para>
       Die zu durchsuchende Zeichenkette
      </para>
     </listitem>
    </varlistentry>
    <varlistentry>
     <term><parameter>delimiter</parameter></term>
     <listitem>
      <para>
       Falls der optionale <parameter>delimiter</parameter> angegeben wurde,
       wird dieser ebenfalls maskiert. Das ist nützlich, um den Begrenzer zu
       maskieren, der von den PCRE-Funktionen benötigt wird. Der / ist der am
       häufigsten verwendete Begrenzer.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </refsect1>

 <refsect1 role="returnvalues">
  &reftitle.returnvalues;
  <para>
   Gibt die maskierte Zeichenkette zurück.
  </para>
 </refsect1>

 <refsect1 role="examples">
  &reftitle.examples;
  <para>
   <example>
    <title><function>preg_quote</function>-Beispiel</title>
    <programlisting role="php">
<![CDATA[
<?php
$schluesselwoerter = '$40 für einen G3/400';
$schluesselwoerter = preg_quote($schluesselwoerter, '/');
echo $schluesselwoerter; // liefert \$40 für einen G3\/400
?>
]]>
    </programlisting>
   </example>
  </para>
  <para>
   <example>
    <title>Kursivdruck eines Wortes in einem Text</title>
    <programlisting role="php">
<![CDATA[
<?php
// In diesem Beispiel wird preg_quote($wort) verwendet, damit die
// Asterisks (*) für den regulären Ausdruck keine spezielle Bedeutung haben.

$text = "Dieses Buch ist *sehr* schwer zu finden.";
$wort = "*sehr*";
$text = preg_replace ("/" . preg_quote($wort) . "/",
                          "<i>" . $wort . "</i>",
                          $text);
?>
]]>
    </programlisting>
   </example>
  </para>
 </refsect1>

 <refsect1 role="notes">
  &reftitle.notes;
  &note.bin-safe;
 </refsect1>

</refentry>


<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
