<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.5 $ -->
<!-- EN-Revision: 1.27 Maintainer: samesch Status: ready -->
 <chapter id="faq.installation">
  <title>Installation</title>
  <titleabbrev>Installation</titleabbrev>

  <para>
   In diesem Abschnitt geht es um übliche Fragen zur Installation von
   PHP. PHP gibt es für fast jedes Betriebssystem (außer vielleicht
   für MacOS vor OSX) und fast jeden Webserver.
  </para>
  <para>
   Um PHP zu installieren, folgen Sie Bitte den Anweisungen in der
   Datei <ulink url="&url.file.installation;">INSTALL</ulink>, die sie
   in der Distribution finden. Benutzer von Windows sollten auch die
   Datei <ulink url="&url.file.readmewin;">install.txt</ulink> lesen.
   Weitere hilfreiche Hinweie für Benutzer von Windows gibt es <link
   linkend="install.windows">hier</link>.
  </para>

  <qandaset>
   <qandaentry id="faq.installation.phpini">
    <question>
     <para>
      Unix/Windows: Wo sollte sich meine &php.ini; befinden?
     </para>
    </question>
    <answer>
     <para>
      Unter Unix sollte sie standardmäßig in
      <filename>/usr/local/lib</filename> sein, was
      <filename>&lt;install-path&gt;/lib</filename> ist. Die Meisten
      werden das beim Übersetzen mit der Option <link
      linkend="install.configure.with-config-file-path">--with-config-file-path</link>
      ändern wollen. Sie können das, z.B. mit
      <programlisting role="shell">
--with-config-file-path=/etc
      </programlisting>
      festlegen. Dann kopieren Sie die
      <filename>php.ini-dist</filename> der Distribution nach
      <filename>/etc/php.ini</filename> und editieren sie, um alle
      gewünschten lokalen Änderungen vorzunehmen.
     </para>
      <programlisting role="shell">
--with-config-file-scan-dir=PATH
      </programlisting>
     <para>
      Unter Windows ist der standardmäßige Pfad für die &php.ini; das
      Windows-Verzeichnis. Falls die den Apache Webserver verwenden,
      wird die &php.ini; zuerst im Apache-Installationsverzeichnis,
      z.B. <filename>c:\program files\apache group\apache</filename>,
      gesucht. Dadurch können Sie auf dem selben Rechner verschiedene
      &php.ini;-Dateien für verschiedene Apache-Versionen haben.
     </para>
     <para>
     Siehe auch das Kapitel über die <link
     linkend="configuration.file">Konfigurationsdatei</link>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.installation.nodata">
    <question>
     <para>
      Unix: I habe PHP installiert, aber jedesmal, wenn ich eine Seite
      aufrufe, bekomme ich die Meldung 'Document Contains No Data'!
      Woran liegt das?
     </para>
    </question>
    <answer>
     <para>
      Das bedeutet wahrscheinlich, dass PHP irgend ein Problem hat und
      einen Core Dump (Speicherauszug) erzeugt. Schauen Sie in der
      Fehler-Logdatei Ihres Servers nach, ob das der Fall ist und
      versuchen Sie dann das Problem mit einem kleinen Test-Script
      zu reproduzieren. Falls Sie sich mit 'gdb' auskennen, ist es
      für die Entwickler beim Lokalisieren des Problems sehr
      hilfreich, wenn Sie Ihrem Fehlerbericht einen Backtrace
      hinzufügen. Falls Sie PHP als Apache-Modul verwenden, können Sie
      in etwa Folgendes versuchen:
      <itemizedlist>
       <listitem>
        <para>
         Stoppen Sie Ihre httpd-Prozesse
        </para>
       </listitem>
       <listitem>
        <para>
         gdb httpd
        </para>
       </listitem>
       <listitem>
        <para>
         Stoppen Sie Ihre httpd-Prozesse
        </para>
       </listitem>
       <listitem>
        <para>
         &gt; run -X -f /pfad/zur/httpd.conf
        </para>
       </listitem>
       <listitem>
        <para>
         Rufen Sie mit Ihrem Browser die URL auf, die das Problem
         verursacht
        </para>
       </listitem>      
       <listitem>
        <para>
         &gt; run -X -f /path/to/httpd.conf
        </para>
       </listitem>      
       <listitem>
        <para>
         gdb sollte Sie jetzt darüber in Kenntnis setzen, falls Sie
         einen Core Dump bekommen
        </para>
       </listitem>      
       <listitem>
        <para>
         Geben Sie ein: bt
        </para>
       </listitem>
       <listitem>
        <para>
         Sie sollten Ihren Backtrace in Ihren Fehlerbericht einfügen
         und diesen unter
         <ulink url="&url.php.bugs;">&url.php.bugs;</ulink> abgeben.
        </para>
       </listitem>
      </itemizedlist>
     </para>
     <para>
      Falls Sie in Ihrem Script Funktionen regulärer Ausdrücke
      (<function>ereg</function> und Freunde) verwenden, sollten Sie
      sicherstellen, dass Sie PHP und Apache mit dem selben
      Programmpaket für reguläre Ausdrücke übersetzt haben. Mit PHP und
      Apache 1.3.x sollte das automatisch der Fall sein.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.installation.processing">
    <question>
     <para>
      Unix: Ich habe PHP mit RPM-Paketen installiert, aber Apache
      verarbeitet die PHP-Seiten nicht. Was ist da los?
     </para>
    </question>
    <answer>
     <para>
      Unter der Annahme, dass Sie sowohl Apache als auch PHP mit
      RPM-Paketen installiert haben, müssen Sie einige oder alle der
      folgenden Zeilen in die Datei &httpd.conf; einfügen oder die
      Kommentarzeichen davor entfernen:
      <programlisting role="apache-conf">
<![CDATA[
# Extra Modules
AddModule mod_php.c
AddModule mod_php3.c
AddModule mod_perl.c

# Extra Modules
LoadModule php_module         modules/mod_php.so
LoadModule php3_module        modules/libphp3.so     # fuer PHP 3
LoadModule php4_module        modules/libphp4.so     # fuer PHP 4
LoadModule perl_module        modules/libperl.so
]]>
      </programlisting>
      Und fügen Sie
      <programlisting role="apache-conf">
<![CDATA[
AddType application/x-httpd-php3 .php3    # fuer PHP 3
AddType application/x-httpd-php .php      # fuer PHP 4
]]>
      </programlisting>
      ... in die globalen Eigenschaften oder in die Eigenschaften der
      VirtualDomain, für die Sie PHP-Unterstützung benötigen, ein.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.installation.compile">
    <question>
     <para>
      Unix: Ich habe PHP 3 mit RPM-Paketen installiert, aber
      es läßt sich nicht mit der benötigten Datenbank-Unterstützung
      übersetzen. Was ist da los?
     </para>
    </question>
    <answer>
     <para>
      Aufgrund des Aufbaus von PHP 3 ist es nicht einfach, ein
      vollständig flexibles PHP-RPM zu bauen. Dieses Problem wurde in
      PHP 4 angegangen. Für PHP 3 empfehlen wir Ihnen, dass Sie nach
      der Methode vorgehen, die in der Datei INSTALL.REDHAT der
      PHP-Distribution beschrieben wird. Falls Sie darauf bestehen,
      eine RPM-Version von PHP 3 zu verwenden, lesen Sie weiter...
     </para>
     <para>
      Um die Installation zu vereinfachen <emphasis>und</emphasis>
      weil RPMs statt des Standardverzeichnisses /usr/local/ das
      Verzeichnis /usr/ benutzen, konfigurieren die RPM-Paketbauer die
      RPMs so, dass sie ohne Datenbank-Unterstützung installiert
      werden. Sie müssen in der RPM spec Datei also angeben, welche
      Datenbanken unterstützt werden sollen und wo sich die höchste
      Verzeichnisebene Ihres Datenbank-Servers befindet.
     </para>
     <para>
      Dieses Beispiel erklärt die Vorgehensweise, mit der die
      Unterstützung für den beliebten MySQL Datenbank-Server bei
      gleichzeitiger Verwendung der Apache-Modul-Installation
      hinzugefügt wird.
     </para>
     <para>
      Selbstverständlich kann die gesamte Information für jeden
      Datenbank-Server angepasst werden, den PHP unterstützt. Es wird
      bei diesem Beispiel davon ausgegangen, dass Sie MySQL und Apache
      komplett mit RPMs installiert haben.
      <itemizedlist>
       <listitem>
        <para>
         Entfernen Sie zuerst mod_php3 : 
         <programlisting role="shell">
rpm -e mod_php3
         </programlisting>
        </para>
       </listitem>
       <listitem>
        <para>
         Holen Sie sich dann das Source-RPM und INSTALLIEREN Sie es,
         NICHT --rebuild
         <programlisting role="shell">
rpm -Uvh mod_php3-3.0.5-2.src.rpm
         </programlisting>
        </para>
       </listitem>
       <listitem>
        <para>
         Editieren Sie als Nächstes die Datei
         <filename>/usr/src/redhat/SPECS/mod_php3.spec</filename>
        </para>
        <para>
         Fügen Sie im %build Abschnitt die gewünschte
         Datenbank-Unterstützung und den Pfad hinzu.
        </para>
        <para>
         Für MySQL wäre das
         <programlisting role="shell">
--with-mysql=/usr \
         </programlisting>
         Der %build Abschnitt sieht in etwa so aus:
         <programlisting role="shell">
./configure --prefix=/usr \
        --with-apxs=/usr/sbin/apxs \
        --with-config-file-path=/usr/lib \
        --enable-debug=no \
        --enable-safe-mode \
        --with-exec-dir=/usr/bin \
        --with-mysql=/usr \
        --with-system-regex
         </programlisting>
        </para>
       </listitem>
       <listitem>
        <para>
         Nachdem Sie die Änderung vorgenommen haben, bauen Sie das
         Binary-RPM folgendermaßen:
         <programlisting role="shell">
rpm -bb /usr/src/redhat/SPECS/mod_php3.spec
         </programlisting>
        </para>
       </listitem>
       <listitem>
        <para>
         Dann installieren Sie das RPM
         <programlisting role="shell">
rpm -ivh /usr/src/redhat/RPMS/i386/mod_php3-3.0.5-2.i386.rpm
         </programlisting>
        </para>
       </listitem>
      </itemizedlist>
      Wenn Sie nun den Apache neu starten, haben Sie PHP 3 mit
      MySQL-Unterstützung unter Verwendung von RPMs. Beachten Sie,
      dass es mit dem Tarball der PHP 3 Distribution unter Befolgen
      der Anweisungen in <filename>INSTALL.REDHAT</filename>, das sich
      in dieser Distribution befindet, wahrscheinlich wesentlich
      einfacher zu bauen ist.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.installation.frontpage">
    <question>
     <para>
      Unix: Ich habe Apache mit dem FrontPage-Erweiterungs-Patch
      versehen und plötzlich funktioniert PHP nicht mehr. Ist PHP zur
      FrontPage-Erweiterung für Apache inkompatibel?
     </para>
    </question>
    <answer>
     <para>
      Nein, PHP funktioniert bestens mit der FrontPage-Erweiterung.
      Das Problem liegt darin, dass der FrontPage-Patch mehrere
      Apache-Strukturen verändert, auf die sich PHP verlässt. Eine
      Neuübersetzung von PHP (mittels 'make clean ; make'), nachdem
      der Patch angewandt wurde, löst das Problem.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.installation.blankscreen">
    <question>
     <para>
      Unix/Windows: Ich habe PHP installiert, aber wenn ich versuche,
      mit meinem Browser ein PHP-Script aufzurufen, erhalte ich eine
      leere Seite.
     </para>
    </question>
    <answer>
     <para>
      Wenn Sie sich im Browser den Quelltext der Seite anschauen,
      werden Sie vermutlich den Quellcode Ihres PHP-Scripts sehen
      können. Das bedeutet, dass der Webserver das Script nicht zur
      Interpretation an PHP übergeben hat. Mit Ihrer
      Server-Konfiguration ist etwas nicht in Ordnung - überprüfen
      Sie Ihre Server-Konfiguration nochmal genau anhand der
      PHP-Installationsanleitung.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.installation.500error">
    <question>
     <para>
      Unix/Windows: Ich habe PHP installiert, aber wenn ich versuche,
      mit meinem Browser ein PHP-Script aufzurufen, erhalte ich vom
      Server einen 500 Fehler.
     </para>
    </question>
    <answer>
     <para>
      Beim Versuch des Servers PHP zu starten ist etwas
      schiefgegangen. Wechseln Sie auf der Kommandozeile
      (in der Eingabeaufforderung) in das Verzeichnis, das die
      ausführbare PHP-Datei (unter Windows
      <filename>php.exe</filename>) enthält und lassen Sie
      <literal>php -i</literal> laufen, um eine sinnvolle
      Fehlermeldung zu bekommen. Falls PHP irgendwelche Probleme bei
      der Ausführung hat, werden entsprechende Fehlermeldungen 
      ausgegeben, die Ihnen Hinweise darauf liefern, was zu tun ist.
      Falls sich der Bildschirm mit HTML-Quelltext füllt (die Ausgabe
      der Funktion <function>phpinfo</function>), funktioniert PHP und
      Ihr Problem könnte mit Ihrer Server-Konfiguration zusammen
      hängen, die Sie dann nochmal genau überprüfen sollten.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.installation.undefinedsyms">
    <question>
     <para> 
      Manche Betriebssysteme: Ich habe PHP ohne Fehlermeldungen
      installiert, aber wenn ich versuche, Apache zu starten, erhalte
      ich Fehler wegen undefinierter Symbole:
            <programlisting role="shell">
[mybox:user /src/php4] root# apachectl configtest
 apachectl: /usr/local/apache/bin/httpd Undefined symbols:
  _compress  
  _uncompress
      </programlisting>
     </para>
    </question>
    <answer>
     <para>
      Das hat nichts mit PHP zu tun, sondern mit den
      MySQL-Client-Bibliotheken. Manche benötigen --with-zlib, manche
      nicht. Auf diese Frage wird in den MySQL FAQ eingegangen.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.installation.cgierror">
    <question>
     <para>
      Windows: Ich habe PHP installiert, aber wenn ich versuche,
      mit meinem Browser ein PHP-Script aufzurufen, erhalte ich die
      Fehlermeldung:
      <screen>
cgi error:
 The specified CGI application misbehaved by not
 returning a complete set of HTTP headers.
 The headers it did return are:
      </screen>
     </para>
    </question>
    <answer>
     <para>
      Diese Fehlermeldung bedeutet, dass PHP daran gescheitert ist,
      überhaupt irgendwas auszugeben. Wechseln Sie auf der
      Kommandozeile (in der Eingabeaufforderung) in das Verzeichnis,
      das die ausführbare PHP-Datei (unter Windows
      <filename>php.exe</filename>) enthält und lassen Sie
      <literal>php -i</literal> laufen, um eine sinnvolle
      Fehlermeldung zu bekommen. Falls PHP irgendwelche Probleme bei
      der Ausführung hat, werden entsprechende Fehlermeldungen
      ausgegeben, die Ihnen Hinweise darauf liefern, was zu tun ist.
      Falls sich der Bildschirm mit HTML-Quelltext füllt (die Ausgabe
      der Funktion <function>phpinfo</function>), funktioniert PHP.
     </para>
     <para>
      Funktioniert PHP erst mal auf der Kommandozeile, versuchen Sie
      nochmal, das Script mit dem Browser aufzurufen. Falls das immer
      noch misslingt, könnte das eine der folgenden Ursachen haben:
     </para>
     <itemizedlist>
      <listitem>
       <simpara>
        Die Zugriffsberechtigungen Ihres PHP-Scripts, Ihrer
        <filename>php.exe</filename>, <filename>php4ts.dll</filename>,
        &php.ini; oder irgendeiner PHP-Erweiterung die Sie versuchen
        zu laden, sind für den anonymen Internetbenutzer
        <literal>ISUR_&lt;machinename&gt;</literal> nicht ausreichend.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Die Scriptdatei existiert nicht (oder ist vielleicht, bezogen
        auf Ihr Web-Wurzelverzeichnis, nicht da, wo Sie denken).
        Beachten Sie, dass Sie beim IIS diesen Fehler aufspüren
        können, wenn Sie im Internet Services Manager beim Einstellen
        der script mappings die Option 'check file exists' ankreuzen.
        Falls dann eine Scriptdatei nicht existiert gibt der Server
        stattdessen einen 404 Fehler zurück. Das hat außerdem den
        zusätzlichen Vorteil, dass der IIS die erforderlichen
        Authentisierungen an Ihrem Script auf Grundlage der
        NTLanMan-Berechtigungen für Sie durchführt.
       </simpara>
      </listitem>
     </itemizedlist>
    </answer>
   </qandaentry>

   <qandaentry id="faq.installation.phpandiis">
    <question>
     <para>
      Windows: Ich habe alle Anweisungen befolgt, aber ich erreiche
      keine Zusammenarbeit zwischen PHP und den IIS.
     </para>
    </question>
    <answer>
     <para>
      Stellen Sie sicher, dass jeder Benutzer, der ein PHP-Script
      ausführt, die Berechtigung hat <filename>php.exe</filename>
      auzuführen! Der IIS verwendet den Benutzer anonymous, der bei
      der Installation des IIS hinzugefügt wird. Dieser Benutzer
      benötigt die entsprechenden Berechtigungen für
      <filename>php.exe</filename>. Außerdem benötigt auch jeder
      angemeldete Benutzer die Berechtigung
      <filename>php.exe</filename> auszuführen. Dem IIS4 müssen Sie
      mitteilen, dass PHP eine Script-Engine ist. Lesen Sie auch
      <link
      linkend="faq.installation.forceredirect">diese FAQ</link>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.installation.forceredirect">
    <question>
     <para>
       Wenn Ich PHP mit IIS, PWS, OmniHTTPD oder Xitami als CGI laufen
       lasse, bekomme ich die folgende Fehlermeldung:
       <literal>Security Alert! PHP CGI cannot be accessed
       directly.</literal>.
     </para>
    </question>
    <answer>
     <para>
      Sie müssen die <link linkend="ini.cgi.force-redirect">
      cgi.force_redirect</link>-Anweisung auf <literal>0</literal>
      setzen. Weil diese Anweisung standardmäßig auf
      <literal>1</literal> gesetzt ist, müssen Sie darauf achten, dass
      sie nicht mit einem <literal>;</literal> auskommentiert ist. Wie
      alle Anweisungen wird auch diese in der &php.ini; gesetzt.
     </para>
     <para>
      Wegen des standardmäßigen Werts von <literal>1</literal> ist es
      äußerst wichtig sicherzustellen, dass die richtige &php.ini;
      gelesen wird. Lesen Sie für Einzelheiten <link
      linkend="faq.installation.findphpini">diese FAQ</link>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.installation.findphpini">
    <question>
     <para>
      Wie kann ich herausfinden, ob meine &php.ini; gefunden und
      gelesen wird? Anscheinend ist das nicht der Fall, weil meine
      Änderungen nicht übernommen werden.
     </para>
    </question>
    <answer>
     <para>
      Rufen Sie <function>phpinfo</function> auf, um zu überprüfen, ob
      Ihre &php.ini; von PHP gelesen wird. Fast ganz oben gibt es
      einen Punkt namens <literal>Configuration File
      (php.ini)</literal>. Dort können Sie feststellen, wo PHP nach
      der &php.ini; sucht und ob sie gelesen wird oder nicht. Falls es
      dort nur einen VerzeichnisPFAD gibt, wird sie nicht gelesen und
      Sie sollten Ihre &php.ini; in dieses Verzeichnis legen. Falls der
      Pfad die &php.ini; beinhaltet, dann wird sie auch gelesen.
     </para>
     <para>
      Wenn Ihre &php.ini; gelesen wird und Sie PHP als Modul benutzen,
      müssen Sie Ihren Webserver neu starten, nachdem Sie Änderungen
      an der &php.ini; vorgenommen haben.
     </para>
    </answer>
   </qandaentry>

  </qandaset>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
