<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.2 $ -->
<!-- EN-Revision: 1.20 Maintainer: wiesemann Status: ready -->
<chapter id="faq.using">
  <title>PHP benutzen</title>
  <titleabbrev>PHP benutzen</titleabbrev>

  <para>
   Diese Rubrik behandelt viele beim Schreiben von PHP-Skripten auftretende
   Fehler.
  </para>

  <qandaset>
   <qandaentry id="faq.using.anyform">
    <question>
     <para>
      Ich möchte ein PHP-Skript schreiben, das Daten von beliebigen Formularen
      verarbeiten kann. Woher weiß ich, welche Variablen über die POST-Methode
      verfügbar sind?
     </para>
    </question>
    <answer>
     <para>
      PHP bietet viele <link linkend="language.variables.predefined">vordefinierte
      Variablen</link>, wie das superglobale <varname>$_POST</varname>. Sie
      können <varname>$_POST</varname> mit einer Schleife durchlaufen, da es sich
      um ein assoziatives Array mit allen über die POST-Methode übertragenen
      Variablen handelt. Als Beispiel benutzen wir die <link
      linkend="control-structures.foreach">foreach</link>-Schleife, um auf
      leere Werte (mit der <function>empty</function>-Funktion) zu prüfen
      und geben diese Werte aus.
      <programlisting role="php">
<![CDATA[
<?php
$empty = $post = array();
foreach ($_POST as $varname => $varvalue) {
    if (empty($varvalue)) {
        $empty[$varname] = $varvalue;
    } else {
        $post[$varname] = $varvalue;
    }
}

print "<pre>";
if (empty($empty)) {
    print "Keiner der POST-Werte ist leer. Die Werte sind:\n"; 
    var_dump($post);
} else {
    print "Wir haben " . count($empty) . " leere Werte:\n";
    print "Alle Werte:\n"; var_dump($post);
    print "Leer:\n";  var_dump($empty);
    exit;
}
?>
]]>
      </programlisting>
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.using.addslashes">
    <question>
     <para>
      Ich möchte alle einfachen Anführungszeichen (') in einen
      Backslash gefolgt von einem einfachen Anführungszeichen (')
      ersetzen lassen. Wie kann ich das mit einem regulären
      Ausdruck machen? Ich möchte außerdem " zu \" und \ zu \\
      konvertieren.
     </para>
    </question>
    <answer>
     <para>
      Die Funktion <function>addslashes</function> erledigt genau das.
      Siehe auch <function>mysql_escape_string</function>. Mit der
      Funktion <function>stripslashes</function> können Sie die
      Backslash-Zeichen wieder entfernen.
     </para>

     &note.magicquotes.gpc;

    </answer> 
   </qandaentry> 

   <qandaentry id="faq.using.stripslashes">
    <question>
     <para>
      Alle meine " werden in \" und meine ' werden in \' konvertiert.
      Wie kann ich den nicht gewünschten Backslash entfernen? Warum und
      wie sind diese Zeichen überhaupt konvertiert worden?
     </para>
    </question>
    <answer>
     <para>
      Die PHP-Funktion <function>stripslashes</function> entfernt solche
      Backslash-Zeichen aus Ihrem <type>String</type>. In den meisten
      Fällen existieren diese Zeichen automatisch, weil die <link
      linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link>-Direktive
      auf on steht.
     </para>

     &note.magicquotes.gpc;

    </answer>
   </qandaentry>

   <qandaentry id="faq.using.wrong-order">
    <question>
     <para>
      Wenn ich den folgenden Code ausführe, wird die Ausgabe in der
      falschen Reihenfolge ausgegeben:
     <programlisting role="php">
<![CDATA[
<?php
function myfunc($argument)
{
    echo $argument + 10;
}
$variable = 10;
echo "myfunc($variable) = " . myfunc($variable);
?>
]]>
    </programlisting>
     Woran liegt das?
     </para>
    </question>
    <answer>
     <para>
      Um das Ergebnis Ihrer Funktion in einem Ausdruck verwenden zu können
      (um es z.B. wie im obigen Beispiel mit dem anderen String zu verbinden),
      müssen Sie den Wert mit <function>return</function> zurückgeben und
      ihn nicht mit <function>echo</function> ausgeben.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.using.newlines">
    <question>
     <para>
      Wo sind meine Zeilenumbrüche geblieben?
      <programlisting role="php">
<![CDATA[
<pre>
<?php echo "Das soll die erste Zeile sein."; ?>
<?php echo "Das soll nach dem obigen Zeilenumbruch erscheinen."; ?>
</pre>
]]>
      </programlisting>
     </para>
    </question>
    <answer>
     <para>
      In PHP können Code-Blöcke entweder mit "?&gt;" oder mit "?&gt;\n"
      enden (\n steht für Zeilenumbruch). Im obigen Beispiel sind
      die ausgegebenen Zeilen daher in einer Zeile, denn PHP lässt
      die Zeilenumbrüche nach den Block-Ende-Zeichen weg.
      Wenn Sie möchten, dass PHP einen Zeilenumbruch ausgibt, müssen Sie nach
      jedem Code-Block einen zusätzlichen Zeilenumbruch einfügen.
     </para>
     <para>
      Warum macht PHP das so? Wenn Sie normales HTML formatieren,
      erleichert PHP Ihnen die Arbeit, da Sie meist diesen Zeilenumbruch
      gar nicht haben möchten. Würde PHP diesen Zeilenumbruch ausgeben,
      müssten Sie sehr lange Zeilen schreiben und Ihren Code damit
      unlesbar machen.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.using.headers-sent">
    <question>
     <para>
      Ich bekomme die Meldung 'Warning: Cannot send session cookie - headers already
      sent...' oder 'Cannot add header information - headers already sent...'.
     </para>
    </question>
    <answer>
     <para>
      Die Funktionen <function>header</function>, 
      <function>setcookie</function> und die <link
      linkend="ref.session">Session-Funktionen</link> müssen Header
      dem Output-Stream hinzufügen. Header können aber nur gesendet werden, wenn Sie
      vor allen anderen Daten gesendet werden. Vor dem Aufruf dieser Funktionen darf
      also keine Ausgabe (wie z.B. HTML-Code) stattfinden. Die Funktion
      <function>headers_sent</function> prüft, ob Ihr Skript bereits Header gesendet
      hat. Nützlich sind in diesem Zusammenhang auch die <link
      linkend="ref.outcontrol">Funktionen zur Ausgabesteuerung</link>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.using.header">
    <question>
     <para>
      Wie kann ich auf Informationen aus dem Request-Header zugreifen?
     </para>
    </question>
    <answer>
     <para>
      Wenn Sie PHP als Apache-Modul laufen lassen, liefert Ihnen die
      <function>getallheaders</function>-Funktion die gewünschten Informationen.
      Der folgende Code gibt alle Request-Header aus:
      <programlisting role="php">
<![CDATA[
<?php
$headers = getallheaders();
foreach ($headers as $name => $content) {
    echo "headers[$name] = $content<br>\n";
}
?>
]]>
      </programlisting>
     </para>
     <para>
      Siehe auch
      <function>apache_lookup_uri</function>,
      <function>apache_response_headers</function> und
      <function>fsockopen</function>.
     </para> 
    </answer>
   </qandaentry>

   <qandaentry id="faq.using.authentication">
    <question>
     <para>
      Wenn ich versuche, Authentifikation mit IIS zu nutzen, bekomme ich die
      Meldung 'No Input file specified'.
     </para>
    </question>
    <answer>
     <para>
      Das Sicherheitsmodell des IIS hat Unrecht. Dies ist ein Problem,
      das alle CGI-Programme, die unter dem IIS laufen, haben.
      Als Workaround können Sie eine leere HTML-Datei, die nicht von PHP
      geparst wird, als Eingangsseite in ein per Authenfikation geschütztes
      Verzeichnis erzeugen. Anschließend leiten Sie den Browser durch ein
      META-Tag auf die PHP-Seite weiter oder sie setzen einen Link auf
      die PHP-Seite. PHP erkennt dann die Authentifizierung korrekt.
      Dieses Problem tritt mit dem ISAPI-Modul nicht auf. Auch auf anderen
      NT-Web-Servern sollte dieses Problem nicht auftauchen. Weitere
      Informationen finden Sie auch hier:
      <ulink url="&faqurl.iis;">&faqurl.iis;</ulink>. Lesen Sie auch den
      Manual-Abschnitt zur <link
      linkend="features.http-auth">HTTP-Authentifizierung mit PHP</link>.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.using.netscape">
    <question>
     <para>
      Mein PHP-Skript funktioniert unter IE und Lynx, aber unter Netscape
      fehlt ein Teil meiner Ausgabe. Wenn ich mir den Quelltext anschaue,
      sehe ich die Ausgabe unter IE, aber nicht unter Netscape.
     </para>
    </question>
    <answer>
     <para>
      Netscape verarbeitet HTML-Tags (z.B. Tabellen) strenger als der IE.
      Meist ist es hilfreich, wenn Sie Ihre HTML-Ausgabe mit einem
      HTML-Validator (z.B.
      <ulink url="&url.w3.validator;">validator.w3.org</ulink>)
      prüfen. Z.B. kann ein fehlendes &lt;/table&gt; den Fehler verursachen.
     </para>
     <para>
      IE und Lynx ignorieren auch NULs (<literal>\0</literal>) im HTML-Stream,
      Netscape nicht. Um dies zu überprüfen, kompilieren Sie am besten die
      <link linkend="features.commandline">Kommandozeilen</link>-Version 
      von PHP (auch bekannt als die CGI-Version) und führen Sie Ihr Skript
      auf der Kommandozeile aus. Unter Unix pipen Sie es durch
      <literal>od -c</literal> und schauen Sie nach <literal>\0</literal>
      Zeichen.
      Unter Windows müssen Sie einen Editor oder ein anderes Programm benutzen,
      das es Ihnen ermöglicht, binäre Dateien anzuschauen.
      Wenn Netscape ein NUL in einer Datei findet, gibt es normalerweise in dieser
      Zeile nichts mehr aus, während IE und Lynx die Zeile normal ausgeben.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.using.mixml">
    <question>
     <para>
      Wie kann ich XML und PHP mischen? PHP beschwert sich über meine
      &lt;?xml-Tags!
     </para>
    </question>
    <answer>
     <para>
      Um &lt;?xml in Ihren PHP-Code einzufügen müssen Sie die Kurzform der
      öffnenden PHP-Tags abschalten, indem Sie in Ihrer &php.ini; <link
      linkend="ini.short-open-tag">short_tags</link> auf <literal>0</literal>
      setzen. Sie können diese Direktive nicht mit der Funktion
      <function>ini_set</function> setzen. Sie können unabhängig davon, ob
      <link linkend="ini.short-open-tag">short_open_tags</link> auf on oder
      off gesetzt ist, z.B. <literal>&lt;?php echo '&lt;?xml'; ?&gt;</literal>
      benutzen. Der Standardwert für diese Direktive ist on.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.using.editor">
    <question>
     <para>
      Wie kann ich mit PHP mit Frontpage oder einem anderen HTML-Editor,
      der meinen Code verschiebt, benutzen?
     </para>
    </question>
    <answer>
     <para>
      Die einfachste Möglichkeit ist, ASP-Tags in Ihrem PHP-Code zu aktivieren.
      Sie können dann &lt;% und %&gt; zur Begrenzung Ihres Codes verwenden.
      Viele HTML-Editoren verarbeiten solche Code-Blöcke intelligenter.
      Um die ASP-Tags zu aktiveren, müssen Sie in Ihrer &php.ini;
      <link linkend="ini.asp-tags">asp_tags</link> auf <literal>On</literal>
      setzen oder die gleichwertige Apache-Direktive verwenden.
     </para>
    </answer>
   </qandaentry>

   <qandaentry id="faq.using.variables">
    <question>
     <para>
      Wo kann ich eine komplette Liste der mir zur Verfügung stehenden
      Variablen finden?
     </para>
    </question>
    <answer>
     <para>
      Lesen Sie die Manual-Seite zu <link
      linkend="language.variables.predefined">vordefinierten Variablen</link>,
      die eine (unvollständige) Liste der vordefinierten Variablen, die Ihren
      Skripten zur Verfügung stehen, enthält. Eine komplette Liste der
      verfügbaren Variablen (und viele weitere Informationen) können Sie
      sehen, wenn Sie die Funktion <function>phpinfo</function> aufrufen.
      Beachten Sie auch den Abschnitt zu <link
      linkend="language.variables.external">Variablen außerhalb von PHP</link>,
      der verschiedene Szenarien für externen Variablen wie HTML-Formulare,
      Cookies oder den URL beschreibt.
     </para>

     &note.registerglobals;

    </answer>
   </qandaentry>

   <qandaentry id="faq.using.cgi-vars">
    <question>
     <para>
      Ich versuche, auf eine der Standard-CGI-Variablen (wie
      $DOCUMENT_ROOT oder $HTTP_REFERER) in einer selbst-definierten
      Funktion zuzugreifen, aber anscheinend kann ich nicht darauf zugreifen.
      Was mache ich falsch?
     </para>
    </question>
    <answer>
     <para>
      Es ist wichtig, zu verstehen, dass die PHP-Direktive <link
      linkend="ini.register-globals">register_globals</link> auch
      Server- und Umgebungsvariablen betrifft. Wenn
      register_globals = off (Standardwert seit PHP 4.2.0), dann
      existiert <varname>$DOCUMENT_ROOT</varname> nicht. Stattdessen
      können Sie <varname>$_SERVER['DOCUMENT_ROOT']</varname>
      benutzen. Wenn register_globals = on, dann existieren auch
      die Variablen <varname>$DOCUMENT_ROOT</varname> und
      <varname>$GLOBALS['DOCUMENT_ROOT']</varname>.
     </para>
     <para>  
      Wenn Sie sicher sind, dass register_globals = on, und sich wundern,
      warum <varname>$DOCUMENT_ROOT</varname> innerhalb von Funktionen
      nicht verfügbar ist: das liegt daran, dass es sich dabei um eine
      Variable wie jede andere handelt und sie deswegen innerhalb der
      Funktion zunächst <literal>global $DOCUMENT_ROOT</literal>
      benutzen müssen. Siehe auch die Manual-Seite zum <link
      linkend="language.variables.scope">Geltungsbereich von Variablen</link>.
      Empfehlenswert ist, register_globals = off zu verwenden.
     </para>

     &note.superglobals;

    </answer>
   </qandaentry>

  </qandaset>
 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
