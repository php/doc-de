<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 68b5e2c562e860e2c7d385eab502029b3eed9e7a Maintainer: nobody Status: ready -->
<!-- Reviewed: yes -->
<!-- Rev-Revision: a049ea0cfbd4bf2554f0a134d4f0696d3d419b9b Reviewer: samesch -->
 <appendix xml:id="reserved" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Liste der reservierten Wörter</title>
  <para>
   Es folgt eine Auflistung vordefinierter Bezeichner in PHP. Sie sollten die
   reservierten Wörter aus diesen Listen keinesfalls in Ihren Skripten als
   Bezeichner benutzen, es sei denn, es wird ausdrücklich erlaubt. Die Listen
   enthalten Schlüsselworte, vordefinierte Variablen, Konstanten und
   Klassennamen. Beachten Sie bitte auch, dass diese Listen nicht unbedingt
   vollständig sind.
  </para>

  <sect1 xml:id="reserved.keywords">
  <title>Liste der Schlüsselwörter</title>
   <simpara>
    Die folgenden Begriffe haben in PHP eine spezielle Bedeutung. Einige von
    ihnen sehen aus wie Funktionen, einige wie Konstanten usw., in
    Wirklichkeit handelt es sich aber um Sprachkonstrukte. Keines der
    folgenden Wörter kann als Name für eine Konstante, Klasse, Funktion oder
    Methode genutzt werden. Allerdings sind sie als Eigenschafts-, Konstanten-
    und Methodennamen von Klassen, Interfaces und Traits erlaubt, mit der
    Ausnahme, dass <literal>class</literal> nicht als Name für eine Konstante
    verwendet werden darf.
   </simpara>

   <table>
    <title>PHP Schlüsselworte</title>
    <tgroup cols="5">
     <tbody>
      <row>
       <entry>
        <function>__halt_compiler</function>
       </entry>
       <entry>
        <link linkend="language.oop5.abstract">abstract</link>
       </entry>
       <entry>
        <link linkend="language.operators.logical">and</link>
       </entry>
       <entry>
        <function>array</function>
       </entry>
       <entry>
        <link linkend="control-structures.foreach">as</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.break">break</link>
       </entry>
       <entry>
        <link linkend="language.types.callable">callable</link>
       </entry>
       <entry>
        <link linkend="control-structures.switch">case</link>
       </entry>
       <entry>
        <link linkend="language.exceptions">catch</link>
       </entry>
       <entry>
        <link linkend="language.oop5.basic.class">class</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.oop5.cloning">clone</link>
       </entry>
       <entry>
        <link linkend="language.oop5.constants">const</link>
       </entry>
       <entry>
        <link linkend="control-structures.continue">continue</link>
       </entry>
       <entry>
        <link linkend="control-structures.declare">declare</link>
       </entry>
       <entry>
        <link linkend="control-structures.switch">default</link>
       </entry>
      </row>
      <row>
       <entry>
        <function>die</function>
       </entry>
       <entry>
        <link linkend="control-structures.do.while">do</link>
       </entry>
       <entry>
        <function>echo</function>
       </entry>
       <entry>
        <link linkend="control-structures.else">else</link>
       </entry>
       <entry>
        <link linkend="control-structures.elseif">elseif</link>
       </entry>
      </row>
      <row>
       <entry>
        <function>empty</function>
       </entry>
       <entry>
        <link linkend="control-structures.declare">enddeclare</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endfor</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endforeach</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endif</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.alternative-syntax">endswitch</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endwhile</link>
       </entry>
       <entry>
        <function>eval</function>
       </entry>
       <entry>
        <function>exit</function>
       </entry>
       <entry>
        <link linkend="language.oop5.basic.extends">extends</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.oop5.final">final</link>
       </entry>
       <entry>
        <link linkend="language.exceptions">finally</link>
       </entry>
       <entry>
        <link linkend="functions.arrow">fn</link> (seit PHP 7.4)
       </entry>
       <entry>
        <link linkend="control-structures.for">for</link>
       </entry>
       <entry>
        &foreach;
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="functions.user-defined">function</link>
       </entry>
       <entry>
        <link linkend="language.variables.scope">global</link>
       </entry>
       <entry>
        <link linkend="control-structures.goto">goto</link>
       </entry>
       <entry>
        <link linkend="control-structures.if">if</link>
       </entry>
       <entry>
        <link linkend="language.oop5.interfaces">implements</link>
       </entry>
      </row>
      <row>
       <entry>
        <function>include</function>
       </entry>
       <entry>
        <function>include_once</function>
       </entry>
       <entry>
        <link linkend="language.operators.type">instanceof</link>
       </entry>
       <entry>
        <link linkend="language.oop5.traits.conflict">insteadof</link>
       </entry>
       <entry>
        <link linkend="language.oop5.interfaces">interface</link>
       </entry>
      </row>
      <row>
       <entry>
        <function>isset</function>
       </entry>
       <entry>
        <function>list</function>
       </entry>
       <entry>
        <link linkend="control-structures.match">match</link> (seit PHP 8.0)
       </entry>
       <entry>
        <link linkend="language.namespaces">namespace</link>
       </entry>
       <entry>
        <link linkend="language.oop5.basic.new">new</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.operators.logical">or</link>
       </entry>
       <entry>
        <function>print</function>
       </entry>
       <entry>
        <link linkend="language.oop5.visibility">private</link>
       </entry>
       <entry>
        <link linkend="language.oop5.visibility">protected</link>
       </entry>
       <entry>
        <link linkend="language.oop5.visibility">public</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.oop5.properties.readonly-properties">readonly</link>
        (seit PHP 8.1.0) *
       </entry>
       <entry>
        <function>require</function>
       </entry>
       <entry>
        <function>require_once</function>
       </entry>
       <entry>
        <function>return</function>
       </entry>
       <entry>
        <link linkend="language.variables.scope">static</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.switch">switch</link>
       </entry>
       <entry>
        <link linkend="language.exceptions">throw</link>
       </entry>
       <entry>
        <link linkend="language.oop5.traits">trait</link>
       </entry>
       <entry>
        <link linkend="language.exceptions">try</link>
       </entry>
       <entry>
        <function>unset</function>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.namespaces">use</link>
       </entry>
       <entry>
        <link linkend="language.oop5.properties">var</link>
       </entry>
       <entry>
        <link linkend="control-structures.while">while</link>
       </entry>
       <entry>
        <link linkend="language.operators.logical">xor</link>
       </entry>
       <entry>
        <link linkend="language.generators">yield</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.yield.from">yield from</link>
       </entry>
       <entry></entry>
       <entry></entry>
       <entry></entry>
       <entry></entry>
      </row>
     </tbody>
    </tgroup>
   </table>

   <simpara>
    * <literal>readonly</literal> kann als Funktionsname verwendet werden.
   </simpara>

   <table>
    <title>Kompilierzeit-Konstanten</title>
    <tgroup cols="5">
     <tbody>
      <row>
       <entry>
        <link linkend="language.constants.predefined">__CLASS__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__DIR__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__FILE__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__FUNCTION__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__LINE__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__METHOD__</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.namespaces.nsconstants">__NAMESPACE__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__TRAIT__</link>
       </entry>
       <entry>
       </entry>
       <entry>
       </entry>
       <entry>
       </entry>
       <entry>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </sect1>

  <sect1 xml:id="reserved.classes">
   <title>Vordefinierte Klassen</title>
   <para>
    Dieser Abschnitt listet vordefinierte Standardklassen auf, welche von PHP
    selbst definiert werden. Von Erweiterungen definierte Klassen werden in
    den jeweiligen Abschnitten des Manuals beschrieben.
   </para>

   <sect2 xml:id="reserved.classes.standard">
    <title>Standardmäßig definierte Klassen</title>

    <simpara>
     Diese Klassen sind im Standard-Funktionsumfang einer PHP-Distribution
     enthalten.
    </simpara>

    <variablelist>
     <varlistentry>
      <term><classname>Directory</classname></term>
      <listitem>
       <simpara>
        Die Klasse, die von <function>dir</function> instanziiert wird.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>stdClass</classname></term>
      <listitem>
       <simpara>
        Erstellt bei der
        <link linkend="language.types.object.casting">Umwandlung zu einem Objekt</link>.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>__PHP_Incomplete_Class</classname></term>
      <listitem>
       <simpara>
        Wird unter Umständen von <function>unserialize</function> erzeugt.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>Exception</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>ErrorException</classname></term>
      <listitem>
       <simpara>

       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>php_user_filter</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>Closure</classname></term>
      <listitem>
       <simpara>
        Die vordefinierte finale Klasse <classname>Closure</classname> wird
        benutzt, um
        <link linkend="functions.anonymous">anonyme Funktionen</link>
        darzustellen.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>Generator</classname></term>
      <listitem>
       <simpara>
        Die vordefinierte finale Klasse <classname>Generator</classname> wird
        benutzt, um
        <link linkend="language.generators">Generatoren</link> darzustellen.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>ArithmeticError</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>AssertionError</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>DivisionByZeroError</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>Error</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>Throwable</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>ParseError</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>TypeError</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

   <sect2 xml:id="reserved.classes.special">
    <title>Spezielle Klassen</title>

    <simpara>
     Die folgenden Bezeichner können nicht als Klassenname genutzt werden, da
     sie eine besondere Bedeutung haben.
    </simpara>

    <variablelist>
     <varlistentry>
      <term><classname>self</classname></term>
      <listitem>
       <simpara>
        <link linkend="language.oop5.paamayim-nekudotayim">Aktuelle Klasse</link>.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>static</classname></term>
      <listitem>
       <simpara>
        <link linkend="language.oop5.late-static-bindings">Aktuelle Klasse zur Laufzeit</link>.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>parent</classname></term>
      <listitem>
       <simpara>
        <link linkend="language.oop5.paamayim-nekudotayim">Elternklasse</link>.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

  </sect1>
  &appendices.reserved.constants;
  <sect1 xml:id="reserved.other-reserved-words">
   <title>Liste weiterer reservierter Wörter</title>
   <simpara>
    Die folgenden Wörter können nicht verwendet werden, um eine Klasse, ein
    Interface oder einen Trait zu benennen, und sie können auch nicht in
    Namensräumen verwendet werden.
   </simpara>
   <para>
    <table>
     <title>Reservierte Wörter</title>
     <tgroup cols="5">
      <tbody>
       <row>
        <entry>
         int
        </entry>
        <entry>
         float
        </entry>
        <entry>
         bool
        </entry>
        <entry>
         string
        </entry>
       </row>
       <row>
        <entry>
         true
        </entry>
        <entry>
         false
        </entry>
        <entry>
         null
        </entry>
        <entry>
         void (von PHP 7.1 an)
        </entry>
       </row>
       <row>
        <entry>
         iterable (von PHP 7.1 an)
        </entry>
        <entry>
         object (von PHP 7.2 an)
        </entry>
        <entry>
         mixed (von PHP 8.0 an)
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   <para>
    Die folgende Liste von Wörtern wurde weich reserviert. Obgleich sie noch
    immer als Klassen-, Interface- und Traitname verwendet werden können
    (sowie in Namensräumen), ist deren Verwendung unbedingt zu vermeiden, da
    sie in zukünftigen PHP-Versionen verwendet werden könnten.
   </para>
   <para>
    <table>
     <title>Weich reservierte Wörter</title>
     <tgroup cols="5">
      <tbody>
       <row>
        <entry>
         resource
        </entry>
        <entry>
         numeric
        </entry>
        <entry>
        </entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
  </sect1>
</appendix>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
