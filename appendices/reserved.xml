<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 322547 Maintainer: hholzgra Status: working -->

 <appendix xml:id="reserved" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <title>Liste der reservierten Wörter</title>
  <para>
   Die folgenden Listen enthält in PHP vordefinierten Bezeichner.
   Sie sollten die reservierten Worte aus diesen Listen keinesfalls
   in eigenen Skripten als Bezeichner benutzen. Die Listen enthalten
   Schlüsselworte, vordefinierte Variablen, Konstanten und Klassennamen.
   Beachten Sie bitte auch, dass diese Listen nicht unbedingt vollständig
   sind.
  </para>

  <sect1 xml:id="reserved.keywords">
  <title>Liste der Schlüsselworte</title>
   <simpara>
    Die folgenden Begriffe haben in PHP eine spezielle Bedeutung.
    Einige von ihnen sehen aus wie Funktionen, Konstanten usw.,
    in Wirklichkeit handelt es sich aber um Sprachkonstrukte.
    Keines der folgenden Worte kann als Name für eine benutzerdefinierte
    Konstante, Klasse, Funktion oder Methode genutzt werden. Die Nutzung
    als Variablenname ist in der Regel möglich, sollte aber unterlassen
    werden um Verwirrung zu vermeiden.
   </simpara>

   <table>
    <title>PHP Schlüsselworte</title>
    <tgroup cols="5">
     <tbody>
      <row>
       <entry>
        <link linkend="language.oop5.abstract">abstract</link> (ab PHP 5)
       </entry>
       <entry>
        <link linkend="language.operators.logical">and</link>
       </entry>
       <entry>
        <function>array</function>
       </entry>
       <entry>
        <link linkend="control-structures.foreach">as</link>
       </entry>
       <entry>
        <link linkend="control-structures.break">break</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.switch">case</link>
       </entry>
       <entry>
        <link linkend="language.exceptions">catch</link> (ab PHP 5)
       </entry>
       <entry>
        cfunction (nur PHP 4)
       </entry>
       <entry>
        <link linkend="keyword.class">class</link>
       </entry>
       <entry>
        <link linkend="language.oop5.cloning">clone</link> (ab PHP 5)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.oop5.constants">const</link>
       </entry>
       <entry>
        <link linkend="control-structures.continue">continue</link>
       </entry>
       <entry>
        <link linkend="control-structures.declare">declare</link>
       </entry>
       <entry>
        <link linkend="control-structures.switch">default</link>
       </entry>
       <entry>
        <link linkend="control-structures.do.while">do</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.else">else</link>
       </entry>
       <entry>
        <link linkend="control-structures.elseif">elseif</link>
       </entry>
       <entry>
        <link linkend="control-structures.declare">enddeclare</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endfor</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endforeach</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.alternative-syntax">endif</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endswitch</link>
       </entry>
       <entry>
        <link linkend="control-structures.alternative-syntax">endwhile</link>
       </entry>
       <entry>
        <link linkend="keyword.class">extends</link>
       </entry>
       <entry>
        <link linkend="language.oop5.final">final</link> (ab PHP 5)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.for">for</link>
       </entry>
       <entry>
        &foreach;
       </entry>
       <entry>
        <link linkend="functions.user-defined">function</link>
       </entry>
       <entry>
        <link linkend="language.variables.scope">global</link>
       </entry>
       <entry>
        <link linkend="control-structures.goto">goto</link> (ab PHP 5.3)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="control-structures.if">if</link>
       </entry>
       <entry>
        <link linkend="language.oop5.interfaces">implements</link> (ab PHP 5)
       </entry>
       <entry>
        <link linkend="language.oop5.interfaces">interface</link> (ab PHP 5)
       </entry>
       <entry>
        <link linkend="language.operators.type">instanceof</link> (ab PHP 5)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.namespaces">namespace</link> (ab PHP 5.3)
       </entry>
       <entry>
        <link linkend="keyword.class">new</link>
       </entry>
       <entry>
        old_function (nur PHP 4)
       </entry>
       <entry>
        <link linkend="language.operators.logical">or</link>
       </entry>
       <entry>
        <link linkend="language.oop5.visibility">private</link> (ab PHP 5)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.oop5.visibility">protected</link> (ab PHP 5)
       </entry>
       <entry>
        <link linkend="language.oop5.visibility">public</link> (ab PHP 5)
       </entry>
       <entry>
        <link linkend="language.variables.scope">static</link>
       </entry>
       <entry>
        <link linkend="control-structures.switch">switch</link>
       </entry>
       <entry>
        <link linkend="language.exceptions">throw</link> (ab PHP 5)
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.exceptions">try</link> (ab PHP 5)
       </entry>
       <entry>
        <link linkend="language.namespaces">use</link>
       </entry>
       <entry>
        <link linkend="keyword.class">var</link>
       </entry>
       <entry>
        <link linkend="control-structures.while">while</link>
       </entry>
       <entry>
        <link linkend="language.operators.logical">xor</link>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
   <table>
    <title>Konstanten zur Kompilezeit</title>
    <tgroup cols="5">
     <tbody>
      <row>
       <entry>
        <link linkend="language.constants.predefined">__CLASS__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__DIR__</link> (ab PHP 5.3)
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__FILE__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__LINE__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__FUNCTION__</link>
       </entry>
       <entry>
        <link linkend="language.constants.predefined">__METHOD__</link>
       </entry>
      </row>
      <row>
       <entry>
        <link linkend="language.namespaces">__NAMESPACE__</link> (ab PHP 5.3)
       </entry>
       <entry>
       </entry>
       <entry>
       </entry>
       <entry>
       </entry>
       <entry>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
   <table>
    <title>Sprachkonstrukte</title>
    <tgroup cols="5">
     <tbody>
      <row>
       <entry>
        <function>die</function>
       </entry>
       <entry>
        <function>echo</function>
       </entry>
       <entry>
        <function>empty</function>
       </entry>
       <entry>
        <function>exit</function>
       </entry>
       <entry>
        <function>eval</function>
       </entry>
      </row>
      <row>
       <entry>
        <function>include</function>
       </entry>
       <entry>
        <function>include_once</function>
       </entry>
       <entry>
        <function>isset</function>
       </entry>
       <entry>
        <function>list</function>
       </entry>
       <entry>
        <function>require</function>
       </entry>
      </row>
      <row>
       <entry>
        <function>require_once</function>
       </entry>
       <entry>
        <function>return</function>
       </entry>
       <entry>
        <function>print</function>
       </entry>
       <entry>
        <function>unset</function>
       </entry>
       <entry>
        <function>__halt_compiler</function>
       </entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </sect1>

  <sect1 xml:id="reserved.classes">
   <title>Vordefinierte Klassen</title>
   <para>
    Dieser Abschnitt listet vordefierte Klassen auf, welche von
    PHP selbst definiert werden. Von Erweiterungen definierte Klassen
    werden in den jeweiligen Abschnitten des Manuals beschrieben.
   </para>

   <sect2 xml:id="reserved.classes.standard">
    <title>Standardmäßig definierte Klassen</title>

    <simpara>
     Diese Klassen sind im Standard-Funktionsumfang einer PHP-Distribution enthalten.
    </simpara>

    <variablelist>
     <varlistentry>
      <term><classname>Directory</classname></term>
      <listitem>
       <simpara>
        Die Klasse die von <function>dir</function> instanziiert wird.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>stdClass</classname></term>
      <listitem>
       <simpara>
        Erstellt beim <link linkend="language.types.object.casting">Casten
        zu einem Objekt</link>.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>__PHP_Incomplete_Class</classname></term>
      <listitem>
       <simpara>
        Wird unter Umständen von <function>unserialize</function> erstellt.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

   <sect2 xml:id="reserved.classes.php5">
    <title>Vordefinierte Klassen in PHP 5</title>

    <simpara>
     Diese zusätzlichen vordefinierten Klassen wurden mit PHP 5.0.0
     eingeführt.
    </simpara>

    <variablelist>
     <varlistentry>
      <term><classname>exception</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>php_user_filter</classname></term>
      <listitem>
       <simpara>
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

   <sect2 xml:id="reserved.classes.closure">
    <title>Closure</title>
    
    <simpara>
     Die vordefinierte finale Klasse <classname>Closure</classname> wurde in
     PHP 5.3.0 eingeführt. Sie wird benutzt um <link linkend="functions.anonymous">anonyme
     Funktionen</link> darzustellen.
    </simpara>
    <simpara>
     Weitere Informationen siehe <link linkend="class.closure">Beschreibung
     der Klasse</link>.
    </simpara>
    
   </sect2>

   <sect2 xml:id="reserved.classes.special">
    <title>Spezielle Klassen</title>

    <simpara>
     Die folgenden Bezeichner können nicht als Klassenname genutzt
     werden, da sie eine besondere Bedeutung haben.
    </simpara>

    <variablelist>
     <varlistentry>
      <term><classname>self</classname></term>
      <listitem>
       <simpara>
        <link linkend="language.oop5.paamayim-nekudotayim">Aktuelle Klasse</link>.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>static</classname></term>
      <listitem>
       <simpara>
        <link linkend="language.oop5.late-static-bindings">Aktuelle Klasse
         zur Laufzeit</link>.
       </simpara>
      </listitem>
     </varlistentry>
     <varlistentry>
      <term><classname>parent</classname></term>
      <listitem>
       <simpara>
        <link linkend="language.oop5.paamayim-nekudotayim">Vaterklasse</link>.
       </simpara>
      </listitem>
     </varlistentry>
    </variablelist>
   </sect2>

  </sect1>

  &appendices.reserved.constants;

</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
