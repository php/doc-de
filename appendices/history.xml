<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.14 $ -->
<!-- EN-Revision: 1.19 Maintainer: tom Status: ready -->

<appendix xml:id="history" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Die Geschichte von PHP und verwandten Projekten</title>
 <para>
  PHP hat in den letzten Jahren einen langen Weg hinter sich,
  und zu einer der bekanntesten Sprachen für das Web zu werden,
  war keine einfache Aufgabe. Wenn Sie daran interessiert sind
  kurz zu sehen, wie PHP zu dem gewachsen ist was es heute ist,
  dann lesen Sie weiter. Ältere Versionen von PHP finden Sie im
  <link xlink:href="&url.php.museum;">PHP Museum</link>.
 </para>
 
 <sect1 xml:id="history.php">
  <title>Die Geschichte von PHP</title>
  
  <sect2 xml:id="history.phpfi">
   <title>PHP/FI</title>
   <para>
    PHP ist der Nachfolger eines älteren Produktes, PHP/FI. PHP/FI
    wurde 1995 von Rasmus Lerdorf geschaffen. Ursprünglich war
    PHP/FI ein Set von Perl Skripten zur Erfassung der Zugriffe
    auf seinen Webauftritt. Er nannte dieses Set von Skripten
    'Personal Home Page Tools'. Als dann mehr Funktionalität
    benötigt wurde, schrieb Rasmus eine viel größere Umsetzung
    in C, welche auch mit Datenbanken kommunizieren konnte, und
    den Benutzern die Entwicklung einfacher dynamischer
    Webapplikationen ermöglichte. Rasmus entschloss sich, den
    Sourcecode von PHP/FI zu <link 
    xlink:href="&url.php.release1.0.0;">veröffentlichen</link>, sodass ihn
    jeder benutzen, von Fehlern bereinigen, und weiterentwicklen konnte.
   </para>
   <para>
    PHP/FI stand für Personal Home Page / Forms Interpreter, und
    beinhaltete manches an Funktionalität des PHP wie wir es heute
    kennen. Es besaß Variablen wie in Perl, eine automatische
    Interpretation von Formularvariablen und eine in HTML eingebettete
    Syntax. Die Syntax selbst war der von Perl ähnlich, wenn auch viel
    eingeschränkter, einfach, und ziemlich inkonsistent.
   </para>
   <para>
    1997 war PHP/FI 2.0, die zweite Überarbeitung der C Implementierung,
    Kult für einige tausend Benutzer weltweit (geschätzt). Etwa
    50.000 Domains berichteten PHP/FI 2.0 installiert zu haben, was mit
    ca. 1% der Domains im Internet zu Buche schlug. Obwohl manche Leute
    diesem Projekt ein Stück Code beisteuerten, war es insgesamt immer
    noch ein Ein-Mann-Projekt.
   </para>
   <para>
    PHP/FI 2.0 wurde im November 1997 offiziell freigegeben, nachdem es
    die meiste Zeit seines Lebenszyklus als verschiedene Betaversionen
    verbracht hatte. Es wurde kurz danach von den ersten Alphaversionen
    von PHP 3 abgelöst.
   </para>
  </sect2>

  <sect2 xml:id="history.php3">
   <title>PHP 3</title>
   <para>
    PHP 3.0 war die erste Version, die dem heutigen PHP sehr gleicht.
    Es wurde 1997 von Andi Gutmans und Zeev Suraski neu geschrieben,
    nachdem PHP/FI 2.0 ihrer Meinung nach für die Entwicklung ihrer
    eCommerce Applikation für ein Universitätsprojekt arbeiteten,
    viel zu schwach war. Auf die Basis der bestehenden Benutzer von
    PHP/FI aufbauend, entschieden sich Andi, Rasmus und Zeev zur
    Kooperation, und kündigten PHP 3.0 als den offiziellen Nachfolger
    von PHP/FI 2.0 an, und die Entwicklung von PHP/FI 2.0 wurde
    größtenteils eingestellt.
   </para>
   <para>
    Eine der größten Stärken von PHP 3.0 waren die starken
    Erweiterungsmöglichkeiten. Zusätzlich zu der soliden
    Infrastruktur für eine Menge an Datenbanken, Protokollen und
    APIs, lockten vor allem die Erweiterungsmöglichkeiten von PHP 3
    dutzende von Entwicklern an, welche sich beteiligten, und neue
    Erweiterungsmodule einbrachten. Möglicherweise war das der
    Schlüssel zu dem gewaltigen Erfolg von PHP 3.0. Weitere
    besondere Merkmale von PHP 3.0 waren die Unterstützung für 
    objektorientierte Syntax und die viel bessere sowie
    konsistentere Sprachsyntax.
   </para>
   <para>
    Die gesamte neue Sprache wurde unter einem neuen Namen
    veröffentlicht, welche die im Namen PHP/FI 2.0 vorhandene
    Implizierung einer eingeschränkten persönlichen Nutzung
    beseitigte. Es wurde einfach 'PHP' genannt, ein rekursives
    Akronym für PHP: Hypertext Preprocessor.
   </para>
   <para>
    Gegen Ende 1998 wuchs PHP auf eine installierte Basis von
    (geschätzten) zehntausenden Benutzern und hunderttausenden
    Websites, auf denen PHP installiert war, heran. An seinem
    Höhepunkt war PHP 3.0 auf etwa 10% der Webserver im Internet
    installiert.
   </para>
   <para>
    PHP 3.0 wurde im Juni 1998 nach einer neunmonatigen öffentlichen
    Testphase offiziell freigegeben.
   </para>
  </sect2>

  <sect2 xml:id="history.php4">
   <title>PHP 4</title>
   <para>
    Im Winter 1998, kurz nach der offiziellen Freigabe von PHP 3.0,
    begannen Andi Gutmans und Zeev Suraski den Kern von PHP 
    umzuschreiben. Die Ziele waren eine verbesserte Leistung von
    komplexen Applikationen, und eine verbesserte Modularität des
    Basiscodes. Solche Applikationen wurden durch die neuen
    Leistungsmerkmale von PHP 3.0, der Unterstützung einer großen
    Auswahl von Datenbanken und APIs von Drittanbietern möglich
    gemacht, aber PHP 3.0 war nicht dafür entworfen, solche
    komplexen Applikationen auch effizient zu handhaben.
   </para>
   <para>
    Die neue Engine, tituliert als 'Zend Engine' (aus den Vornamen
    Zeev und Andi gebildet), entsprach diesen Zielen im Design
    erfolgreich, und wurde zum ersten Mal Mitte 1999 eingeführt.
    PHP 4.0, das auf dieser Engine, verbunden mit einer großen
    Auswahl an zusätzlichen Leistungsmerkmalen basiert, wurde im
    Mai 2000 offiziell freigegeben, fast zwei Jahre nach seinem
    Vorgänger PHP 3.0. Zusätzlich zu der stark verbesserten
    Leistung, inkludierte PHP 4.0 andere wichtige Leistungsmerkmale,
    wie Unterstützung für viele weitere Webserver, HTTP-Sessions,
    Ausgabepufferung, sicherere Wege im Umgang mit Benutzereingaben,
    und verschiedene neue Sprachkonstrukte.
   </para>
   <para>
    PHP 4 ist die derzeit aktuellste freigegebene Version von PHP.
    Die Arbeit an der Modifikation und Verbesserung der Zend Engine
    zur Integration der neuen für PHP 5.0 entworfenen
    Leistungsmerkmale hat bereits begonnen.
   </para>
   <para>
    Heute wird PHP von (schätzungsweise) hunderttausenden Entwicklern
    verwendet, und es wird von mehreren Millionen Sites berichtet, auf
    welchen PHP installiert ist, was mit über 20% der Domains im Internet
    zu Buche schlägt.
   </para>
   <para>
    Das Entwicklerteam von PHP umfasst dutzende Entwickler, sowie dutzende
    andere, welche an PHP verwandten Projekten wie PEAR oder dem
    Dokumentationsprojekt arbeiten.
   </para>
  </sect2>

  <sect2 xml:id="history.php5">
   <title>PHP 5</title>
   <para>
    Die Zukunft von PHP ist hauptsächlich von seinem Kern, der Zend Engine,
    geprägt. PHP 5 wird die neue Zend Engine 2.0 enthalten. Weitere Informationen
    zur Zend Engine finden Sie auf der <link xlink:href="&url.zend.future;">Webseite</link>.
   </para>
  </sect2>
 </sect1>
 
 <sect1 xml:id="history.php.related">
  <title>Geschichte von PHP verwandten Projekten</title>
  
  <!-- Hope Stig and/or Egon can do this
  
  <sect2 xml:id="history.phpdoc">
   <title>PHP Documentation Project</title>
   <para>
   </para>
  </sect2>
  
  -->

  <sect2 xml:id="history.pear">
   <title>PEAR</title>
   <para>
    <link xlink:href="&url.php.pear;">PEAR</link>, das PHP Extension and Application Repository (ursprünglich
    PHP Extension and Add-on Repository) ist PHP's Version von
    fundamentalen Klassen, und könnte in der Zukunft zu einem der
    Hauptwege zur Verteilung von PHP Erweiterungen
    unter Entwicklern werden. 
   </para>
   <para>
    PEAR entstand in Diskussionen während des PHP Developers'
    Meeting (PDM) vom Januar 2000 in Tel Aviv. Es wurde von Stig S.
    Bakken geschaffen, und ist seiner erstgeborenen Tochter, Malin
    Bakken, gewidmet.
   </para>
   <para>
    Seit Anfang 2000 ist PEAR zu einem großen, signifikanten Projekt
    mit vielen Entwicklern gewachsen, welche an der Implementierung 
    von gemeinsamer, wiederverwendbarer Funktionalität zum Nutzen der
    gesamten PHP Gemeinschaft arbeiten. PEAR umfasst heute eine große
    Auswahl an infrastrukturellen Basisklassen, für Datenbankzugriff,
    Zwischenspeicherung von Inhalten, mathematischen Kalkulationen,
    eCommerce, und viel, viel mehr.
   </para>
   <para>
    Weitere Informationen zu PEAR finden sie im 
    <link xlink:href="&url.php.pear.manual;">PEAR Manual</link>.
   </para>
  </sect2>

  <sect2 xml:id="history.phpqa">
   <title>PHP Initiative zur Qualitätssicherung</title>
   <para>
    Die <link xlink:href="&url.php.prerelease;">PHP Initiative 
    zur Qualitätssicherung</link> wurde im Sommer
    2000 als Reaktion auf die Kritik, dass PHP Releases für
    Produktionssysteme nicht genügend getestet würden. Das
    Team besteht nun aus einer Hauptgruppe von Entwicklern
    mit einem guten Verständnis der PHP Codebasis. Diese
    Entwickler stecken eine Menge ihrer Zeit in das auffinden
    und Beheben von Fehlern in PHP. Zusätzlich gibt es noch
    viele andere Teammitglieder, die diese Fehlerbehebungen
    auf den verschiedensten Plattformen testen, und Feedback
    geben.
   </para>
  </sect2>

  <sect2 xml:id="history.phpgtk">
   <title>PHP-GTK</title>
   <para>
    <link xlink:href="&url.php.gtk;">PHP-GTK</link> ist die 
    Lösung von PHP, um clientseitige GUI
    Applikationen zu schreiben. Andrei Zmievski erinnert sich
    an die Planungs- und Erstellungsphase von PHP-GTK:
   </para>
   <blockquote>
    <para>
     GUI Programmierung hat mich immer schon interessiert und ich
     fand, dass Gtk+ ein sehr nettes Werkzeug ist, außer dass dessen
     Programmierung in C etwas langwierig ist. Nachdem ich die
     Implementierungen von PyGtk und GTK-Perl miterlebt habe, entschied
     ich mich zu sehen, ob PHP ebenfalls mit Gtk+ verbunden werden könnte,
     wenn auch minimal. Ab August 2000 hatte ich etwas mehr Freizeit,
     und begann zu experimentieren. Meine Hauptvorlage war die PyGTK
     Implementierung, denn sie war von den Leistungsmerkmalen her
     ziemlich komplett, und hatte eine nette objektorientierte
     Schnittstelle. James Henstridge, der Autor von PyGtk, hatte
     in diesen ersten Schritten immer hilfreichen Rat.
    </para>
    <para>
     Die Schnittstellen zu all den Gtk+ Funktionen per Hand zu schreiben
     kam nicht in Frage, und so griff ich die Idee eines Code Generators
     auf, ähnlich wie es PyGTK tat. Der Code Generator ist ein PHP Programm,
     das eine Reihe von .defs Dateien mit den Gtk+ Klassen, Konstanten und
     Information über Methoden  liest, und danach C Code generiert, der PHP
     mit ihnen verbindet. Was nicht automatisch generiert werden kann, wird
     händisch in eine .overrides Datei geschrieben.
    </para>
    <para>
     Die Arbeit an dem Code Generator und der Infrastruktur dauerte einige
     Zeit, da ich im Herbst 2000 nur wenig Zeit für die Arbeit an PHP-GTK
     erübrigen konnte. Nachdem ich PHP-GTK Frank Kronman gezeigt hatte
     bekam er Interesse, und begann mir bei der Arbeit am Code Generator
     und der Win32 Implementierung zu helfen. Es war richtig aufregend,
     als wir das erste Hello World Programm schrieben und laufen ließen.
     Es dauerte noch einige Monate, bis wir das Projekt in einen
     vorzeigbaren Zustand brachten und am 1. März 2001 die erste Version
     freigeben konnten. Die Geschichte schlug prompt SlashDot.
    </para>
    <para>
     In dem Gefühl, dass PHP-GTK umfangreich werden könnte, habe ich
     extra Mailinglisten und CVS Repositories dafür eingerichtet, wie
     auch mit Hilfe von Colin Viebrock die Website gtk.php.net. Die
     Dokumentation musste ebenfalls erstellt werden, und James Moore
     begann hierbei zu helfen.
    </para>
    <para>
     Seit seiner Freigabe gewinnt PHP-GTK an Popularität. Wir haben
     unser eigenes Dokumentationsteam, das Handbuch wird weiter
     verbessert, die Leute beginnen Erweiterungen für PHP-GTK, und
     auch immer mehr Applikationen mit PHP-GTK zu schreiben.
    </para>
   </blockquote>
  </sect2>
 </sect1>

 <sect1 xml:id="history.php.books">
  <title>Bücher über PHP</title>
  <para>
   Seit PHP gewachsen ist, wurde auch begonnen, es als weltweit
   populäre Entwicklungsplattform anzuerkennen. Eine der
   Interessantesten Arten dies zu sehen war, die im Laufe der
   Jahre erscheinenden Bücher über PHP zu beobachten.
  </para>
  <para>
   Unseres Wissens nach was das erste Buch über PHP 'PHP - tvorba
   interaktivních internetových aplikací', ein im im April 1999
   erschienenes, von Jirka Kosek geschriebenes tschechisches Buch.
   Ein Monat später folgte ein von Egon Schmid, Christian Cartus
   und Richard Blume verfasstes deutsches Buch. Das erste
   englischsprachige Buch über PHP wurde kurz danach veröffentlicht,
   es war 'Core PHP Programming' von Leon Atkinson. Beide Bücher
   deckten PHP 3.0 ab.
  </para>
  <para>
   Nachdem diese Bücher die ersten ihrer Art waren, folgte schnell
   eine große Anzahl Bücher von einer Menge Autoren und Verlegern.
   Es gibt über 40 englischsprachige Bücher, 50 Bücher in Deutsch,
   und über 20 Bücher in Französisch! Weiters gibt es Bücher über
   PHP in vielen anderen Sprachen, wie Spanisch, Koreanisch,
   Japanisch und Hebräisch.
  </para>
  <para>
   Diese große Anzahl von Büchern, die von verschiedenen Autoren
   geschrieben, und vielen Verlegern veröffentlicht wurden, sowie
   deren Verfügbarkeit in so vielen Sprachen sind ein guter Beweis
   für den weltweiten Erfolg von PHP.
  </para>
 </sect1>
 
 <sect1 xml:id="history.php.publications">
  <title>Publikationen über PHP</title>
  <para>
   Soweit wir wissen, erschien der erste Artikel über PHP in einem
   gedruckten Magazin gegen Ende 1998 in der tschechischen Ausgabe
   der Computerworld, und behandelte PHP 3.0. Wie auch bei den Büchern
   war dieser der erste von einer ganzen Serie von Artikeln über PHP,
   welche in verschiedenen populären Magazinen erschienen sind.
  </para>
  <para>
   Artikel über PHP erschienen in Dr. Dobbs, Linux Enterprise,
   Linux Magazine und vielen mehr. Artikel über die Migration
   von ASP-basierten Applikationen nach PHP unter Windows tauchten
   sogar in <productname>Microsoft</productname>'s eigenem 
   <acronym>MSDN</acronym> auf!
  </para>
 </sect1>

</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
