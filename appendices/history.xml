<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 334762 Maintainer: nobody Status: ready -->
<!-- Credits: tom -->

<appendix xml:id="history" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Die Geschichte von PHP und verwandten Projekten</title>
 <para>
  PHP hat seit seiner Entstehung in der Mitte der 90er Jahre einen langen Weg hinter sich,
  um zu einer der bekanntesten Sprachen für das Web zu werden,
  war keine einfache Aufgabe. Wenn Sie daran interessiert sind
  kurz zu sehen, wie PHP zu dem gewachsen ist was es heute ist,
  dann lesen Sie weiter. Ältere Versionen von PHP finden Sie im
  <link xlink:href="&url.php.museum;">PHP Museum</link>.
 </para>

 <sect1 xml:id="history.php">
  <title>Die Geschichte von PHP</title>

  <sect2 xml:id="history.phpfi">
   <title>PHP Tools, FI, Construction Kit, und PHP/FI</title>
   <para>
    PHP ist der Nachfolger eines älteren Produktes, PHP/FI. PHP/FI
    wurde 1994 von Rasmus Lerdorf geschaffen. Ursprünglich war
    PHP/FI ein Set von Common Gateway Interface (CGI) Programmen zur Erfassung der Zugriffe
    auf seinen Webauftritt. Er nannte dieses Set von Skripten
    "Personal Home Page Tools", auch bekannt als "PHP Tools". Als dann mehr Funktionalität
    benötigt wurde, schrieb Rasmus eine viel größere Umsetzung,
    welche auch mit Datenbanken kommunizieren konnte, und
    den Benutzern die Entwicklung einfacher dynamischer
    Webapplikationen, wie Gästebüchern, ermöglichte. Rasmus entschloss sich im Juni 1995, den
    Sourcecode der PHP Tools zu <link
    xlink:href="&url.php.release1.0.0;">veröffentlichen</link>, sodass ihn
    jeder benutzen, von Fehlern bereinigen, und weiterentwicklen konnte.
   </para>
   <para>
    Im September dieses Jahres erweiterte Rasmus PHP und verzichtete sogar
    kurzzeitig auf das PHP im Namen. Nun wurden die Tools FI (kurz für "Formas
    Interpreter") genannt, und beinhalteten manches an Funktionalität des PHP
    wie wir es heute kennen. Es besaß Variablen wie in Perl, automatische
    Interpretation von Formularvariablen und eine in HTML eingebettete Syntax.
    Die Syntax selbst war der von Perl ähnlich, wenn auch viel eingeschränkter,
    einfach, und etwas inkonsistent. Tatsächlich mussten HTML-Kommentare
    verwendet werden, um den Code in eine HTML-Datei einzubetten. Obschon diese
    Methode nicht überall gut aufgenommen wurde, erfreute sich FI zunehmend an
    Wachstum und Akzeptanz als CGI-Tool – aber immer noch nicht wirklich als
    Sprache. Allerdings begann sich das im folgenden Monat zu ändern; im Oktober
    1995 veröffentlichte Rasmus ein vollständiges Rewrite des Codes, und nannte
    es nun kurzzeitig Personal Home Page Construction Kit", und dies wurde als,
    für damalige Verhältnisse, fortgeschrittenes Skript-Interface angesehen. Die
    Sprache war absichtlich so gestaltet, dass sie C ähnelte, was die Struktur
    anging, so dass es leicht von Entwicklern genutzt werden konnte, die mit C,
    Perl und ähnlichen Sprachen vertraut waren. Soweit war es auf UNIX und
    POSIX-konforme System beschränkt, aber die Möglichkeit einer Windows NT
    Implementierung wurde untersucht.
   </para>
   <para>
    Der Code erhielt eine weitere vollständige Überarbeitung, und im April 1996,
    führte Rasmus, die Namen der vergangenen Veröffentlichungen kombinierend,
    PHP/FI ein. Diese Implementierung der zweiten Generation war der Beginn der
    Entwicklung von PHP von einer Sammlung von Tools in eine richtige
    Programmiersprache. Es enthielt eingebaute Unterstützung für DBM, mSQL und
    Postgres95 Datenbanken, Cookies, benutzerdefinierte Funktionen und vieles
    mehr. PHP/FI 2.0 wurde im November 1997 offiziell freigegeben, nachdem es
    die meiste Zeit seines Lebenszyklus als verschiedene Betaversionen verbracht
    hatte.
   </para>
   <para>
    Obwohl es nur für eine kurze Zeit entwickelt wurde, erfreute es sich
    zunehmend wachsender Beliebtheit in der noch immer jungen Welt der
    Web-Entwicklung. In 1997 und 1998 war PHP/FI Kult für mehrere Tausend Nutzer
    auf der ganzen Welt. Eine Netcraft-Erhebung von Mai 1998 zeigte an, dass
    nahezu 60.000 Domains HTTP-Header mit dem Inhalt "PHP" versandten, was
    bedeutete, dass der Host-Server es tatsächlich installiert hatte. Diese Zahl
    war zu dieser Zeit mit ungefähr 1% aller Domains im Internet gleichzusetzen.
    Trotz dieser eindrucksvollen Zahlen, stand das weitere Reifen von PHP/FI
    unter schwierigen vorzeichen, da es im Wesentlichen noch immer von einem
    Individuum entwickelt wurde.
   </para>
   <para>
    <example>
     <title>PHP/FI Code-Beispiel</title>
     <programlisting role="html">
<![CDATA[
<!--include /text/header.html-->

<!--getenv HTTP_USER_AGENT-->
<!--ifsubstr $exec_result Mozilla-->
  He, sie verwenden Netscape!<p>
<!--endif-->

<!--sql database select * from table where user='$username'-->
<!--ifless $numentries 1-->
  Pardon, dieser Datensatz ist nicht vorhanden<p>
<!--endif exit-->
  Willkommen <!--$user-->!<p>
  Sie haben auf ihrem Konto <!--$index:0--> Credits übrig.<p>

<!--include /text/footer.html-->
]]>
     </programlisting>
    </example>
   </para>
  </sect2>

  <sect2 xml:id="history.php3">
   <title>PHP 3</title>
   <para>
    PHP 3.0 war die erste Version, die dem heutigen PHP gleicht. Da sie PHP/FI
    2.0 noch immer uneffizient fanden, und Features vermissten, die sie für eine
    eCommerce-Anwendung benötigten, die sie für ein Universitätsprojekt
    entwickelten, begannen Andi Gutmans and Zeev Suraski aus Tel Aviv, Israel,
    1997 ein weiteres vollständiges Rewrite des unterliegenden Parsers. Sie
    kontaktierten Rasmus online, und diskutierten diverse Aspekte der aktuellen
    Implementierung und ihrer Neuentwicklung von PHP. Im Bestreben die Engine zu
    verbessern, und auf der Basis der bestehenden Benutzer von PHP/FI aufbauend,
    entschieden sich Andi, Rasmus und Zeev zur Kooperation, um eine neue
    unabhängige Programmiersprache zu entwickeln. Die gesamte neue Sprache wurde
    unter einem neuen Namen veröffentlicht, welche die im Namen PHP/FI 2.0
    vorhandene Implizierung einer eingeschränkten persönlichen Nutzung
    beseitigte. Es wurde einfach 'PHP' genannt, ein rekursives Akronym für PHP:
    Hypertext Preprocessor.
   </para>
   <para>
    Eine der größten Stärken von PHP 3.0 waren die starken
    Erweiterungsmöglichkeiten. Zusätzlich zu der soliden
    Infrastruktur für eine Menge an Datenbanken, Protokollen und
    APIs, lockten vor allem die Erweiterungsmöglichkeiten von PHP 3
    dutzende von Entwicklern an, welche sich beteiligten, und neue
    Erweiterungsmodule einbrachten. Möglicherweise war das der
    Schlüssel zu dem gewaltigen Erfolg von PHP 3.0. Weitere
    besondere Merkmale von PHP 3.0 waren die Unterstützung für
    objektorientierte Syntax und die viel bessere sowie
    konsistentere Sprachsyntax.
   </para>
   <para>
    Im Juni 1998, mit vielen neuen Entwicklern aus der ganzen Welt, die sich dem
    Einsatz angeschlossen hatten, wurde PHP 3.0 vom neuen PHP-Entwicklungsteam
    als offizieller Nachfolger für PHP/FI 2.0 angekündigt. Die aktive
    Entwicklung von PHP/FI 2.0, die von November des Vorjahres an weitgehend
    eingestellt worden war, wurde nun offiziell beendet. Nach einer ungefähr
    neunmonatigen öffentlichen Testphase wurde PHP 3.0 offiziell freigegeben. Zu
    dieser Zeit war es bereits auf über 70.000 Domains in der ganzen Welt
    installiert, und nicht länger auf POSIX-konforme Betriebssysteme beschränkt.
    Ein eher kleiner Anteil der Domains, die PHP als installiert angaben, waren
    auf Servern gehostet, die unter Windows 95, 98 und NT liefen, bzw. auf
    Macintosh-Rechnern. An seinem Höhepunkt war PHP 3.0 auf etwa 10% der
    Webserver im Internet installiert.
   </para>
  </sect2>

  <sect2 xml:id="history.php4">
   <title>PHP 4</title>
   <para>
    Im Winter 1998, kurz nach der offiziellen Freigabe von PHP 3.0,
    begannen Andi Gutmans und Zeev Suraski den Kern von PHP
    umzuschreiben. Die Ziele waren eine verbesserte Leistung von
    komplexen Applikationen, und eine verbesserte Modularität des
    Code-Basis. Solche Applikationen wurden durch die neuen
    Leistungsmerkmale von PHP 3.0, der Unterstützung einer großen
    Auswahl von Datenbanken und APIs von Drittanbietern möglich
    gemacht, aber PHP 3.0 war nicht dafür entworfen, solche
    komplexen Applikationen auch effizient zu handhaben.
   </para>
   <para>
    Die neue Engine, tituliert als 'Zend Engine' (aus den Vornamen
    Zeev und Andi gebildet), entsprach diesen Zielen im Design
    erfolgreich, und wurde zum ersten Mal Mitte 1999 eingeführt.
    PHP 4.0, das auf dieser Engine, verbunden mit einer großen
    Auswahl an zusätzlichen Leistungsmerkmalen basiert, wurde im
    Mai 2000 offiziell freigegeben, fast zwei Jahre nach seinem
    Vorgänger PHP 3.0. Zusätzlich zu der stark verbesserten
    Leistung, inkludierte PHP 4.0 andere wichtige Leistungsmerkmale,
    wie Unterstützung für viele weitere Webserver, HTTP-Sessions,
    Ausgabepufferung, sicherere Wege im Umgang mit Benutzereingaben,
    und verschiedene neue Sprachkonstrukte.
   </para>
  </sect2>

  <sect2 xml:id="history.php5">
   <title>PHP 5</title>
   <para>
    PHP 5 wurde im Juli 2004 nach langer Entwicklung und mehreren Pre-Releases
    veröffentlicht. Der Kern von PHP 5 ist die <literal>Zend Engine 2.0</literal>, die ein neues
    Objektmodell und Dutzende anderer neuer Features einführt.
   </para>
   <para>
    Das Entwicklerteam von PHP besteht aus Dutzenden von Entwicklern, ergänzt
    durch Dutzende von weiteren Personen, die an verwandten Projekten wie PEAR,
    PECL, der Dokumentation, und einer Netzwerkinfrastruktur von gut über
    einhundert individuellen Webservern auf sechs der sieben Kontinente,
    arbeiten. Obgleich nur eine Schätzung basierend auf Statistiken der
    vergangenen Jahre, kann man gewiss davon ausgehen, dass PHP nun auf
    dutzenden oder vielleicht sogar hunderten von Millionen Domains in der
    ganzen Welt installiert ist.
   </para>
  </sect2>
 </sect1>

 <sect1 xml:id="history.php.related">
  <title>Geschichte von PHP verwandten Projekten</title>

  <!-- Hope Stig and/or Egon can do this

  <sect2 xml:id="history.phpdoc">
   <title>PHP Documentation Project</title>
   <para>
   </para>
  </sect2>

  -->

  <sect2 xml:id="history.pear">
   <title>PEAR</title>
   <para>
    <link xlink:href="&url.php.pear;">PEAR</link>, das PHP Extension and Application Repository (ursprünglich
    PHP Extension and Add-on Repository) ist PHP's Version von
    fundamentalen Klassen, und könnte in der Zukunft zu einem der
    Hauptwege zur Verteilung von PHP Erweiterungen
    unter Entwicklern werden.
   </para>
   <para>
    PEAR entstand in Diskussionen während des PHP Developers'
    Meeting (PDM) vom Januar 2000 in Tel Aviv. Es wurde von Stig S.
    Bakken geschaffen, und ist seiner erstgeborenen Tochter, Malin
    Bakken, gewidmet.
   </para>
   <para>
    Seit Anfang 2000 ist PEAR zu einem großen, signifikanten Projekt
    mit vielen Entwicklern gewachsen, welche an der Implementierung
    von gemeinsamer, wiederverwendbarer Funktionalität zum Nutzen der
    gesamten PHP Gemeinschaft arbeiten. PEAR umfasst heute eine große
    Auswahl an infrastrukturellen Basisklassen für Datenbankzugriff,
    Zwischenspeicherung von Inhalten, mathematischen Berechnungen,
    eCommerce, und viel mehr.
   </para>
   <para>
    Weitere Informationen zu PEAR sind im
    <link xlink:href="&url.php.pear.manual;">PEAR Manual</link> zu finden.
   </para>
  </sect2>

  <sect2 xml:id="history.phpqa">
   <title>PHP Initiative zur Qualitätssicherung</title>
   <para>
    Die <link xlink:href="&url.php.prerelease;">PHP Initiative
    zur Qualitätssicherung</link> wurde im Sommer
    2000 als Reaktion auf die Kritik, dass PHP Releases für
    Produktionssysteme nicht genügend getestet würden, gestartet. Das
    Team besteht nun aus einer Hauptgruppe von Entwicklern
    mit einem guten Verständnis der PHP Codebasis. Diese
    Entwickler stecken eine Menge ihrer Zeit in das auffinden
    und Beheben von Fehlern in PHP. Zusätzlich gibt es noch
    viele andere Teammitglieder, die diese Fehlerbehebungen
    auf den verschiedensten Plattformen testen, und Feedback
    geben.
   </para>
  </sect2>

  <sect2 xml:id="history.phpgtk">
   <title>PHP-GTK</title>
   <para>
    <link xlink:href="&url.php.gtk;">PHP-GTK</link> ist die
    Lösung von PHP, um clientseitige GUI
    Applikationen zu schreiben. Andrei Zmievski erinnert sich
    an die Planungs- und Erstellungsphase von PHP-GTK:
   </para>
   <blockquote>
    <para>
     GUI Programmierung hat mich immer schon interessiert und ich
     fand, dass Gtk+ ein sehr nettes Werkzeug ist, außer dass dessen
     Programmierung in C etwas langwierig ist. Nachdem ich die
     Implementierungen von PyGtk und GTK-Perl miterlebt habe, entschied
     ich mich zu sehen, ob PHP ebenfalls mit Gtk+ verbunden werden könnte,
     wenn auch minimal. Ab August 2000 hatte ich etwas mehr Freizeit,
     und begann zu experimentieren. Meine Hauptvorlage war die PyGTK
     Implementierung, denn sie war von den Leistungsmerkmalen her
     ziemlich komplett, und hatte eine nette objektorientierte
     Schnittstelle. James Henstridge, der Autor von PyGtk, stand
     bei diesen ersten Schritten mit hilfreichen Rat zur Seite.
    </para>
    <para>
     Die Schnittstellen zu all den Gtk+ Funktionen per Hand zu schreiben
     kam nicht in Frage, und so griff ich die Idee eines Code Generators
     auf, ähnlich wie es PyGTK tat. Der Code Generator ist ein PHP Programm,
     das eine Reihe von <filename>.defs</filename> Dateien mit den Gtk+ Klassen, Konstanten und
     Information über Methoden liest, und danach C Code generiert, der PHP
     mit ihnen verbindet. Was nicht automatisch generiert werden kann, wird
     händisch in eine <filename>.overrides</filename> Datei geschrieben.
    </para>
    <para>
     Die Arbeit an dem Code Generator und der Infrastruktur dauerte einige
     Zeit, da ich im Herbst 2000 nur wenig Zeit für die Arbeit an PHP-GTK
     erübrigen konnte. Nachdem ich PHP-GTK Frank Kromann gezeigt hatte,
     bekam er Interesse, und begann mir bei der Arbeit am Code Generator
     und der Win32 Implementierung zu helfen. Es war richtig aufregend,
     als wir das erste Hello World Programm schrieben und laufen ließen.
     Es dauerte noch einige Monate, bis wir das Projekt in einen
     vorzeigbaren Zustand brachten und am 1. März 2001 die erste Version
     freigeben konnten. Die Geschichte schlug prompt bei SlashDot ein.
    </para>
    <para>
     In dem Gefühl, dass PHP-GTK umfangreich werden könnte, habe ich
     extra Mailinglisten und CVS Repositories dafür eingerichtet, wie
     auch mit Hilfe von Colin Viebrock die Website gtk.php.net. Die
     Dokumentation musste ebenfalls erstellt werden, und James Moore
     begann hierbei zu helfen.
    </para>
    <para>
     Seit seiner Freigabe gewinnt PHP-GTK an Popularität. Wir haben
     unser eigenes Dokumentationsteam, das Handbuch wird weiter
     verbessert, die Leute beginnen Erweiterungen für PHP-GTK, und
     auch immer mehr Applikationen mit PHP-GTK zu schreiben.
    </para>
   </blockquote>
  </sect2>
 </sect1>

 <sect1 xml:id="history.php.books">
  <title>Bücher über PHP</title>
  <para>
   Mit dem Wachsen von PHP, wurde es auch zunehmend als weltweit
   populäre Entwicklungsplattform anzuerkennen. Eine der
   Interessantesten Arten dies zu sehen war, die im Laufe der
   Jahre erscheinenden Bücher über PHP zu beobachten.
  </para>
  <para>
   Unseres Wissens nach was das erste Buch über PHP 'PHP - tvorba
   interaktivních internetových aplikací' (<emphasis>PHP
   - Creating Interactive Internet Applications</emphasis>), ein im im April 1999
   erschienenes, von Jirka Kosek geschriebenes tschechisches Buch.
   Ein Monat später folgte ein von Egon Schmid, Christian Cartus
   und Richard Blume verfasstes deutsches Buch. Das erste
   englischsprachige Buch über PHP wurde kurz danach veröffentlicht,
   es war 'Core PHP Programming' von Leon Atkinson. Diese Bücher
   behandelten PHP 3.0.
  </para>
  <para>
   Nachdem diese Bücher die ersten ihrer Art waren, folgte schnell
   eine große Anzahl Bücher von einer Menge Autoren und Verlegern.
   Es gibt über 400 englischsprachige Bücher, über 100 Bücher in Deutsch,
   und über 50 Bücher in Französisch oder Spanisch! Weiterhin gibt es Bücher über
   PHP in vielen anderen Sprachen, wie Koreanisch,
   Japanisch und Hebräisch.
  </para>
  <para>
   Diese große Anzahl von Büchern, die von verschiedenen Autoren
   geschrieben, und vielen Verlegern veröffentlicht wurden, sowie
   deren Verfügbarkeit in so vielen Sprachen sind ein guter Beleg
   für den weltweiten Erfolg von PHP.
  </para>
 </sect1>

 <sect1 xml:id="history.php.publications">
  <title>Publikationen über PHP</title>
  <para>
   Soweit wir wissen, erschien der erste Artikel über PHP in einem
   gedruckten Magazin gegen Ende 1998 in der tschechischen Ausgabe
   der Computerworld, und behandelte PHP 3.0. Wie auch bei den Büchern
   war dieser der erste von einer ganzen Serie von Artikeln über PHP,
   welche in verschiedenen populären Magazinen erschienen sind.
  </para>
  <para>
   Artikel über PHP erschienen in Dr. Dobbs, Linux Enterprise,
   Linux Magazine und vielen mehr. Artikel über die Migration
   von ASP-basierten Applikationen nach PHP unter Windows tauchen
   sogar in <productname>Microsoft</productname>'s eigenem
   <acronym>MSDN</acronym> auf!
  </para>
 </sect1>

</appendix>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
