<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 337270 Maintainer: simp Status: ready -->

<sect1 xml:id="migration56.incompatible">
 <title>Nicht abwärtskompatible Änderungen</title>
 <simpara>
  Obwohl der meiste bestehende PHP 5 Code ohne Änderungen funktionieren sollte,
  sind ein paar Änderungen zu beachten, die nicht abwärtskompatibel sind:
 </simpara>

 <sect2 xml:id="migration56.incompatible.array-keys">
  <title>Array-Schlüssel werden nicht überschrieben, wenn ein Array mittels Array-Literal als Eigenschaft einer Klasse definiert wird</title>

  <para>
   Bisher konnten Elemente von Arrays, welche als Klasseneigenschaften mit 
   expliziten und impliziten Schlüsseln definiert waren, überschrieben werden, wenn 
   ein expliziter Schlüssel gleich mit einem sequenziellen impliziten Schlüssel war.
  </para>

  <informalexample>
   <programlisting role="php">
<![CDATA[
<?php
class C {
    const ONE = 1;
    public $array = [
        self::ONE => 'foo',
        'bar',
        'quux',
    ];
}

var_dump((new C)->array);
?>
]]>
   </programlisting>
   &example.outputs.55;
   <screen>
<![CDATA[
array(2) {
  [0]=>
  string(3) "bar"
  [1]=>
  string(4) "quux"
}

]]>
   </screen>
   &example.outputs.56;
   <screen>
<![CDATA[
array(3) {
  [1]=>
  string(3) "foo"
  [2]=>
  string(3) "bar"
  [3]=>
  string(4) "quux"
}
]]>
   </screen>
  </informalexample>
 </sect2>

 <sect2 xml:id="migration56.incompatible.json-decode">
  <title>Strenge von <function>json_decode</function></title>

  <para>
   <function>json_decode</function> weist nun nicht vollständig in
   Kleinbuchstaben geschriebene Varianten von <literal>true</literal>, 
   <literal>false</literal> und <literal>null</literal> gemäß der
   JSON-Spezifikation zurück, und setzt 
   <function>json_last_error</function> dementsprechend. Bisher wurden
   auch Eingaben, die nur aus einem dieser Werte bestanden, mit
   Großbuchstaben akzeptiert.
  </para>

  <para>
   Diese Änderung hat nur Einfluss auf Fälle in denen ungültiges JSON an
   <function>json_decode</function> übergeben wurde. Gültiges JSON ist
   davon nicht betroffen und wird weiterhin normal verarbeitet.
  </para>
 </sect2>

 <sect2 xml:id="migration56.incompatible.peer-verification">
  <title>Stream Wrapper verifizieren nun standardmäßig Zertifikate und Hostnamen bei Verwendung von SSL/TLS</title>

  &migration56.openssl.peer-verification;
 </sect2>

 <sect2 xml:id="migration56.incompatible.gmp">
  <title><link linkend="book.gmp">GMP</link>-Ressourcen sind nun Objekte</title>

  <para>
   <link linkend="book.gmp">GMP</link>-Ressourcen sind nun Objekte. Die funktionale
   API der GMP-Erweiterung hat sich nicht geändert und Code sollte ohne Änderungen
   funktionieren, es sei denn dieser prüft explizit auf eine Ressource mittels
   <function>is_resource</function> oder Ähnlichem. 
  </para>
 </sect2>

 <sect2 xml:id="migration56.incompatible.mcrypt">
  <title><link linkend="book.mcrypt">Mcrypt</link>-Funktionen benötigen nun gültige Schlüssel und IVs</title>

  <para>
   <function>mcrypt_encrypt</function>, <function>mcrypt_decrypt</function>,
   <function>mcrypt_cbc</function>, <function>mcrypt_cfb</function>,
   <function>mcrypt_ecb</function>, <function>mcrypt_generic</function> und
   <function>mcrypt_ofb</function> akzeptieren nicht länger Schlüssel oder IVs 
   mit falscher Länge, und Blockschlüssel, die IVs benötigen, schlagen nun fehl, wenn
   kein IV übergeben wurde.
  </para>
 </sect2>
 
 <sect2 xml:id="migration56.incompatible.curl">
  <title><link linkend="book.curl">cURL</link> Datei-Uploads</title>

  <para>
   Uploads, die die @file Syntax verwenden, erfordern nun, dass
   CURLOPT_SAFE_UPLOAD auf &false; gesetzt ist. Statt dessen sollte
   <classname>CURLFile</classname> verwendet werden.
  </para>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
