<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 325214 Maintainer: nikic Status: ready -->

<section xml:id="ini.core" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Beschreibung der &php.ini;-Direktiven des Sprachkerns</title>
 <para>
  Diese Liste enthält die &php.ini; Direktiven des PHP-Kerns
  die Sie in Ihrer Installation verwenden können. Direktiven,
  die von einer der Erweiterungen verarbeitet werden, werden in
  den Handbuchseiten der jeweiligen Erweiterung aufgelistet
  und im Detail beschrieben. So können z.B. die Direktiven zur
  Konfiguration von Sessions auf den <link linkend="session.configuration"
  >Session-Handbuchseiten</link> gefunden werden.
 </para>
 
 <section xml:id="ini.sect.httpd-options">
  <title>Httpd-Optionen</title>
  <para>
   <table>
    <title>Httpd-Optionen</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry>async_send</entry>
       <entry>"0"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  <para>
  </para>
 </section>
 
 <section xml:id="ini.sect.language-options">
  <title>Sprachoptionen</title>
  <para>
   <table>
    <title>Konfiguration der Sprache und verschiedene weitere Optionen</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.short-open-tag">short_open_tag</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>PHP_INI_ALL in PHP &lt;= 4.0.0. PHP_INI_PERDIR in PHP &lt; 5.3.0</entry>
      </row>
      <row>
       <entry><link linkend="ini.asp-tags">asp_tags</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>PHP_INI_ALL in PHP &lt;= 4.0.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.precision">precision</link></entry>
       <entry>"14"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.serialize-precision">serialize_precision</link></entry>
       <entry>"17"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>Verfügbar seit PHP 4.3.2. Bis PHP 5.3.5 war der Standardwert 100.</entry>
      </row>
      <row>
       <entry><link linkend="ini.y2k-compliance">y2k_compliance</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>Entfernt ab PHP 5.4.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.allow-call-time-pass-reference">allow_call_time_pass_reference</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>PHP_INI_ALL in PHP &lt;= 4.0.0. Entfernt ab PHP 5.4.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.disable-functions">disable_functions</link></entry>
       <entry>""</entry>
       <entry>Nur &php.ini;</entry>
       <entry>Verfügbar seit PHP 4.0.1.</entry>
      </row>
      <row>
       <entry><link linkend="ini.disable-classes">disable_classes</link></entry>
       <entry>""</entry>
       <entry>Nur &php.ini;</entry>
       <entry>Verfügbar seit PHP 4.3.2.</entry>
      </row>
      <row>
       <entry><link linkend="ini.exit-on-timeout">exit_on_timeout</link></entry>
       <entry>""</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>Verfügbar seit PHP 5.3.0.</entry>
      </row> 
      <row>
       <entry><link linkend="ini.expose-php">expose_php</link></entry>
       <entry>"1"</entry>
       <entry>Nur &php.ini;</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.zend.multibyte">zend.multibyte</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>Verfügbar seit PHP 5.4.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.zend.script-encoding">zend.script_encoding</link></entry>
       <entry>NULL</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>Verfügbar seit PHP 5.4.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.zend.signal-check">zend.signal_check</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Verfügbar seit PHP 5.4.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.zend.ze1-compatibility-mode">zend.ze1_compatibility_mode</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>Verfügbar seit PHP 5.0.0. Entfernt ab PHP 5.3.0</entry>
      </row>
      <row>
       <entry><link linkend="ini.detect-unicode">detect_unicode</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>Verfügbar seit PHP 5.1.0. &removed.php.future;</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  
  &ini.descriptions.title; 
  
  <para>
   <variablelist>
    <varlistentry xml:id="ini.short-open-tag">
     <term>
      <parameter>short_open_tag</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Bestimmt, ob die Kurzform (<userinput>&lt;? ?&gt;</userinput>) des
       PHP-Öffnungs-Tags erlaubt werden soll. Wenn Sie PHP in Kombination
       mit XML benutzen wollen, dann deaktivieren Sie diese Option, um
       <userinput>&lt;?xml ?&gt;</userinput> nutzen zu können. Anderenfalls
       können Sie das Tag mit PHP ausgeben, z.B. <userinput>&lt;?php echo
       '&lt;?xml version="1.0"'; ?&gt;</userinput>. Wenn diese Option
       deaktiviert ist, müssen Sie die Langform des PHP-Öffnungs-Tags
       (<userinput>&lt;?php ?&gt;</userinput>) benutzen.
      </para>
      <note>
       <para>
        Vor PHP 5.4.0 betraf diese Option auch die Kurzform
        <userinput>&lt;?=</userinput>, die zu <userinput>&lt;? echo</userinput>
        identisch ist. Um diese Kurzform nutzen zu können, musste
        <systemitem role="directive">short_open_tag</systemitem> auf on gesetzt
        sein. Seit PHP 5.4.0 ist <userinput>&lt;?=</userinput> immer verfügbar.
       </para>
      </note>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.asp-tags">
     <term>
      <parameter>asp_tags</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <simpara>
       Dieser Schalter aktiviert die Unterstützung von ASP
       &lt;% %&gt; Tags als Erweiterung zu den Üblichen &lt;?php ?&gt; Tags.
       Dieses beinhaltet auch die Kurzform der Variablenausgabe
       &lt;%= $value %&gt;. Weitere Informationen finden Sie hier:
       <link linkend="language.basic-syntax.phpmode">Den HTML-Bereich der Datei verlassen</link>.
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.precision">
     <term>
      <parameter>precision</parameter>
      <type>integer</type>
     </term>
     <listitem>
      <simpara>
       Die Anzahl der signifikanten Stellen, die in Fließkommazahlen
       dargestellt werden.
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.serialize-precision">
     <term>
      <parameter>serialize_precision</parameter>
      <type>integer</type>
     </term>
     <listitem>
      <simpara>
       Die Anzahl der signifikanten Stellen, die gespeichert werden wenn
       Fließkommazahlen serialisiert werden.
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.y2k-compliance">
     <term>
      <parameter>y2k_compliance</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <simpara>
       Erzwingen der Jahr 2000-Kompatibilität (erzeugt eventuell Probleme
       mit nicht-kompatiblen Browsern).
      </simpara>
     </listitem>
    </varlistentry>
    
    
    <varlistentry xml:id="ini.allow-call-time-pass-reference">
     <term>
      <parameter>allow_call_time_pass_reference</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Bestimmt, ob eine Warnung geworfen werden soll, wenn einer Funktion
       Argumente beim Aufruf als Referenz zu übergeben. Die empfohlene Methode
       zu bestimmen, welche Argumente per Referenz übergeben werden sollen, ist
       die Angabe in der Funktionsdeklaration. Wir empfehlen Ihnen, diese Option
       versuchsweise auf Off zu setzen und dann zu prüfen, ob Ihre Skripte
       noch korrekt laufen, um sicherzustellen, dass sie auch mit künftigen
       Versionen von PHP kompatibel sind (sie bekommen ein "Warning", wenn Sie
       diese Funktion trotzdem benutzen).
      </para>
      <para>
       Die Übergabe von Argumenten per Referenz an eine Funktion beim Aufruf
       dieser Funktion wird aus Gründen der Lesbarkeit des Codes als veraltet
       angesehen. Eine Funktion kann die ihr übergebenen Argumente in einer
       undokumentierten und unerwünschten Weise verändern, wenn bei der
       Deklaration der Funktion nicht klar ist, welche Argumente als Referenz
       übergeben werden. Um unerwünschte Nebeneffekte zu vermeiden, ist es
       besser, Argumente die als Referenz übergeben werden
       sollen nur in der Funktionsdeklaration zu kennzeichnen.
      </para>
      <para>
       Siehe auch <link linkend="language.references">Referenzen in PHP</link>.
      </para>
      <para>
       <table>
        <title>Changelog for <literal>allow_call_time_pass_reference</literal></title>
        <tgroup cols="2">
         <thead>
          <row>
           <entry>&Version;</entry>
           <entry>&Description;</entry>
          </row>
         </thead>
         <tbody>
          <row>
           <entry>5.4.0</entry>
           <entry>
            Aus PHP entfernt.
           </entry>
          </row>
          <row>
           <entry>5.3.0</entry>
           <entry>
            Wirft einen Fehler der Stufe <constant>E_DEPRECATED</constant>.
           </entry>
          </row>
          <row>
           <entry>5.0.0</entry>
           <entry>
            Deprecated (veraltet) und wirft einen Fehler der Stufe <constant>E_COMPILE_WARNING</constant>.
           </entry>
          </row>
         </tbody>
        </tgroup>
       </table>
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.expose-php">
     <term>
      <parameter>expose_php</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Bestimmt, ob PHP die Tatsache, dass es auf dem Server installiert
       ist, über einen Header bekannt geben darf (z.B. X-Powered-By: PHP/5.3.7).
       Weiterhin wird dadurch kontrolliert, ob das PHP-Logo durch das Anhängen
       eines speziellen URL-Segments erreichbar ist (z.B.
       <link xlink:href="&url.php;?=PHPE9568F34-D428-11d2-A769-00AA001ACF42">&url.php;?=PHPE9568F34-D428-11d2-A769-00AA001ACF42</link>).
       Dies beeinflusst die Ausgabe von <function>phpinfo</function>, da bei
       Ausgeschalteter Option das PHP-Logo und die Credits nicht angezeigt werden.
      </para>
      <para>
       Weitere Informationen unter <function>php_logo_guid</function> und <function>phpcredits</function>.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.disable-functions">
     <term>
      <parameter>disable_functions</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Diese Direktive ermöglicht das Deaktivieren einzelner Funktionen aus
       <link linkend="security">Sicherheitsgründen</link>. Die Funktionen werden
       als kommagetrennte Liste von Funktionsnamen übergeben. Die Direktive
       ist unabhängig vom <link linkend="ini.safe-mode">Safe Mode</link>.
      </para>
      <para>
       Nur <link linkend="functions.internal">interne Funktionen</link> können
       über diese Direktive deaktiviert werden. <link linkend="functions.user-defined"
       >Nutzer definierte Funktionen</link> sind nicht betroffen.
      </para>
      <para>
       Diese Direktive muss in &php.ini; gesetzt werden. Sie kann nicht in
       beispielsweise &httpd.conf; gesetzt werden.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.disable-classes">
     <term>
      <parameter>disable_classes</parameter>
      <type>string</type>
     </term>
     <listitem>
      <simpara>
       Diese Direktive ermöglicht das Deaktivieren einzelner Klassen aus
       <link linkend="security">Sicherheitsgründen</link>. Die Funktionen werden
       als kommagetrennte Liste von Klassennamen übergeben. Die Direktive
       ist unabhängig vom <link linkend="ini.safe-mode">Safe Mode</link>.
      </simpara>
      <simpara>
       Diese Direktive muss in &php.ini; gesetzt werden. Sie kann nicht in
       beispielsweise &httpd.conf; gesetzt werden.
      </simpara>
      <note>
       <title>Verfügbarkeitshinweis</title>
       <simpara>
        Diese Direktive gibt es seit PHP 4.3.2.
       </simpara>
      </note>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.zend.ze1-compatibility-mode">
     <term>
      <parameter>zend.ze1_compatibility_mode</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Aktiviert den Kompatibilätsmodus mit der Zend Engin 1 (PHP4). Diese
       Einstellung wirkt sich auf das Klonen, Casten und <link
       linkend="language.oop5.object-comparison">Vergleichen von
       Objekten</link> aus. In diesem Modus werden Objekte standardmäßig
       als Werte anstelle von Referenzen übergeben.
      </para>
      <para>
       Siehe auch den Abschnitt  
       <link linkend="migration5">Von PHP 4 auf PHP 5 wechseln</link>.
      </para>
      <warning>
       <simpara>Dieses Feature wurde in PHP 5.3.0 <emphasis>DEPRECATED</emphasis>
        und <emphasis>ENTFERNT</emphasis>.
       </simpara>
      </warning>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.zend.multibyte">
     <term>
      <parameter>zend.multibyte</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Erlaubt das Parsen von Source Code Dateien in Multibyte Encodings.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.zend.script-encoding">
     <term>
      <parameter>zend.script_encoding</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Dieser Wert wird benutzt, sofern keine
       <link linkend="control-structures.declare.encoding">declare(encoding=...)</link>
       Direktive am Anfang des Skriptes genutzt wird.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.zend.signal-check">
     <term>
      <parameter>zend.signal_check</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Ob während des Shutdowns geprüft werden soll, ob Signal Handler ersetzt wurden.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.detect-unicode">
     <term>
      <parameter>detect_unicode</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Erkenne, ob eine BOM (Byte Order Mark) vorhanden ist und
       prüfe ob die Datei valide Multibyte Zeichen enthält.
       Diese Erkennung wird vorgenommen bevor
       <function>__halt_compiler</function> verarbeitet wird.
       Diese Option ist nur im Zend Multibyte Modus verfügbar.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.exit-on-timeout">
     <term>
      <parameter>exit_on_timeout</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Diese Einstellung betrifft nur Apache1 mit mod_php. Sie zwingt den Apache Kind-Prozess sich zu beenden,
       wenn ein PHP Timeout auftritt. Solch ein Timeout verursacht einen internen longjmp() Aufruf, welches einige Erweiterungen
       in einem inkonsistenten Zustand hinterlassen kann. Durch das Beenden des Prozesses werden ausstehende Locks und
       allozierter Arbeitsspeicher freigegeben.
      </para>
     </listitem>
    </varlistentry>
    
   </variablelist>
  </para>
 </section>
 
 <section xml:id="ini.sect.resource-limits">
  <title>Limitierung von Ressourcen</title>
  <para>
   <table>
    <title>Limitierung von Ressourcen</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.memory-limit">memory_limit</link></entry>
       <entry>"128M"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>"8M" vor PHP 5.2.0, "16M" in PHP 5.2.0</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  
  &ini.descriptions.title;
  
  <para>
   <variablelist>
    <varlistentry xml:id="ini.memory-limit">
     <term>
      <parameter>memory_limit</parameter>
      <type>integer</type>
     </term>
     <listitem>
      <para>
       Setzt den Maximalwert des Speichers in Byte, den ein Skript
       verbrauchen darf. Damit können schlecht geschriebene Skripte
       daran gehindert werden, den gesamten verfügbaren Speicher eines
       Servers "aufzufressen". Um keine Speicherobergrenze festzulegen,
       stellen Sie diese Direktive auf den Wert <literal>-1</literal>. 
      </para>
      <para>
       Um diese Direktive verwernden zu können, war es in PHP Versionen vor
       5.2.1 notwendig, dass bei der Kompilierung in der Konfigurationszeile 
       <option role="configure">--enable-memory-limit</option> verwendet 
       wurde. Dies war außerdem notwendig, damit die Funktionen
       <function>memory_get_usage</function> und
       <function>memory_get_peak_usage</function> definiert wurden.
      </para>
      
      &ini.shorthandbytes;
      
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <para>
   Siehe auch: <link linkend="ini.max-execution-time">max_execution_time</link>.
  </para>
 </section>
 
 <section xml:id="ini.sect.performance">
  <title>Performancetuning</title>
  <para>
   <table>
    <title>Performancetuning</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.realpath-cache-size">realpath_cache_size</link></entry>
       <entry>"16K"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Verfügbar seit PHP 5.1.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.realpath-cache-ttl">realpath_cache_ttl</link></entry>
       <entry>"120"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Verfügbar seit PHP 5.1.0.</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  &ini.descriptions.title;
  <para>
   <variablelist>
    <varlistentry xml:id="ini.realpath-cache-size">
     <term>
      <parameter>realpath_cache_size</parameter>
      <type>integer</type>
     </term>
     <listitem>
      <para>
       Legt die Größe des von PHP nutzbaren realpath-Caches fest. Dieser Wert
       sollte auf Systemen erhöht werden, auf denen PHP viele Dateien öffnet,
       um die Anzahl von Dateioperationen widerzuspiegeln.
      </para>
     </listitem>
    </varlistentry>
    <varlistentry xml:id="ini.realpath-cache-ttl">
     <term>
      <parameter>realpath_cache_ttl</parameter>
      <type>integer</type>
     </term>
     <listitem>
      <para>
       Zeitspanne (in Sekunden) während der realpath Informationen einer
       Datei oder eines Verzeichnisses gecacht bleiben. Für Systeme, auf denen
       sich die Dateien kaum ändern, sollte man die Erhöhung dieses Wertes
       in Betracht ziehen.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>
 
 <section xml:id="ini.sect.data-handling">
  <title>Verarbeitung von Daten</title>
  <para>
   <table>
    <title>Konfigurations-Optionen für die Verarbeitung von Daten</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.track-vars">track_vars</link></entry>
       <entry>"On"</entry>
       <entry>PHP_INI_??</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.arg-separator.output">arg_separator.output</link></entry>
       <entry>"&amp;"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>Verfügbar seit PHP 4.0.5.</entry>
      </row>
      <row>
       <entry><link linkend="ini.arg-separator.input">arg_separator.input</link></entry>
       <entry>"&amp;"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>Verfügbar seit PHP 4.0.5.</entry>
      </row>
      <row>
       <entry><link linkend="ini.variables-order">variables_order</link></entry>
       <entry>"EGPCS"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>PHP_INI_ALL in PHP &lt;= 5.0.5.</entry>
      </row>
      <row>
       <entry><link linkend="ini.request-order">request_order</link></entry>
       <entry>""</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>Verfügbar seit PHP 5.3.0</entry>
      </row>        
      <row>
       <entry><link linkend="ini.auto-globals-jit">auto_globals_jit</link>t</entry>
       <entry>"1"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>Verfügbar seit PHP 5.0.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.register-globals">register_globals</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>PHP_INI_ALL in PHP &lt;= 4.2.3. Entfernt ab PHP 5.4.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.register-argc-argv">register_argc_argv</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>PHP_INI_ALL in PHP &lt;= 4.2.3.</entry>
      </row>
      <row>
       <entry><link linkend="ini.register-long-arrays">register_long_arrays</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>Verfügbar seit PHP 5.0.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.post-max-size">post_max_size</link></entry>
       <entry>"8M"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>PHP_INI_SYSTEM in PHP &lt;= 4.2.3. Verfügbar seit PHP 4.0.3.</entry>
      </row>
      <row>
       <entry><link linkend="ini.gpc-order">gpc_order</link></entry>
       <entry>"GPC"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.auto-prepend-file">auto_prepend_file</link></entry>
       <entry>NULL</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>PHP_INI_ALL in PHP &lt;= 4.2.3.</entry>
      </row>
      <row>
       <entry><link linkend="ini.auto-append-file">auto_append_file</link></entry>
       <entry>NULL</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>PHP_INI_ALL in PHP &lt;= 4.2.3.</entry>
      </row>
      <row>
       <entry><link linkend="ini.default-mimetype">default_mimetype</link></entry>
       <entry>"text/html"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.default-charset">default_charset</link></entry>
       <entry>""</entry>
       <entry>PHP_INI_ALL</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.always-populate-raw-post-data">always_populate_raw_post_data</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>PHP_INI_ALL in PHP &lt;= 4.2.3. Verfügbar seit PHP 4.1.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.allow-webdav-methods">allow_webdav_methods</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  
  &ini.descriptions.title;
  
  <para>
   <variablelist>
    <varlistentry xml:id="ini.track-vars">
     <term>
      <parameter>track_vars</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Wenn diese Option aktiviert ist, sind Umgebungs-, GET-, POST-,
       Cookie- und Server-Variablen in den globalen assoziativen
       Arrays
       <varname>$_ENV</varname>,
       <varname>$_GET</varname>,
       <varname>$_POST</varname>,
       <varname>$_COOKIE</varname>, und
       <varname>$_SERVER</varname>.
      </para>
      <para>
       Beachten Sie, dass seit PHP 4.0.3, <systemitem
       role="directive">track_vars</systemitem> immer eingeschaltet ist.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.arg-separator.output">
     <term>
      <parameter>arg_separator.output</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Das Trennzeichen, das in von PHP generierten URLs benutzt wird,
       um Argumente abzutrennen.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.arg-separator.input">
     <term>
      <parameter>arg_separator.input</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Liste der Trennzeichen, die von PHP beim Parsen von URLs zu Variablen
       benutzt werden.
      </para>
      <note>
       <para>
        Jeder Buchstabe in dieser Option wird als Trennzeichen
        interpretiert!
       </para>
      </note>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.variables-order">
     <term>
      <parameter>variables_order</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Legt die Reihenfolge der EGPCS (<literal>E</literal>nvironment
       (Umgebungsvariablen), <literal>G</literal>et,
       <literal>P</literal>ost, <literal>C</literal>ookie und
       <literal>S</literal>erver) Variablenverarbeitung fest. Wenn zum
       Beispiel variables_order auf <literal>"SP"</literal> eingestellt ist,
       wird PHP die &link.superglobals; <varname>$_SERVER</varname> und
       <varname>$_POST</varname>, nicht aber <varname>$_ENV</varname>,
       <varname>$_GET</varname> und <varname>$_COOKIE</varname> anlegen.
       Wird dieser Wert auf "" gesetzt, so werden keine &link.superglobals;
       erzeugt.
      </para>
      <para>
       Falls die veraltete Einstellung <link
       linkend="ini.register-globals">register_globals</link> eingeschaltet
       ist, dann legt variables_order ebenfalls die
       Reihenfolge fest, in der <literal>ENV</literal>,
       <literal>GET</literal>, <literal>POST</literal>,
       <literal>COOKIE</literal> und <literal>SERVER</literal> Variablen im
       globalen Namensraum veröffentlicht werden. Falls also zum Beispiel
       variables_order auf <literal>"EGPCS"</literal> eingestellt und
       register_globals eingeschaltet ist und ebenfalls sowohl
       <varname>$_GET['action']</varname> als auch
       <varname>$_POST['action']</varname> gesetzt sind, dann wird
       <varname>$action</varname> den Wert aus
       <varname>$_POST['action']</varname> beinhalten, da
       <literal>P</literal> im Beispiel nach <literal>G</literal> erscheint.
      </para>
      <warning>
       <para>
        Sowohl im CGI als auch im FastCGI SAPI enthält <varname>$_SERVER</varname>
        immer auch Variablen aus dem Environment, <literal>S</literal>
        ist hier immer equvalent zu <literal>ES</literal> unabhängig
        davon ob <literal>E</literal> noch anderweitig in der Direktive
        benutzt wird.
       </para>
      </warning>
      <note>
       <para>
        Der Inhalt und die Reihenfolge von <varname>$_REQUEST</varname> sind von
        dieser Direktive ebenfalls betroffen.
       </para>
      </note>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.request-order">
     <term>
      <parameter>request_order</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Diese Direktive legt fest in welcher Reihenfolge PHP
       GET, POST und Cookie Variablen im _REQUEST Array 
       ablegt. Die Registrierung erfolgt dabei von links
       nach rechts und neuere Einträge überscrheiben bisherige
       Werte gleichen Namens.
      </para>
      <para>
       Ist diese Direktive nicht gesetzt so wird statt dessen
       <link linkend="ini.variables-order">variables_order</link>
       für die Inhalte von <varname>$_REQUEST</varname> ausgewertet.
      </para>
      <para>
       Beachten Sie, dass die Standard <filename>php.ini</filename> Dateien
       <literal>'C'</literal> für Cookies aus Sicherheitsgründen nicht angeben.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.auto-globals-jit">
     <term>
      <parameter>auto_globals_jit</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Wenn eingeschaltet werden die Variablen SERVER und ENV erzeugt, sobald
       diese das erste mal verwendet werden (Just In Time) anstelle des
       Ausführungsbeginns des Skriptes. Wenn diese Variablen in einem Skript
       nicht verwendet werden wird das Einschalten dieser Einstellung einen
       Geschwindigkeitszuwachs hervorbringen.
      </para>
      <para>
       Die PHP Einstellungen 
       <link linkend="ini.register-globals">register_globals</link>,
       <link linkend="ini.register-long-arrays">register_long_arrays</link>,
       und <link linkend="ini.register-argc-argv">register_argc_argv</link>
       müssen ausgeschaltet sein, damit diese Einstellung Wirkung zeigt.
       Seit PHP 5.1.3 ist es nicht mehr notwendig <link
       linkend="ini.register-argc-argv">register_argc_argv</link> auszuschalten.
      </para>
      <warning>
       <para>
        Ob SERVER und ENV Variablen benutzt werden wird bereits zur
        Kompilationszeit geprüft, ein Zugriff über <link
        linkend="language.variables.variable">variable Variablen</link> 
        führt daher nicht dazu das diese initialisiert werden.
       </para>
      </warning>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.register-globals">
     <term>
      <parameter>register_globals</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Bestimmt, ob die EGPCS (Environment/Umgebung, GET, POST, Cookie, Server) 
       Variablen als globale Variablen registriert werden sollen.
      </para>
      <para>
       Seit <link xlink:href="&url.php.release4.2.0;">PHP 4.2.0</link> ist diese
       Einstellung standardmäßig <emphasis>ausgeschaltet</emphasis>.
      </para>
      <para>
       Bitte lesen Sie auch das
       Sicherheits-Kapitel über die <link linkend="security.globals">
       Benutzung von register_globals</link> für weitere Informationen.
      </para>
      <para>
       Bitte beachten Sie, dass <systemitem
       role="directive">register_globals</systemitem> nicht während der
       Laufzeit Ihrer Skripte gesetzt werden kann
       (<function>ini_set</function>). Wenn Ihr Server es erlaubt, können
       Sie aber &htaccess; wie oben beschrieben verwenden. Beispiel für
       einen &htaccess; Eintrag:
       <userinput>php_flag register_globals on</userinput>.
      </para>
      <note>
       <para>
        <systemitem role="directive">register_globals</systemitem> wird
        durch die Option <link
        linkend="ini.variables-order">variables_order</link> beeinflusst.
       </para>
      </note>
      &warn.deprecated.feature-5-3-0.removed-5-4-0;
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.register-argc-argv">
     <term>
      <parameter>register_argc_argv</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <simpara>
       Bestimmt, ob die argv- &amp; argc-Variablen deklariert werden sollen
       (betrifft die GET-Informationen).
      </simpara>
      <simpara>
       Siehe auch <link linkend="features.commandline">Kommandozeile</link>.
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.register-long-arrays">
     <term>
      <parameter>register_long_arrays</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <simpara>
       Bestimmt, ob PHP die nicht mehr empfohlenen langen Varianten
       (<varname>$HTTP_*_VARS</varname>) der <link
       linkend="language.variables.predefined">vordefinierten
       Variablen</link> registrieren soll.
       Wenn On (Standardwert), dann werden PHP-Variablen wie
       <varname>$HTTP_GET_VARS</varname> definiert. Wenn Sie diese
       nicht nutzen, empfehlen wir Ihnen, diese Option aus Gründen der
       Performance  auf "off" zu setzen. Benutzen Sie stattdessen
       die superglobalen Arrays wie <varname>$_GET</varname>.
      </simpara>
      <simpara>
       Diese Option ist seit PHP 5.0.0 verfügbar.
      </simpara>
      &warn.deprecated.feature-5-3-0.removed-5-4-0;
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.enable-post-data-reading">
     <term>
      <parameter>enable_post_data_reading</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <simpara>
       Wenn diese Option deaktiviert ist, werden  <varname>$_POST</varname> und
       <varname>$_FILES</varname> <emphasis>nicht</emphasis> gefüllt.
       Der einzige Weg in diesem Fall die POST Daten zu lesen ist der
       <link linkend="wrappers.php">php://input</link> Stream Wrapper.
       Dies kann nützlich sein um Requests umzuleiten oder um die POST
       Daten Arbeitsspeicher-effizient zu verarbeiten.
      </simpara>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.post-max-size">
     <term>
      <parameter>post_max_size</parameter>
      <type>integer</type>
     </term>
     <listitem>
      <simpara>
       Setzt die maximal erlaubte Größe von POST-Daten. Diese Option betrifft
       auch den Datei-Upload. Um größere Dateien hochzuladen, muss der Wert
       größer sein als <link
       linkend="ini.upload-max-filesize">upload_max_filesize</link>.
      </simpara>
      <simpara>
       Wenn eine maximale Speichergrenze während des Kompilierens aktiviert
       wurde, dann betrifft auch <link
       linkend="ini.memory-limit">memory_limit</link> den Datei-Upload.
       Allgemein sollte <link linkend="ini.memory-limit">memory_limit</link>
       größer als <parameter>post_max_size</parameter> sein.
      </simpara>
      
      &ini.shorthandbytes;
      
      <simpara>
       Wenn die Größe der POST-Daten größer ist als post_max_size, werden die
       <varname>$_POST</varname> und <varname>$_FILES</varname>
       <link linkend="language.variables.superglobals">Superglobals</link> leer sein.
       Dies kann auf verschiedene Weisen verfolgt werden, z.B. indem man
       die <varname>$_GET</varname>-Variable an das die Daten verarbeitende
       Skript weitergibt, d.h. <literal>&lt;form action="edit.php?processed=1"&gt;</literal>
       und daraufhin prüfen, ob <varname>$_GET['processed']</varname> gesetzt
       ist.
      </simpara>
      <para>
       <note>
        <para>
         PHP gestattet die Angabe von K für kilo, M für mega und 
         G für Giga bei der Angabe von Werten und rechnet diese
         automatisch um. Vermeiden Sie aber beim Einsatz von 32bit
         Versionen die Angabe von Werten die das Limit für 
         vorzeichenbehaftete 32 bit Integer überschreiten da Ihre
         Skripte sonst fehlschlagen werden.
        </para>
       </note>
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.gpc-order">
     <term>
      <parameter>gpc_order</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Legt die Auswertungsreihenfolge für GET-/POST-/COOKIE-Variablen fest.
       Die Standardeinstellung ist "GPC". Wenn Sie diesen Wert auf z.B. "GP"
       setzen, dann ignoriert PHP Cookies, und wird jede GET-Variable
       mit POST-Variablen des gleichen Namens überschreiben.
      </para>
      <note>
       <para>
        Diese Option ist in PHP 4 nicht verfügbar. Benutzen Sie stattdessen
        <link linkend="ini.variables-order">variables_order</link>.
       </para>
      </note>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.auto-prepend-file">
     <term>
      <parameter>auto_prepend_file</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Hier können Sie eine Datei angeben, die automatisch vor der
       Hauptdatei aufgerufen wird. Die Datei wird in die aufgerufene
       Datei eingebettet, als wenn Sie sie mittels der
       <function>require</function> Funktion eingebunden hätten, dabei
       wird ein gesetzter <link linkend="ini.include-path">include_path</link>
       beachtet.</para>
      <para>
       Der spezielle Wert <literal>none</literal>
       deaktiviert Auto-Prepending.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.auto-append-file">
     <term>
      <parameter>auto_append_file</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Hier können Sie eine Datei angeben, die automatisch nach der
       Hauptdatei aufgerufen wird. Die Datei wird in die aufgerufene
       Datei eingebettet, als wenn Sie sie mittels der
       <function>require</function> Funktion eingebunden hätten, dabei
       wird ein gesetzter <link linkend="ini.include-path">include_path</link>
       beachtet.
      </para>
      <para>
       Der spezielle Wert <literal>none</literal>
       deaktiviert Auto-Appending.
       <note>
        <simpara>
         Wird das Skript mit der Funktion <function>exit</function> beendet,
         dann wird Auto-Appending <emphasis>nicht</emphasis> aktiv.
        </simpara>
       </note>
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.default-mimetype">
     <term>
      <parameter>default_mimetype</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.default-charset">
     <term>
      <parameter>default_charset</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Seit Version 4.0.0 gibt PHP standardmäßig immer eine Zeichen-Kodierung
       im "Content-type:"-Header aus. Um dies zu verhindern, lassen Sie diese
       Option leer.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.always-populate-raw-post-data">
     <term>
      <parameter>always_populate_raw_post_data</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Bestimmt, ob die Variable <varname>$HTTP_RAW_POST_DATA</varname>
       mit den unbehandelten POST Daten gefüllt werden soll. Andernfalls
       wird die Variable nur mit Daten von unbekanntem MIME Typ gefüllt. 
       Die bevorzugte Methode, um auf unbehandelte POST Daten zuzugreifen
       ist aber <link linkend="wrappers.php">php://input</link>.
       <varname>$HTTP_RAW_POST_DATA</varname> ist bei
       <literal>enctype="multipart/form-data"</literal> nicht verfügbar.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.allow-webdav-methods">
     <term>
      <parameter>allow_webdav_methods</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Diese Einstellung steht nur für Versionen bis PHP 4.3.2 zur Verfügung. 
       Bestimmt, ob WebDAV-HTTP-Requests in PHP-Skripten erlaubt sein sollen
       (z.B. PROPFIND, PROPPATCH, MOVE, COPY, etc.). Wenn Sie die POST-Daten
       solcher Requests erhalten wollen, müssen Sie auch <link
       linkend="ini.always-populate-raw-post-data">
       always_populate_raw_post_data</link> aktivieren.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
  <para>
   Siehe auch <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link>,
   <link linkend="ini.magic-quotes-runtime">magic-quotes-runtime</link>
   und
   <link linkend="ini.magic-quotes-sybase">magic_quotes_sybase</link>.
  </para>
 </section>
 
 <section xml:id="ini.sect.path-directory">
  <title>Pfade und Verzeichnisse</title>
  <para>
   <table>
    <title>Konfigurations-Optionen für Pfade und Verzeichnisse</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.include-path">include_path</link></entry>
       <entry>".;/path/to/php/pear"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.open-basedir">open_basedir</link></entry>
       <entry>NULL</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>PHP_INI_SYSTEM in PHP &lt; 5.3.0</entry>
      </row>
      <row>
       <entry><link linkend="ini.doc-root">doc_root</link></entry>
       <entry>NULL</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.user-dir">user_dir</link></entry>
       <entry>NULL</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.extension-dir">extension_dir</link></entry>
       <entry>"/path/to/php"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.extension">extension</link></entry>
       <entry>NULL</entry>
       <entry>Nur &php.ini;</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.zend-extension">zend_extension</link></entry>
       <entry>NULL</entry>
       <entry>Nur &php.ini;</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.zend-extension-debug">zend_extension_debug</link></entry>
       <entry>NULL</entry>
       <entry>Nur &php.ini;</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.zend-extension-debug-ts">zend_extension_debug_ts</link></entry>
       <entry>NULL</entry>
       <entry>Nur &php.ini;</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.zend-extension-ts">zend_extension_ts</link></entry>
       <entry>NULL</entry>
       <entry>Nur &php.ini;</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.cgi.check-shebang-line">cgi.check_shebang_line</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Verfügbar seit PHP 5.2.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.cgi.fix-pathinfo">cgi.fix_pathinfo</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Verfügbar seit PHP 4.3.0. Vor PHP 5.2.1 PHP_INI_ALL.</entry>
      </row>
      <row>
       <entry><link linkend="ini.cgi.force-redirect">cgi.force_redirect</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Verfügbar seit PHP 4.2.0. Vor PHP 5.2.1 PHP_INI_ALL.</entry>
      </row>
      <row>
       <entry><link linkend="ini.cgi.redirect-status-env">cgi.redirect_status_env</link></entry>
       <entry>NULL</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Verfügbar seit PHP 4.2.0. Vor PHP 5.2.1 PHP_INI_ALL.</entry>
      </row>
      <row>
       <entry><link linkend="ini.cgi.rfc2616-headers">cgi.rfc2616_headers</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>Verfügbar seit PHP 4.3.0.</entry>
      </row>
      <row>
       <entry><link linkend="ini.fastcgi.impersonate">fastcgi.impersonate</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Verfügbar seit PHP 4.3.0. Vor PHP 5.2.1 PHP_INI_ALL.</entry>
      </row>
      <row>
       <entry><link linkend="ini.fastcgi.logging">fastcgi.logging</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Verfügbar seit PHP 4.3.0. Vor PHP 5.2.1 PHP_INI_ALL.</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  
  &ini.descriptions.title;
  
  <para>
   <variablelist>
    <varlistentry xml:id="ini.include-path">
     <term>
      <parameter>include_path</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Hier können Sie eine Liste von Verzeichnissen angeben, in dem die
       Funktionen <function>require</function>,
       <function>include</function>, <function>fopen</function>,
       <function>file</function>, <function>readfile</function> und
       <function>file_get_contents</function> nach Dateien suchen. Das
       Format ist ähnlich zur <envar>PATH</envar>-Umgebungsvariablen des
       jeweiligen Systems: Eine Liste von Verzeichnissen, getrennt durch
       einen Doppelpunkt unter Unix oder ein Semikolon unter Windows.
      </para>
      <para>
       Wenn PHP eine Datei einbinden soll, geht es alle Einträge im include path
       einzeln durch. Zuerst wird der erste Pfad getestet und wenn die Datei
       dort nicht gefunden wird, wird der nächste Pfad überprüft, bis letztendlich
       entweder die Datei gefunden wird oder aber PHP ein
       <link linkend="errorfunc.constants.errorlevels.e-warning">Warning</link>
       oder <link linkend="errorfunc.constants.errorlevels.e-error">Error</link>
       wirft. Der include path kann auch zur Laufzeit mit Hilfe der Funktion
       <function>set_include_path</function> geändert werden.
      </para>
      <para>
       <example>
        <title>include_path unter Unix</title>
        <programlisting role="php.ini">
<![CDATA[
include_path=".:/php/includes"
]]>
        </programlisting>
       </example>
      </para>
      <para>
       <example>
        <title>include_path unter Windows</title>
        <programlisting role="php.ini">
<![CDATA[
include_path=".;c:\php\includes"
]]>
        </programlisting>
       </example>
      </para>
      <para>
       Ein <literal>.</literal> in dieser Option ermöglicht, Dateien
       relativ zum aktuellen Verzeichnis einzubinden. Es ist jedoch
       effizienter explizit <literal>include './Datei'</literal> zu
       schreiben, anstatt PHP zu zwingen jedes Mal den include path
       zu nutzen.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.open-basedir">
     <term>
      <parameter>open_basedir</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Begrenzt die Dateien, die von PHP geöffnet werden auf einen bestimmten
       Ordner inklusive seiner Unterordner. Diese Direktive ist wirksam, 
       <emphasis>EGAL</emphasis>, ob Safe Mode an oder aus ist.
      </para>
      <para>
       Wenn ein Skript versucht, eine Datei zu öffnen, zum Beispiel mit
       <function>fopen</function> oder <function>gzopen</function>, wird
       der Ort der Datei geprüft. Wenn die Datei nicht im Verzeichnisbaum,
       der in open_basedir angegeben ist, liegt, wird PHP die Datei nicht
       öffnen. Alle symbolischen Verknüpfungen werden aufgelöst, sodass es
       nicht möglich ist, diese Beschränkung mit einem Symlink zu umgehen.
       Wenn die Datei nicht existiert kann die Verknüpfung nicht aufgelöst
       werden und der Dateiname wird mit (einem aufgelösten) <option>open_basedir</option>
       verglichen.
      </para>
      <para>
       Der spezielle Wert <systemitem class="filesystem">.</systemitem> gibt
       an, dass das Arbeitsverzeichnes des Skriptes das Basis-Verzeichnis ist.
       Dies ist gefährtlich, da das Arbeitsverzeichnis mit <function>chdir</function>
       einfach geändert werden kann.
      </para>
      <para>
       In der Konfigurationsdatei <filename>httpd.conf</filename> kann
       <option>open_basedir</option> geändert oder deaktiviert werden (z.B.
       für einige virtuelle Hosts), 
       <link linkend="configuration.changes.apache">genau wie jede andere</link> 
       Direktive mit "<literal>php_admin_value open_basedir none</literal>".
      </para>
      <para>
       Unter Windows müssen die Verzeichnisse mit einem Semikolon (<literal>;</literal>)
       getrennt werden, auf allen anderen Systemen mit einem Doppelpunkt.
       Wenn PHP als Apache-Modul läuft, erbt <option>open_basedir</option>
       seinen Pfad nun automatisch von übergeordneten Verzeichnissen.
      </para>
      <para>
       Die Einschränkung durch <option>open_basedir</option> geschieht durch
       einen Prefix, nicht durch einen Verzeichnisnamen. Das heißt, dass 
       "<literal>open_basedir = /dir/incl</literal>" das Verzeichnis
       "<literal>/dir/include</literal>" ebenso einschließt wie  "<literal>/dir/incls</literal>",
       wenn beide existieren. Wenn die Einschränkung auf ein bestimmtes Verzeichnis
       begrenzt werden soll, muss der Pfad mit einem Schrägstrich enden. Beispiel:
       <literal>open_basedir = /dir/incl/</literal>
      </para>
      <para>
       Standardmäßig dürfen alle Dateien geöffnet werden.
      </para>
      <note>
       <para>
        Seit PHP 5.3.0 kann open_basedir zur Laufzeit weiter verengt werden.
        Das heißt, wenn open_basedir laut &php.ini; auf <literal>/www/</literal>
        gesetzt ist, kann die Direktive zur Laufzeit mit <function>ini_set</function>
        auf beispielsweise <literal>/www/tmp/</literal> weiter begrenzt werden.
        Wenn mehrere Verzeichnisse aufgelistet werden, kann die
        <constant>PATH_SEPARATOR</constant> Konstante als vom Betriebssystem
        unabhängiges Trennzeichen verwendet werden.
       </para>
      </note>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.doc-root">
     <term>
      <parameter>doc_root</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Hier wird das Stammverzeichnis der PHP-Skripte angegeben. Diese Option
       wird nur benutzt, wenn ein Wert angegeben wird. Wenn PHP mit
       &safemode; konfiguriert wurde, werden alle Dateien außerhalb dieses
       Verzeichnisses ignoriert.
       Wenn PHP nicht mit FORCE_REDIRECT kompiliert wurde,
       <emphasis>sollten</emphasis> Sie doc_root setzen, wenn Sie PHP als
       CGI-Version laufen lassen (betrifft alle Webserver außer IIS). Die
       Alternative ist, die Option <link
       linkend="ini.cgi.force-redirect">cgi.force_redirect</link> zu
       benutzen.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.user-dir">
     <term>
      <parameter>user_dir</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Der Basisname des Verzeichnisses, das für Benutzer-Verzeichnisse
       mit PHP-Dateien benutzt wird, z.B. <filename class="directory">
       public_html</filename>.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.extension-dir">
     <term>
      <parameter>extension_dir</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Verzeichnis, in dem PHP dynamisch zu ladende Extensionen findet.
       Siehe auch <link linkend="ini.enable-dl">enable_dl</link>
       und <function>dl</function>.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.extension">
     <term>
      <parameter>extension</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Dynamisch zu ladende Extensionen, die geladen werden sollen, wenn
       PHP gestartet wird.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.zend-extension">
     <term>
      <parameter>zend_extension</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Absoluter Pfad zu einer dynamisch ladbaren Zend Extension (beispielsweise
       <link linkend="book.apd">APD</link>), welche geladen werden soll, wenn PHP startet.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.zend-extension-debug">
     <term>
      <parameter>zend_extension_debug</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Variante von <link linkend="ini.zend-extension">zend_extension</link>
       für Erweiterungen, die mit Debug-Informationen kompiliert wurden.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.zend-extension-debug-ts">
     <term>
      <parameter>zend_extension_debug_ts</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Variante von <link linkend="ini.zend-extension">zend_extension</link>
       für Erweiterungen, die mit Debug-Informationen und Thread-Safety kompiliert wurden.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.zend-extension-ts">
     <term>
      <parameter>zend_extension_ts</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Variante von <link linkend="ini.zend-extension">zend_extension</link>
       für Erweiterungen, die mit Thread-Safety kompiliert wurden.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.cgi.check-shebang-line">
     <term>
      <parameter>cgi.check_shebang_line</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Kontrolliert, ob die <acronym>CGI</acronym>-Version von PHP nach einer
       Zeile, die mit <literal>#!</literal> (Shebang) beginnt, am Anfang des
       auszuführenden Skriptes sucht. Diese Zeile könnte notwendig sein, wenn
       das Script sowohl die alleinestehende Ausführung als auch mittels PHP
       <acronym>CGI</acronym> unterstützt. PHP überspringt diese Zeile im
       <acronym>CGI</acronym> Modus und ignoriert ihren Inhalt, wenn diese
       Direktive eingeschaltet ist.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.cgi.fix-pathinfo">
     <term>
      <parameter>cgi.fix_pathinfo</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Stellt <emphasis>reale</emphasis> <literal>PATH_INFO</literal>/
       <literal>PATH_TRANSLATED</literal> Informationen für <acronym>CGI</acronym>
       zur Verfügung. Das frühere Verhalten von PHP war <literal>PATH_TRANSLATED</literal>
       einfach auf <literal>SCRIPT_FILENAME</literal> zu setzen und nicht
       auf <literal>PATH_INFO</literal>. Für weitere Informationen zu
       <literal>PATH_INFO</literal> schauen Sie in die <acronym>CGI</acronym>-Spezifikation.
       Wenn Sie diesen Wert auf <literal>1</literal> setzen, hat dies zur Folge, dass PHP
       <acronym>CGI</acronym> seine Pfade entsprechend der Spezifikation anpasst. Bei einem
       Wert von Null verhält sich PHP entsprechend den früheren Versionen, was auch
       nachwievor das Standardverhalten ist. Es wird empfohlen, Ihre Skripte dahingehend
       anzupassen, statt <literal>PATH_TRANSLATED</literal>
       <literal>SCRIPT_FILENAME</literal> zu verwenden.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.cgi.force-redirect">
     <term>
      <parameter>cgi.force_redirect</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       cgi.force_redirect wird benötigt, um Sicherheit zu garantieren, wenn
       PHP als <acronym>CGI</acronym>-Version unter den meisten Webservern
       läuft. Wenn diese Option nicht angegeben wird, setzt PHP sie
       standardmäßig auf on. <emphasis>Auf Ihre eigene Gefahr hin</emphasis>
       können Sie dies ausschalten ("off").
      </para>
      <note>
       <para>
        Windows-Benutzer: Unter IIS <emphasis>muss</emphasis> diese Option
        ausgeschaltet werden. Für OmniHTTPD und Xitami gilt selbiges.
       </para>
      </note>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.cgi.redirect-status-env">
     <term>
      <parameter>cgi.redirect_status_env</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Wenn cgi.force_redirect eingeschaltet ist und Sie nicht den Apache-
       oder Netscape-Webserver (iPlanet) benutzen, müssen Sie
       <emphasis>eventuell</emphasis> eine Umgebungsvariable setzen, damit
       PHP weiß, ob es die Ausführung fortführen darf.
      </para>
      <note>
       <para>
        Das Setzen dieser Variablen <emphasis>kann</emphasis> Sicherheitsrisiken
        verursachen, <emphasis>Sie sollten also genau wissen, was Sie tun</emphasis>.
       </para>
      </note>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.cgi.rfc2616-headers">
     <term>
      <parameter>cgi.rfc2616_headers</parameter>
      <type>int</type>
     </term>
     <listitem>
      <para>
       Bestimmt, welcher Typ von Headern benutzt werden soll, wenn
       HTTP-Antwort-Codes gesendet werden. Wenn diese Option auf 0 gesetzt
       ist, sendet PHP einen "Status:"-Header, der von Apache und anderen
       Webservern unterstützt wird. Ist sie auf 1 gesetzt, sendet PHP
       einen zu <link xlink:href="&url.rfc;2616">RFC 2616</link> konformen
       Header. Wenn Sie diese Option nicht verstehen, lassen Sie den Wert auf 0.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.fastcgi.impersonate">
     <term>
      <parameter>fastcgi.impersonate</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       FastCGI unter IIS (auf WINNT-basierten Betriebssystemen) unterstützt
       die Möglichkeit, Sicherheitsmerkmale des aufrufenden Clients zu
       bestimmen. Dies ermöglicht es IIS, den Sicherheitskontext zu bestimmen,
       in dem der Zugriff läuft. mod_fastcgi unter Apache unterstützt zur
       Zeit diese Funktion nicht (17.03.2002). Setzen Sie diese Option auf
       1, wenn Sie IIS benutzen. Der Standardwert ist 0.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.fastcgi.logging">
     <term>
      <parameter>fastcgi.logging</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Schaltet SAPI Logging an, wenn FastCGI benutzt wird.
       Standardmäßig ist Logging aktiviert.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>
 
 <section xml:id="ini.sect.file-uploads">
  <title>Datei-Uploads</title>
  <para>
   <table>
    <title>Konfigurations-Optionen für Datei-Uploads</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.file-uploads">file_uploads</link></entry>
       <entry>"1"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>PHP_INI_ALL in PHP &lt;= 4.2.3. Verfügbar seit PHP 4.0.3.</entry>
      </row>
      <row>
       <entry><link linkend="ini.upload-tmp-dir">upload_tmp_dir</link></entry>
       <entry>NULL</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry></entry>
      </row>
      <row>
       <entry><link linkend="ini.max-input-nesting-level">max_input_nesting_level</link></entry>
       <entry>64</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>Verfügbar seit PHP 5.3.9.</entry>
      </row>
      <row>
       <entry><link linkend="ini.max-input-vars">max_input_vars</link></entry>
       <entry>1000</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>Verfügbar seit PHP 5.3.9.</entry>
      </row>
      <row>
       <entry><link linkend="ini.upload-max-filesize">upload_max_filesize</link></entry>
       <entry>"2M"</entry>
       <entry>PHP_INI_PERDIR</entry>
       <entry>PHP_INI_ALL in PHP &lt;= 4.2.3.</entry>
      </row>
      <row>
       <entry><link linkend="ini.max-file-uploads">max_file_uploads</link></entry>
       <entry>20</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry>Verfügbar seit PHP 5.2.12.</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  
  &ini.descriptions.title;
  
  <para>
   <variablelist>
    <varlistentry xml:id="ini.file-uploads">
     <term>
      <parameter>file_uploads</parameter>
      <type>boolean</type> oder <type>integer</type>
     </term>
     <listitem>
      <para>
       Bestimmt, ob <link linkend="features.file-upload">Datei-Uploads</link>
       per HTTP erlaubt sind. Siehe auch die Optionen <link
       linkend="ini.upload-max-filesize">upload_max_filesize</link>,
       <link linkend="ini.upload-tmp-dir">upload_tmp_dir</link> und
       <link linkend="ini.post-max-size">post_max_size</link>.
      </para>
      
      &ini.shorthandbytes;
      
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.upload-tmp-dir">
     <term>
      <parameter>upload_tmp_dir</parameter>
      <type>string</type>
     </term>
     <listitem>
      <para>
       Temporäres Verzeichnis, in dem Dateien während des Uploads gespeichert
       werden. Für dieses Verzeichnis muss der Benutzer, unter dem
       PHP läuft, Schreibberechtigung haben. Wenn hier
       nichts angeben wird, benutzt PHP das Standardverzeichnis für
       temporäre Dateien auf Ihrem System.
      </para>
      <para>
       Wenn das hier angegebene Verzeichnis nicht beschreibbar ist, nutzt
       PHP stattdessen das Standardverzeichnis für temporöre Dateien.
       Wenn <link linkend="ini.open-basedir">open_basedir</link> genutzt wird,
       muss dieses Standardverzeichnis erlaubt sein, ansonsten schlagen
       Uploads fehl.
      </para>
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.upload-max-filesize">
     <term>
      <parameter>upload_max_filesize</parameter>
      <type>integer</type>
     </term>
     <listitem>
      <para>
       Maximale Größe, die eine hochgeladene Datei haben darf.
      </para>
      
      &ini.shorthandbytes;
      
     </listitem>
    </varlistentry>
    
    <varlistentry xml:id="ini.max-file-uploads">
     <term>
      <parameter>max_file_uploads</parameter>
      <type>integer</type>
     </term>
     <listitem>
      <para>
       Die maximale Anzahl an Dateien, die gleichzeitig hochgeladen werden
       kann. Seit PHP 5.3.4 zählen Upload Formularfelder, die leer gelassen
       wurden nicht mehr zu diesem Limit.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>
 
 <section xml:id="ini.sect.sql-general">
  <title>Allgemeines SQL</title>
  <para>
   <table>
    <title>Konfigurations-Optionen für allgemeines SQL</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.sql.safe-mode">sql.safe_mode</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_SYSTEM</entry>
       <entry></entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  
  &ini.descriptions.title;
  
  <para>
   <variablelist>
    <varlistentry xml:id="ini.sql.safe-mode">
     <term>
      <parameter>sql.safe_mode</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Wenn diese Option eingeschaltet wird, werden Datenbankfunktionen, die
       Standardwerte vorgeben diese Werte anstelle der angegebenen Parameter
       verwenden. Zu Informationen über Standardwerte können Sie einen Blick
       auf die Dokumentation der Connect-Funktion der relevanten Datenbank
       werfen.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>
 
 <section xml:id="ini.sect.windows">
  <title>Windows spezifisch</title>
  <para>
   <table>
    <title>Windows spezifische Optionen</title>
    <tgroup cols="4">
     <thead>
      <row>
       <entry>&Name;</entry>
       <entry>&Default;</entry>
       <entry>&Changeable;</entry>
       <entry>&Changelog;</entry>
      </row>
     </thead>
     <tbody>
      <row>
       <entry><link linkend="ini.windows-show-crt-warning">windows_show_crt_warning</link></entry>
       <entry>"0"</entry>
       <entry>PHP_INI_ALL</entry>
       <entry>Verfügbar seit PHP 5.4.0.</entry>
      </row>
     </tbody>
    </tgroup>
   </table>
  </para>
  
  &ini.descriptions.title;
  
  <para>
   <variablelist>
    <varlistentry xml:id="ini.windows-show-crt-warning">
     <term>
      <parameter>windows_show_crt_warning</parameter>
      <type>boolean</type>
     </term>
     <listitem>
      <para>
       Wenn diese Direktive angeschaltet ist, werden Windows CRT Warnings
       angezeigt. Vor PHP 5.4.0 wurden diese immer angezeigt.
      </para>
     </listitem>
    </varlistentry>
   </variablelist>
  </para>
 </section>
</section>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
