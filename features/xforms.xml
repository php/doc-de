<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.4 $ -->
<!-- EN-Revision: 1.5 Maintainer: nobody Status: ready -->
<chapter xml:id="features.xforms" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Mit XForms umgehen</title>
 <para>
  <link xlink:href="&url.xforms;">XForms</link> definieren eine Variation
  traditioneller Webformulare, welche den Einsatz auf einer größeren Anzahl
  von Platformen und Browsern oder sogar in untraditionellen Medien wie PDF
  Dokumenten erlauben.
 </para>
 <para>
  Der erste große Unterschied von XForms besteht darin, wie das Formular
  zum Client gesendet wird. <link xlink:href="&url.xforms.htmlauthors;">
  XForms for HTML Authors</link> enthält eine detaillierte Beschreibung
  davon, wie man XForms erzeugt. Für den Zweck dieser Einführung beschränken 
  wir uns auf ein einfaches Beispiel.
 </para>
 <example>
  <title>Ein einfachese XForms-Suchformular</title>
  <programlisting role="html">
<![CDATA[
<h:html xmlns:h="http://www.w3.org/1999/xhtml"
        xmlns="http://www.w3.org/2002/xforms">
<h:head>
 <h:title>Suche</h:title>
 <model>
  <submission action="http://example.com/search"
              method="post" xml:id="s"/>
 </model>
</h:head>
<h:body>
 <h:p>
  <input ref="q"><label>Finde</label></input>
  <submit submission="s"><label>Suche</label></submit>
 </h:p>
</h:body>
</h:html>
]]>
  </programlisting>
 </example>
 <para>
  Das oben angegebene Formular zeigt ein Texteingabefeld (genannt 
  <parameter>q</parameter>), sowie einen Absendeknopf. Wenn der Absendeknopf
  geklickt wird, wird das Formular an die unter <literal>action</literal>
  angegebene Seite gesendet.
 </para>
 <para>
  Hier beginnt es aus der Sicht der Webapplikation anders auszusehen. In 
  einem normalen HTML Formular würden die Daten 
  <literal>application/x-www-form-urlencoded</literal> gesendet, in der Welt
  von XForms werden diese Informationen als XML formatierte Daten gesendet.
 </para>
 <para>
  Wenn Sie sich für die Arbeit mit XForms entscheiden, dann wollen Sie die 
  Daten wahrscheinlich als XML; in diesem Fall schauen Sie in 
  <varname>$HTTP_RAW_POST_DATA</varname>, wo Sie das vom Browser erzeugte XML 
  Dokument finden werden, das Sie an Ihre bevorzugte XSLT-Engine oder 
  Dokumentenparser weiterreichen können.
 </para>
 <para>
  Wenn Sie nicht an der Formatierung interessiert sind und Ihre Daten in die
  traditionelle <varname>$_POST</varname> Variable geladen haben möchten, können
  Sie den Browser anweisen, die Daten als 
  <literal>application/x-www-form-urlencoded</literal> zu senden, indem Sie das
  <parameter>method</parameter> Attribut auf <emphasis>urlencoded-post</emphasis>
  abändern.
 </para>
 <example>
  <title>XForm verwenden, um <varname>$_POST</varname> zu bestücken</title>
  <programlisting role="html">
<![CDATA[
<h:html xmlns:h="http://www.w3.org/1999/xhtml"
        xmlns="http://www.w3.org/2002/xforms">
<h:head>
 <h:title>Suche</h:title>
 <model>
  <submission action="http://example.com/search"
              method="urlencoded-post" xml:id="s"/>
 </model>
</h:head>
<h:body>
 <h:p>
  <input ref="q"><label>Finde</label></input>
  <submit submission="s"><label>Suche</label></submit>
 </h:p>
</h:body>
</h:html>
]]>
  </programlisting>
 </example>
 <note>
  <simpara>
   Zum Zeitpunkt des Schreibens beherrschen viele Browser XForms nicht. Prüfen
   Sie Ihre Browserversion, wenn obiges Beispiel scheitert.
  </simpara>
 </note>
</chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
