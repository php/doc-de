<?xml version="1.0" encoding="iso-8859-1"?>
 <chapter id="features.images">
  <title>Erzeugen und Verändern von Bildern</title>

  <simpara>
   PHP ist nicht darauf beschränkt, nur HTML auszugeben.  Es kann
   auch dazu genutzt werden, Bilddateien in einer Vielzahl verschiedener
   Formate, darunter GIF, PNG, JPEG, WBMP und XPM, zu erzeugen und zu
   verändern. Noch angenehmer ist, dass PHP Bilddaten direkt an einen
   Browser ausgeben kann.  
   Um all das zu tun, müssen sie nur die GD-Library mit 
   Bildfunktionen eincompilieren.
   Es kann sein, daß PHP und GD noch weitere Bibliotheken benötigen,
   je nachdem, mit welchen Bildformaten Sie arbeiten möchten.
  </simpara>

  <para>
   <example>
    <title>PNG-Erzeugung mit PHP</title>
    <programlisting role="php">
&lt;?php
    Header("Content-type: image/png");
    $string=implode($argv," ");
    $im = imagecreatefrompng("images/taste1.png");
    $orange = ImageColorAllocate($im, 220, 210, 60);
    $px = (imagesx($im)-7.5*strlen($string))/2;
    ImageString($im,3,$px,9,$string,$orange);
    ImagePng($im);
    ImageDestroy($im);
?>
    </programlisting>
   </example>

   Dieses Beispiel würde von einer Seite mit einem Tag wie diesem aufgerufen:
   &lt;img src=&quot;taste.php3?text&quot;&gt;. Der obige Skript taste.php
   nimmt dann den String &quot;text&quot; und legt ihn über das Grundbild,
   in diesem Fall &quot;images/taste1.png&quot;, und gibt das endgültige
   Bild aus.  Das ist ein wirklich komfortabler Weg zu vermeiden, dass man jedesmal,
   wenn man den Text auf Tasten ändert, diese von Hand neu zeichnen muss, denn
   sie werden dynamisch generiert.
  </para>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
