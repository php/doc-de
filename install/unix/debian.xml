<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision$ -->
<!-- EN-Revision: n/a Maintainer: nobody Status: ready -->
<sect1 xml:id="install.unix.debian" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Debian GNU/Linux Installationshinweise</title>
 <para>
  Dieser Abschnitt beinhaltet Hinweise und Tipps die sich auf die Installation
  von PHP speziell auf <link xlink:href="&url.debian;">Debian GNU/Linux</link>
  beziehen.
 </para>
 <sect2 xml:id="install.unix.debian.apt">
  <title>APT verwenden</title>
   <simpara>
    Während Sie einfach den PHP Quellcode herunterladen und selbst kompilieren
    können ist die einfachste und sauberste Methode der Installation die
    Verwendung von Debians Paketmanagementsystem. Falls Sie nicht mit dem
    Bau von Software unter Linux vertraut sind, ist dies die beste Möglichkeit.
   </simpara>
   <simpara>
    Die erste Entscheidung, die Sie treffen müssen, ist, ob Sie Apache 1.3.x oder
    Apache 2.x installieren wollen. Die entsprechenden PHJP Pakete sind
    dementsprechend libapache-mod-php* und libapache2-mod-php* benannt.
    Die unten angegebenen Schritte werden Apache 1.3.x verwenden.
    Bitte beachten Sie, dass zum Zeitpunkt des Schreibens kein offizielles
    PHP 5 Paket für Debian existiert. Daher werden die unten angegebenen
    Schritte PHP 4 installieren.
   </simpara>
   <simpara>
    PHP ist in Debian ebenfalls als CGI und CLI varianten verfügbar, entsprechend
    php4-cgi und php4-cli benannt. Wenn Sie diese benötigen, müssen Sie nur
    die folgenden Schritte mit geänderten Paketnamen wiederholen.
    Ein weiteres spezielles Paket, das Sie möglicherweise installieren wollen,
    ist php4-pear. Dieses enthält eine minimale PEAR Installation und das
    Kommandozeilenprogramm <command>pear</command>.
   </simpara>
   <simpara>
    Wenn Sie aktuellere Pakete als die Debian stable Pakete benötigen oder
    falls einige PHP Module im offiziellen Repository fehlen, sollten Sie
    vielleicht einen Blick auf <link xlink:href="&url.apt-get;">http://www.apt-get.org/</link>
    werfen. Eines der gefundenen Ergebnisse sollte
    <link xlink:href="http://www.dotdeb.org/">Dotdeb</link> sein. Dieses
    inoffizielle Repository wird von <link xlink:href="mailto:gui@php.net">Guillaume
    Plessis</link> verwaltet und enthält die aktuellsten Versionen von
    PHP 4 und  PHP 5. Um es zu verwenden, müssen Sie nur die folgenden zwei
    Zeilen zu Ihrer <filename>/etc/apt/sources.list</filename> hinzufügen
    und <command>apt-get update</command> ausführen:
   </simpara>
   <example>
    <title>Die beiden Dotdeb Zeilen</title>
    <programlisting role="shell">
<![CDATA[
deb http://packages.dotdeb.org stable all
deb-src http://packages.dotdeb.org stable all
]]>
    </programlisting>
   </example>
   <simpara>
    Das Letzte, was Sie bedenken sollten ist, ob Ihre Paketliste aktuell ist.
    Wenn Sie diese nicht in der letzten Zeit aktualisiert haben, müssen Sie
    <command>apt-get update</command> vor allem anderen ausführen. Auf diese
    Weise werden Sie die aktuellsten stabilen Versionen der Apache und
    PHP Pakete verwenden.
   </simpara>
   <simpara>
    Jetzt, da alles eingerichtet ist, können Sie das folgende Beispiel
    verwenden, um Apache und PHP zu installieren:
   </simpara>
   <example xml:id="install.unix.debian.apt.example">
    <title>Debian Installationsbeispiel mit Apach 1.3.x</title>
    <programlisting role="shell">
<![CDATA[
# apt-get install libapache-mod-php4
]]>
    </programlisting>
   </example>
   <simpara>
    APT wird automatisch das PHP 4 Modul für Apache 1.3 und alle Abhängigkeiten
    dessen installieren und danach aktivieren. Wenn Sie nicht gefragt werden,
    Apache während des Installationsvorgangs neu zu starten, müssen Sie dies
    von Hand erledigen:
   </simpara>
   <example xml:id="install.unix.debian.apt.example2">
    <title>Apache anhalten und starten sobald PHP 4 installiert ist</title>
    <programlisting role="shell">
<![CDATA[
# /etc/init.d/apache stop
# /etc/init.d/apache start
]]>
    </programlisting>
   </example>
 </sect2>
 <sect2 xml:id="install.unix.debian.config">
  <title>Bessere Kontrolle über die Konfiguration</title>
   <simpara>
    Im letzten Abschnitt wurde PHP nur mit den Basismodulen installiert.
    Dies könnte nicht das sein, was Sie benötigen und Sie werden bald bemerken,
    dass Sie mehr Module wie MySQL, cURL, GD, usw benötigen.
   </simpara>
   <simpara>
    Wenn Sie PHP selbst aus dem Quellcode kompilieren, müssen Sie die Module
    mit dem <command>configure</command>-Befehl aktivieren. Mit APT müssen
    Sie nur zusätzliche Pakete installieren. Diese sind alle 'php4-*' benannt
    (oder 'php5-*', wenn Sie PHP 5 aus einem Repository eines Drittanbieters
    installiert haben).
   </simpara>
   <example xml:id="install.unix.debian.config.example">
    <title>Eine Liste der zusätzlichen PHP Pakete beziehen</title>
    <programlisting role="shell">
<![CDATA[
# dpkg -l 'php4-*'
]]>
    </programlisting>
   </example>
   <simpara>
    Wie Sie aus der letzten Ausgabe entnehmen können gibt es eine ganze Reihe
    von PHP Modulen, die Sie installieren können (ausgenommen die php4-cgi,
    php4-cli oder php4-pear Spezialpakete).
    Sehen Sie sich diese genau an und entscheiden Sie, was Sie benötigen.
    Wenn Sie ein Modul auswählen und die notwendigen Bibliotheken nicht
    installiert sind, so wird APT automatisch alle Abhängigkeiten installieren.
   </simpara>
   <simpara>
    Wenn Sie wählen, MySQL, cURL und GD-Unterstützung zu PHP hinzuzufügen sieht
    der Befehl etwa so aus:
   </simpara>
   <example xml:id="install.unix.debian.config.example2">
    <title>PHP mit MySQL, cURL und GD installieren</title>
    <programlisting role="shell">
<![CDATA[
# apt-get install php4-mysql php4-curl php4-gd
]]>
    </programlisting>
   </example>
   <simpara>
    APT wird automatisch die passenden Zeilen zu Ihren verschiedenen
    &php.ini; hinzufügen (<filename>/etc/php4/apache/php.ini</filename>,
    <filename>/etc/php4/cgi/php.ini</filename>, usw).
   </simpara>
   <example xml:id="install.unix.debian.config.example3">
    <title>Diese Zeilen aktivieren MySQL, cURL und GD in PHP</title>
    <programlisting role="shell">
<![CDATA[
extension=mysql.so
extension=curl.so
extension=gd.so
]]>
    </programlisting>
   </example>
   <simpara>
    Sie müssen nur wie vorher Apache beenden und neu starten, um die Module zu
    aktivieren.
   </simpara>
 </sect2>
 <sect2 xml:id="install.unix.debian.faq">
  <title>Üblcihe Probleme</title>
  <itemizedlist>
   <listitem>
    <simpara>
     Wenn Sie den PHP Quellcode statt die Ausgabe des Skriptes sehen hat APT
     wahrscheinlich <filename>/etc/apache/conf.d/php4</filename> nicht in
     Ihrer Apache 1.3 Konfiguration eingebunden. Stellen Sie bitte sicher,
     dass die folgende Zeile in Ihrer <filename>/etc/apache/httpd.conf</filename>
     Datei vorhanden ist und starten Sie Apache neu:
    </simpara>
   <example xml:id="install.unix.debian.faq.example">
    <title>Diese Zeile aktiviert PHP 4 in Apache</title>
    <programlisting role="shell">
<![CDATA[
# Include /etc/apache/conf.d/
]]>
    </programlisting>
   </example>
   </listitem>
   <listitem>
    <simpara>
     Wenn Sie zusätzliche Module installiert haben und deren Funktionen nicht
     in Ihren Skripten zur Verfügung stehen, stellen Sie bitte sicher, dass
     die passende Zeile in Ihrer &php.ini; wie vorher gesehen vorhanden ist.
     APT könnte während der Installation zusätzlicher Module aufgrund einer
     verwirrenden debconf Konfiguration daran scheitern.
    </simpara>
   </listitem>
  </itemizedlist>
 </sect2>
</sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
