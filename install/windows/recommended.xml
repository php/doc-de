<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision$ -->
<!-- EN-Revision: 671a3705f5eec54979176ffdd09e61580e2f7d0a Maintainer: samesch Status: ready -->
<!-- Reviewed: no -->
<sect1 xml:id="install.windows.recommended" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
 <title>Empfohlene Konfiguration auf Windows-Systemen</title>
 <sect2>
  <title>OpCache</title>
  <para>
   Es wird dringend empfohlen, OpCache zu aktivieren. Diese Erweiterung ist im
   Lieferumfang von PHP für Windows enthalten. Sie kompiliert und optimiert
   PHP-Skripte und legt sie im Speicher ab, damit sie nicht jedes Mal, wenn
   die Seite geladen wird, neu kompiliert werden müssen.
  </para>
  <para>
   Setzen Sie in der &php.ini; folgende Optionen:
   <example>
    <title>Empfohlene Konfiguration für OpCache</title>
    <screen>
<![CDATA[
opcache.enable=On
opcache.enable_cli=On
]]>
    </screen>
   </example>
   Und starten Sie den Webserver neu. Für weitere Informationen, siehe
   <link linkend="opcache.configuration">OpCache-Konfiguration</link>
  </para>
 </sect2>
 <sect2>
  <title>WinCache</title>
  <para>
   Wenn Sie den IIS einsetzen, ist es empfehlenswert, WinCache zu verwenden.
   Dies gilt insbesondere für gemeinsam genutzte Webhosting-Umgebungen oder
   für die Verwendung von netzwerkbasiertem Dateispeicher (NAS). Beachten Sie,
   dass WinCache ab PHP 8.0.0 nicht mehr unterstützt wird.

   Alle PHP-Anwendungen profitieren automatisch von der
   Dateicache-Funktionalität von WinCache. Dateisystem-Operationen werden im
   Speicher zwischengespeichert.

   Darüber hinaus kann WinCache auch Objekte von Benutzern im Speicher
   zwischenspeichern und sie zwischen <varname>php.exe</varname>- oder
   <varname>php-cgi.exe</varname>-Prozessen austauschen (gemeinsame Nutzung
   von Objekten zwischen Anfragen).

   Viele große Webanwendungen verfügen über ein Plugin, eine Erweiterung oder
   eine Konfigurationsoption, um den Cache für Benutzerobjekte von WinCache zu
   nutzen.

   Wenn eine hohe Leistung benötigt wird, sollten Sie den Objekt-Cache in
   Ihren Anwendungen verwenden.

   Siehe
   <link xlink:href="http://pecl.php.net/package/WinCache">http://pecl.php.net/package/WinCache</link>
   um eine WinCache-DLL (oder
   <filename>WINCACHE_<replaceable>*</replaceable>.tgz</filename>) in das
   Verzeichnis für die PHP-Erweiterungen
   (<link linkend="ini.extension-dir">extension_dir</link> in der
   <filename>php.ini</filename>) herunterzuladen.

   Setzen Sie in der &php.ini; folgende Optionen:
   <example>
    <title>Empfohlene Konfiguration für WinCache</title>
    <screen>
<![CDATA[
extension=php_wincache.dll
wincache.fcenabled=1
wincache.ocenabled=1 ; entfernt ab wincache 2.0.0.0
]]>
    </screen>
   </example>
   Für weitere Informationen, siehe
   <link linkend="wincache.configuration">WinCache-Konfiguration</link>
  </para>
 </sect2>
</sect1>
<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"~/.phpdoc/manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
