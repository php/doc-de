<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.3 Maintainer: tom Status: ready -->
  <sect1 id="install.general">
   <title>Generelle Überlegungen zur Installation</title>
   <para>
    Noch vor der Installation sollten Sie wissen, wofür Sie
    PHP einsetzen wollen. Es gibt drei Haupteinsatzbereiche
    von PHP, wie in dem Abschnitt <link
    linkend="intro-whatcando">Was kann PHP?</link> beschrieben:
    <itemizedlist>
     <listitem><simpara>Serverseitige Skripte</simpara></listitem>
     <listitem><simpara>Skripte auf der Kommandozeile</simpara></listitem>
     <listitem><simpara>Clientseitige GUI Applikationen</simpara></listitem>
    </itemizedlist>
   </para>
   <para>
    Für den ersten und sehr weit verbreiteten Einsatzbereich benötigen
    Sie drei Dinge: PHP selbst, einen Webserver und einen Webbrowser. Sie
    haben wahrscheinlich bereits einen Webbrowser, und abhängig von Ihrer
    Betriebssystemkonfiguration haben Sie vielleicht auch schon einen
    Webserver (z.B. Apache auf Linux oder IIS auf Windows). Sie können
    Webspace bei einem Provider mieten. Dann benötigen Sie nichts selbst,
    sondern schreiben nur Ihre PHP Skripte, laden Sie zu dem gemieteten
    Server hoch, und sehen sich das Ergebnis in Ihrem Browser an.
   </para>
   <para>
    Wenn Sie Ihren Server und PHP selbst installieren, können Sie zwischen
    zwei Methoden wählen, wie Sie PHP mit dem Server verbinden. PHP verfügt
    für viele Server über eine direkte Modulschnittstelle (auch SAPI
    genannt). Diese Server sind zum Beispiel Apache, Microsoft Internet
    Information Server, Netscape und iPlanet Server. Viele andere Server
    unterstützen die Microsoft Modulschnittstelle ISAPI (z.B. OmniHTTPd).
    Sollte PHP keine Modulschnittstelle für Ihren Webserver unterstützen,
    können Sie es immer über die CGI Schnittstelle betreiben. Das heißt,
    dass Sie Ihren Webserver so konfigurieren, dass bei jeder Anforderung
    von PHP Dateien an den Server das Kommandozeilenprogramm von PHP
    (<filename>php.exe</filename> auf Windows) zur Abarbeitung der
    Skripte benutzt wird.
   </para>
   <para>
    Wenn Sie PHP auch für Skripte auf der Kommandozeile benutzen
    möchten (z.B. für Skripte, die offline entsprechend ein paar
    von Ihnen übergebenen Parametern automatisch Bilder erzeugen
    oder Textdateien verarbeiten), benötigen Sie das
    Kommandozeilenprogramm. Weitere Informationen hierzu finden
    Sie unter <link linkend="features.commandline">writing command
    line PHP applications</link>. In diesem Fall benötigen Sie
    weder einen Server, noch einen Browser.
   </para>
   <para>
    Sie können mit PHP und der PHP-GTK Erweiterung auch
    clientseitige GUI Applikationen erstellen. Dies ist ein völlig
    anderer Ansatz als das Schreiben von Webseiten, da Sie zwar
    kein HTML ausgeben, dafür aber Fenster und Objekte handhaben.
    Weitere Informationen zu PHP-GTK finden Sie auf der <ulink
    url="&url.php.gtk;">Webseite zu dieser Erweiterung</ulink>. 
    PHP-GTK ist nicht in offiziellen PHP Distribution enthalten.
   </para>
   <para>
    Von nun an befasst sich dieser Abschnitt mit der Installation
    von PHP für Webserver auf Unix und Windows mit Servermodulen
    und CGI Schnittstellen.
   </para>
   <para>
    Den Quellcode von PHP sowie die Binärdistributionen für Windows
    erhalten Sie unter <ulink url="&url.php;">&url.php;</ulink>. Wir
    empfehlen, den Download der Distributionen von dem Ihnen am nächsten
    liegenden <ulink url="&url.mirrors;">Mirror</ulink> durchzuführen.
   </para>
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
