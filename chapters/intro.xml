<?xml version="1.0" encoding="utf-8"?>
<!-- $Revision: 1.31 $ -->
<!-- EN-Revision: 1.49 Maintainer: hholzgra Status: ready -->
 <chapter xml:id="introduction" xmlns="http://docbook.org/ns/docbook" xmlns:xlink="http://www.w3.org/1999/xlink">
  <info><title>Introduction</title></info>

  <section xml:id="intro-whatis">
   <title>Was ist PHP?</title>
   <para>
    <acronym>PHP</acronym> (rekursives Akronym für "PHP: Hypertext Preprocessor")
    ist eine weit verbreitete und für den allgemeinen Gebrauch bestimmte
    Open Source-Skriptsprache, welche speziell für die Webprogrammierung
    geeignet ist und in HTML eingebettet werden kann.
   </para>
   <para>
    Nett, aber was heißt das genau? Ein Beispiel:
   </para>
   <para>
    <example>
     <info><title>An introductory example</title></info>
     <programlisting role="php">
<![CDATA[
<!DOCTYPE HTML PUBLIC "-//W3C/DTD HTML 4.01 Transitional//EN
"http://www.w3.org/TR/html4/loose.dtd">
<html>
    <head>
        <title>Beispiel</title>
    </head>
    <body>

        <?php
        echo "Hallo, ich bin ein PHP-Skript!";
        ?>

    </body>
</html>
]]>
     </programlisting>
    </example>
   </para>
   <para>
    Anstatt ein Programm mit vielen Anweisungen zur Ausgabe von
    HTML zu schreiben, schreibt man etwas HTML und bettet einige
    Anweisungen ein, die irgendetwas tun (wie hier
    "Hallo, ich bin ein PHP-Skript!" auszugeben). Der PHP-Code
    steht zwischen speziellen <link
    linkend="language.basic-syntax.phpmode">Anfangs- und
    Abschluss-Verarbeitungsinstruktionen <code>&lt;?php</code> und
    <code>?&gt;</code></link>, mit denen man in den "PHP-Modus" und zurück
    wechseln kann.
   </para>
   <para>
    PHP unterscheidet sich von clientseitigen Sprachen wie Javascript dadurch,
    dass der Code auf dem Server ausgeführt wird und dort HTML-Ausgaben
    generiert, die an den Client gesendet werden. Der Client erhält also nur
    das Ergebnis der Skriptausführung, ohne dass es möglich ist herauszufinden,
    wie der eigentliche Code aussieht. Sie können Ihren Webserver
    auch anweisen, alle Ihre HTML-Dateien mit PHP zu parsen, denn dann
    gibt es wirklich nichts, das dem Benutzer sagt, was Sie in petto
    haben.
   </para>
   <para>
    Das Beste an der Verwendung von PHP ist, dass es für Neueinsteiger
    extrem einfach ist, aber auch einen riesigen Funktionsumfang für
    den professionellen Programmierer bietet. Scheuen Sie sich nicht,
    die lange Liste der PHP-Funktionen zu lesen. Sie können einsteigen,
    und binnen weniger Stunden bereits mit dem Schreiben von einfachen
    Skripten beginnen.
   </para>
   <para>
    Auch wenn die Entwicklung von PHP auf serverseitige Programmierung fokussiert
    ist, können Sie mit PHP weitaus mehr anstellen. Lesen Sie mehr im
    Abschnitt <link linkend="intro-whatcando">Was kann PHP?</link> oder
    oder benutzen Sie direkt das
    <link linkend="tutorial">Einführungstutorial</link>, wenn Sie
    nur an Webprogrammierung interessiert sind.
   </para>
  </section>

  <section xml:id="intro-whatcando">
   <info><title>Was kann PHP?</title></info>
   <para>
    Alles. PHP ist hauptsächlich auf serverseitige Skripte fokussiert,
    weshalb Sie alles tun können, was auch ein anderes CGI-Programm
    kann, wie z.B. Formulardaten sammeln, dynamische Inhalte für
    Webseiten generieren oder Cookies senden und empfangen. Aber PHP
    kann noch viel mehr.
   </para>
   <para>
    Es gibt drei Hauptgebiete, in denen PHP-Skripte genutzt werden.
    <itemizedlist>
     <listitem>
      <simpara>
       Serverseitige Programmierung. Dies ist das traditionelle und auch Hauptfeld
       von PHP. Sie benötigen drei Dinge, um damit arbeiten zu können: Den
       PHP-Parser (CGI oder Server-Modul), einen Webserver und einen Webbrowser.
       Sie müssen einen Webserver laufen lassen, der mit einer PHP-Installation
       verbunden ist. Sie können auf die Ausgabe Ihres PHP-Programms mittels
       eines Webbrowsers zugreifen, der die Seite mithilfe des Servers darstellt.
       Dieses gesamte Szenario können Sie auf Ihrem heimischen Rechner laufen
       lassen, wenn Sie erst einmal mit PHP-Programmierung experimentieren
       wollen. Weitere Informationen finden Sie im Abschnitt <link
       linkend="install">Installation</link>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Kommandozeilenprogrammierung. Es ist auch möglich PHP-Skripte
       schreiben, die ohne einen Server oder Browser arbeiten können. Sie
       benötigen dafür nur den PHP-Parser. Die Art der Nutzung ist ideal
       für Programme, die regelmäßig mitels cron (auf *nix oder Linux) oder
       dem Task Scheduler (unter Windows) ausgeführt werden. Die Skripte
       können außerdem verwendet werden, um einfache Textprozessierung
       auszuführen. Weitere Informationen dazu finden Sie im
       Abschnitt <link linkend="features.commandline">Verwendung von PHP auf
       der Eingabezeile</link>.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Schreiben von Desktop-Applikationen. PHP ist wahrscheinlich
       nicht die allerbeste Sprache, um Desktop-Anwendungen mit grafischer
       Oberfläche zu schreiben, aber wenn Sie PHP sehr gut kennen und einige
       weiterführende PHP-Features in Ihren clientseitigen Applikationen nutzen
       möchten, können Sie PHP-GTK nutzen, um derartige Programme zu schreiben.
       Auf diese Art haben Sie auch die Möglichkeit, plattformübergreifende
       Applikationen zu schreiben. PHP-GTK ist eine Erweiterung von PHP, die in
       der Hauptdistribution nicht enthalten ist. Sollten Sie daran interessiert
       sein, besuchen Sie die <link xlink:href="&url.php.gtk;">PHP-GTK
       Website</link>.
      </simpara>
     </listitem>
    </itemizedlist>
   </para>
   <para>
    PHP kann auf allen gängigen Betriebssystemen verwendet werden, inkl.
    Linux, vielen Unix-Varianten (inkl. HP-UX, Solaris und OpenBSD),
    Microsoft Windows, Mac OS X, RISC OS, und wahrscheinlich anderen.
    PHP unterstützt auch die meisten der heute gebräuchlichen Webserver.
    Dies umfasst Apache, Microsoft Internet Information Server,
    Personal Web Server, Netscape- und iPlanet-Server, Oreilly
    Website Pro-Server, Caudium, Xitami, OmniHTTPd und viele andere.
    Für den Großteil der Server bietet PHP ein eigenes Modul, für die
    anderen, die den CGI-Standard unterstützen, kann PHP als CGI-Prozessor
    arbeiten.
   </para>
   <para>
    So haben Sie die Freiheit, PHP auf dem Betriebssystem und dem Webserver
    Ihrer Wahl laufen zu lassen. Weiterhin können Sie je nach Vorliebe
    prozedural oder objektorientiert programmieren oder eine Mischung aus
    beidem verwenden. Auch wenn in PHP 4 noch nicht jedes Standard-OOP-Feature
    implementiert ist, sind viele Codebibliotheken und große Applikationen
    (unter anderem die PEAR-Bibliothek) bereits ausschließlich objektorientiert
    programmiert. Mit PHP 5 werden die objektorientierten Schwächen von PHP 4
    behoben und ein vollständiges Objektmodell eingeführt.
   </para>
   <para>
    Mit PHP sind Sie nicht auf die Ausgabe von HTML beschränkt. Seine
    Fähigkeiten umfassen auch das dynamische Generieren von Bildern,
    PDF-Dateien und Flashanimationen (mittels libswf und Ming). Sie
    können auch leicht jede Art von Text, wie XHTML oder irgendeine
    andere XML Datei, ausgeben. PHP kann diese Dateien automatisch
    generieren und im Dateisystem speichern anstatt diese nur
    auszugeben. Auf diese Weise lässt sich ein serverseitiger Cache Ihrer
    dynamischen Inhalte erstellen.
   </para>
   <para>
    Vielleicht die größte und bemerkenswerteste Stärke von PHP ist
    seine Unterstützung für eine breite Masse von Datenbanken. Eine
    datenbankgestützte Website zu erstellen ist unglaublich
    einfach. Die folgenden Datenbanken werden zur Zeit unterstützt:
    <blockquote>
     <simplelist columns="3">
      <member>Adabas D</member>
      <member>dBase</member>
      <member>Empress</member>
      <member>FilePro (nur Lesezugriff)</member>
      <member>Hyperwave</member>
      <member>IBM DB2</member>
      <member>Informix</member>
      <member>Ingres</member>
      <member>InterBase</member>
      <member>FrontBase</member>
      <member>mSQL</member>
      <member>Direct MS-SQL</member>
      <member>MySQL</member>
      <member>ODBC</member>
      <member>Oracle (OCI7 und OCI8)</member>
      <member>Ovrimos</member>
      <member>PostgreSQL</member>
      <member>Solid</member>
      <member>SQLite</member>
      <member>Sybase</member>
      <member>Velocis</member>
      <member>Unix dbm</member>
     </simplelist>
    </blockquote>
    Wir haben auch eine Extension zur Datenbankabstraktion (names PDO), welche
    Ihnen die transparente Verwendung irgendeiner von dieser Erweiterung
    unterstützten Datenbank erlaubt. Desweiteren unterstützt PHP ODBC, den
    Open Database Connection Standard, mit welchem Sie sich mit jeder
    anderen Datenbank verbinden können, die diesen weltweiten Standard
    unterstützt.
   </para>
   <para>
    PHP unterstützt auch die Kommunikation mit anderen Services, welche
    Protokolle wie LDAP, IMAP, SNMP, NNTP, POP3, HTTP, COM (auf Windows)
    und unzählige andere unterstützen. Sie können auch einfache
    Netzwerk-Sockets öffnen und unter Verwendung irgendeines anderen Protokolls
    kommunizieren. PHP unterstützt auch WDDX (Web Distributed Data
    Exchange) zum Austausch komplexer Daten zwischen Programmiersprachen.
    Da wir gerade vom Zusammenwirken sprechen: PHP unterstützt auch die
    Instantiierung von Java-Objekten und deren transparente Verwendung als
    PHP-Objekte. Sie können auch unsere CORBA-Erweiterung verwenden, um auf
    entfernte Objekte zuzugreifen.
   </para>
   <para>
    PHP verfügt über äußerst hilfreiche Textverarbeitungsfunktionen, von
    den regulären Ausdrücken (POSIX erweitert oder Perl) bis zum Parsen
    von XML-Dokumenten. Für den Zugriff und das Parsen von XML-Dokumenten
    unterstützt PHP 4 die Standards SAX und DOM. Sie können außerdem die
    XSLT-Extension verwenden, um XML-Dokumente zu transformieren.
    PHP 5 vereinheitlicht all diese XML-Extensions auf der soliden
    Basis der libxml2-Bibliothek und erweitert diese Funktionalität
    durch die hinzugefügte Unterstützung von SimpleXML and XMLReader.
   </para>
   <para>
    Es gibt noch viele andere interessante Erweiterungen, wie mnoGoSearch
    für Suchmaschinen, die IRC-Gateway-Funktionen, viele
    Komprimierungswerkzeuge (gzip, bz2, zip), Kalenderumrechnung,
    Übersetzung uws.
   </para>
   <para>
    Wie Sie sehen können, reicht diese Seite nicht aus, um alle Möglichkeiten
    und Vorteile von PHP aufzulisten. Lesen Sie im Abschnitt <link
    linkend="install">Installation</link> weiter und konsultieren Sie
    auch die <link linkend="funcref">Funktionsreferenz</link> für weitere
    Erläuterungen der einzelnen hier erwähnten Erweiterungen.
   </para>
  </section>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
