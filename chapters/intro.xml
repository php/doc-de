<?xml version="1.0" encoding="iso-8859-1"?>
 <chapter id="introduction">
  <title>Einleitung</title>

  <sect1 id="intro-whatis">
   <title>Was ist PHP?</title>
   <simpara>
    PHP (offiziell: "PHP: Hypertext Preprocessor") ist eine
    server-seitige, in HTML eingebettete Skriptsprache.
   </simpara>
   <para>
    Hört sich einfach an, aber was heißt es genau? Ein Beispiel:
   </para>
   <para>
    <example>
     <title>Ein einleitendes Beispiel </title>
     <programlisting role="php">
&lt;html>
    &lt;head>
        &lt;title>Beispiel&lt;/title>
    &lt;/head>
    &lt;body>
        &lt;?php echo "Hallo, ich bin ein PHP-Skript!"; ?>
    &lt;/body>
&lt;/html>
     </programlisting>
    </example>
   </para>
   <para>
    Dieser Skript unterscheidet sich von einem CGI-Skript, der in
    einer Sprache wie Perl oder C geschrieben wurde -- anstatt ein
    Programm mit vielen Anweisungen zur Ausgabe von HTML zu schreiben,
    schreibt man einen HTML-Code mit einigen eingebetteten
    Anweisungen, um etwas auszuführen (z.B. um - wie oben - Text
    auszugeben). Der PHP-Code steht zwischen speziellen <link
    linkend="language.basic-syntax.phpmode">Anfangs- und
    Schlusstags</link>, mit denen man in den PHP-Modus und zurück
    wechseln kann.
   </para>
   <para>
    Was PHP von client-seitigen Sprachen wie Javaskript unterscheidet,
    ist dass der Code vom Server ausgeführt wird. Sollten sie einen
    Skript wie den obigen auf ihrem Server ausführen, würde der
    Besucher nur das Ergebnis empfangen, ohne die Möglichkeit
    zu haben, herauszufinden, wie der zugrundeliegende Code
    aussieht. Sie können ihren Webserver auch anweisen, alle ihre
    HTML-Dateien mit PHP zu parsen, denn dann gibt es wirklich nichts,
    das dem Benutzer sagt, was sie in petto haben.
   </para>
  </sect1>

  <sect1 id="intro-whatcando">
   <title>Was kann PHP?</title>
   <para>
    Prinzipiell kann PHP alles, was jedes andere CGI Programm kann,
    also z. B. Formulardaten sammeln, dynamischen Inhalt für Websites
    generieren oder Cookies senden und empfangen.
   </para>
   <para>
    Vielleicht die größte und bemerkenswerteste Stärke von PHP ist
    seine Unterstützung für eine breite Masse von Datenbanken. Eine
    datenbank-gestützte Website zu erstellen ist unglaublich
    einfach. Die folgenden Datenbanken werden zur Zeit unterstützt:
    <blockquote>
     <simplelist columns="3">
      <member>Adabas D</member>
      <member>dBase</member>
      <member>Empress</member>
      <member>FilePro (nur Lesezugriff)</member>
      <member>IBM DB2</member>
      <member>Informix</member>
      <member>Ingres</member>
      <member>InterBase</member>
      <member>FrontBase</member>
      <member>mSQL</member>
      <member>MS SQL</member>
      <member>MySQL</member>
      <member>ODBC</member>
      <member>Oracle (OCI7 und OCI8)</member>
      <member>PostgreSQL</member>
      <member>Solid</member>
      <member>Sybase</member>
      <member>Velocis</member>
      <member>Unix dbm</member>
     </simplelist>
    </blockquote>
   </para>
   <para>
    PHP unterstützt auch die Kommunikation mit anderen Diensten durch
    Protokolle wie IMAP, SNMP, NNTP, POP3 oder auch HTTP. Sie können
    auch Netzwerk-Sockets direkt benutzen und mit Hilfe anderer
    Protokolle interagieren.
   </para>
<!--
   <figure>
    <title>Interne Struktur</title>
    <graphic width="400" fileref="../images/php3_internal_structure.gif"/>
   </figure>
   <figure>
    <title>Request Schema</title>
    <graphic width="300" fileref="../images/php3_request_scheme.gif"/>
   </figure>
-->
  </sect1>

  <sect1 id="intro-history">
   <title>Eine kurze Entstehungsgeschichte von PHP</title>
   <simpara>
    PHP wurde irgendwann im Herbst des Jahres 1994 von &link.rasmus;
    konzipiert. Frühe, nicht veröffentlichte Versionen wurden auf
    seiner Homepage genutzt, um die Leser seiner Online-Bewerbung
    festzustellen. Die erste Version, die von anderen genutzt wurde,
    war Anfang 1995 verfügbar und wurde unter dem Namen "Personal Home
    Page Tools" bekannt. Sie bestand aus einem extrem simplifizierten
    Parser, der ausschließlich einige spezielle Makros verstand, und
    einigen Werkzeugen, die damals häufig auf Homepages genutzt wurden:
    ein Gästebuch, ein Counter und einige andere. Der Parser wurde
    Mitte 1995 neu programmiert und in PHP/FI umbenannt. Das FI kam
    von einem anderen Paket, dass Rasmus geschrieben hatte und das
    HTML-Formulardaten interpretierte. Er kombinierte die "Personal
    Home Page Tools"-Skripts mit dem "Formular-Interpreter", fügte
    noch mSQL-Unterstützung hinzu und PHP/FI war geboren. PHP/FI wuchs
    mit unglaublicher Geschwindigkeit und immer mehr Leute begannen
    Code beizusteuern.
   </simpara>
   <simpara>
    Es ist schwierig, harte Fakten zu liefern, aber es wird
    angenommen, dass PHP/FI Ende 1996 für mindestens 15.000 Websites
    auf ganzen Welt genutzt wurde. Mitte 1997 ist diese Zahl auf über
    50.000 angewachsen.  Um die gleiche Zeit gab es auch Veränderungen
    in der Weiterentwicklung von PHP. Es wandelte sich von Rasmus
    kleinem Privatprojekt, zu dem eine Handvoll Programmierer
    beigetragen hatte, zu einem wesentlich besser organisierten
    Anstrengung eines Teams. Von Zeev Suraski und Andi Gutmans wurde
    der Parser von Grund auf neu geschrieben und bildete die Basis für
    PHP Version 3.  Eine Menge des Codes der PHP/FI-Werkzeuge wurde
    auf PHP3 portiert und eine Menge wurde komplett neu erstellt.
   </simpara>
   <simpara>
    Heute (Ende 1999) wird PHP/FI oder PHP3 mit einigen kommerziellen
    Produkten wie z. B. dem StrongHold Webserver von C2 und RedHat
    Linux vertrieben. Eine vorsichtige Schätzung, basierend auf einer
    Hochrechnung der Zahlen, die von NetCraft veröffentlicht wurden,
    sagt aus, dass PHP für 150.000 Websites auf der ganzen Welt
    genutzt wird. Um das in Relation zu setzen: das sind mehr Sites,
    als auf Netscapes Flaggschiff, dem "Enterprise
    Server", laufen.
   </simpara>
<!--
   <figure>
    <title>NetCraft Webserver Survey</title>
    <graphic fileref="&url.php.stats;"/>
   </figure>
-->
   <simpara>
    Während das hier geschrieben wird, ist PHP auf dem Weg zur
    nächsten Generation, welche die mächtige <ulink
    url="&url.zend;">Zend</ulink> Scripting-Engine nutzen
    wird, um höhere Geschwindigkeit zu erreichen, und auch mit anderen
    Servern als dem zur Zeit unterstützten Apache Server als natives
    Modul laufen wird.
   </simpara>
  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
