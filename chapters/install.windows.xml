<?xml version="1.0" encoding="iso-8859-1"?>
<!-- EN-Revision: 1.25 Maintainer: tom Status: ready -->
  <sect1 id="install.windows">
   <title>Installation auf Windows Systemen</title>
   <para>
    Dieser Abschnitt behandelt Windows 98/Me und Windows NT/2000/XP
    PHP läuft nicht auf 16 Bit-Plattformen wie z.B. Windows 3.1, und
    manchmal sprechen wir bei den unterstützten Plattformen von Win32.
    Seit PHP 4.3.0 wird auch Windows 95 nicht mehr unterstützt.
   </para>
   <para>
    Es gibt zwei Wege PHP für Windows zu installieren: entweder
    <link linkend="install.windows.manual">manuell</link>, oder mittels
    dem <link linkend="install.windows.installer">InstallShield</link>
    Installer.
   </para>
   <para>
    Wenn Sie Microsoft Visual Studio besitzen, können Sie auch den 
    Source Code von PHP selbst <link
    linkend="install.windows.build">kompilieren</link>.
   </para>
   <para>
    Haben Sie PHP erst einmal auf Ihrem Windows System installiert,
    können Sie als Erweiterung der Funktionalität auch verschiedene
    <link linkend="install.windows.extensions">Erweiterungen laden</link>.
   </para>
   
   <sect2 id="install.windows.installer">
    <title>Windows InstallShield</title>
    
    <para>
     Der auf der Downloadseite <ulink
     url="&url.php.downloads;">&url.php.downloads;</ulink> erhältliche
     Windows PHP Installer installiert die <emphasis>CGI Version</emphasis>
     von <literal>PHP</literal>, und konfiguriert auch die Webserver IIS,
     PWS, und Xitami.
    </para>
    <note>
     <para>
      Beachten Sie bitte, dass der InstallShield Installer zwar eine einfache
      Art der Installation von <literal>PHP</literal> ist, gleichzeitig aber
      auch in verschiedenen Aspekten eingeschränkt ist, wie z.B. ein
      automatisches Setup von Erweiterungen nicht unterstützt wird. Das gesamte
      Angebot an unterstützten Erweiterungen ist nur verfügbar, wenn Sie die
      Binärdistribution im zip-Format herunterladen.
     </para>
    </note>
    
    <simpara>
     Installieren Sie Ihren gewünschten <acronym>HTTP</acronym> Server auf
     Ihrem System und stellen Sie sicher, dass er läuft.
    </simpara>
    
    <simpara>
     Starten Sie nun das Installationsprogramm, und folgen Sie den 
     Instruktionen des Installation Wizards. Es werden zwei 
     Installationsarten unterstützt: Standard bietet zweckmäßige 
     Standardeinstellungen wo dies möglich ist, und Advanced (erweitert),
     welche die gewünschten Einstellungen während der Installation abfragt.
    </simpara>
    
    <simpara>
     Der Installation Wizard sammelt genug Informationen, um die &php.ini; zu
     erstellen, und den Webserver für den Einsatz von PHP zu konfigurieren.
     Für IIS und auch PWS auf Windows NT Workstation wird eine Liste mit den
     Knoten auf dem Server, sowie eine Liste mit den Script Mappings angezeigt
     aus welcher Sie die gewünschten Knoten auswählen können, auf denen PHP in
     die Script Mappings eingetragen werden soll. 
    </simpara>

    <simpara>
     Wenn die Installation fertig ist informiert Sie der Installer, ob Sie
     Ihr System oder den Server neu starten sollen, oder ob Sie einfach mit
     der Nutzung von PHP beginnen können.
    </simpara>
    
    <warning>
     <para>
      Seien Sie sich darüber im Klaren, dass dieses Setup von PHP nicht sicher
      ist. Wenn Sie ein sicheres Setup von PHP möchten, setzen Sie PHP manuell
      auf, und wählen jede Option sorgfältig aus. Dieses automatische Setup
      bietet Ihnen eine sofort lauffähige PHP Installation, ist jedoch nicht
      für den Einsatz auf Online-Servern gedacht.
     </para>
    </warning>
   
   </sect2>
   
   <sect2 id="install.windows.manual">
    <title>Manuelle Installationsschritte</title>
    <simpara>
     Diese Installationsanleitung hilft Ihnen, PHP auf Ihrem Windows 
     Webserver manuell zu installieren und zu konfigurieren. Laden Sie sich
     hierfür bitte die gezippte Distribution von der Downloadseite <ulink 
     url="&url.php.downloads;">&url.php.downloads;</ulink> herunter. Die
     Originalversion dieser Anleitung wurde von &link.bob; verfasst, welche
     Sie auf <ulink url="&url.win32install;">&url.win32install;</ulink> finden.
    </simpara>
    <para>
     Diese Anleitung unterstützt Sie bei der manuellen Installation für:
     <itemizedlist>
      <listitem>
       <para>
        Personal Web Server 3 und 4 oder neuer
       </para>
      </listitem>
      <listitem>
       <para>
        Internet Information Server 3 und 4 oder neuer
       </para>
      </listitem>
      <listitem>
       <para>
        Apache 1.3.x
       </para>
      </listitem> 
      <listitem>
       <para>
        OmniHTTPd 2.0b1 und höher
       </para>
      </listitem>
      <listitem>
       <para>
        Oreilly Website Pro
       </para>
      </listitem>
      <listitem>
       <para>
        Xitami
       </para>
      </listitem>
      <listitem>
       <para>
        Netscape Enterprise Server, iPlanet
       </para>
      </listitem>
     </itemizedlist>
    </para>
    <para>
     PHP 4 für Windows gibt es in zwei Varianten - ein CGI Modul (php.exe), 
     und verschiedene SAPI Module (z.B. php4isapi.dll). Letztere ist neu
     in PHP 4, und bietet eine signifikant höhere Performance, sowie neue
     Funktionalitäten. Zusätzlich gibt es eine CLI Version, die im Abschnitt
     <link linkend="features.commandline">Using PHP from the command
     line</link> näher beschrieben ist.
    </para>
    <warning>
     <simpara>
      Die Qualität der SAPI Module wurde in PHP 4.1 signifikant erhöht. In
      älteren Systemen könnte es vorkommen, dass beim Server Fehlermeldungen
      auftreten, oder dass andere Servermodule wie z.B. ASP nicht funktionieren.
     </simpara>
    </warning>
    <simpara>
     Wenn Sie eines der SAPI Module unter Windows 95 einsetzen möchten, holen
     Sie sich das DCOM Update von den <ulink url="&url.dcom.update;">Microsoft
     DCOM Seiten</ulink>. Für das ISAPI Modul wird ein ISAPI 4.0 kompatibler 
     Webserver benötigt (getestet wurden IIS 4.0, PWS 4.0 und IIS 5.0). 
     IIS 3.0 wird <emphasis>NICHT</emphasis> unterstützt. Wenn Sie gediegene 
     PHP Unterstützung wünschen, sollten Sie In diesem Fall den Windows NT 4.0 
     Option Pack mit IIS 4.0 downloaden.
    </simpara>
    <para>
     Die folgenden Schritte sollten vor den serverspezifischen Instruktionen
     an allen Installationen durchgeführt werden.
     <itemizedlist>
      <listitem>
       <simpara>
        Entpacken Sie die in der Distribution enthaltenen Dateien in ein
        Verzeichnis Ihrer Wahl. Wir empfehlen <filename>c:\php\</filename>.
        Sie sollten jedoch keinen Pfad wählen, in dem sich Leerzeichen
        befinden (z.B. c:\program files\php ist keine gute Idee), da
        sonst manche Webserver abstürzen könnten.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Stellen Sie sicher, dass die von PHP verwendeten DLLs gefunden
        werden können. Welche DLLs benötigt werden, hängt von dem 
        verwendeten Webserver ab, und ob Sie PHP als CGI- oder Server-Modul
        einsetzen. <filename>php4ts.dll</filename> wird immer verwendet.
        Wenn Sie ein Server-Modul benutzen (z.B. ISAPI oder Apache), dann
        brauchen Sie die entsprechende DLL des <filename>sapi</filename>
        Verzeichnisses. Wenn Sie PHP extension DLLs benutzen, benötigen 
        Sie diese ebenfalls. Um sicherzugehen, dass diese auch gefunden 
        werden, können Sie sie entweder in das Systemverzeichnis (z.B.
        <filename>winnt/system32</filename> oder 
        <filename>windows/system</filename>) kopieren, oder Sie können
        sie in das gleiche Verzeichnis stellen, in welchem sich auch die
        von Ihrem Webserver benutzte EXE- bzw. DLL-Datei befindet (z.B.
        <filename>php.exe</filename>, <filename>php4apache.dll</filename>).
       </simpara>
       <para>
        Die PHP Programmdatei, die SAPI Module, und einige Erweiterungen
        benötigen externe DLLs. Stellen Sie sicher, dass diese DLLs der 
        Distribution in einem Verzeichnis liegen, welches im Windows PATH
        liegt. Wenn Sie z.B. <literal>php_oci8.dll</literal> in der &php.ini;
        aktivieren, dann muss das Oracle Heimatverzeichnis im PATH sein, sodass
        PHP die <literal>oci.dll</literal> finden kann.
       </para>
       <para>
        Der einfachste Weg dazu ist, die nachstehenden Dateien in 
        Ihr Systemverzeichnis zu kopieren. Dieses heißt gewöhnlich:
        <simplelist>
         <member>
          <filename>c:\windows\system</filename> auf Windows 9x/ME
         </member>
         <member>
          <filename>c:\winnt\system32</filename> auf Windows NT/2000
         </member>
         <member>
          <filename>c:\windows\system32</filename> auf Windows XP
         </member>
        </simplelist>
        Die zu kopierenden Dateien sind:
        <simplelist>
         <member>
          <filename>php4ts.dll</filename>. Wenn sie dort bereits existiert, 
          überschreiben Sie sie.
         </member>
         <member>
          Die Dateien in dem Verzeichnis &apos;dlls&apos; Ihrer 
          Distribution. Sollten diese Dateien bereits auf Ihrem System 
          installiert sein, überschreiben Sie diese nur, wenn etwas 
          nicht korrekt läuft (Vor dem Überschreiben empfehlen wir ein
          Backup, oder verschieben diese Dateien in ein anderes 
          Verzeichnis - nur für den Fall dass etwas schiefgeht).
         </member>
        </simplelist>
       </para>
       <para>
        Holen Sie sich die letzte Version der Microsoft Data Access
        Components (MDAC) für Ihre Plattform, speziell wenn Sie Windows
        9x/NT4 benutzen. MDAC finden Sie unter <ulink 
        url="&url.mdac;">&url.mdac;</ulink>.
       </para>
      </listitem>
      <listitem>
       <para>
        Kopieren Sie die gewünschte ini Datei (siehe unten) in Ihr 
        &apos;%WINDOWS%&apos; Verzeichnis auf Windows 9x/ME, oder in Ihr
        &apos;%SYSTEMROOT%&apos; Verzeichnis unter Windows NT/2000/XP,
        und benennen Sie sie in &php.ini; um. Ihr &apos;%WINDOWS%&apos;
        oder &apos;%SYSTEMROOT%&apos; Verzeichnis ist normalerweise:
        <simplelist>
         <member><filename>c:\windows</filename> auf Windows 9x/ME/XP</member>
         <member><filename>c:\winnt</filename> oder <filename>c:\winnt40</filename>
          auf NT/2000 Servern</member>
        </simplelist>
       </para>  
       <para>
        In der Zip-Datei befinden sich zwei ini Dateien: 
        <filename>php.ini-dist</filename> und
        <filename>php.ini-optimized</filename>. Wir empfehlen, die
        <filename>php.ini-optimized</filename> zu verwenden, da in 
        dieser Datei die Default-Einstellungen für Performance und
        Sicherheit optimiert sind. Am besten ist es, all die
        <link linkend="configuration.file">ini Einstellungen</link>
        selbst manuell vorzunehmen. Wenn Sie die bestmögliche Sicherheit
        erreichen wollen ist dies der Weg für Sie, auch wenn PHP mit den
        Standardeinstellungen gut läuft.
       </para>
      </listitem>
      <listitem>
       <para>
        Editieren Sie Ihre Datei &php.ini;:
        <itemizedlist>
         <listitem>
          <simpara>
           Tragen Sie bei 'extension_dir' Ihr PHP Installationsverzeichnis 
           oder den Pfad zu Ihren <filename>php_*.dll</filename> Dateien ein.
           Bitte vergessen Sie nicht den letzten Rückstrich (Backslash).
           z.B.: <filename>c:\php\extensions\</filename>
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           Wenn Sie OmniHTTPd benutzen, überspringen Sie diesen Schritt.
           Geben Sie bei 'doc_root' das Dokumentenverzeichnis des Webservers 
           an. z.B.: <filename>c:\apache\htdocs</filename> oder
           <filename>c:\webroot</filename>.
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           Wählen Sie nun die Erweiterungen (Module) aus, die beim Start von
           PHP geladen werden sollen. Lesen Sie in <link 
           linkend="install.windows.extensions">Windows Erweiterungen</link>
           wie Sie eine davon aktivieren können, und welche bereits inkludiert
           sind. Bei einer Neuinstallation ist es ratsam, erst PHP zu
           installieren und zu testen, bevor Sie Erweiterungen in der 
           &php.ini; aktivieren.
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           Bei PWS und IIS können Sie auch <filename>browscap.ini</filename>
           auf 
           <filename>c:\windows\system\inetsrv\browscap.ini</filename> unter
           Windows 9x/Me,
           <filename>c:\winnt\system32\inetsrv\browscap.ini</filename> unter
           NT/2000, und
           <filename>c:\windows\system32\inetsrv\browscap.ini</filename>
           unter XP.
           setzen.
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           Beachten Sie, dass das <filename>mibs</filename> Verzeichnis
           in der Windows Distribution Dateien für die SNMP Unterstützung
           enthält. Dieses Verzeichnis sollte nach 
           <filename>DRIVE:\usr\mibs</filename> verschoben werden
           (<filename>DRIVE:</filename> ist das Laufwerk, auf dem PHP
           installiert ist).
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           Wenn Sie NTFS auf Windows NT, 2000 oder XP benutzen, stellen Sie
           sicher, dass der Benutzer unter dem der Webserver läuft, eine
           Leseberechtigung auf die &php.ini; hat (z.B. können Sie diese
           für alle zum Lesen freigeben).
          </simpara>
         </listitem>
        </itemizedlist>
       </para>
      </listitem>
      <listitem>
       <para>
        Bei PWS erteilen Sie das Recht zum Ausführen auf das
        Web-Hauptverzeichnis:
        <itemizedlist>
         <listitem>
          <simpara>
           Starten Sie den PWS Web Manager
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           Editieren Sie die Einstellungen des "Home"-Verzeichnisses
          </simpara>
         </listitem>
         <listitem>
          <simpara>
           Wählen Sie das "execute" Auswahlkästchen aus
          </simpara>
         </listitem>
        </itemizedlist>
       </para>
      </listitem>
      

     </itemizedlist>
    </para>
   </sect2>

   <sect2 id="install.windows.build">
    <title>Den Source kompilieren</title>
    <para>
     Bevor wir beginnen lohnt es sich, folgende Frage zu beantworten:
     "Warum ist das Kompilieren unter Windows so schwer?" Zwei Gründe
     drängen sich auf:
    </para>
    <orderedlist>
     <listitem>
      <simpara>
       Windows genießt (noch) keine große Gemeinschaft von Entwicklern
       welche auch bereit sind, deren Sourcecode frei zur Verfügung zu 
       stellen. Als Ergebnis wurden die nötigen Investitionen in die
       für solche Entwicklungen nötige Infrastruktur nicht getätigt.
       Das meiste was verfügbar ist, wurde durch die Portierung der
       nötigen Werkzeuge von Unix möglich gemacht. Seien Sie deshalb 
       nicht überrascht, wenn manches aus diesem Erbe von Zeit zu Zeit
       durchscheint.
      </simpara>
     </listitem>
     <listitem>
      <simpara>
       Fast alle der folgenden Instruktionen sind von der Art "Einstellen 
       und vergessen". Deshalb lehnen Sie sich zurück, und folgen den 
       nachstehenden Instruktionen so gewissenhaft wie möglich.
      </simpara>
     </listitem>
    </orderedlist>

    <sect3 id="install.windows.build.requirement">
     &reftitle.required;
     <para>
      Um <literal>PHP</literal> kompilieren und erstellen zu können,
      benötigen eine Microsoft Entwicklungsumgebung. Microsoft Visual
      C++ 6.0 wird empfohlen. Um die heruntergeladenen Dateien entpacken
      zu können, brauchen Sie ein Programm zum Dekomprimieren. Sollten
      Sie über kein derartiges Programm verfügen, erhalten Sie eine freie
      Version von <ulink url="&url.infozip;">InfoZip</ulink>.
     </para>
     <para>
      Bevor Sie beginnen, müssen Sie einiges downloaden...
     </para>
      <itemizedlist>
       <listitem>
        <simpara>
        ..die win32 buildtools von der <literal>PHP</literal> Seite auf
        <ulink url="&url.win32.buildtools;">&url.win32.buildtools;</ulink>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        ..den Sourcecode für die von <literal>PHP</literal> benutzte DNS
        Namensauflösung unter <ulink url="&url.win32.dnsresolver;">
        &url.win32.dnsresolver;</ulink>. Dies ist ein Ersatz für die
        in <filename>win32build.zip</filename> enthaltene Bibliothek
        <filename>resolv.lib</filename>.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Sollten Sie <literal>PHP</literal> als ein Apache-Modul kompilieren
        wollen, benötigen Sie auch die <ulink url="&url.apache.source;">Apache
        Sourcecodes</ulink>.
       </simpara>
      </listitem>
     </itemizedlist>
     <simpara>
      Letztendlich benötigen Sie noch die Sourcecodes von PHP 4 selbst.
      Sie erhalten die letzte Entwicklerversion mittels <ulink
      url="&url.php.anoncvs;">anonymen CVS</ulink>, einem sog. <ulink
      url="&url.php.snapshots;">Snapshot</ulink>, oder dem <ulink
      url="&url.php.downloads;">Sourcecode</ulink> der letzten offiziellen
      Version.
     </simpara>
    </sect3>

    <sect3 id="install.windows.build.install">
     <title>Alles zusammenfügen</title>
     <para>
      Nach dem Download der benötigten Pakete dekomprimieren Sie diese an
      einer geeigneten Stelle.
      <itemizedlist>
       <listitem>
        <simpara>
         Erstellen Sie ein Arbeitsverzeichnis, in dem sich nach dem Dekomprimieren
         alle Dateien befinden werden, z.B. <filename>c:\work</filename>.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Erstellen Sie das Verzeichnis <filename>win32build</filename> unter
         Ihrem Arbeitsverzeichnis (<filename>c:\work</filename>), und dekomprimieren
         Sie die <filename>win32build.zip</filename> hinein.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Erstellen Sie das Verzeichnis <filename>bindlib_w32</filename> unter
         Ihrem Arbeitsverzeichnis (<filename>c:\work</filename>), und dekomprimieren
         Sie die <filename>bindlib_w32.zip</filename> hinein.
        </simpara>
       </listitem>
       <listitem>
        <simpara>
         Dekomprimieren Sie den PHP Sourcecode in Ihr Arbeitsverzeichnis
         (<filename>c:\work</filename>).
        </simpara>
       </listitem>
      </itemizedlist>
      Diesen Schritten folgend, sollte Ihre Verzeichnisstruktur wie folgt aussehen:
      <informalexample>
       <programlisting>
<![CDATA[

+--c:\work
|  |
|  +--bindlib_w32
|  |  |
|  |  +--arpa
|  |  |
|  |  +--conf
|  |  |
|  |  +--...
|  |
|  +--php-4.x.x
|  |  |
|  |  +--build
|  |  |
|  |  +--...
|  |  |
|  |  +--win32
|  |  |
|  |  +--...
|  |
|  +--win32build
|  |  |
|  |  +--bin
|  |  |
|  |  +--include
|  |  |
|  |  +--lib

]]>
       </programlisting>
      </informalexample>
      Erstellen Sie das Verzeichnis <filename>c:\usr\local\lib</filename>, und
      kopieren Sie <filename>bison.simple</filename> von
      <filename>c:\work\win32build\bin</filename> nach
      <filename>c:\usr\local\lib</filename>.
     </para>
     <note>
      <simpara>
       Benutzer von <ulink url="&url.cygwin;">Cygwin</ulink> können den
       letzten auslassen. Eine entsprechend installierte Cygwin Umgebung
       bietet die erforderlichen Dateien <filename>bison.simple</filename>
       und <filename>bison.exe</filename>.
      </simpara>
     </note>
    </sect3>

    <sect3 id="install.windows.build.configure">
     <title>MVC ++ konfigurieren</title>
      <para>
       Der nächste Vorbereitungsschritt ist die Konfiguration von MVC ++.
       Starten Sie Microsoft Visual C++, und wählen Sie im Menü Tools =&gt;
       Options aus. Wählen Sie in dem Dialog den Verzeichnis-Tab aus.
       Wechseln Sie zu Executables, Includes, and Library files. Ihre
       Einträge sollten wie folgt aussehen:
       <itemizedlist>
        <listitem>
         <simpara>
          Executable files: <filename>c:\work\win32build\bin</filename>,
          Cygwin users: <filename>cygwin\bin</filename>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          Include files: <filename>c:\work\win32build\include</filename>
         </simpara>
        </listitem>
         <listitem>
          <simpara>
          Library files: <filename>c:\work\win32build\lib</filename>
         </simpara>
        </listitem>
       </itemizedlist>
      </para>
    </sect3>

    <sect3 id="install.windows.build.resolvlib">
     <title>resolv.lib erstellen</title>
      <para>
       Sie müssen die <filename>resolv.lib</filename> Bibliothek erstellen.
       Entscheiden Sie, ob Sie die debug symbols verfügbar haben möchten
       (bindlib - Win32 Debug) oder nicht (bindlib - Win32 Release).
       Erstellen Sie die folgende Konfiguration:
       <itemizedlist>
        <listitem>
         <simpara>
          Als Benutzer des GUI starten Sie VC++ und wählen Datei =&gt; Arbeitsbereich
          öffnen aus, navigieren zu <filename>c:\work\bindlib_w32</filename>
          und selektieren <filename>bindlib.dsw</filename>. Dann wählen Sie
          Erstellen =&gt; Setze aktuelle Konfiguration und die gewünschte
          Konfiguration aus. Zum Schluss wählen Sie Erstellen =&gt; Rebuild All.
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          Als Benutzer der Kommandozeile stellen Sie sicher, dass Sie entweder
          die C++ Umgebungsvariablen registriert, oder <command>vcvars.bat</command>
          ausgeführt haben. Dann führen Sie eines der folgenden Kommandos aus:
         </simpara>
         <itemizedlist>
          <listitem>
           <simpara>
            <userinput>msdev bindlib.dsp /MAKE "bindlib - Win32 Debug"</userinput>
           </simpara>
          </listitem>
          <listitem>
           <simpara>
            <userinput>msdev bindlib.dsp /MAKE "bindlib - Win32 Release"</userinput>
           </simpara>
          </listitem>
         </itemizedlist>
        </listitem>
       </itemizedlist>
       Nun sollten Sie eine verwendbare <filename>resolv.lib</filename> in
       Ihrem <filename>c:\work\bindlib_w32\Debug</filename> oder
       <filename>Release</filename> Unterverzeichnis haben. Kopieren Sie diese
       Datei nach <filename>c:\work\win32build\lib</filename>, und überschreiben
       Sie die dort vorhandene Datei mit dem selben Namen.
      </para>
    </sect3>

    <sect3 id="install.windows.build.compile">
     <title>Kompilieren</title>
     <simpara>
      Der einfachste Weg zu beginnen, ist das Erstellen der CGI Version.
     </simpara>
     <itemizedlist>
      <listitem>
       <simpara>
        Wenn Sie das GUI benutzen: Starten Sie VC++, selektieren Sie 
        Datei =&gt; Arbeitsbereich öffnen, und wählen Sie
        <filename>c:\work\php-4.x.x\win32\php4ts.dsw</filename> aus.
        Dann selektieren Sie Erstellen =&gt; Setze aktuelle Konfiguration,
        und wählen die gewünschte Konfiguration aus (entweder
        <literal>php4ts - Win32 Debug_TS</literal> oder
        <literal>php4ts - Win32 Release_TS</literal>). Letztendlich wählen 
        Sie Erstellen =&gt; Rebuild All.
       </simpara>
      </listitem>
      <listitem>
       <simpara>
        Wenn Sie die Kommandozeile benutzen stellen Sie sicher, dass
        die C++ Environmentvariablen registriert sind oder starten Sie
        <command>vcvars.bat</command>, und führen in dem Verzeichnis
        <filename>c:\work\php-4.x.x\win32</filename> eines der folgenden 
        Kommandos aus:
       </simpara>
       <itemizedlist>
        <listitem>
         <simpara>
          <userinput>msdev php4ts.dsp /MAKE "php4ts - Win32 Debug_TS"</userinput>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
          <userinput>msdev php4ts.dsp /MAKE "php4ts - Win32 Release_TS"</userinput>
         </simpara>
        </listitem>
        <listitem>
         <simpara>
         Nun sollten Sie entweder in Ihrem <filename>Debug_TS</filename> 
         oder <filename>Release_TS</filename> Unterverzeichnis eine
         verwendbare <filename>php.exe</filename> haben.
         </simpara>
        </listitem>
       </itemizedlist>
      </listitem>
     </itemizedlist>
     <simpara>
      Durch editieren der <filename>main/config.win32.h.in</filename> ist es
      möglich, kleinere Adaptierungen zum Prozess des Erstellens vorzunehmen.
      So können Sie z.B. die inkludierten Erweiterungen, den Ort der &php.ini;,
      etc. ändern.
     </simpara>
     <simpara>
      Als nächstes möchten Sie vielleicht die CLI Version erstellen, die für
      den Einsatz auf der Kommandozeile konzipiert wurde (<link
      linkend="features.commandline">PHP from the command line</link>). Die
      Schritte sind die gleichen wie bei der CGI Version, außer dass Sie
      die Projektdateien <literal>php4ts_cli - Win32 Debug_TS</literal> bzw.
      <literal>php4ts_cli - Win32 Release_TS</literal> auswählen müssen.
      Nach dem erfolgreichen Kompilieren finden Sie die <filename>php.exe</filename>
      entweder in dem Verzeichnis <filename>Release_TS\cli\</filename> oder in
      <filename>Debug_TS\cli\</filename>.
     </simpara>
     <note>
      <simpara>
       Wenn Sie PEAR und das komfortable Installationsprogramm benutzen möchten,
       ist das CLI-SAPI erforderlich. Weitere Informationen zu PEAR und dem
       Installationsprogramm finden Sie in der Dokumentation auf der <ulink
       url="&url.php.pear;manual/">PEAR</ulink> Webseite.
      </simpara>
     </note>
     <simpara>
      Um das SAPI Modul <filename>php4isapi.dll</filename> zur Integration von
      PHP mit Microsoft IIS zu erstellen, setzen Sie aktive Konfiguration auf
      <filename>php4isapi-wasimmer-config</filename>, und kompilieren Sie die
      gewünschte dll.
     </simpara>
    </sect3>
   </sect2>
   
   <sect2 id="install.windows.extensions">
    <title>Installation von Windows Erweiterungen</title>
    <para>
     Sind PHP und ein Webserver einmal auf Windows installiert, möchten
     Sie vielleicht einige Erweiterungen mit zusätzlicher Funktionalität 
     installieren. Die folgende Tabelle beschreibt einige der verfügbaren
     Erweiterungen. Sie können Erweiterungen auswählen, welche beim Start 
     von PHP geladen werden, indem Sie das Kommentarzeichen (';') in den 
     entsprechenden 'extension=php_*.dll' Zeilen in der  &php.ini;
     entfernen. Sie können ein Modul mittels <function>dl</function> auch
     dynamisch laden.
    </para>
    <para>
     Die DLLs für PHP Erweiterungen enthalten als Präfix 'php_' (und 'php3_'
     in PHP 3), um Verwechslungen zwischen PHP Erweiterungen und deren
     unterstützenden Bibliotheken zu vermeiden.
    </para>
    <note>
     <para>
       In PHP 4.0.6 ist die Unterstützung für BCMath, Calendar, COM, FTP, 
       MySQL, ODBC, PCRE, Session, WDDX und XML <emphasis>inkludiert</emphasis>.
       Um diese Funktionen zu benutzen, brauchen Sie keine zusätzlichen 
       Erweiterungen zu laden. Eine Liste der bereits inkludierten Module
       befindet sich in der <filename>README.txt</filename> oder 
       <filename>install.txt</filename> Ihrer Distribution.
     </para>
    </note>

    <note>
     <para>
      Einige Erweiterungen benötigen externe DLLs, wovon bereits einige 
      im Verzeichnis &apos;dlls&apos; der PHP Distribution enthalten sind.
      Manche Erweiterungen benötigen jedoch DLLs, welche nicht in der PHP
      Distribution enthalten sind, wie z.B. Oracle (php_oci8.dll).
     </para>

     <para>
      Kopieren Sie die DLLs vom Verzeichnis &apos;dlls&apos; in Ihren 
      Windows PATH, gute Plätze sind:
      <simplelist>
       <member>c:\windows\system auf Windows 9x/Me</member>
       <member>c:\winnt\system32 auf Windows NT/2000</member>
       <member>c:\windows\system32 auf Windows XP</member>
      </simplelist>
      Sollten diese Dateien bereits auf Ihrem System installiert sein, 
      überschreiben Sie diese nur, wenn etwas nicht korrekt läuft 
      (Vor dem Überschreiben empfehlen wir ein Backup, oder verschieben
      diese Dateien in ein anderes Verzeichnis - nur für den Fall dass 
      etwas schiefgeht).
     </para>
    </note>

    <para>
     <table>
      <title>PHP Erweiterungen (Extensions)</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Erweiterung</entry>
         <entry>Beschreibung</entry>
         <entry>Anmerkungen</entry>
        </row>
       </thead>
                                                     
       <tbody>
  <row>
   <entry>php_bz2.dll</entry>
   <entry><link linkend="ref.bzip2">bzip2</link> Komprimierungsfunktionen</entry>
   <entry>Keine</entry>
  </row>
  <row>
   <entry>php_calendar.dll</entry>
   <entry><link linkend="ref.calendar">Kalender</link> Umwandlungsfunktionen</entry>
   <entry>Ist seit PHP 4.0.3 integriert</entry>
  </row>
  <row>
   <entry>php_cpdf.dll</entry>
   <entry><link linkend="ref.cpdf">ClibPDF</link> Funktionen</entry>
   <entry>Keine</entry>
  </row>
  <row>
   <entry>php_crack.dll</entry>
   <entry><link linkend="ref.crack">Crack</link> Funktionen</entry>
   <entry>Keine</entry>
  </row>
  <row>
   <entry>php3_crypt.dll</entry>
   <entry>Verschlüsselungsfunktionen</entry>
   <entry>Keine</entry>
  </row>
  <row>
   <entry>php_ctype.dll</entry>
   <entry><link linkend="ref.ctype">ctype</link> Funktionen</entry>
   <entry>Keine</entry>
  </row>
  <row>
   <entry>php_curl.dll</entry>
   <entry><link linkend="ref.curl">CURL</link>, Client URL Bibliotheksfunktionen</entry>
   <entry>Benötigt libeay32.dll, ssleay32.dll (bundled)</entry>
  </row>
  <row>
   <entry>php_cybercash.dll</entry>
   <entry><link linkend="ref.cybercash">Cybercash</link> Zahlungssystem
   Funktionen</entry>
   <entry>Keine</entry>
  </row>
  <row>
   <entry>php_db.dll</entry>
   <entry><link linkend="ref.dbm">DBM</link> Funktionen</entry>
   <entry>Veraltet, verwenden Sie stattdessen DBA (php_dba.dll)</entry>
  </row>
  <row>
   <entry>php_dba.dll</entry>
   <entry><link linkend="ref.dba">DBA</link> Datenbank (dbm-style) Abstraktions-Funktionen</entry>
   <entry>Keine</entry>
  </row>
  <row>
   <entry>php_dbase.dll</entry>
   <entry><link linkend="ref.dbase">dBase</link> Funktionen</entry>
   <entry>Keine</entry>
  </row>
  <row>
   <entry>php3_dbm.dll</entry>
   <entry>Berkeley DB2 Bibliothek</entry>
   <entry>Keine</entry>
  </row>
  <row>
   <entry>php_domxml.dll</entry>
   <entry><link linkend="ref.domxml">DOM XML</link> Funktionen</entry>
   <entry>Benötigt libxml2.dll (bundled)</entry>
  </row>
  <row>
   <entry>php_dotnet.dll</entry>
   <entry><link linkend="ref.dotnet">.NET</link> Funktionen</entry>
   <entry>Keine</entry>
  </row>
  <row>
   <entry>php_exif.dll</entry>
   <entry><link linkend="function.read-exif-data">Liest EXIF</link>
    Headers einer JPEG-Grafik</entry>
   <entry>Keine</entry>
  </row>
  <row>
   <entry>php_fbsql.dll</entry>
   <entry><link linkend="ref.fbsql">FrontBase</link> Funktionen</entry>
   <entry>Keine</entry>
  </row>
  <row>
   <entry>php_fdf.dll</entry>
   <entry><link linkend="ref.fdf">FDF</link> Forms Data Format Funktionen.</entry>
   <entry>Benötigt fdftk.dll (bundled)</entry>
  </row>
  <row>
   <entry>php_filepro.dll</entry>
   <entry><link linkend="ref.filepro">filePro</link> Funktionen</entry>
   <entry>Nur Lesezugriff</entry>
  </row>
  <row>
   <entry>php_ftp.dll</entry>
   <entry><link linkend="ref.ftp">FTP</link> Funktionen</entry>
   <entry>Ist seit PHP 4.0.3 integriert</entry>
  </row>
  <row>
   <entry>php_gd.dll</entry>
   <entry><link linkend="ref.image">GD</link> Bibliotheksfunktionen</entry>
   <entry>Keine</entry>
  </row>
  <row>
   <entry>php_gd2.dll</entry>
   <entry><link linkend="ref.image">GD2</link> Bibliotheksfunktionen
    zur Bildmanipulation</entry>
   <entry>Keine</entry>
  </row>
  <row>
   <entry>php_gettext.dll</entry>
   <entry><link linkend="ref.gettext">Gettext</link> Funktionen</entry>
   <entry>Benötigt gnu_gettext.dll (bundled)</entry>
  </row>
  <row>
   <entry>php_hyperwave.dll</entry>
   <entry><link linkend="ref.hyperwave">HyperWave</link> Funktionen</entry>
   <entry>Keine</entry>
  </row>
  <row>
   <entry>php_iconv.dll</entry>
   <entry><link linkend="ref.iconv">ICONV</link> Zeichensatzumwandlung</entry>
   <entry>Benötigt iconv-1.3.dll (bundled)</entry>
  </row>
  <row>
   <entry>php_ifx.dll</entry>
   <entry><link linkend="ref.ifx">Informix</link> Funktionen</entry>
   <entry>Benötigt Informix Bibliotheken</entry>
  </row>
  <row>
   <entry>php_iisfunc.dll</entry>
   <entry>IIS Managementfunktionen</entry>
   <entry>keine</entry>
  </row>
  <row>
   <entry>php_imap.dll</entry>
   <entry><link linkend="ref.imap">IMAP</link> POP3 und NNTP Funktionen</entry>
   <entry>PHP 3: php3_imap4r1.dll</entry>
  </row>
  <row>
   <entry>php_ingres.dll</entry>
   <entry><link linkend="ref.ingres">Ingres II</link> Funktionen</entry>
   <entry>Benötigt Ingres II Bibliotheken</entry>
  </row>
  <row>
   <entry>php_interbase.dll</entry>
   <entry><link linkend="ref.ibase">InterBase</link> Funktionen</entry>
   <entry>Benötigt gds32.dll (bundled)</entry>
  </row>
  <row>
   <entry>php_java.dll</entry>
   <entry><link linkend="ref.java">Java</link> extension</entry>
   <entry>Benötigt jvm.dll (bundled)</entry>
  </row>
  <row>
   <entry>php_ldap.dll</entry>
   <entry><link linkend="ref.ldap">LDAP</link> Funktionen</entry>
   <entry>Benötigt libsasl.dll (bundled)</entry>
  </row>
  <row>
   <entry>php_mhash.dll</entry>
   <entry><link linkend="ref.mhash">Mhash</link> Funktionen</entry>
   <entry>Keine</entry>
  </row>
  <row>
   <entry>php_ming.dll</entry>
   <entry><link linkend="ref.ming">Ming</link> Funktionen für Flash</entry>
   <entry>Keine</entry>
  </row>
  <row>
   <entry>php_msql.dll</entry>
   <entry><link linkend="ref.msql">mSQL</link> Funktionen</entry>
   <entry>Benötigt msql.dll (bundled)</entry>
  </row>
  <row>
   <entry>php3_msql1.dll</entry>
   <entry>mSQL 1 Client</entry>
   <entry>unknown</entry>
  </row>
  <row>
   <entry>php3_msql2.dll</entry>
   <entry>mSQL 2 Client</entry>
   <entry>unknown</entry>
  </row>
  <row>
   <entry>php_mssql.dll</entry>
   <entry><link linkend="ref.mssql">MSSQL</link> Funktionen</entry>
   <entry>Benötigt ntwdblib.dll (bundled)</entry>
  </row>
  <row>
   <entry>php3_mysql.dll</entry>
   <entry><link linkend="ref.mysql">MySQL</link> Funktionen</entry>
   <entry>In PHP 4 integriert</entry>
  </row>
  <row>
   <entry>php3_nsmail.dll</entry>
   <entry>Netscape Mail Funktionen</entry>
   <entry>unknown</entry>
  </row>
  <row>
   <entry>php3_oci73.dll</entry>
   <entry>Oracle Funktionen</entry>
   <entry>unknown</entry>
  </row>
  <row>
   <entry>php_oci8.dll</entry>
   <entry><link linkend="ref.oci8">Oracle 8</link> Funktionen</entry>
   <entry>Benötigt Oracle 8 Client Bibliotheken</entry>
  </row>
  <row>
   <entry>php_openssl.dll</entry>
   <entry><link linkend="ref.openssl">OpenSSL</link> Funktionen</entry>
   <entry>Benötigt libeay32.dll (bundled)</entry>
  </row>
  <row>
   <entry>php_oracle.dll</entry>
   <entry><link linkend="ref.oracle">Oracle</link> Funktionen</entry>
   <entry>Benötigt Oracle 7 Client Bibliotheken</entry>
  </row>
  <row>
   <entry>php_pdf.dll</entry>
   <entry><link linkend="ref.pdf">PDF</link> Funktionen</entry>
   <entry>Keine</entry>
  </row>
  <row>
   <entry>php_pgsql.dll</entry>
   <entry><link linkend="ref.pgsql">PostgreSQL</link> Funktionen</entry>
   <entry>Keine</entry>
  </row>
  <row>
   <entry>php_printer.dll</entry>
   <entry><link linkend="ref.printer">Printer</link> Funktionen</entry>
   <entry>Keine</entry>
  </row>
  <row>
   <entry>php_xslt.dll</entry>
   <entry><link linkend="ref.xslt">XSLT</link> Funktionen</entry>
   <entry>Benötigt sablot.dll (bundled)</entry>
  </row>
  <row>
   <entry>php_snmp.dll</entry>
   <entry><link linkend="ref.snmp">SNMP</link> get and walk Funktionen</entry>
   <entry>Nur NT!</entry>
  </row>
  <row>
   <entry>php_sybase_ct.dll</entry>
   <entry><link linkend="ref.sybase">Sybase</link> Funktionen</entry>
   <entry>Benötigt Sybase Client Bibliotheken</entry>
  </row>
  <row>
   <entry>php_yaz.dll</entry>
   <entry><link linkend="ref.yaz">YAZ</link> Funktionen</entry>
   <entry>Keine</entry>
  </row>
  <row>
   <entry>php_zlib.dll</entry>
   <entry><link linkend="ref.zlib">ZLib</link> Komprimierungsfunktionen</entry>
   <entry>Keine</entry>
  </row>
       </tbody>
      </tgroup>
     </table>
    </para>
   </sect2>
  </sect1>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
vim600: syn=xml fen fdm=syntax fdl=2 si
vim: et tw=78 syn=sgml
vi: ts=1 sw=1
-->
