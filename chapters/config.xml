<?xml version="1.0" encoding="iso-8859-1"?>
<!-- $Revision: 1.30 $ -->
<!-- EN-Revision: 1.109 Maintainer: wiesemann Status: ready -->
 <chapter id="configuration">
  <title>Konfiguration</title>

  <sect1 id="configuration.file">
   <title>Die Konfigurationsdatei</title>

   <simpara>
    Die Konfigurationsdatei (<filename>php3.ini</filename> in
    PHP 3.0.x, und <filename>php.ini</filename> ab PHP 4.0) wird geladen,
    wenn PHP gestartet wird. Wurde PHP als Modul in den Webserver
    einkompiliert, dann geschieht dies nur, wenn der Server gestartet
    wird. Ist PHP als <acronym>CGI</acronym>- oder
    <acronym>CLI</acronym>-Version konfiguriert worden, geschieht es
    bei jedem Aufruf.
   </simpara>
   <para>
    Das Standard-Verzeichnis der &php.ini; ist eine Option, die Sie beim
    Kompilieren übergeben können (siehe den entsprechenden Eintrag in
    der <link linkend="faq.installation.phpini">FAQ</link>). Bei der
    <acronym>CGI</acronym>- und der <acronym>CLI</acronym>-Version
    kann diese über die Kommadozeilenoption <literal>-c</literal>
    geändert werden, siehe auch das Kapitel über die Benutzung von
    <literal>PHP</literal> über die <link
    linkend="features.commandline">Kommandozeile</link>.
    Sie können auch die Umgebungsvariable <literal>PHPRC</literal>
    setzen, um ein zusätzliches Suchverzeichnis für die &php.ini;-Datei
    anzugeben.
   </para>
   <para>
    Nicht jede PHP-Option ist hier dokumentiert. Für eine Liste aller Optionen
    schauen Sie bitte in Ihre &php.ini;-Datei, dort finden Sie Kommentare zu
    jeder Option. Sie können auch in die allerneueste <ulink
    url="&url.php.cvs.phpini;">php.ini</ulink> im PHP-CVS nachschauen.
   </para>
   <note>
    <para>
     Der Standardwert für die PHP-Option <link
     linkend="ini.register-globals">register_globals</link> wurde von
     <emphasis>on</emphasis> zu <emphasis>off</emphasis> in PHP
     <ulink url="&url.php.release4.2.0;">4.2.0</ulink> geändert.
    </para>
   </note>
   <para>
    <example>
     <title>&php.ini;-Beispiel</title>
     <programlisting role="ini">
<![CDATA[
; jeglicher Text in einer Zeile hinter einem nicht gequoteten
; Semikolon wird ignoriert
[php] ; Abschnitts-Marker (gekennzeichnet durch die eckigen Klammern)
; werden ebenfalls ignoriert
; folgende boolesche Werte sind möglich:
;    true, on, yes
; oder false, off, no, none
register_globals = off
magic_quotes_gpc = yes

; Sie können Strings in Gänsefüßchen einschließen
include_path = ".:/usr/local/lib/php"

; Backslashes werden wie jedes andere Zeichen behandelt
include_path = ".;c:\php\lib"
]]>
</programlisting>
<!-- TODO: add more details about values and expressions -->
    </example>
   </para>
  </sect1>

  <sect1 id="configuration.changes">
   <title>Wie Sie die Konfigurations-Einstellungen ändern können</title>

   <sect2 id="configuration.changes.apache">
    <title><literal>PHP</literal> als Apache-Modul laufen lassen</title>
    <simpara>
     Wenn Sie PHP in der Modul-Variante benutzen, können Sie die
     Konfigurationseinstellungen auch mittels der Apache-Konfigurations-
     datei (z.B. <filename>httpd.conf</filename>) bzw. mittels
     <filename>.htaccess</filename>-Dateien ändern (sie benötigen dann
     die Berechtigungen "AllowOverride Options" oder "AllowOverride All").
    </simpara>

    <para>
     Seit PHP 4.0 gibt es mehrere Apache-Optionen, die es Ihnen ermöglichen,
     die PHP-Konfiguration aus den Apache-Konfigurationsdateien heraus zu
     ändern. Für eine Liste, welche Optionen <constant>PHP_INI_ALL</constant>,
     <constant>PHP_INI_PERDIR</constant> oder
     <constant>PHP_INI_SYSTEM</constant> sind, schauen Sie bitte in die Tabelle,
     die Sie in der Dokumentation der <function>ini_set</function>-Funktion
     finden.
    </para>
    
    <note>
     <simpara>
      Seit PHP 3.0 existieren Apache-Anweisungen, die mit jeder
      Konfigurationseinstellung der <filename>php3.ini</filename> 
      korrespondieren, ausgenommen Einstellungen mit dem Prefix
      "php3_".
     </simpara>
    </note>

    <para>
     <variablelist>
      <varlistentry>
       <term>
        <systemitem role="directive">php_value</systemitem>
        <parameter>name</parameter>
        <parameter>value</parameter>
       </term>
       <listitem>
        <para>
         Setzt den Wert der spezifizierten Option.
         Kann nur mit Optionen vom Typ PHP_INI_ALL und PHP_INI_PERDIR
         benutzt werden. Um einen zuvor gesetzten Wert zurückzusetzen,
         benutzen Sie <literal>none</literal> als Wert.
         <informalexample>
          <programlisting role="ini">
<![CDATA[
php_value auto_prepend_file none
]]>
          </programlisting>
         </informalexample>
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <systemitem role="directive">php_flag</systemitem>
        <parameter>name</parameter>
        <parameter>on|off</parameter>
       </term>
       <listitem>
        <para>
         Setzt eine boolesche Option.
         Kann nur mit Optionen vom Typ PHP_INI_ALL und PHP_INI_PERDIR
         benutzt werden.
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <systemitem role="directive">php_admin_value</systemitem>
        <parameter>name</parameter>
        <parameter>value</parameter>
       </term>
       <listitem>
        <para>
         Setzt den Wert der spezifizierten Option.
         Kann nicht in <filename>.htaccess</filename>-Dateien benutzt werden.
         Jeder Options vom Typ <systemitem
         role="directive">php_admin_value</systemitem> kann nicht durch
         <filename>.htaccess</filename>-Dateien oder Virtual-Host-Optionen
         überschrieben werden. Um einen zuvor gesetzten Wert zurückzusetzen,
         benutzen Sie <literal>none</literal> als Wert.
         <informalexample>
          <programlisting role="ini">
<![CDATA[
php_admin_value open_basedir none
]]>
          </programlisting>
         </informalexample>
        </para>
       </listitem>
      </varlistentry>
      <varlistentry>
       <term>
        <systemitem role="directive">php_admin_flag</systemitem>
        <parameter>name</parameter>
        <parameter>on|off</parameter>
       </term>
       <listitem>
        <para>
         Setzt eine boolesche Option.
         Kann nicht in <filename>.htaccess</filename>-Dateien benutzt werden.
         Jeder Options vom Typ <systemitem
         role="directive">php_admin_flag</systemitem> kann nicht durch
         <filename>.htaccess</filename>-Dateien oder Virtual-Host-Optionen
         überschrieben werden.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     <example>
      <title>Apache-Konfigurations-Beispiel</title>
      <programlisting role="ini">
<![CDATA[
<IfModule mod_php4.c>
  php_value include_path ".:/usr/local/lib/php"
  php_admin_flag safe_mode on
</IfModule>
<IfModule mod_php3.c>
  php3_include_path ".:/usr/local/lib/php"
  php3_safe_mode on
</IfModule>
]]>
      </programlisting>
     </example>
    
     <note>
      <para>
       PHP-Konstanten existieren nicht außerhalb von PHP. So können Sie
       z.B. in der <filename>httpd.conf</filename> keine PHP-Konstanten
       wie <constant>E_ALL</constant> oder <constant>E_NOTICE</constant>
       benutzen, um die Option <link
       linkend="ini.error-reporting">error_reporting</link> zu setzen,
       da ihr Wert dort unbekannt ist und zu <emphasis>0</emphasis>
       ausgewertet würde. Benutzen Sie stattdessen die zugeordneten
       Bitwerte, diese Konstanten können in der &php.ini; benutzt werden.
      </para>
     </note>
    </para>
   </sect2>

   <sect2 id="configuration.changes.other">
    <title>Andere Schnittstellen zu <literal>PHP</literal></title>
    <para>
     Unabhänging von der Schnittstelle zu <literal>PHP</literal> können Sie
     einige Werte während der Laufzeit Ihrer Skript über die
     <function>ini_set</function>-Funktion setzen. Die folgende Tabelle gibt
     Ihnen einen Überblick, auf welcher Stufe eine Option gesetzt oder
     geändert werden kann.
    </para>
    <para>
     <table>
     <title>Definition der PHP_INI_*-Konstanten</title>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>Konstante</entry>
        <entry>Wert</entry>
        <entry>Bedeutung</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>PHP_INI_USER</entry>
        <entry>1</entry>
        <entry>Option kann in Benuter-Skripten gesetzt werden</entry>
       </row>
       <row>
        <entry>PHP_INI_PERDIR</entry>
        <entry>2</entry>
        <entry>
         Option kann in der &php.ini;, <filename>.htaccess</filename> oder
         <filename>httpd.conf</filename> gesetzt werden
        </entry>
       </row>
       <row>
        <entry>PHP_INI_SYSTEM</entry>
        <entry>4</entry>
        <entry>
         Option kann in der &php.ini; oder <filename>httpd.conf</filename>
         gesetzt werden
        </entry>
       </row>
       <row>
        <entry>PHP_INI_ALL</entry>
        <entry>7</entry>
        <entry>Option kann überall gesetzt werden</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
    </para>
    <para>
     Die Konfigurationseinstellungen können Sie in der Ausgabe der
     <function>phpinfo</function>-Funktion einsehen. Außerdem können Sie
     Zugang zu den individuellen Konfigurationseinstellungen über
     <function>ini_get</function> oder <function>get_cfg_var</function>
     bekommen.
    </para>
   </sect2>
  </sect1>

  <sect1 id="configuration.directives">
   <title>Allgemeine Konfigurationseinstellungen</title>
   <para>
    Dies ist keine vollständige Liste der PHP-Direktiven. Weitere Optionen
    werden an den passenden Stellen im Handbuch genannt, so finden Sie
    z.B. Informationen zu den Session-Optionen im <link
    linkend="ref.session">Sessions-Kapitel</link>.
   </para>

  <sect2 id="ini.sect.httpd-options">
   <title>Httpd-Optionen</title>
    <para>
     <table>
      <title>Httpd-Optionen</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Name</entry>
         <entry>Standard</entry>
         <entry>änderbar</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>async_send</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    <para>
    </para>
   </sect2>

  <sect2 id="ini.sect.language-options">
   <title>Sprach-Optionen</title>
   <para>
   <table>
    <title>Sprach- und allgemeine Konfigurations-Optionen</title>
    <tgroup cols="3">
     <thead>
      <row>
       <entry>Name</entry>
       <entry>Standard</entry>
       <entry>änderbar</entry>
      </row>
     </thead>
     <tbody>
     <row>
      <entry>short_open_tag</entry>
      <entry>On</entry>
      <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
     </row>
     <row>
      <entry>asp_tags</entry>
      <entry>Off</entry>
      <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
     </row>
     <row>
      <entry>precision</entry>
      <entry>"14"</entry>
      <entry>PHP_INI_ALL</entry>
     </row>
     <row>
      <entry>y2k_compliance</entry>
      <entry>Off</entry>
      <entry>PHP_INI_ALL</entry>
     </row>
     <row>
      <entry>allow_call_time_pass_reference</entry>
      <entry>On</entry>
      <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
     </row>
     <row>
      <entry>expose_php</entry>
      <entry>On</entry>
      <entry>PHP_INI_SYSTEM</entry>
     </row>
    </tbody>
    </tgroup>
   </table>
   </para>
    
   &ini.descriptions.title; 
    
    <para>
     <variablelist>
      <varlistentry id="ini.short-open-tag">
       <term>
        <parameter>short_open_tag</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Bestimmt, ob die Kurzform (<userinput>&lt;? ?&gt;</userinput>) des
         PHP-Öffnungs-Tags erlaubt werden soll. Wenn Sie PHP in Kombination
         mit XML benutzen wollen, dann deaktivieren Sie diese Option, um
         <userinput>&lt;?xml ?&gt;</userinput> nutzen zu können. Anderenfalls
         können Sie das Tag mit PHP ausgeben, z.B. <userinput>&lt;?php echo
         '&lt;?xml version="1.0"'; ?&gt;</userinput>. Wenn diese Option
         deaktiviert ist, müssen Sie die Langform des PHP-Öffnungs-Tags
         (<userinput>&lt;?php ?&gt;</userinput>) benutzen.
        </para>
        <note>
         <para>
          Diese Option betrifft auch die Kurzform
          <userinput>&lt;?=</userinput>, die zu
          <userinput>&lt;? echo</userinput> identisch ist. Um diese Kurzform
          nutzen zuu können, <systemitem
          role="directive">short_open_tag</systemitem> auf on gesetzt sein.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.asp-tags">
       <term>
        <parameter>asp_tags</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <simpara>
         Dieser Schalter aktiviert die Unterstützung von ASP
         &lt;% %&gt; Tags als Erweiterung zu den üblichen &lt;?php ?&gt; Tags.
         Dieses beinhaltet auch die Kurzform der Variablenausgabe
         &lt;%= $value %&gt;. Weitere Informationen finden Sie hier:
         <link linkend="language.basic-syntax.phpmode">Den HTML-Bereich der Datei verlassen</link>.
        </simpara>
        <note>
         <para>
          Die Unterstützung für ASP-Tags wurde in Version 3.0.4 hinzugefügt.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.precision">
       <term>
        <parameter>precision</parameter>
        <type>integer</type>
       </term>
       <listitem>
        <simpara>
         Die Anzahl der positiven Ziffern, die in Fließkommazahlen
         dargestellt werden.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.y2k-compliance">
       <term>
        <parameter>y2k_compliance</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <simpara>
         Aktivieren der Jahr 2000-Kompatibilität (erzeugt eventuell Probleme
         mit nicht-kompatiblen Browsern).
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.allow-call-time-pass-reference">
       <term>
        <parameter>allow_call_time_pass_reference</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Bestimmt, ob die Möglichkeit aktiviert wird, einer Funktion Argumente
         als Referenz-Parameter zu übergeben. Diese Methode wird nicht nicht
         empfohlen und wird möglicherweise in späteren Version von PHP/Zend
         nicht mehr unterstützt. Die empfohlene Methode, anzugeben, welche
         Argumente per Referenz übergeben werden sollen, ist in der
         Funktionsdeklaration. Wir empfehlen Ihnen, diese Option
         versuchsweise auf Off zu setzen und dann zu prüfen, ob Ihre Skripte
         noch korrekt laufen, um sicherzustellen, dass sie auch mit künftigen
         Versionen von PHP noch laufen (sie bekommen ein "Warning", wenn Sie
         diese Funktion trotzdem benutzen, außerdem wird das Argument als
         Wert- statt als Referenz-Parameter übergeben.)
        </para>
        <para>
         Siehe auch <link linkend="language.references">Referenzen in PHP</link>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.expose-php">
       <term>
        <parameter>expose_php</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Bestimmt, ob PHP die Tatsache, dass es auf dem Server installiert
         ist, bekannt geben darf (z.B. durch Hinzufügen seiner Signatur zum
         Header des Webservers). Die Sicherheit wird hierdurch nicht
         beeinträchtigt, aber es kann bestimmt werden, ob PHP auf Ihrem Server
         läuft oder nicht.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect2>

  <sect2 id="ini.sect.resource-limits">
   <title>Ressourcen-Grenze</title>
   <para>
    <table>
     <title>Ressourcen-Grenze</title>
     <tgroup cols="3">
      <thead>
       <row>
        <entry>Name</entry>
        <entry>Standard</entry>
        <entry>änderbar</entry>
       </row>
      </thead>
      <tbody>
       <row>
        <entry>memory_limit</entry>
        <entry>"8M"</entry>
        <entry>PHP_INI_ALL</entry>
       </row>
      </tbody>
     </tgroup>
    </table>
   </para>
   
   &ini.descriptions.title;
   
   <para>
    <variablelist>
     <varlistentry id="ini.memory-limit">
      <term>
       <parameter>memory_limit</parameter>
       <type>integer</type>
      </term>
      <listitem>
       <para>
        Setzt den Maximalwert des Speichers in Byte, den ein Skript
        verbrauchen darf. Damit können schlecht geschriebene Skripte
        verhindert werden, die den gesamten verfügbaren Speicher eines
        Servers "auffressen". Um diese Option nutzen zu können,
        muss Sie während des Kompilierens aktiviert werden. D.h., dass
        Ihr Konfigurations-Zeile folgendes enthalten muss:
        <literal>--enable-memory-limit</literal>. Bachten Sie, dass
        Sie den Wert auf -1 setzen müssen, wenn Sie kein Speicherlimit
        wünschen.
       </para>
      </listitem>
     </varlistentry>
    </variablelist>
   </para>
   <para>
    Siehe auch: <link linkend="ini.max-execution-time">max_execution_time</link>.
   </para>
  </sect2>

  <sect2 id="ini.sect.data-handling">
   <title>Verarbeitung von Daten</title>
    <para>
     <table>
      <title>Konfigurations-Optionen für die Verarbeitung von Daten</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Name</entry>
         <entry>Standard</entry>
         <entry>änderbar</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>track-vars</entry>
         <entry>"On"</entry>
         <entry>PHP_INI_??</entry>
        </row>
        <row>
         <entry>arg_separator.output</entry>
         <entry>"&amp;"</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
        <row>
         <entry>arg_separator.input</entry>
         <entry>"&amp;"</entry>
         <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
        </row>
        <row>
         <entry>variables_order</entry>
         <entry>"EGPCS"</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
        <row>
         <entry>register_globals</entry>
         <entry>"Off"</entry>
         <entry>PHP_INI_PERDIR|PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>register_argc_argv</entry>
         <entry>"On"</entry>
         <entry>PHP_INI_PERDIR|PHP_INI_SYSTEM</entry>
       </row>
       <row>
        <entry>register_long_arrays</entry>
        <entry>"On"</entry>
        <entry>PHP_INI_PERDIR|PHP_INI_SYSTEM</entry>
       </row>
       <row>
        <entry>post_max_size</entry>
        <entry>"8M"</entry>
        <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
       </row>
       <row>
        <entry>gpc_order</entry>
        <entry>"GPC"</entry>
        <entry>PHP_INI_ALL</entry>
       </row>
       <row>
        <entry>auto_prepend_file</entry>
        <entry>""</entry>
        <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
       </row>
       <row>
        <entry>auto_append_file</entry>
        <entry>""</entry>
        <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
       </row>
        <row>
         <entry>default_mimetype</entry>
         <entry>"text/html"</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
        <row>
         <entry>default_charset</entry>
         <entry>"iso-8859-1"</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
        <row>
         <entry>always_populate_raw_post_data</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
        </row>
        <row>
         <entry>allow_webdav_methods</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    
    &ini.descriptions.title;
    
    <para>
     <variablelist>
      <varlistentry id="ini.track-vars">
       <term>
        <parameter>track_vars</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Wenn diese Option aktiviert ist, sind Umgebungs-, GET-, POST-,
         Cookie- und Server-Variablen in den globalen assoziativen
         Arrays
         <varname>$_ENV</varname>,
         <varname>$_GET</varname>,
         <varname>$_POST</varname>,
         <varname>$_COOKIE</varname> und
         <varname>$_SERVER</varname> verfübar.
        </para>
        <para>
         Beachten Sie, dass seit PHP 4.0.3, <systemitem
         role="directive">track_vars</systemitem> immer den Wert on hat.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.arg-separator.output">
       <term>
        <parameter>arg_separator.output</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Das Trennzeichen, dass in von PHP generierten URLs benutzt wird,
         um Argumente abzutrennen.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.arg-separator.input">
       <term>
        <parameter>arg_separator.input</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Liste der Trennzeichen, die von PHP beim Parsen von URLs zu Variablen
         benutzt werden.
        </para>
        <note>
         <para>
          Jeder Buchstabe in dieser Option wird als Trennzeichen
          interpretiert!
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.variables-order">
       <term>
        <parameter>variables_order</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Gibt die Reihenfolge der EGPCS-Variablen (Environment/Umgebung, GET,
         POST, Cookie, Server) beim Parsen an. Der Standardwert ist "EGPCS".
         Setzen Sie z.B. diese Option auf "GP", so wird PHP alle
         Umgebungs-, Cookie- und Server-Variablen ignorieren, außerdem
         werden alle GET-Variablen mit POST-Variablen überschrieben, wenn
         sie den gleichen Namen haben.
        </para>
        <para>
         Siehe auch <link linkend="ini.register-globals">register_globals</link>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.register-globals">
       <term>
        <parameter>register_globals</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Dieser Schalter bestimmt, ob die EGPCS-Variablen
         (Environment/Umgebung, GET, POST, Cookie, Server) als globale
         Variablen registriert werden oder nicht. Zum Beispiel erzeugt
         die URL <literal>http://www.example.com/test.php?id=3</literal>
         die Variable <varname>$id</varname>, wenn register_globals = on.
         Außerdem wäre <varname>$DOCUMENT_ROOT</varname> aus
         <varname>$_SERVER['DOCUMENT_ROOT']</varname> verfügbar.
         Sie sollten dies ausschalten, wenn der globale Bereich Ihrer
         Skripte nicht durch Benutzerdaten gestört werden soll.
         Wir empfehlen Ihnen, sich stattdessen die <link
         linkend="reserved.variables">vordefinierten Variablen</link> von
         PHP anzusehen, wie z.B. die folgenden <link
         linkend="language.variables.superglobals">superglobalen</link>
         Arrays: <varname>$_ENV</varname>, <varname>$_GET</varname>,
         <varname>$_POST</varname>, <varname>$_COOKIE</varname> und
         <varname>$_SERVER</varname>. Bitte lesen Sie auch das
         Sicherheits-Kapitel über die <link
         linkend="security.registerglobals">Benutzung von
         register_globals</link> für weitere Informationen.
        </para>
        <para>
         Bitte beachten Sie, dass <systemitem
         role="directive">register_globals</systemitem> nicht während der
         Laufzeit Ihrer Skripte gesetzt werden kann
         (<function>ini_set</function>). Wenn Ihr Server es erlaubt, können
         Sie aber &htaccess; wie oben beschrieben verwenden. Beispiel:
         <userinput>php_flag register_globals on</userinput>.
        </para>
        <note>
         <para>
          <systemitem role="directive">register_globals</systemitem> wird
          durch die Option <link
          linkend="ini.variables-order">variables_order</link> beeinträchtigt.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.register-argc-argv">
       <term>
        <parameter>register_argc_argv</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <simpara>
         Bestimmt, ob die argv- &amp; argc-Variablen deklariert werden sollen
         (betrifft die GET-Informationen).
        </simpara>
        <simpara>
         Siehe auch <link linkend="features.commandline">Kommandozeile</link>.
         Diese Option ist seit PHP 4.0.0 verfügbar, vorher war sie immer "on".
        </simpara>
       </listitem>
      </varlistentry>
      
      <varlistentry id="ini.register-long-arrays">
       <term>
        <parameter>register_long_arrays</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <simpara>
         Bestimmt, ob PHP die nicht mehr empfohlenen langen Varianten
         (<varname>$HTTP_*_VARS</varname>) der <link
         linkend="language.variables.predefined">vordefinierten
         Variablen</link> registrieren soll.
         Wenn "on" (Standardwert), dann werden PHP-Variablen wie
         <varname>$HTTP_GET_VARS</varname> definiert. Wenn Sie diese
         nicht nutzen, empfehlen wir Ihnen, diese Option aus
         Performance-Gründen auf "off" zu setzen. Benutzen Sie stattdessen
         die superglobalen Arrays wie <varname>$_GET</varname>.
        </simpara>
        <simpara>
         Diese Option ist seit PHP 5.0.0 verfügbar.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.post-max-size">
       <term>
        <parameter>post_max_size</parameter>
        <type>integer</type>
       </term>
       <listitem>
        <simpara>
         Setzt die maximal erlaubte Größe von POST-Daten. Diese Option betrifft
         auch den Datei-Upload. Um größere Dateien hochzuladen, muss der Wert
         größer sein als <link
         linkend="ini.upload-max-filesize">upload_max_filesize</link>.
        </simpara>
        <simpara>
         Wenn eine maximale Speichergrenze während des Kompilierens aktiviert
         wurde, dann betrifft auch <link
         linkend="ini.memory-limit">memory_limit</link> den Datei-Upload.
         Allgemein sollte <link linkend="ini.memory-limit">memory_limit</link>
         nicht größer als <parameter>post_max_size</parameter> sein.
        </simpara>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.gpc-order">
       <term>
        <parameter>gpc_order</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Legt die Auswertungsreihenfolge für GET-/POST-/COOKIE-Variablen fest.
         Die Standardeinstellung ist "GPC". Wenn Sie diesen Wert auf z.B. "GP"
         setzen, dann ignoriert PHP Cookies, und wird jede GET-Variable
         mit POST-Variablen des gleichen Namens überschreiben.
        </para>
        <note>
         <para>
          Diese Option ist in PHP 4 nicht verfügbar. Benutzen Sie stattdessen
          <link linkend="ini.variables-order">variables_order</link>.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.auto-prepend-file">
       <term>
        <parameter>auto_prepend_file</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Hier können Sie eine Datei angeben, die automatisch vor der
         Hauptdatei aufgerufen wird. Die Datei wird in die aufgerufene
         Datei eingebettet, als wenn Sie sie mittels der
         <function>include</function> Funktion eingebunden hätten, dabei
         wird ein gesetzter <link linkend="ini.include-path">include_path</link>
         beachtet.</para>
        <para>
         Der spezielle Wert <systemitem class="constant">none</systemitem>
         deaktiviert Auto-Prepending.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.auto-append-file">
       <term>
        <parameter>auto_append_file</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Hier können Sie eine Datei angeben, die automatisch nach der 
         Hauptdatei aufgerufen wird. Die Datei wird in die aufgerufene
         Datei eingebettet, als wenn Sie sie mittels der
         <function>include</function> Funktion eingebunden hätten, dabei
         wird ein gesetzter <link linkend="ini.include-path">include_path</link>
         beachtet.
        </para>
        <para>
         Der spezielle Wert <systemitem class="constant">none</systemitem>
         deaktiviert Auto-Appending.
         <note>
          <simpara>
           Wird das Skript mit der Funktion <function>exit</function> beendet,
           dann wird Auto-Appending <emphasis>nicht</emphasis> aktiv.
          </simpara>
         </note>
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.default-mimetype">
       <term>
        <parameter>default_mimetype</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.default-charset">
       <term>
        <parameter>default_charset</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Seit Version 4.0b4 gibt PHP standardmäßig immer eine Zeichen-Kodierung
         im "Content-type:"-Header aus. Um dies zu verhindern, lassen Sie diese
         Option leer.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.always-populate-raw-post-data">
       <term>
        <parameter>always_populate_raw_post_data</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Bestimmt, ob die Variable $HTTP_RAW_POST_DATA gefüllt werden soll.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.allow-webdav-methods">
       <term>
        <parameter>allow_webdav_methods</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Bestimmt, ob WebDAV-HTTP-Requests in PHP-Skripten erlaubt sein soll
         (z.B. PROPFIND, PROPPATCH, MOVE, COPY etc.). Wenn Sie die POST-Daten
         solcher Requests erhalten müssen, dann müssen Sie auch <link
         linkend="ini.always-populate-raw-post-data">
         always_populate_raw_post_data</link> aktivieren.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
    <para>
     Siehe auch <link linkend="ini.magic-quotes-gpc">magic_quotes_gpc</link>,
     <link linkend="ini.magic-quotes-runtime">magic-quotes-runtime</link>
     und
     <link linkend="ini.magic-quotes-sybase">magic_quotes_sybase</link>.
    </para>
   </sect2>

  <sect2 id="ini.sect.path-directory">
   <title>Pfade und Verzeichnisse</title>
    <para>
     <table>
      <title>Konfigurations-Optionen für Pfade und Verzeichnisse</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Name</entry>
         <entry>Standard</entry>
         <entry>änderbar</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>include_path</entry>
         <entry>PHP_INCLUDE_PATH</entry>
         <entry>PHP_INI_ALL</entry>
        </row>
        <row>
         <entry>doc_root</entry>
         <entry>PHP_INCLUDE_PATH</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>user_dir</entry>
         <entry>NULL</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>extension_dir</entry>
         <entry>PHP_EXTENSION_DIR</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>cgi.force_redirect</entry>
         <entry>"1"</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>cgi.redirect_status_env</entry>
         <entry>""</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>fastcgi.impersonate</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>cgi.rfc2616_headers</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    
    &ini.descriptions.title;
    
    <para>
     <variablelist>
      <varlistentry id="ini.include-path">
       <term>
        <parameter>include_path</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Hier können Sie eine Liste von Verzeichnissen angeben, in dem die 
         Funktionen <function>require</function>, <function>include</function>
         und <function>fopen_with_path</function> nach Dateien suchen. Das
         Format ist ähnlich zur <envar>PATH</envar>-Umgebungsvariablen des
         jeweiligen Systems: Eine Liste von Verzeichnissen, getrennt durch
         einen Doppelpunkt unter UNIX oder ein Semikolon unter Windows.
        </para>
        <para>
         <example>
          <title>include_path unter UNIX</title>
          <programlisting role="php.ini">
<![CDATA[
include_path=".:/php/includes"
]]>
          </programlisting>
         </example>
        </para>
        <para>
         <example>
          <title>include_path unter Windows</title>
          <programlisting role="php.ini">
<![CDATA[
include_path=".;c:\php\includes"
]]>
          </programlisting>
         </example>
        </para>
        <para>
         Ein <literal>.</literal> in dieser Option ermöglicht, Dateien
         relativ zum aktuellen Verzeichnis einzubinden.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.doc-root">
       <term>
        <parameter>doc_root</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Hier wird das Stammverzeichnis der PHP-Skripte angegeben. Diese Option
         wird nur benutzt, wenn ein Wert angegeben wird. Wenn PHP mit
         &safemode; konfiguriert wurde, werden alle Dateien außerhalb dieses
         Verzeichnisses ignoriert.
         Wenn PHP nicht mit FORCE_REDIRECT kompiliert wurde, sollten Sie
         doc_root setzen, wenn Sie PHP als CGI-Version (betrifft alle Webserver
         außer IIS) laufen lassen. Die Alternative ist, die Option <link
         linkend="ini.cgi.force-redirect">cgi.force_redirect</link> zu
         benutzen.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.user-dir">
       <term>
        <parameter>user_dir</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Der Basisname des Verzeichnisses, das für Benutzer-Verzeichnisse
         mit <literal>PHP</literal>-Dateien benutzt wird, z.B.
         <literal>public_html</literal>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.extension-dir">
       <term>
        <parameter>extension_dir</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Verzeichnis, in dem PHP dynamisch zu ladende Extensionen findet.
         Siehe auch <link linkend="ini.enable-dl">enable_dl</link>
         und <function>dl</function>.
        </para>
       </listitem>
      </varlistentry>
     
      <varlistentry id="ini.extension">
       <term>
        <parameter>extension</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Dynamisch zu ladende Extensionen, die geladen werden sollen, wenn
         PHP gestartet wird.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.cgi.force-redirect">
       <term>
        <parameter>cgi.force_redirect</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         cgi.force_redirect wird benötigt, um Sicherheit zu garantieren, wenn
         PHP als CGI-Version unter den meisten Webservern läuft. Wenn diese
         Option nicht angegeben wird, setzt PHP sie standardmäßig auf on.
         <emphasis>Auf Ihre eigene Gefahr hin</emphasis> können Sie dies
         ausschalten ("off").
        </para>
        <note>
         <para>
          Windows-Benutzer: Sie können diese Option gefahrlos ausschalten, wenn
          Sie den IIS benutzen. Genauer: Sie müssen dies sogar tun. Für
          OmniHTTPD or Xitami gilt das gleiche.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.cgi.redirect-status-env">
       <term>
        <parameter>cgi.redirect_status_env</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Wenn cgi.force_redirect eingeschaltet ist und Sie nicht den Apache-
         oder Netscape-Webserver (iPlanet) benutzen, müssen Sie eventuell
         eine Umgebungsvariable setzen, damit PHP weiß, ob es die Ausführung
         fortführen darf.
        </para>
        <note>
         <para>
          Das Setzen dieser Variablen kann Sicherheitsrisiken verursachen,
          <emphasis>Sie sollten also wissen, was Sie tun</emphasis>.
         </para>
        </note>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.fastcgi.impersonate">
       <term>
        <parameter>fastcgi.impersonate</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         FastCGI unter IIS (auf WINNT-basierten Betriebssystemen) unterstützt
         die Möglichkeit, Sicherheitsmerkmale des aufrufenden Clients zu
         bestimmen. Dies ermöglicht es IIS, den Sicherheitskontext zu bestimmen,
         in dem der Zugriff läuft. mod_fastcgi unter Apache unterstützt zur
         Zeit diese Funktion nicht (17.03.2002). Setzen Sie diese Option auf
         1, wenn Sie IIS benutzen. Der Standardwert ist 0.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.cgi.rfc2616-headers">
       <term>
        <parameter>cgi.rfc2616_headers</parameter>
        <type>int</type>
       </term>
       <listitem>
        <para>
         Bestimmt, welcher Typ von Headern benutzt werden soll, wenn
         HTTP-Antwort-Codes gesendet werden. Wenn diese Option auf 0 gesetzt
         ist, sendet PHP einen "Status:"-Header, der von Apache und anderen
         Webservern unterstützt wird. Ist sie auf 1 gesetzt, sendet PHP
         einen zu <ulink url="&url.rfc;2616">RFC 2616</ulink> konformen
         Header. Wenn Sie dies nicht verstehen, lassen Sie den Wert auf 0.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect2>

  <sect2 id="ini.sect.file_uploads">
   <title>Datei-Uploads</title>
    <para>
     <table>
      <title>Konfigurations-Optionen für Datei-Uploads</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Name</entry>
         <entry>Standard</entry>
         <entry>änderbar</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>file_uploads</entry>
         <entry>"1"</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>upload_tmp_dir</entry>
         <entry>NULL</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
        <row>
         <entry>upload_max_filesize</entry>
         <entry>"2M"</entry>
         <entry>PHP_INI_SYSTEM|PHP_INI_PERDIR</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    
    &ini.descriptions.title;
    
    <para>
     <variablelist>
      <varlistentry id="ini.file-uploads">
       <term>
        <parameter>file_uploads</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
         Bestimmt, ob <link linkend="features.file-upload">Datei-Uploads</link>
         per HTTP erlaubt sind. Siehe auch die Optionen <link
         linkend="ini.upload-max-filesize">upload_max_filesize</link>,
         <link linkend="ini.upload-tmp-dir">upload_tmp_dir</link> und 
         <link linkend="ini.post-max-size">post_max_size</link>.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.upload-tmp-dir">
       <term>
        <parameter>upload_tmp_dir</parameter>
        <type>string</type>
       </term>
       <listitem>
        <para>
         Temporäres Verzeichnis, in dem Dateien während des Uploads gespeichert
         werden. Für dieses Verzeichnis muss der Benutzer, unter dem
         <literal>PHP</literal> läuft, Schreibberechtigung haben. Wenn hier
         nichts angeben wird, benutzt PHP das Standardverzeichnis für
         temporäre Dateien auf Ihrem System.
        </para>
       </listitem>
      </varlistentry>

      <varlistentry id="ini.upload-max-filesize">
       <term>
        <parameter>upload_max_filesize</parameter>
        <type>integer</type>
       </term>
       <listitem>
        <para>
         Maximale Größe, die eine hochgeladene Datei haben darf.
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect2>

  <sect2 id="ini.sql-general">
   <title>Allgemeines SQL</title>
    <para>
     <table>
      <title>Konfigurations-Optionen für allgemeines SQL</title>
      <tgroup cols="3">
       <thead>
        <row>
         <entry>Name</entry>
         <entry>Standard</entry>
         <entry>änderbar</entry>
        </row>
       </thead>
       <tbody>
        <row>
         <entry>sql.safe_mode</entry>
         <entry>"0"</entry>
         <entry>PHP_INI_SYSTEM</entry>
        </row>
       </tbody>
      </tgroup>
     </table>
    </para>
    
    &ini.descriptions.title;
    
    <para>
     <variablelist>
      <varlistentry id="ini.sql.safe-mode">
       <term>
        <parameter>sql.safe_mode</parameter>
        <type>boolean</type>
       </term>
       <listitem>
        <para>
        </para>
       </listitem>
      </varlistentry>
     </variablelist>
    </para>
   </sect2>

   <sect2 id="ini.sect.debugger">
    <title>Konfigurations-Optionen für Debugger</title>
    <caution>
     <para>
      Nur PHP 3 hat einen standardmäßigen Debugger implementiert. Für weitere
      Informationen siehe <xref linkend="debugger"/>.
     </para>
    </caution>

    <variablelist>
     <varlistentry id="ini.debugger.host">
      <term>
       <parameter>debugger.host</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        DNS-Name oder IP-Adresse des Hosts, der vom Debugger benutzt werden
        soll.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.debugger.port">
      <term>
       <parameter>debugger.port</parameter>
       <type>string</type>
      </term>
      <listitem>
       <para>
        Portnummer, die vom Debugger benutzt wird.
       </para>
      </listitem>
     </varlistentry>

     <varlistentry id="ini.debugger.enabled">
      <term>
       <parameter>debugger.enabled</parameter>
       <type>boolean</type>
      </term>
      <listitem>
       <para>
        Bestimmt, ob der Debugger aktiviert ist.
       </para>
      </listitem>
     </varlistentry>

    </variablelist>
   </sect2>

  </sect1>

 </chapter>

<!-- Keep this comment at the end of the file
Local variables:
mode: sgml
sgml-omittag:t
sgml-shorttag:t
sgml-minimize-attributes:nil
sgml-always-quote-attributes:t
sgml-indent-step:1
sgml-indent-data:t
indent-tabs-mode:nil
sgml-parent-document:nil
sgml-default-dtd-file:"../../manual.ced"
sgml-exposed-tags:nil
sgml-local-catalogs:nil
sgml-local-ecat-files:nil
End:
-->
